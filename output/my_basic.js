// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

Module['arguments'] = [];
Module['thisProgram'] = './this.program';
Module['quit'] = function(status, toThrow) {
  throw toThrow;
};
Module['preRun'] = [];
Module['postRun'] = [];

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('Module[\'ENVIRONMENT\'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    var ret;
    ret = tryParseAsDataURI(filename);
    if (!ret) {
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    }
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
  // Currently node will swallow unhandled rejections, but this behavior is
  // deprecated, and in the future it will exit with error status.
  process['on']('unhandledRejection', function(reason, p) {
    Module['printErr']('node.js exiting due to unhandled promise rejection');
    process['exit'](1);
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (typeof read != 'undefined') {
    Module['read'] = function shell_read(f) {
      var data = tryParseAsDataURI(f);
      if (data) {
        return intArrayToString(data);
      }
      return read(f);
    };
  }

  Module['readBinary'] = function readBinary(f) {
    var data;
    data = tryParseAsDataURI(f);
    if (data) {
      return data;
    }
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
    } catch (err) {
      var data = tryParseAsDataURI(url);
      if (data) {
        return intArrayToString(data);
      }
      throw err;
    }
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      try {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
      } catch (err) {
        var data = tryParseAsDataURI(url);
        if (data) {
          return data;
        }
        throw err;
      }
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      var data = tryParseAsDataURI(url);
      if (data) {
        onload(data.buffer);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  Module['setWindowTitle'] = function(title) { document.title = title };
}
else {
  // Unreachable because SHELL is dependent on the others
  throw new Error('unknown runtime environment');
}

// console.log is checked first, as 'print' on the web will open a print dialogue
// printErr is preferable to console.warn (works better in shells)
// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.
Module['print'] = typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null);
Module['printErr'] = typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || Module['print']);

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;

// stack management, and other functionality that is provided by the compiled code,
// should not be used before it is ready
stackSave = stackRestore = stackAlloc = setTempRet0 = getTempRet0 = function() {
  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');
};

function staticAlloc(size) {
  assert(!staticSealed);
  var ret = STATICTOP;
  STATICTOP = (STATICTOP + size + 15) & -16;
  return ret;
}

function dynamicAlloc(size) {
  assert(DYNAMICTOP_PTR);
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  HEAP32[DYNAMICTOP_PTR>>2] = end;
  if (end >= TOTAL_MEMORY) {
    var success = enlargeMemory();
    if (!success) {
      HEAP32[DYNAMICTOP_PTR>>2] = ret;
      return 0;
    }
  }
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  var ret = size = Math.ceil(size / factor) * factor;
  return ret;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    Module.printErr(text);
  }
}



var jsCallStartIndex = 1;
var functionPointers = new Array(0);

// 'sig' parameter is only used on LLVM wasm backend
function addFunction(func, sig) {
  if (typeof sig === 'undefined') {
    Module.printErr('Warning: addFunction: Provide a wasm function signature ' +
                    'string as a second argument');
  }
  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
}

function removeFunction(index) {
  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    assert(args.length == sig.length-1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    assert(sig.length == 1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].call(null, ptr);
  }
}


function getCompilerSetting(name) {
  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';
}

var Runtime = {
  // FIXME backwards compatibility layer for ports. Support some Runtime.*
  //       for now, fix it there, then remove it from here. That way we
  //       can minimize any period of breakage.
  dynCall: dynCall, // for SDL2 port
  // helpful errors
  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 8;



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

var JSfuncs = {
  // Helpers for cwrap -- it can't refer to Runtime directly because it might
  // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
  // out what the minified function name is.
  'stackSave': function() {
    stackSave()
  },
  'stackRestore': function() {
    stackRestore()
  },
  // type conversion from js to c
  'arrayToC' : function(arr) {
    var ret = stackAlloc(arr.length);
    writeArrayToMemory(arr, ret);
    return ret;
  },
  'stringToC' : function(str) {
    var ret = 0;
    if (str !== null && str !== undefined && str !== 0) { // null string
      // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
      var len = (str.length << 2) + 1;
      ret = stackAlloc(len);
      stringToUTF8(str, ret, len);
    }
    return ret;
  }
};

// For fast lookup of conversion functions
var toC = {
  'string': JSfuncs['stringToC'], 'array': JSfuncs['arrayToC']
};

// C calling interface.
function ccall (ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === 'string') ret = Pointer_stringify(ret);
  else if (returnType === 'boolean') ret = Boolean(ret);
  if (stack !== 0) {
    stackRestore(stack);
  }
  return ret;
}

function cwrap (ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  // When the function takes numbers and returns a number, we can just return
  // the original function
  var numericArgs = argTypes.every(function(type){ return type === 'number'});
  var numericRet = returnType !== 'string';
  if (numericRet && numericArgs) {
    return cfunc;
  }
  return function() {
    return ccall(ident, returnType, argTypes, arguments);
  }
}

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : staticAlloc, stackAlloc, staticAlloc, dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return staticAlloc(size);
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return UTF8ToString(ptr);
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

function demangle(func) {
  warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
  Module['buffer'] = buffer;
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

assert(Math['imul'] && Math['fround'] && Math['clz32'] && Math['trunc'], 'this is a legacy browser, build with LEGACY_VM_SUPPORT');

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;






// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}





// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = GLOBAL_BASE;

STATICTOP = STATIC_BASE + 18288;
/* global initializers */  __ATINIT__.push();


memoryInitializer = "data:application/octet-stream;base64,LxUAADgVAABQFQAAZBUAAHIVAACDFQAAkxUAAKUVAAC0FQAAwhUAANMVAADgFQAA7hUAAPcVAAAHFgAAFhYAACcWAAA3FgAARxYAAFkWAABsFgAAiRYAAJ0WAACvFgAAyBYAAN0WAADyFgAAAxcAABMXAAAiFwAAMRcAAE0XAABjFwAAehcAAIoXAACbFwAArRcAAMYXAADeFwAA9hcAAA8YAAAlGAAAPRgAAFYYAABtGAAAgRgAAJMYAACmGAAAtRgAAMwYAADoGAAAHRkAAC0ZAAA+GQAAUBkAAF4ZAABtGQAAfRkAAKgZAAC3GQAAyBkAANYZAADnGQAA+RkAAA0aAAAtGgAARhoAABAAAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAXAAAAGAAAABkAAAAaAAAAGwAAABwAAAAdAAAAHgAAAB8AAAAgAAAAIQAAACIAAAAjAAAAAAAAAAEAAAACAAAABAAAAAYAAAAIAAAAEAAAACAAAABAAAAAgAAAAAABAAAAAgAAAAQAAAAIAAAABQAAAAoAAAAQAAAAIAAAsAEAAAUAAAAAAAAAAAAAAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAABlAAAAXT8AAAAEAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAr/////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAQAANAIAAAkAAAAAAAAAAAAAAGMAAAAAAAAAAAAAAAAAAAAAAAAAZgAAAAAAAABlAAAAZUMAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AgAABQAAAAAAAAAAAAAAYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAAAGUAAABtRwAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAA//////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAGQAAADoAwAAECcAAKCGAQBAQg8AgJaYAADh9QVfcIkA/wkvD25vdwBvcwBzeXMAdHJhY2UAcmFpc2UAZ2MAYmVlcABzaGVsbC9tYWluLmMAMCAmJiAiTXVsdGlwbGUgZnJlZS4iAF9wdXNoX21lbQBFcnJvcjoKICAgIExuICVkLCBDb2wgJWQgaW4gRnVuYzogJXMKICAgIENvZGUgJWQsIEFib3J0IENvZGUgJWQKICAgIE1lc3NhZ2U6ICVzLgoARXJyb3I6CiAgICBMbiAlZCwgQ29sICVkIGluIEZpbGU6ICVzCiAgICBDb2RlICVkLCBBYm9ydCBDb2RlICVkCiAgICBNZXNzYWdlOiAlcy4KAEVycm9yOgogICAgTG4gJWQsIENvbCAlZAogICAgQ29kZSAlZCwgQWJvcnQgQ29kZSAlZAogICAgTWVzc2FnZTogJXMuCgAgPC0gAGNvZGUAX2Rlc3Ryb3lfY29kZQAKT0sAIV9PQkpfQk9PTF9UUlVFAGNvcmUvbXlfYmFzaWMuYwBtYl9pbml0AFRSVUUAIV9PQkpfQk9PTF9GQUxTRQBGQUxTRQBfY29yZV9kdW1teV9hc3NpZ24AcwBfc2V0X2Vycm9yX3BvcwBzICYmIGVyciA+PSAwAF9zZXRfY3VycmVudF9lcnJvcgByZXQAbWJfbWFsbG9jADAgJiYgIk1lbW9yeSBhbHJlYWR5IHJlbGVhc2VkLiIAbWJfZGlzcG9zZQBfT0JKX0JPT0xfVFJVRQBfT0JKX0JPT0xfRkFMU0UAcABtYl9mcmVlAF9vcGVuX2NvbnN0YW50AGh0ICYmIGtleQBfaHRfc2V0X29yX2luc2VydABidWNrZXQAbGlzdABfbHNfcHVzaGJhY2sAcmVzdWx0AF9sc19jcmVhdGVfbm9kZQBfaHRfZmluZABfb3Blbl9jb2xsX2xpYgBLCAAAAQAAAFAIAAACAAAAVQgAAAMAAABaCAAABAAAAF4IAAAFAAAAYwgAAAYAAABqCAAABwAAAG8IAAAIAAAAdggAAAkAAAB/CAAACgAAAIYIAAALAAAAjAgAAAwAAACSCAAADQAAAJsIAAAOAAAApAgAAA8AAABfcmVnaXN0ZXJfZnVuYwBfY3JlYXRlX21vZHVsZV9mdW5jAGxpc3QgJiYgZGF0YSAmJiBjbXAAX2xzX2ZpbmQAcyAmJiBuAF9nZW5lcmF0ZV9mdW5jX25hbWUATElTVABESUNUAFBVU0gAUE9QAEJBQ0sASU5TRVJUAFNPUlQARVhJU1RTAElOREVYX09GAFJFTU9WRQBDTEVBUgBDTE9ORQBUT19BUlJBWQBJVEVSQVRPUgBNT1ZFX05FWFQAcyAmJiBsAF9jb2xsX21vdmVfbmV4dABfZ2NfY29sbGVjdF9nYXJiYWdlACFnYy0+Y29sbGVjdGluZwBodABfaHRfZGVzdHJveQBfbHNfZGVzdHJveQBfbHNfY2xlYXIAbGlzdCAmJiBvcABfbHNfZm9yZWFjaABfZ2Nfc3dhcF90YWJsZXMAX2h0X2NsZWFyAGRhdGEgJiYgZXh0cmEAX2djX2Rlc3Ryb3lfZ2FyYmFnZV9vdXRlcl9zY29wZQAoaW50cHRyX3QpcmVmID09IChpbnRwdHJfdClkYXRhAF91bnJlZgAqcmVmLT5jb3VudCA+PSAxAHJlZiAmJiBkYXRhICYmIGdjAF9nY19yZW1vdmUAX2h0X3JlbW92ZQBsaXN0ICYmIGNtcABfbHNfdHJ5X3JlbW92ZQByZWYgJiYgZGF0YQBfY29sbGVjdF9pbnRlcm1lZGlhdGVfdmFsdWUAcy0+YWxsX2ZvcmtlZABydW5uaW5nICYmIGRhdGEAX2NvbGxlY3RfaW50ZXJtZWRpYXRlX3ZhbHVlX2luX3Njb3BlAF9nY19hZGQAZGF0YQBfZ2NfZGVzdHJveV9nYXJiYWdlX2luX2xhbWJkYQBvYmoAX2Rpc3Bvc2Vfb2JqZWN0AHZhci0+ZGF0YS0+dHlwZSAhPSBfRFRfVkFSADAgJiYgIkludmFsaWQgdHlwZS4iAHIAX2Rlc3Ryb3lfcm91dGluZQBfZGVzdHJveV9yZWYAX2Rlc3Ryb3lfb2JqZWN0AF9kZXN0cm95X29iamVjdF9jYXBzdWxlX29ubHkAX2lzX2ludGVybmFsX29iamVjdABpdABfZGVzdHJveV9kaWN0X2l0AGxrAF91bmxvY2tfcmVmX29iamVjdAAqd2Vhay0+d2Vha19jb3VudCA+PSAxAF93ZWFrX3VucmVmAF9kZXN0cm95X2xpc3RfaXQAX2lzX3N0cmluZwBfZ2NfZGVzdHJveV9nYXJiYWdlAGxzdC0+bGlzdAByb3V0aW5lLT50eXBlID09IE1CX1JUX0xBTUJEQQBfcmVtb3ZlX3RoaXNfbGFtYmRhX2Zyb21fdXB2YWx1ZQBfZ2NfZGVzdHJveV9nYXJiYWdlX2luX2RpY3QAX2djX2Rlc3Ryb3lfZ2FyYmFnZV9pbl9saXN0AF9nY19kZXN0cm95X2dhcmJhZ2VfY2xhc3MAX2djX2Rlc3Ryb3lfZ2FyYmFnZV9pbl9jbGFzcwBkYXRhICYmIGgAX2djX2FkZF9yZWFjaGFibGUAb2JqLT5kYXRhLmxpc3QtPmxpc3QAb2JqLT5kYXRhLmxpc3RfaXQtPmxpc3QtPmxpc3QAYwBfdHJhdmVyc2VfY2xhc3MAbWV0YSAmJiBodABfYWRkX2NsYXNzX21ldGFfcmVhY2hhYmxlAGRhdGEgJiYgZXh0cmEgJiYgaABfZ2NfYWRkX3JlYWNoYWJsZV9ib3RoAHBibCAmJiBpdG4AX2ludGVybmFsX29iamVjdF90b19wdWJsaWNfdmFsdWUAX2djX2dldF9yZWFjaGFibGVfaW5fZm9ya2VkAHMgJiYgaHQAX2djX2dldF9yZWFjaGFibGUAX2h0X2NvdW50AF9yZWYAMCAmJiAiVG9vIG1hbnkgcmVmZXJlbmNpbmcsIGNvdW50IG92ZXJmbG93LCBwbGVhc2UgcmVkZWZpbmUgX3JlZl9jb3VudF90LiIAX2NvcmVfY2xvc2VfYnJhY2tldABfY29yZV9yZXR1cm4AX2xzX2VtcHR5AF9sc19wb3BiYWNrAHRndABfYXNzaWduX3B1YmxpY192YWx1ZQBzICYmICh2YWwgfHwgb2JqKQBfdHJ5X3B1cmdlX2l0AF9wdWJsaWNfdmFsdWVfdG9faW50ZXJuYWxfb2JqZWN0AHMgJiYgbCAmJiBkICYmIGYAX3RyeV9vdmVycmlkZGVuAF8lcwBMQU1CREFfMHglcABzICYmIGwgJiYgcgBfZXZhbF9uYXRpdmVfcm91dGluZQBfZGVzdHJveV92YXJfYXJnAF9ldmFsX2xhbWJkYV9yb3V0aW5lAHRndCAmJiBzcmMAX3N3YXBfcHVibGljX3ZhbHVlAF9vdXRfb2Zfc2NvcGUAcnVubmluZy0+cmVmZXJlZF9sYW1iZGFzAF9sb3NlX29iamVjdABvYmogJiYgdGd0AF9jbG9uZV9vYmplY3QAMCAmJiAiSW1wb3NzaWJsZS4iAHN1YgBfY2xvbmVfcm91dGluZQBfcG9wX3Njb3BlAHMgJiYgaW5zdGFuY2UAX3NlYXJjaF9jbGFzc19oYXNoX2FuZF9jb21wYXJlX2Z1bmN0aW9ucwBIQVNIAENPTVBBUkUAX3NlYXJjaF9jbGFzc19tZXRhX2Z1bmN0aW9uAG1ldGEgJiYgbgBfY2xvbmVfY2xhc3NfbWV0YV9saW5rAHMgJiYgZGVyaXZlZCAmJiBiYXNlAF9saW5rX21ldGFfY2xhc3MAZGF0YSAmJiBuAF9jbG9uZV9jbHNzc19maWVsZABydW5uaW5nAF9kdXBsaWNhdGVfcGFyYW1ldGVyAF9wdXNoX3Njb3BlX2J5X2NsYXNzAHMgJiYgcABfcmVmZXJlbmNlX3Njb3BlX2J5X2NsYXNzAF9maW5kX3Njb3BlAHMgJiYgaW5zdGFuY2UgJiYgbgBfaW5pdF9jbGFzcwBNRQByZWYAX3VucmVmX2NsYXNzAF9kZXN0cm95X2NsYXNzAHMgJiYgZGVyaXZlZABfdW5saW5rX21ldGFfY2xhc3MAZGVyaXZlZC0+bWV0YV9saXN0AGRhdGEgJiYgZGVyaXZlZABfdW5saW5rX21ldGFfaW5zdGFuY2UAY29sbABfY3JlYXRlX2RpY3RfaXQAMCAmJiAiVG9vIG1hbnkgcmVmZXJlbmNpbmcsIHdlYWsgY291bnQgb3ZlcmZsb3csIHBsZWFzZSByZWRlZmluZSBfcmVmX2NvdW50X3QuIgBfd2Vha19yZWYAX2xvY2tfcmVmX29iamVjdABkYXRhICYmIGV4dHJhICYmIGNvbGwAX2Nsb25lX3RvX2RpY3QAY29sbCAmJiAoa2V5IHx8IG9rZXkpICYmICh2YWwgfHwgb3ZhbCkAX3NldF9kaWN0AF93cml0ZV9vbl9yZWZfb2JqZWN0AF9jcmVhdGVfaW50ZXJuYWxfb2JqZWN0X2Zyb21fcHVibGljX3ZhbHVlAF9jcmVhdGVfZGljdABfdW5yZWZfZGljdABfZGVzdHJveV9kaWN0AF9kZXN0cm95X29iamVjdF93aXRoX2V4dHJhAF9odF9oYXNoX29iamVjdABfY3JlYXRlX2xpc3RfaXQAZGF0YSAmJiBjb2xsAF9jbG9uZV90b19saXN0AGNvbGwgJiYgKHZhbCB8fCBvYXJnKQBfcHVzaF9saXN0AF9pbnZhbGlkYXRlX2xpc3RfY2FjaGUAX2ZpbGxfcmFuZ2VkAF9jcmVhdGVfbGlzdABfdW5yZWZfbGlzdABfZGVzdHJveV9saXN0AHMgJiYgYXJyAF9jbG9uZV9hcnJheQBzICYmIGFyciAmJiB2YWwAX3NldF9hcnJheV9lbGVtAGluZGV4IDwgYXJyLT5jb3VudAAwICYmICJVbnN1cHBvcnRlZC4iAF9nZXRfc2l6ZV9vZgBzICYmIGFyciAmJiB2YWwgJiYgdHlwZQBfZ2V0X2FycmF5X2VsZW0AYXJyAF9pbml0X2FycmF5AGFyci0+Y291bnQgPiAwACFhcnItPnJhdwBfY3JlYXRlX2FycmF5AF91bnJlZl9hcnJheQBfZGVzdHJveV9hcnJheQBfY2xlYXJfYXJyYXkAc3JjICYmIHRndABfY2xvbmVfdXNlcnR5cGVfcmVmAF9jcmVhdGVfdXNlcnR5cGVfcmVmAF91bnJlZl91c2VydHlwZV9yZWYAX2Rlc3Ryb3lfdXNlcnR5cGVfcmVmAF9zZWFyY2hfaWRlbnRpZmllcl9pbl9zY29wZV9jaGFpbgBfc2VhcmNoX2lkZW50aWZpZXJfYWNjZXNzb3IAxBQAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAX2h0X2hhc2hfaW50cHRyAF9jcmVhdGVfb3V0ZXJfc2NvcGUAX3VucmVmX291dGVyX3Njb3BlAF9kZXN0cm95X291dGVyX3Njb3BlAFVua25vd24gZXJyb3IATm8gZXJyb3IARnVuY3Rpb24gYWxyZWFkeSBleGlzdHMARnVuY3Rpb24gbm90IGV4aXN0cwBOb3Qgc3VwcG9ydGVkAE9wZW4gZmlsZSBmYWlsZWQAU3ltYm9sIHRvbyBsb25nAEludmFsaWQgY2hhcmFjdGVyAEludmFsaWQgbW9kdWxlAEVtcHR5IHByb2dyYW0AUHJvZ3JhbSB0b28gbG9uZwBTeW50YXggZXJyb3IAT3V0IG9mIG1lbW9yeQBPdmVyZmxvdwBVbmV4cGVjdGVkIHR5cGUASW52YWxpZCBzdHJpbmcASW50ZWdlciBleHBlY3RlZABOdW1iZXIgZXhwZWN0ZWQAU3RyaW5nIGV4cGVjdGVkAFZhcmlhYmxlIGV4cGVjdGVkAEluZGV4IG91dCBvZiBib3VuZABDYW5ub3QgZmluZCB3aXRoIGdpdmVuIGluZGV4AFRvbyBtYW55IGRpbWVuc2lvbnMAUmFuayBvdXQgb2YgYm91bmQASW52YWxpZCBpZGVudGlmaWVyIHVzYWdlAER1cGxpY2F0ZSBpZGVudGlmaWVyAEluY29tcGxldGUgc3RydWN0dXJlAExhYmVsIG5vdCBleGlzdHMATm8gcmV0dXJuIHBvaW50AENvbG9uIGV4cGVjdGVkAENvbW1hIGV4cGVjdGVkAENvbW1hIG9yIHNlbWljb2xvbiBleHBlY3RlZABPcGVuIGJyYWNrZXQgZXhwZWN0ZWQAQ2xvc2UgYnJhY2tldCBleHBlY3RlZABOZXN0ZWQgdG9vIG11Y2gAT3BlcmF0aW9uIGZhaWxlZABPcGVyYXRvciBleHBlY3RlZABBc3NpZ24gb3BlcmF0b3IgZXhwZWN0ZWQAVEhFTiBzdGF0ZW1lbnQgZXhwZWN0ZWQARUxTRSBzdGF0ZW1lbnQgZXhwZWN0ZWQARU5ESUYgc3RhdGVtZW50IGV4cGVjdGVkAFRPIHN0YXRlbWVudCBleHBlY3RlZABORVhUIHN0YXRlbWVudCBleHBlY3RlZABVTlRJTCBzdGF0ZW1lbnQgZXhwZWN0ZWQATG9vcCB2YXJpYWJsZSBleHBlY3RlZABKdW1wIGxhYmVsIGV4cGVjdGVkAENhbGN1bGF0aW9uIGVycm9yAEludmFsaWQgZXhwcmVzc2lvbgBEaXZpZGUgYnkgemVybwBXcm9uZyBmdW5jdGlvbiByZWFjaGVkAENhbm5vdCBzdXNwZW5kIGluIGEgcm91dGluZQBDYW5ub3QgbWl4IGluc3RydWN0aW9uYWwgYW5kIHN0cnVjdHVyZWQgc3ViIHJvdXRpbmVzAEludmFsaWQgcm91dGluZQBSb3V0aW5lIGV4cGVjdGVkAER1cGxpY2F0ZSByb3V0aW5lAEludmFsaWQgY2xhc3MAQ2xhc3MgZXhwZWN0ZWQARHVwbGljYXRlIGNsYXNzAEhBU0ggYW5kIENPTVBBUkUgbXVzdCBiZSBwcm92aWRlZCB0b2dldGhlcgBJbnZhbGlkIGxhbWJkYQBFbXB0eSBjb2xsZWN0aW9uAExpc3QgZXhwZWN0ZWQASW52YWxpZCBpdGVyYXRvcgBJdGVyYWJsZSBleHBlY3RlZABDb2xsZWN0aW9uIGV4cGVjdGVkAENvbGxlY3Rpb24gb3IgaXRlcmF0b3IgZXhwZWN0ZWQAUmVmZXJlbmNlZCB0eXBlIGV4cGVjdGVkAEV4dGVuZGVkIGFib3J0AF9leGVjdXRlX3N0YXRlbWVudABfc3RlcHBlZABfZGVzdHJveV9sYXp5X29iamVjdHMAcy0+bGF6eV9kZXN0cm95X29iamVjdHMAX3RyeV9jbGVhcl9pbnRlcm1lZGlhdGVfdmFsdWUAX3NraXBfdG8AX2NvcmVfaXMAaW5zdGFuY2UgJiYgbWV0YSAmJiByZXQAX2lzX2FfY2xhc3MAX2NvcmVfb3IAX2NvcmVfYW5kAF9jb3JlX25vdF9lcXVhbABfaXNfbnVtYmVyAF9pc19uaWwAX2V4dHJhY3Rfc3RyaW5nAChFTVBUWSkAX2NvcmVfZ3JlYXRlcl9lcXVhbABfY29yZV9sZXNzX2VxdWFsAF9jb3JlX2dyZWF0ZXIAX2NvcmVfbGVzcwBfY29yZV9lcXVhbABfY29yZV9wb3cAX2NvcmVfbW9kAF9jb3JlX2RpdgBfY29yZV9tdWwAX2NvcmVfbWluAF9jb3JlX2FkZABfY29yZV9lbmRkZWYAcyAmJiB2YXIgJiYgYXN0AF9pc192YWxpZF9jbGFzc19hY2Nlc3Nvcl9mb2xsb3dpbmdfcm91dGluZQBfY29yZV9jYWxsAF9maW5kX2Z1bmMAX2NvcmVfbGV0AF9hc3NpZ25fd2l0aF9pdABjb2xsICYmICh2YWwgfHwgKG92YWwgJiYgKm92YWwpKQBfc2V0X2xpc3QAX25vZGVfYXRfbGlzdABfY2FsY19leHByZXNzaW9uACMAKQBfZGVzdHJveV9vYmplY3Rfbm90X2NvbXBpbGVfdGltZQBzICYmIG9iagBfaXNfcmVmZXJlbmNlZF9jYWxjX3R5cGUAX2lzX3VuZXhwZWN0ZWRfY2FsY190eXBlAHMgJiYgb3B0cgBfb3BlcmF0ZV9vcGVyYW5kAG9wdHItPnR5cGUgPT0gX0RUX0ZVTkMAb3AxICYmIG9wMgBfZ2V0X3ByaW9yaXR5AGlkeDEgPCAoc2l6ZW9mKF9QUkVDRURFX1RBQkxFKSAvIHNpemVvZigqKF9QUkVDRURFX1RBQkxFKSkpICYmIGlkeDIgPCAoc2l6ZW9mKF9QUkVDRURFX1RBQkxFWzBdKSAvIHNpemVvZigqKF9QUkVDRURFX1RBQkxFWzBdKSkpAD4+PDw8PDw+Pj4+Pj4+Pj4+Pj4+Pj48PDw8PD4+Pj4+Pj4+Pj4+Pj4+Pj4+Pjw8Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PDw+Pj4+Pj4+Pj4+Pj4+Pj48PD48PD4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj48Pj4+Pj4+Pj4+Pj4+Pjw8PDw8PDw9IDw8PDw8PDw8PDw8Pj4+Pj4+ID4+Pj4+Pj4+Pj4+Pj48PDw8PDw8ID08PDw8PDw8PDw8PDw8PDw8PDw+PiAgICAgID4+Pj4+PDw8PDw8PD4+ICAgICAgPj4+Pj48PDw8PDw8Pj4gICAgICA+Pj4+Pjw8PDw8PDw+PiAgICAgID4+Pj4+PDw8PDw8PD4+ICAgICAgPj4+Pj48PDw8PDw8Pj4gICAgICA+Pj4+Pjw8PDw8PDw+Pjw8PDw8PD4+PD4+PDw8PDw8PD4+PDw8PDw8Pj48Pj48PDw8PDw8Pj48PDw8PDw+Pj4+Pjw8PDw8PDw+Pjw8PDw8PDw8PD08PDw8PDw8PD4+PDw8PDw8Pj48Pj5vcABfZ2V0X3ByaW9yaXR5X2luZGV4ADAgJiYgIlVua25vd24gb3BlcmF0b3IuIgBfY29yZV9uZWcAX2NvcmVfbm90AF9yZW1vdmVfc291cmNlX29iamVjdABjb2xsICYmIHZhbABfZmluZF9kaWN0AGNvbGwgJiYgb3ZhbABfYXRfbGlzdABfaXNfZXhwcmVzc2lvbl90ZXJtaW5hbABfY29yZV9zdGVwAF9jb3JlX3RvAF9jb3JlX2VuZGlmAF9jb3JlX2Vsc2UAX2NvcmVfZWxzZWlmAF9jb3JlX3RoZW4AcyAmJiBpAF9zZWFyY2hfdmFyX2luX3Njb3BlX2NoYWluAHMgJiYgbCAmJiBpbmRleABfZ2V0X2FycmF5X2luZGV4AG9iaiAmJiB2YWwAX3RyeV9nZXRfdmFsdWUAX3NlYXJjaF9hcnJheV9pbl9zY29wZV9jaGFpbgBfY29yZV9vcGVuX2JyYWNrZXQAcyAmJiBydW5uaW5nAF9tYXJrX2RhbmdsaW5nX2ludGVybWVkaWF0ZV92YWx1ZQBfY29yZV9lbmQAX2NvcmVfZ29zdWIAX2NvcmVfZ290bwBsYWJlbC0+bm9kZSAmJiBsYWJlbC0+bm9kZS0+cHJldgBfY29yZV9leGl0AF9jb3JlX3VudGlsAF9jb3JlX2RvAHMgJiYgbCAmJiBvcGVuX2Z1bmMgJiYgY2xvc2VfZnVuYwBfc2tpcF9zdHJ1Y3QAX2NvcmVfd2VuZABfY29yZV93aGlsZQBfY29yZV9uZXh0AF9jb3JlX2ZvcgBzICYmIGwgJiYgdmFyX2xvb3AAX2V4ZWN1dGVfbm9ybWFsX2Zvcl9sb29wAAIAAAABAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAABfY29tbW9uX2tlZXBfbG9vcGluZwBfY29tbW9uX2VuZF9sb29waW5nAGZpcnN0ICYmIHNlY29uZABfY29tcGFyZV9udW1iZXJzAChmaXJzdC0+dHlwZSA9PSBfRFRfSU5UIHx8IGZpcnN0LT50eXBlID09IF9EVF9SRUFMKSAmJiAoc2Vjb25kLT50eXBlID09IF9EVF9JTlQgfHwgc2Vjb25kLT50eXBlID09IF9EVF9SRUFMKQBfZXhlY3V0ZV9yYW5nZWRfZm9yX2xvb3AAR0VUAF9jb3JlX2luAF9jb3JlX2lmAF9za2lwX2lmX2NodW5rAGFzdCAmJiBhc3QtPnByZXYAX3BvcF93ZWFrX3Njb3BlAEcjAAAAAAAAAF9jb3JlX2FyZ3MAX2xzX3BvcGZyb250AHMgJiYgY2gAX21hcmtfbGF6eV9kZXN0cm95X3N0cmluZwAuLi4AX3B1c2hfd2Vha19zY29wZV9ieV9yb3V0aW5lAF9yZWZlcmVuY2Vfc2NvcGVfYnlfcm91dGluZQByLT5mdW5jLmJhc2ljLnBhcmFtZXRlcnMAX2V2YWxfc2NyaXB0X3JvdXRpbmUAX3B1c2hfc2NvcGVfYnlfcm91dGluZQBfc2VhcmNoX2lkZW50aWZpZXJfaW5fY2xhc3MAX21hcmtfZWRnZV9kZXN0cm95X3N0cmluZwBfY29sbF9pdGVyYXRvcgBfY29sbF90b19hcnJheQBvY29sbC5kYXRhLmxpc3QtPmxpc3QAX2NvcHlfbGlzdF90b19hcnJheQBfY29sbF9jbG9uZQBfY29sbF9jbGVhcgBfY2xlYXJfZGljdABfY2xlYXJfbGlzdABfY29sbF9yZW1vdmUAY29sbCAmJiBrZXkAX3JlbW92ZV9kaWN0AF9yZW1vdmVfYXRfbGlzdABsaXN0ICYmIG5vZGUAX2xzX3JlbW92ZQBfY29sbF9pbmRleF9vZgBfZmluZF9saXN0AF9jb2xsX2V4aXN0cwBfY29sbF9zb3J0AF9zb3J0X2xpc3QAbGlzdCAmJiAqbGlzdCAmJiBjbXAAX2xzX3NvcnQAX2NvbGxfaW5zZXJ0AF9pbnNlcnRfbGlzdABfbHNfaW5zZXJ0X2F0AF9jb2xsX2JhY2sAX2NvbGxfcG9wAGNvbGwgJiYgdmFsICYmIHMAX3BvcF9saXN0AF9jb2xsX3B1c2gAX2NvbGxfZGljdABfY29sbF9saXN0AF9vcGVuX3N0ZF9saWIAjiYAACQAAACSJgAAJQAAAJYmAAAmAAAAmiYAACcAAACgJgAAKAAAAKUmAAApAAAAqSYAACoAAACvJgAAKwAAALQmAAAsAAAAuCYAAC0AAAC8JgAALgAAAMAmAAAvAAAAxCYAADAAAADJJgAAMQAAAM4mAAAyAAAA0yYAADMAAADXJgAANAAAANsmAAA1AAAA3yYAADYAAADjJgAANwAAAOgmAAA4AAAA7CYAADkAAADyJgAAOgAAAPYmAAA7AAAA+iYAADwAAAC+IgAAPQAAAP4mAAA+AAAAAicAAD8AAAAIJwAAQAAAAEFCUwBTR04AU1FSAEZMT09SAENFSUwARklYAFJPVU5EAFNSTkQAUk5EAFNJTgBDT1MAVEFOAEFTSU4AQUNPUwBBVEFOAEVYUABMT0cAQVNDAENIUgBMRUZUAE1JRABSSUdIVABTVFIAVkFMAExFTgBTRVQAUFJJTlQASU5QVVQAX3N0ZF9pbnB1dABfcHJpbnRfc3RyaW5nACVzAF9nZXRfcHJpbnRlcgBfZ2V0X2lucHV0ZXIARXJyb3IgcmVhZGluZy4KAF9zdGRfcHJpbnQATklMACVkACVnAAoAX2lzX3ByaW50X3Rlcm1pbmFsAHMgJiYgbCAmJiBpbnN0YW5jZSAmJiBvdXQAX2Zvcm1hdF9jbGFzc190b19zdHJpbmcAVE9fU1RSSU5HAFJPVVRJTkUAQ0xBU1MAQ09MTEVDVElPTgBESUNUX0lURVJBVE9SAExJU1RfSVRFUkFUT1IAQVJSQVkAVVNFUlRZUEVfUkVGAFVTRVJUWVBFAFRZUEUAU1RSSU5HAE5VTUJFUgBSRUFMAElOVEVHRVIAVU5LTk9XTgBidWYAX2Rpc3Bvc2VfZHluYW1pY19idWZmZXIAX3Jlc2l6ZV9keW5hbWljX2J1ZmZlcgBfY291bnRvZl9keW5hbWljX2J1ZmZlcgBfaW5pdF9keW5hbWljX2J1ZmZlcgBfZXZhbF92YXJfaW5fcHJpbnQAX3N0ZF9zZXQAX3N0ZF9nZXQAX3N0ZF9sZW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQQEBAQEBAQEBAQEBAQEBAQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCAgCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIKAwMDAwMDAwMDAwMDBAMDCwYGBgUICAgICAgICAgICF9sc19jb3VudABfc3RkX3ZhbABfc3RkX3N0cgAwICYmICJCdWZmZXIgb3ZlcmZsb3cuIgBfcmVhbF90b19zdHJfc3RkAF9zdGRfcmlnaHQAX3N0ZF9taWQAX3N0ZF9sZWZ0AF9zdGRfY2hyAF9zdGRfYXNjAF9zdGRfbG9nAF9zdGRfZXhwAF9zdGRfYXRhbgBfc3RkX2Fjb3MAX3N0ZF9hc2luAF9zdGRfdGFuAF9zdGRfY29zAF9zdGRfc2luAF9zdGRfcm5kAF9zdGRfc3JuZABfc3RkX3JvdW5kAF9zdGRfZml4AF9zdGRfY2VpbABfc3RkX2Zsb29yAF9zdGRfc3FyAF9zdGRfc2duAF9zdGRfYWJzAF9vcGVuX2NvcmVfbGliAIkcAAAYAAAAlywAABAAAACZLAAAEQAAAJssAAASAAAAnSwAABMAAACfLAAAFAAAAKMsAAAVAAAApSwAABYAAACLHAAAFwAAAAAAAAAiAAAApywAAB0AAACpLAAAGgAAAKssAAAZAAAArSwAABwAAACwLAAAGwAAALMsAAAeAAAAtiwAAB8AAAC6LAAAIAAAAL0sAAAhAAAAwSwAACMAAADELAAAQQAAAMgsAABCAAAAzCwAAEMAAADPLAAARAAAANQsAABFAAAA2ywAAEYAAADgLAAARwAAAOYsAABIAAAA6iwAAEkAAADtLAAASgAAAPAsAABLAAAA9SwAAEwAAAD6LAAATQAAAAAtAABOAAAABS0AAE8AAAAILQAAUAAAAA4tAABRAAAAEy0AAFIAAAAYLQAAUwAAAB4tAABUAAAAJS0AAFUAAAAqLQAAVgAAAC4tAABXAAAARyMAAFgAAADCJwAAWQAAADUtAABaAAAAPi0AAFsAAABCLQAAXAAAAEYtAABdAAAATi0AAF4AAABVLQAAXwAAAAsoAABgAAAAWS0AAGEAAABgLQAAYgAAACsALQAqAC8ATU9EAF4AKAA9ADwAPgA8PQA+PQA8PgBBTkQAT1IATk9UAElTAExFVABESU0ASUYAVEhFTgBFTFNFSUYARUxTRQBFTkRJRgBGT1IASU4AVE8AU1RFUABORVhUAFdISUxFAFdFTkQARE8AVU5USUwARVhJVABHT1RPAEdPU1VCAFJFVFVSTgBDQUxMAERFRgBFTkRERUYARU5EQ0xBU1MATkVXAFZBUgBSRUZMRUNUAExBTUJEQQBNRU0ASU1QT1JUAEVORABfY29yZV9pbXBvcnQAX2NvcmVfdHlwZQBfY29yZV9tZW0AX2NvcmVfbGFtYmRhAHMgJiYgciAmJiBvYmoAX3RyeV9tYXJrX3VwdmFsdWUAci0+dHlwZSA9PSBNQl9SVF9MQU1CREEAcyAmJiBsYW1iZGEgJiYgb2JqAF9tYXJrX3VwdmFsdWUAcyAmJiByb3V0aW5lAF9pbml0X2xhbWJkYQBfaW5pdF9yb3V0aW5lAF91bnJlZl9yb3V0aW5lAF9jb3JlX3JlZmxlY3QAZGF0YSAmJiBkAF9yZWZsZWN0X2NsYXNzX2ZpZWxkAF9jb3JlX25ldwBfY29yZV9lbmRjbGFzcwBfY29yZV9jbGFzcwBfY29yZV9kZWYAX2NvcmVfZGltAF9odF9oYXNoX3JlZgBfZGVzdHJveV9tZW1vcnkAX2h0X2Rlc3Ryb3lfbW9kdWxlX2Z1bmNfbGlzdABfbHNfZGVzdHJveV9tb2R1bGVfZnVuYwBleHRyYQBfbHNfZnJlZV9leHRyYQBfaHRfaGFzaF9zdHJpbmcAX2xzX2NvdW50KCgqcyktPmFsbF9mb3JrZWQpID09IDAAbWJfY2xvc2UAX2Nsb3NlX2NvbnN0YW50AF9kZXN0cm95X3BhcnNpbmdfY29udGV4dABfZGlzcG9zZV9zY29wZV9jaGFpbgBtYl9kaXNwb3NlX3ZhbHVlAF90aWR5X3Njb3BlX2NoYWluAF9lbmRfY2xhc3MAX2VuZF9yb3V0aW5lAF9jbG9zZV9jb3JlX2xpYgBfcmVtb3ZlX2Z1bmMAX2Nsb3NlX3N0ZF9saWIAX2Nsb3NlX2NvbGxfbGliAG1iX2pvaW4AcyAmJiBzLT5wYXJzaW5nX2NvbnRleHQAX3BhcnNlX2NoYXIAJ1sAJ10AMCAmJiAiVW5rbm93biBwYXJzaW5nIHN0YXRlLiIAX2lzX2V4cG9uZW50X3ByZWZpeABfYXBwZW5kX2NoYXJfdG9fc3ltYm9sAF9jdXRfc3ltYm9sAHMgJiYgc3ltAF9hcHBlbmRfc3ltYm9sAHMgJiYgc3ltICYmIG9iagBfY3JlYXRlX3N5bWJvbABfZ2V0X3Njb3BlX3RvX2FkZF9yb3V0aW5lAF9nZXRfc3ltYm9sX3R5cGUAX3NsID4gMAA6AFJFTQBfYmVnaW5fcm91dGluZV9kZWZpbml0aW9uAF9lbmRfcm91dGluZV9wYXJhbWV0ZXJfbGlzdABfYmVnaW5fcm91dGluZV9wYXJhbWV0ZXJfbGlzdABfYmVnaW5fcm91dGluZQBfYmVnaW5fY2xhc3MAX3Bvc3RfaW1wb3J0AF9wcmV2X2ltcG9ydABfbG9hZF9maWxlAHJiAF9hcHBlbmRfdXVfY2hhcl90b19zeW1ib2wAIXMtPm5vX2VhdF9jb21tYV9tYXJrAG1iX3J1bgD/////////////////////////////////////////////////////////////////AAECAwQFBgcICf////////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wABAgQHAwYFABEACgAREREAAAAABQAAAAAAAAkAAAAACwAAAAAAAAAAEQAPChEREQMKBwABEwkLCwAACQYLAAALAAYRAAAAERERAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAABEACgoREREACgAAAgAJCwAAAAkACwAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAwAAAAACQwAAAAAAAwAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAAAAAAAAAAADQAAAAQNAAAAAAkOAAAAAAAOAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAA8AAAAADwAAAAAJEAAAAAAAEAAAEAAAEgAAABISEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAEhISAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAACgAAAAAKAAAAAAkLAAAAAAALAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAADAAAAAAJDAAAAAAADAAADAAALSsgICAwWDB4AChudWxsKQAtMFgrMFggMFgtMHgrMHggMHgAaW5mAElORgBOQU4AMDEyMzQ1Njc4OUFCQ0RFRi4AVCEiGQ0BAgMRSxwMEAQLHRIeJ2hub3BxYiAFBg8TFBUaCBYHKCQXGAkKDhsfJSODgn0mKis8PT4/Q0dKTVhZWltcXV5fYGFjZGVmZ2lqa2xyc3R5ent8AElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE5vIGVycm9yIGluZm9ybWF0aW9uAABpbmZpbml0eQBuYW4Acndh";





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  function ___assert_fail(condition, filename, line, func) {
      abort('Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function']);
    }

  function ___lock() {}

  
    

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.length : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          try {
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
            transaction.onerror = function(e) {
              callback(this.error);
              e.preventDefault();
            };
  
            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index('timestamp');
  
            index.openKeyCursor().onsuccess = function(event) {
              var cursor = event.target.result;
  
              if (!cursor) {
                return callback(null, { type: 'remote', db: db, entries: entries });
              }
  
              entries[cursor.primaryKey] = { timestamp: cursor.key };
  
              cursor.continue();
            };
          } catch (e) {
            return callback(e);
          }
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
        var flags = process["binding"]("constants");
        // Node.js 4 compatibility: it has no namespaces for constants
        if (flags["fs"]) {
          flags = flags["fs"];
        }
        NODEFS.flagsForNodeMap = {
          "1024": flags["O_APPEND"],
          "64": flags["O_CREAT"],
          "128": flags["O_EXCL"],
          "0": flags["O_RDONLY"],
          "2": flags["O_RDWR"],
          "4096": flags["O_SYNC"],
          "512": flags["O_TRUNC"],
          "1": flags["O_WRONLY"]
        };
      },bufferFrom:function (arrayBuffer) {
        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer
        // Buffer.from before 4.5 was just a method inherited from Uint8Array
        // Buffer.alloc has been added with Buffer.from together, so check it instead
        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // Node.js on Windows never represents permission bit 'x', so
            // propagate read bits to execute bits
            stat.mode = stat.mode | ((stat.mode & 292) >> 2);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsForNode:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        var newFlags = 0;
        for (var k in NODEFS.flagsForNodeMap) {
          if (flags & k) {
            newFlags |= NODEFS.flagsForNodeMap[k];
            flags ^= k;
          }
        }
  
        if (!flags) {
          return newFlags;
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // Node.js < 6 compatibility: node errors on 0 length reads
          if (length === 0) return 0;
          try {
            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },write:function (stream, buffer, offset, length, position) {
          try {
            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=STATICTOP; STATICTOP += 16;;
  
  var _stdout=STATICTOP; STATICTOP += 16;;
  
  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != ERRNO_CODES.EEXIST) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },isClosed:function (stream) {
        return stream.fd === null;
      },llseek:function (stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data === 'string') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
        } else if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto')['randomBytes'](1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          // Node.js compatibility: assigning on this.stack fails on Node 4 (but fixed on Node 8)
          if (this.stack) Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21509:
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21510:
        case 21511:
        case 21512:
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
   
  
   
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC);   

  function ___unlock() {}

   

  
  var ___tm_formatted=STATICTOP; STATICTOP += 48;;
  
  
  
  
  var _tzname=STATICTOP; STATICTOP += 16;;
  
  var _daylight=STATICTOP; STATICTOP += 16;;
  
  var _timezone=STATICTOP; STATICTOP += 16;;function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      // timezone is specified as seconds west of UTC ("The external variable
      // `timezone` shall be set to the difference, in seconds, between
      // Coordinated Universal Time (UTC) and local standard time."), the same
      // as returned by getTimezoneOffset().
      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
      HEAP32[((_timezone)>>2)]=(new Date()).getTimezoneOffset() * 60;
  
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      HEAP32[((_daylight)>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        HEAP32[((_tzname)>>2)]=winterNamePtr;
        HEAP32[(((_tzname)+(4))>>2)]=summerNamePtr;
      } else {
        HEAP32[((_tzname)>>2)]=summerNamePtr;
        HEAP32[(((_tzname)+(4))>>2)]=winterNamePtr;
      }
    }function _mktime(tmPtr) {
      _tzset();
      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,
                          HEAP32[(((tmPtr)+(16))>>2)],
                          HEAP32[(((tmPtr)+(12))>>2)],
                          HEAP32[(((tmPtr)+(8))>>2)],
                          HEAP32[(((tmPtr)+(4))>>2)],
                          HEAP32[((tmPtr)>>2)],
                          0);
  
      // There's an ambiguous hour when the time goes back; the tm_isdst field is
      // used to disambiguate it.  Date() basically guesses, so we fix it up if it
      // guessed wrong, or fill in tm_isdst with the guess if it's -1.
      var dst = HEAP32[(((tmPtr)+(32))>>2)];
      var guessedOffset = date.getTimezoneOffset();
      var start = new Date(date.getFullYear(), 0, 1);
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South
      if (dst < 0) {
        // Attention: some regions don't have DST at all.
        HEAP32[(((tmPtr)+(32))>>2)]=Number(summerOffset != winterOffset && dstOffset == guessedOffset);
      } else if ((dst > 0) != (dstOffset == guessedOffset)) {
        var nonDstOffset = Math.max(winterOffset, summerOffset);
        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;
        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.
        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);
      }
  
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
  
      return (date.getTime() / 1000)|0;
    }function _asctime_r(tmPtr, buf) {
      var date = {
        tm_sec: HEAP32[((tmPtr)>>2)],
        tm_min: HEAP32[(((tmPtr)+(4))>>2)],
        tm_hour: HEAP32[(((tmPtr)+(8))>>2)],
        tm_mday: HEAP32[(((tmPtr)+(12))>>2)],
        tm_mon: HEAP32[(((tmPtr)+(16))>>2)],
        tm_year: HEAP32[(((tmPtr)+(20))>>2)],
        tm_wday: HEAP32[(((tmPtr)+(24))>>2)]
      };
      var days = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ];
      var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                     "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
      var s = days[date.tm_wday] + ' ' + months[date.tm_mon] +
          (date.tm_mday < 10 ? '  ' : ' ') + date.tm_mday +
          (date.tm_hour < 10 ? ' 0' : ' ') + date.tm_hour +
          (date.tm_min < 10 ? ':0' : ':') + date.tm_min +
          (date.tm_sec < 10 ? ':0' : ':') + date.tm_sec +
          ' ' + (1900 + date.tm_year) + "\n";
  
      // asctime_r is specced to behave in an undefined manner if the algorithm would attempt
      // to write out more than 26 bytes (including the null terminator).
      // See http://pubs.opengroup.org/onlinepubs/9699919799/functions/asctime.html
      // Our undefined behavior is to truncate the write to at most 26 bytes, including null terminator.
      stringToUTF8(s, buf, 26);
      return buf;
    }function _asctime(tmPtr) {
      return _asctime_r(tmPtr, ___tm_formatted);
    }

   

   

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }



   

  var _llvm_ceil_f32=Math_ceil;

  var _llvm_fabs_f32=Math_abs;

  var _llvm_floor_f32=Math_floor;

  var _llvm_pow_f64=Math_pow;

  function _llvm_trap() {
      abort('trap!');
    }

  
  var ___tm_current=STATICTOP; STATICTOP += 48;;
  
  
  var ___tm_timezone=allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
  
      // Attention: DST is in December in South, and some regions don't have DST at all.
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      HEAP32[(((tmPtr)+(32))>>2)]=dst;
  
      var zonePtr = HEAP32[(((_tzname)+(dst ? 4 : 0))>>2)];
      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

  
  
  function _realloc() { throw 'bad' } 
  
   function _longjmp(env, value) {
      Module['setThrew'](env, value || 1);
      throw 'longjmp';
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 

   

   

   

  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }

  function _system(command) {
      // int system(const char *command);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html
      // Can't call external programs.
      ___setErrNo(ERRNO_CODES.EAGAIN);
      return -1;
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
DYNAMICTOP_PTR = staticAlloc(4);

STACK_BASE = STACKTOP = alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

var ASSERTIONS = true;

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149

// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com

/**
 * Decodes a base64 string.
 * @param {String} input The string to decode.
 */
var decodeBase64 = typeof atob === 'function' ? atob : function (input) {
  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  var output = '';
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
  do {
    enc1 = keyStr.indexOf(input.charAt(i++));
    enc2 = keyStr.indexOf(input.charAt(i++));
    enc3 = keyStr.indexOf(input.charAt(i++));
    enc4 = keyStr.indexOf(input.charAt(i++));

    chr1 = (enc1 << 2) | (enc2 >> 4);
    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
    chr3 = ((enc3 & 3) << 6) | enc4;

    output = output + String.fromCharCode(chr1);

    if (enc3 !== 64) {
      output = output + String.fromCharCode(chr2);
    }
    if (enc4 !== 64) {
      output = output + String.fromCharCode(chr3);
    }
  } while (i < input.length);
  return output;
};

// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s) {
  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {
    var buf;
    try {
      buf = Buffer.from(s, 'base64');
    } catch (_) {
      buf = new Buffer(s, 'base64');
    }
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }

  try {
    var decoded = decodeBase64(s);
    var bytes = new Uint8Array(decoded.length);
    for (var i = 0 ; i < decoded.length ; ++i) {
      bytes[i] = decoded.charCodeAt(i);
    }
    return bytes;
  } catch (_) {
    throw new Error('Converting base64 string to bytes failed.');
  }
}

// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename) {
  if (!isDataURI(filename)) {
    return;
  }

  return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}



function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_ii": nullFunc_ii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_viii": nullFunc_viii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_viiiiiiii": nullFunc_viiiiiiii, "invoke_ii": invoke_ii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiii": invoke_iiiiii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viii": invoke_viii, "invoke_viiii": invoke_viiii, "invoke_viiiiiiii": invoke_viiiiiiii, "___assert_fail": ___assert_fail, "___lock": ___lock, "___setErrNo": ___setErrNo, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "___syscall221": ___syscall221, "___syscall5": ___syscall5, "___syscall54": ___syscall54, "___syscall6": ___syscall6, "___unlock": ___unlock, "__addDays": __addDays, "__arraySum": __arraySum, "__exit": __exit, "__isLeapYear": __isLeapYear, "_asctime": _asctime, "_asctime_r": _asctime_r, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_exit": _exit, "_llvm_ceil_f32": _llvm_ceil_f32, "_llvm_fabs_f32": _llvm_fabs_f32, "_llvm_floor_f32": _llvm_floor_f32, "_llvm_pow_f64": _llvm_pow_f64, "_llvm_trap": _llvm_trap, "_localtime": _localtime, "_localtime_r": _localtime_r, "_longjmp": _longjmp, "_mktime": _mktime, "_realloc": _realloc, "_strftime": _strftime, "_system": _system, "_time": _time, "_tzset": _tzset, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var nullFunc_viiiiiiii=env.nullFunc_viiiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var ___assert_fail=env.___assert_fail;
  var ___lock=env.___lock;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var ___syscall221=env.___syscall221;
  var ___syscall5=env.___syscall5;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___unlock=env.___unlock;
  var __addDays=env.__addDays;
  var __arraySum=env.__arraySum;
  var __exit=env.__exit;
  var __isLeapYear=env.__isLeapYear;
  var _asctime=env._asctime;
  var _asctime_r=env._asctime_r;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _exit=env._exit;
  var _llvm_ceil_f32=env._llvm_ceil_f32;
  var _llvm_fabs_f32=env._llvm_fabs_f32;
  var _llvm_floor_f32=env._llvm_floor_f32;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _llvm_trap=env._llvm_trap;
  var _localtime=env._localtime;
  var _localtime_r=env._localtime_r;
  var _longjmp=env._longjmp;
  var _mktime=env._mktime;
  var _realloc=env._realloc;
  var _strftime=env._strftime;
  var _system=env._system;
  var _time=env._time;
  var _tzset=env._tzset;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _eval($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __on_startup();
 $1 = HEAP32[3856]|0;
 (_mb_set_inputer($1,105)|0);
 $2 = HEAP32[3856]|0;
 (_mb_load_string($2,$0,1)|0);
 $3 = HEAP32[3856]|0;
 (_mb_run($3,1)|0);
 __on_exit();
 (_puts(1558)|0);
 return 0;
}
function __on_startup() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __open_mem_pool();
 (_mb_set_memory_manager(106,107)|0);
 __create_code();
 (_mb_init()|0);
 (_mb_open(15424)|0);
 $0 = HEAP32[3856]|0;
 (_mb_debug_set_stepped_handler($0,108)|0);
 $1 = HEAP32[3856]|0;
 (_mb_set_error_handler($1,109)|0);
 $2 = HEAP32[3856]|0;
 (_mb_set_import_handler($2,110)|0);
 $3 = HEAP32[3856]|0;
 (_mb_register_func($3,1224,111)|0);
 $4 = HEAP32[3856]|0;
 (_mb_register_func($4,1228,112)|0);
 $5 = HEAP32[3856]|0;
 (_mb_register_func($5,1231,113)|0);
 $6 = HEAP32[3856]|0;
 (_mb_register_func($6,1235,114)|0);
 $7 = HEAP32[3856]|0;
 (_mb_register_func($7,1241,115)|0);
 $8 = HEAP32[3856]|0;
 (_mb_register_func($8,1247,116)|0);
 $9 = HEAP32[3856]|0;
 (_mb_register_func($9,1250,117)|0);
 return;
}
function _on_input($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)!=(0|0);
 $4 = ($2|0)!=(0);
 $or$cond = $3 & $4;
 if ($or$cond) {
  $5 = HEAP32[140]|0;
  $6 = (_fgets($1,$2,$5)|0);
  $7 = ($6|0)==(0|0);
  if ($7) {
   $8 = HEAP32[172]|0;
   (_fwrite(10052,15,1,$8)|0);
   _exit(1);
   // unreachable;
  }
  $9 = (_strlen($1)|0);
  $10 = (($9) + -1)|0;
  $11 = (($1) + ($10)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(10);
  if ($13) {
   HEAP8[$11>>0] = 0;
   $$0 = $10;
  } else {
   $$0 = $9;
  }
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __on_exit() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3856]|0;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  (_mb_close(15424)|0);
 }
 (_mb_dispose()|0);
 __destroy_code();
 __close_mem_pool();
 return;
}
function __open_mem_pool() {
 var $$04447 = 0, $$046 = 0, $$145 = 0, $$phi$trans$insert = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $0 = sp + 88|0;
 $1 = sp;
 HEAP32[3857] = 0;
 HEAP32[$0>>2] = 4;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 8;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 32;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 64;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = 128;
 $6 = ((($0)) + 20|0);
 HEAP32[$6>>2] = 256;
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = 512;
 $8 = ((($0)) + 28|0);
 HEAP32[$8>>2] = 6;
 $9 = ((($0)) + 32|0);
 HEAP32[$9>>2] = 6;
 $10 = ((($0)) + 36|0);
 HEAP32[$10>>2] = 18;
 $11 = ((($0)) + 40|0);
 HEAP32[$11>>2] = 26;
 $12 = ((($0)) + 44|0);
 HEAP32[$12>>2] = 774;
 $13 = ((($0)) + 48|0);
 HEAP32[$13>>2] = 19;
 $14 = ((($0)) + 52|0);
 HEAP32[$14>>2] = 59;
 $15 = ((($0)) + 56|0);
 HEAP32[$15>>2] = 10;
 $16 = ((($0)) + 60|0);
 HEAP32[$16>>2] = 11;
 $17 = ((($0)) + 64|0);
 HEAP32[$17>>2] = 52;
 $18 = ((($0)) + 68|0);
 HEAP32[$18>>2] = 41;
 $19 = ((($0)) + 72|0);
 HEAP32[$19>>2] = 25;
 $20 = ((($0)) + 76|0);
 HEAP32[$20>>2] = 10;
 $21 = ((($0)) + 80|0);
 HEAP32[$21>>2] = 47;
 $22 = ((($0)) + 84|0);
 HEAP32[$22>>2] = 64;
 dest=$1; stop=dest+88|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $$04447 = 0;$28 = 4;$30 = 0;
 while(1) {
  $$046 = 0;
  while(1) {
   $25 = (($1) + ($$046<<2)|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ($26|0)==(0);
   if ($27) {
    label = 5;
    break;
   }
   $31 = ($26|0)==($28|0);
   if ($31) {
    $33 = $30;
    break;
   }
   $23 = (($$046) + 1)|0;
   $24 = ($$046|0)<(21);
   if ($24) {
    $$046 = $23;
   } else {
    $33 = $30;
    break;
   }
  }
  if ((label|0) == 5) {
   label = 0;
   HEAP32[$25>>2] = $28;
   $29 = (($30) + 1)|0;
   HEAP32[3857] = $29;
   $33 = $29;
  }
  $32 = (($$04447) + 1)|0;
  $exitcond = ($32|0)==(22);
  if ($exitcond) {
   break;
  }
  $$phi$trans$insert = (($0) + ($32<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$04447 = $32;$28 = $$pre;$30 = $33;
 }
 _qsort($1,$33,4,118);
 $34 = HEAP32[3857]|0;
 $35 = $34 << 3;
 $36 = (_malloc($35)|0);
 HEAP32[3858] = $36;
 $37 = ($36|0)==(0|0);
 if ($37) {
  _longjmp((15436|0),1);
  // unreachable;
 }
 $38 = ($34|0)>(0);
 if ($38) {
  $$145 = 0;
  while(1) {
   $39 = (($1) + ($$145<<2)|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = (($36) + ($$145<<3)|0);
   HEAP32[$41>>2] = $40;
   $42 = (((($36) + ($$145<<3)|0)) + 4|0);
   HEAP32[$42>>2] = 0;
   $43 = (($$145) + 1)|0;
   $44 = ($43|0)<($34|0);
   if ($44) {
    $$145 = $43;
   } else {
    break;
   }
  }
 }
 STACKTOP = sp;return;
}
function __pop_mem($0) {
 $0 = $0|0;
 var $$03135 = 0, $$032 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[3898]|0;
 $2 = (($1) + 1)|0;
 HEAP32[3898] = $2;
 $3 = HEAP32[3899]|0;
 $4 = (($3) + ($0))|0;
 HEAP32[3899] = $4;
 $5 = HEAP32[3857]|0;
 $6 = ($5|0)>(0);
 L1: do {
  if ($6) {
   $7 = HEAP32[3858]|0;
   $$03135 = 0;
   while(1) {
    $8 = (($7) + ($$03135<<3)|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = ($9>>>0)<($0>>>0);
    if (!($10)) {
     break;
    }
    $24 = (($$03135) + 1)|0;
    $25 = ($24|0)<($5|0);
    if ($25) {
     $$03135 = $24;
    } else {
     label = 9;
     break L1;
    }
   }
   $11 = (((($7) + ($$03135<<3)|0)) + 4|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==(0|0);
   if (!($13)) {
    $14 = HEAP32[3900]|0;
    $15 = (($14) + -1)|0;
    HEAP32[3900] = $15;
    $16 = HEAP32[3901]|0;
    $17 = (($16) - ($0))|0;
    HEAP32[3901] = $17;
    $18 = ((($12)) + -4|0);
    $19 = HEAP32[$18>>2]|0;
    HEAP32[$11>>2] = $19;
    HEAP32[$18>>2] = $0;
    $$032 = $12;
    break;
   }
   $20 = (($9) + 4)|0;
   $21 = (_malloc($20)|0);
   $22 = ((($21)) + 4|0);
   $23 = ($22|0)==((4)|0);
   if ($23) {
    $$032 = 0;
   } else {
    HEAP32[$21>>2] = $0;
    $$032 = $22;
   }
  } else {
   label = 9;
  }
 } while(0);
 if ((label|0) == 9) {
  $26 = (($0) + 4)|0;
  $27 = (_malloc($26)|0);
  $28 = ((($27)) + 4|0);
  $29 = ($28|0)==((4)|0);
  if ($29) {
   $$032 = 0;
  } else {
   HEAP32[$27>>2] = $0;
   $$032 = $28;
  }
 }
 return ($$032|0);
}
function __push_mem($0) {
 $0 = $0|0;
 var $$017 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[3898]|0;
 $2 = (($1) + -1)|0;
 HEAP32[3898] = $2;
 $3 = ($1|0)<(1);
 if ($3) {
  ___assert_fail((1268|0),(1255|0),372,(1290|0));
  // unreachable;
 }
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[3899]|0;
 $7 = (($6) - ($5))|0;
 HEAP32[3899] = $7;
 _memset(($0|0),0,($5|0))|0;
 $8 = HEAP32[3857]|0;
 $9 = ($8|0)>(0);
 L4: do {
  if ($9) {
   $10 = HEAP32[3858]|0;
   $11 = HEAP32[$4>>2]|0;
   $$017 = 0;
   while(1) {
    $12 = (($10) + ($$017<<3)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($11>>>0)>($13>>>0);
    if (!($14)) {
     break;
    }
    $21 = (($$017) + 1)|0;
    $22 = ($21|0)<($8|0);
    if ($22) {
     $$017 = $21;
    } else {
     label = 8;
     break L4;
    }
   }
   $15 = HEAP32[3900]|0;
   $16 = (($15) + 1)|0;
   HEAP32[3900] = $16;
   $17 = HEAP32[3901]|0;
   $18 = (($17) + ($11))|0;
   HEAP32[3901] = $18;
   $19 = (((($10) + ($$017<<3)|0)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   HEAP32[$4>>2] = $20;
   HEAP32[$19>>2] = $0;
   __tidy_mem_pool();
  } else {
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  _free($4);
 }
 return;
}
function __create_code() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_malloc(12)|0);
 $1 = ($0|0)==(0|0);
 if ($1) {
  _longjmp((15436|0),1);
  // unreachable;
 }
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 16;
 $4 = (_malloc(64)|0);
 HEAP32[$0>>2] = $4;
 $5 = ($4|0)==(0|0);
 if ($5) {
  _longjmp((15436|0),1);
  // unreachable;
 } else {
  HEAP32[3902] = $0;
  return;
 }
}
function __on_stepped($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __on_error($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer14 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0;
 var $vararg_ptr13 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr20 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer14 = sp + 48|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer = sp;
 $8 = ($1|0)==(0);
 do {
  if (!($8)) {
   $9 = ($3|0)==(0|0);
   if ($9) {
    $16 = $5&65535;
    $17 = $6&65535;
    $18 = ($1|0)==(66);
    $19 = (($7) + -201)|0;
    $20 = $18 ? $19 : $7;
    HEAP32[$vararg_buffer14>>2] = $16;
    $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
    HEAP32[$vararg_ptr17>>2] = $17;
    $vararg_ptr18 = ((($vararg_buffer14)) + 8|0);
    HEAP32[$vararg_ptr18>>2] = $1;
    $vararg_ptr19 = ((($vararg_buffer14)) + 12|0);
    HEAP32[$vararg_ptr19>>2] = $20;
    $vararg_ptr20 = ((($vararg_buffer14)) + 16|0);
    HEAP32[$vararg_ptr20>>2] = $2;
    (_printf(1464,$vararg_buffer14)|0);
    break;
   }
   $10 = ($1|0)==(48);
   $11 = $5&65535;
   $12 = $6&65535;
   if ($10) {
    HEAP32[$vararg_buffer>>2] = $11;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $12;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $3;
    $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
    HEAP32[$vararg_ptr3>>2] = 48;
    $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
    HEAP32[$vararg_ptr4>>2] = $7;
    $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
    HEAP32[$vararg_ptr5>>2] = $2;
    (_printf(1300,$vararg_buffer)|0);
    break;
   } else {
    $13 = ($1|0)==(66);
    $14 = (($7) + -201)|0;
    $15 = $13 ? $14 : $7;
    HEAP32[$vararg_buffer6>>2] = $11;
    $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
    HEAP32[$vararg_ptr9>>2] = $12;
    $vararg_ptr10 = ((($vararg_buffer6)) + 8|0);
    HEAP32[$vararg_ptr10>>2] = $3;
    $vararg_ptr11 = ((($vararg_buffer6)) + 12|0);
    HEAP32[$vararg_ptr11>>2] = $1;
    $vararg_ptr12 = ((($vararg_buffer6)) + 16|0);
    HEAP32[$vararg_ptr12>>2] = $15;
    $vararg_ptr13 = ((($vararg_buffer6)) + 20|0);
    HEAP32[$vararg_ptr13>>2] = $2;
    (_printf(1382,$vararg_buffer6)|0);
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __on_import($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3;
}
function _now($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $2 = sp + 4|0;
 $3 = sp + 8|0;
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1302,(1224|0));
  // unreachable;
 }
 $7 = (_mb_attempt_open_bracket($0,$1)|0);
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   $9 = (_mb_has_arg($0,$1)|0);
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (_mb_pop_string($0,$1,$4)|0);
    $12 = ($11|0)==(0);
    if (!($12)) {
     $$6 = $11;
     break;
    }
   }
   $13 = (_mb_attempt_close_bracket($0,$1)|0);
   $14 = ($13|0)==(0);
   if ($14) {
    (_time(($2|0))|0);
    $15 = (_localtime(($2|0))|0);
    $16 = HEAP32[$4>>2]|0;
    $17 = ($16|0)==(0|0);
    if ($17) {
     $23 = (_asctime(($15|0))|0);
     HEAP32[$4>>2] = $23;
     $24 = (_strlen($23)|0);
     $25 = (($24) + 1)|0;
     $26 = (_mb_memdup($23,$25)|0);
     $27 = (_mb_push_string($0,$1,$26)|0);
     $28 = ($27|0)==(0);
     if (!($28)) {
      $$6 = $27;
      break;
     }
    } else {
     (_strftime(($3|0),80,($16|0),($15|0))|0);
     $18 = (_strlen($3)|0);
     $19 = (($18) + 1)|0;
     $20 = (_mb_memdup($3,$19)|0);
     $21 = (_mb_push_string($0,$1,$20)|0);
     $22 = ($21|0)==(0);
     if (!($22)) {
      $$6 = $21;
      break;
     }
    }
    $$6 = 0;
   } else {
    $$6 = $13;
   }
  } else {
   $$6 = $7;
  }
 } while(0);
 STACKTOP = sp;return ($$6|0);
}
function _os($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$3 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1328,(1228|0));
  // unreachable;
 }
 $4 = (_mb_attempt_open_bracket($0,$1)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (_mb_attempt_close_bracket($0,$1)|0);
  $7 = ($6|0)==(0);
  if ($7) {
   $8 = (_mb_memdup(10283,8)|0);
   $9 = (_mb_push_string($0,$1,$8)|0);
   return ($9|0);
  } else {
   $$3 = $6;
  }
 } else {
  $$3 = $4;
 }
 return ($$3|0);
}
function _sys($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1343,(1231|0));
  // unreachable;
 }
 $5 = (_mb_attempt_open_bracket($0,$1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_mb_pop_string($0,$1,$2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = (_mb_attempt_close_bracket($0,$1)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = HEAP32[$2>>2]|0;
    $12 = ($11|0)==(0|0);
    if ($12) {
     $$3 = 0;
    } else {
     (_system(($11|0))|0);
     $$3 = 0;
    }
   } else {
    $$3 = $9;
   }
  } else {
   $$3 = $7;
  }
 } else {
  $$3 = $5;
 }
 STACKTOP = sp;return ($$3|0);
}
function _trace($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03744 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $vararg_buffer = 0, $vararg_buffer1 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 16|0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1362,(1235|0));
  // unreachable;
 }
 dest=$2; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $5 = (_mb_attempt_open_bracket($0,$1)|0);
 $6 = ($5|0)==(0);
 L4: do {
  if ($6) {
   $7 = (_mb_attempt_close_bracket($0,$1)|0);
   $8 = ($7|0)==(0);
   if ($8) {
    $9 = (_mb_debug_get_stack_trace($0,$1,$2,16)|0);
    $10 = ($9|0)==(0);
    if ($10) {
     $$03744 = 1;
     while(1) {
      $11 = (($2) + ($$03744<<2)|0);
      $12 = HEAP32[$11>>2]|0;
      $13 = ($12|0)==(0|0);
      if (!($13)) {
       HEAP32[$vararg_buffer>>2] = $12;
       (_printf(10023,$vararg_buffer)|0);
      }
      $14 = (($$03744) + 1)|0;
      $15 = ($14>>>0)<(16);
      if (!($15)) {
       $$3 = 0;
       break L4;
      }
      $16 = (($2) + ($14<<2)|0);
      $17 = HEAP32[$16>>2]|0;
      $18 = ($17|0)==(0|0);
      if ($18) {
       $$03744 = $14;
       continue;
      }
      (_printf(1534,$vararg_buffer1)|0);
      $$03744 = $14;
     }
    } else {
     $$3 = $9;
    }
   } else {
    $$3 = $7;
   }
  } else {
   $$3 = $5;
  }
 } while(0);
 STACKTOP = sp;return ($$3|0);
}
function _raise($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1388,(1241|0));
  // unreachable;
 }
 $5 = (_mb_attempt_open_bracket($0,$1)|0);
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = (_mb_has_arg($0,$1)|0);
   $8 = ($7|0)==(0);
   if (!($8)) {
    $9 = (_mb_pop_int($0,$1,$2)|0);
    $10 = ($9|0)==(0);
    if (!($10)) {
     $$5 = $9;
     break;
    }
   }
   $11 = (_mb_attempt_close_bracket($0,$1)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = HEAP32[$2>>2]|0;
    $14 = (_mb_push_int($0,$1,$13)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     $16 = HEAP32[$2>>2]|0;
     $17 = (($16) + 201)|0;
     $18 = (_mb_raise_error($0,$1,66,$17)|0);
     $$5 = $18;
    } else {
     $$5 = $14;
    }
   } else {
    $$5 = $11;
   }
  } else {
   $$5 = $5;
  }
 } while(0);
 STACKTOP = sp;return ($$5|0);
}
function _gc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1409,(1247|0));
  // unreachable;
 }
 $5 = (_mb_attempt_open_bracket($0,$1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_mb_attempt_close_bracket($0,$1)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = (_mb_gc($0,$2)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = HEAP32[$2>>2]|0;
    $12 = (_mb_push_int($0,$1,$11)|0);
    $$4 = $12;
   } else {
    $$4 = $9;
   }
  } else {
   $$4 = $7;
  }
 } else {
  $$4 = $5;
 }
 STACKTOP = sp;return ($$4|0);
}
function _beep($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1255|0),1425,(1250|0));
  // unreachable;
 }
 $4 = (_mb_attempt_func_begin($0,$1)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (_mb_attempt_func_end($0,$1)|0);
  $7 = ($6|0)==(0);
  if ($7) {
   (_putchar(7)|0);
   $$2 = 0;
  } else {
   $$2 = $6;
  }
 } else {
  $$2 = $4;
 }
 return ($$2|0);
}
function __cmp_size_t($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2>>>0)>($3>>>0);
 $5 = ($2>>>0)<($3>>>0);
 $$ = $5 << 31 >> 31;
 $$0 = $4 ? 1 : $$;
 return ($$0|0);
}
function __tidy_mem_pool() {
 var $$03 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3901]|0;
 $1 = ($0|0)<(33554432);
 $2 = HEAP32[3857]|0;
 $3 = ($2|0)==(0);
 $or$cond = $1 | $3;
 if (!($or$cond)) {
  $4 = ($2|0)>(0);
  if ($4) {
   $$pre = HEAP32[3858]|0;
   $$03 = 0;$20 = $2;$6 = $$pre;
   while(1) {
    $5 = (((($6) + ($$03<<3)|0)) + 4|0);
    $7 = HEAP32[$5>>2]|0;
    $8 = ($7|0)==(0|0);
    if ($8) {
     $19 = $20;$21 = $6;
    } else {
     $10 = $7;$12 = $5;
     while(1) {
      $9 = ((($10)) + -4|0);
      $11 = HEAP32[$9>>2]|0;
      HEAP32[$12>>2] = $11;
      _free($9);
      $13 = HEAP32[3858]|0;
      $14 = (((($13) + ($$03<<3)|0)) + 4|0);
      $15 = HEAP32[$14>>2]|0;
      $16 = ($15|0)==(0|0);
      if ($16) {
       break;
      } else {
       $10 = $15;$12 = $14;
      }
     }
     $$pre6 = HEAP32[3857]|0;
     $19 = $$pre6;$21 = $13;
    }
    $17 = (($$03) + 1)|0;
    $18 = ($17|0)<($19|0);
    if ($18) {
     $$03 = $17;$20 = $19;$6 = $21;
    } else {
     break;
    }
   }
  }
  HEAP32[3900] = 0;
  HEAP32[3901] = 0;
 }
 return;
}
function __destroy_code() {
 var $$04 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3902]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1539|0),(1255|0),439,(1544|0));
  // unreachable;
 }
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(0);
 $5 = HEAP32[$0>>2]|0;
 if ($4) {
  $$04 = 0;$7 = $5;
  while(1) {
   $6 = (($7) + ($$04<<2)|0);
   $8 = HEAP32[$6>>2]|0;
   _free($8);
   $9 = (($$04) + 1)|0;
   $10 = HEAP32[3902]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($9|0)<($12|0);
   $14 = HEAP32[$10>>2]|0;
   if ($13) {
    $$04 = $9;$7 = $14;
   } else {
    $$lcssa = $14;
    break;
   }
  }
 } else {
  $$lcssa = $5;
 }
 _free($$lcssa);
 $15 = HEAP32[3902]|0;
 _free($15);
 HEAP32[3902] = 0;
 return;
}
function __close_mem_pool() {
 var $$09 = 0, $$pre = 0, $$pre12 = 0, $$pre13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3857]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = ($0|0)>(0);
  if ($2) {
   $$pre = HEAP32[3858]|0;
   $$09 = 0;$19 = $$pre;$20 = $0;$4 = $$pre;
   while(1) {
    $3 = (((($4) + ($$09<<3)|0)) + 4|0);
    $5 = HEAP32[$3>>2]|0;
    $6 = ($5|0)==(0|0);
    if ($6) {
     $17 = $20;$21 = $19;$22 = $4;
    } else {
     $10 = $3;$8 = $5;
     while(1) {
      $7 = ((($8)) + -4|0);
      $9 = HEAP32[$7>>2]|0;
      HEAP32[$10>>2] = $9;
      _free($7);
      $11 = HEAP32[3858]|0;
      $12 = (((($11) + ($$09<<3)|0)) + 4|0);
      $13 = HEAP32[$12>>2]|0;
      $14 = ($13|0)==(0|0);
      if ($14) {
       break;
      } else {
       $10 = $12;$8 = $13;
      }
     }
     $$pre12 = HEAP32[3857]|0;
     $17 = $$pre12;$21 = $11;$22 = $11;
    }
    $15 = (($$09) + 1)|0;
    $16 = ($15|0)<($17|0);
    if ($16) {
     $$09 = $15;$19 = $21;$20 = $17;$4 = $22;
    } else {
     $18 = $21;
     break;
    }
   }
  } else {
   $$pre13 = HEAP32[3858]|0;
   $18 = $$pre13;
  }
  _free($18);
  HEAP32[3858] = 0;
  HEAP32[3857] = 0;
 }
 return;
}
function _mb_init() {
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3903]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $2 = (__create_object()|0);
   HEAP32[3903] = $2;
   HEAP8[$2>>0]=8&255;HEAP8[$2+1>>0]=(8>>8)&255;HEAP8[$2+2>>0]=(8>>16)&255;HEAP8[$2+3>>0]=8>>24;
   $3 = (_mb_malloc(8)|0);
   $4 = HEAP32[3903]|0;
   $5 = ((($4)) + 4|0);
   HEAP8[$5>>0]=$3&255;HEAP8[$5+1>>0]=($3>>8)&255;HEAP8[$5+2>>0]=($3>>16)&255;HEAP8[$5+3>>0]=$3>>24;
   $6 = $3;
   $7 = $6;
   HEAP8[$7>>0]=0&255;HEAP8[$7+1>>0]=(0>>8)&255;HEAP8[$7+2>>0]=(0>>16)&255;HEAP8[$7+3>>0]=0>>24;
   $8 = (($6) + 4)|0;
   $9 = $8;
   HEAP8[$9>>0]=0&255;HEAP8[$9+1>>0]=(0>>8)&255;HEAP8[$9+2>>0]=(0>>16)&255;HEAP8[$9+3>>0]=0>>24;
   $10 = (_mb_malloc(2)|0);
   $11 = HEAP32[3903]|0;
   $12 = ((($11)) + 4|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   HEAP8[$13>>0]=$10&255;HEAP8[$13+1>>0]=($10>>8)&255;HEAP8[$13+2>>0]=($10>>16)&255;HEAP8[$13+3>>0]=$10>>24;
   $14 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   HEAP8[$15>>0]=35&255;HEAP8[$15+1>>0]=35>>8;
   $16 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $17 = ((($16)) + 4|0);
   HEAP8[$17>>0]=24&255;HEAP8[$17+1>>0]=(24>>8)&255;HEAP8[$17+2>>0]=(24>>16)&255;HEAP8[$17+3>>0]=24>>24;
   $18 = HEAP32[3904]|0;
   $19 = ($18|0)==(0|0);
   if (!($19)) {
    ___assert_fail((1562|0),(1578|0),12026,(1594|0));
    // unreachable;
   }
   $20 = (__create_var(15616,1602,5)|0);
   $21 = ((($20)) + 4|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   HEAP8[$22>>0]=2&255;HEAP8[$22+1>>0]=(2>>8)&255;HEAP8[$22+2>>0]=(2>>16)&255;HEAP8[$22+3>>0]=2>>24;
   $23 = ((($22)) + 4|0);
   HEAP8[$23>>0]=1&255;HEAP8[$23+1>>0]=(1>>8)&255;HEAP8[$23+2>>0]=(1>>16)&255;HEAP8[$23+3>>0]=1>>24;
   $24 = HEAP32[3905]|0;
   $25 = ($24|0)==(0|0);
   if ($25) {
    $26 = (__create_var(15620,1624,6)|0);
    $27 = ((($26)) + 4|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    HEAP8[$28>>0]=2&255;HEAP8[$28+1>>0]=(2>>8)&255;HEAP8[$28+2>>0]=(2>>16)&255;HEAP8[$28+3>>0]=2>>24;
    $29 = ((($28)) + 4|0);
    HEAP8[$29>>0]=0&255;HEAP8[$29+1>>0]=(0>>8)&255;HEAP8[$29+2>>0]=(0>>16)&255;HEAP8[$29+3>>0]=0>>24;
    $$0 = 0;
    break;
   } else {
    ___assert_fail((1607|0),(1578|0),12032,(1594|0));
    // unreachable;
   }
  } else {
   $$0 = 3;
  }
 } while(0);
 return ($$0|0);
}
function __create_object() {
 var $0 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = (_mb_malloc(17)|0);
 dest=$0; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 return ($0|0);
}
function _mb_malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $$016 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0&65535;
 $2 = $0 & 65535;
 $3 = ($2|0)==($0|0);
 do {
  if ($3) {
   $4 = (($0) + 2)|0;
   $5 = HEAP32[3906]|0;
   $6 = ($5|0)==(0|0);
   if ($6) {
    $8 = (_malloc($4)|0);
    $$0 = $8;
   } else {
    $7 = (FUNCTION_TABLE_ii[$5 & 127]($4)|0);
    $$0 = $7;
   }
   $9 = ($$0|0)==(0|0);
   if ($9) {
    ___assert_fail((1699|0),(1578|0),3221,(1703|0));
    // unreachable;
   } else {
    $10 = HEAP32[3907]|0;
    $11 = (($10) + ($0))|0;
    HEAP32[3907] = $11;
    $12 = ((($$0)) + 2|0);
    HEAP16[$$0>>1] = $1;
    $$016 = $12;
    break;
   }
  } else {
   $$016 = 0;
  }
 } while(0);
 return ($$016|0);
}
function __core_dummy_assign($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,1630)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,1630)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __create_var($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $3 = (_mb_malloc(9)|0);
 dest=$3; stop=dest+9|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $4 = (_mb_strdup($1,$2)|0);
 HEAP8[$3>>0]=$4&255;HEAP8[$3+1>>0]=($4>>8)&255;HEAP8[$3+2>>0]=($4>>16)&255;HEAP8[$3+3>>0]=$4>>24;
 $5 = (__create_object()|0);
 $6 = ((($3)) + 4|0);
 HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=($5>>8)&255;HEAP8[$6+2>>0]=($5>>16)&255;HEAP8[$6+3>>0]=$5>>24;
 $7 = ($0|0)!=(0|0);
 if ($7) {
  $8 = HEAP32[$0>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   label = 3;
  } else {
   $$0 = $8;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = (__create_object()|0);
  $$0 = $10;
 }
 $11 = ((($$0)) + 9|0);
 $12 = $11;
 $13 = $12;
 HEAP8[$13>>0]=0&255;HEAP8[$13+1>>0]=(0>>8)&255;HEAP8[$13+2>>0]=(0>>16)&255;HEAP8[$13+3>>0]=0>>24;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP8[$15>>0]=0&255;HEAP8[$15+1>>0]=(0>>8)&255;HEAP8[$15+2>>0]=(0>>16)&255;HEAP8[$15+3>>0]=0>>24;
 HEAP8[$$0>>0]=9&255;HEAP8[$$0+1>>0]=(9>>8)&255;HEAP8[$$0+2>>0]=(9>>16)&255;HEAP8[$$0+3>>0]=9>>24;
 $16 = ((($$0)) + 4|0);
 HEAP8[$16>>0]=$3&255;HEAP8[$16+1>>0]=($3>>8)&255;HEAP8[$16+2>>0]=($3>>16)&255;HEAP8[$16+3>>0]=$3>>24;
 $17 = ((($$0)) + 8|0);
 HEAP8[$17>>0] = 0;
 if ($7) {
  HEAP32[$0>>2] = $$0;
 }
 return ($3|0);
}
function _mb_strdup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = ((($0)) + -2|0);
  $4 = HEAP16[$3>>1]|0;
  $5 = $4&65535;
  $$0 = $5;
 } else {
  $$0 = $1;
 }
 $6 = (_mb_memdup($0,$$0)|0);
 return ($6|0);
}
function _mb_memdup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_mb_malloc($1)|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $$0 = 0;
  } else {
   _memcpy(($3|0),($0|0),($1|0))|0;
   $$0 = $3;
  }
 }
 return ($$0|0);
}
function __set_current_error($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1666|0),(1578|0),4839,(1680|0));
  // unreachable;
 }
 $4 = ((($0)) + 135|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0);
 if ($6) {
  HEAP8[$4>>0]=$1&255;HEAP8[$4+1>>0]=($1>>8)&255;HEAP8[$4+2>>0]=($1>>16)&255;HEAP8[$4+3>>0]=$1>>24;
  $7 = ((($0)) + 139|0);
  HEAP8[$7>>0]=$2&255;HEAP8[$7+1>>0]=($2>>8)&255;HEAP8[$7+2>>0]=($2>>16)&255;HEAP8[$7+3>>0]=$2>>24;
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __set_error_pos($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 if ($4) {
  ___assert_fail((1649|0),(1578|0),5971,(1651|0));
  // unreachable;
 } else {
  $5 = ((($0)) + 143|0);
  HEAP8[$5>>0]=$1&255;HEAP8[$5+1>>0]=($1>>8)&255;HEAP8[$5+2>>0]=($1>>16)&255;HEAP8[$5+3>>0]=$1>>24;
  $6 = ((($0)) + 147|0);
  HEAP8[$6>>0]=$2&255;HEAP8[$6+1>>0]=$2>>8;
  $7 = ((($0)) + 149|0);
  HEAP8[$7>>0]=$3&255;HEAP8[$7+1>>0]=$3>>8;
  return;
 }
}
function _mb_dispose() {
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3903]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = 3;
  } else {
   $2 = ((($0)) + 4|0);
   $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
   $5 = ($4|0)==(0|0);
   if ($5) {
    ___assert_fail((1713|0),(1578|0),12047,(1745|0));
    // unreachable;
   }
   _mb_free($4);
   $6 = HEAP32[3903]|0;
   $7 = ((($6)) + 4|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   HEAP8[$8>>0]=0&255;HEAP8[$8+1>>0]=(0>>8)&255;HEAP8[$8+2>>0]=(0>>16)&255;HEAP8[$8+3>>0]=0>>24;
   $9 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $10 = ($9|0)==(0|0);
   if ($10) {
    ___assert_fail((1713|0),(1578|0),12048,(1745|0));
    // unreachable;
   }
   _mb_free($9);
   $11 = HEAP32[3903]|0;
   $12 = ((($11)) + 4|0);
   HEAP8[$12>>0]=0&255;HEAP8[$12+1>>0]=(0>>8)&255;HEAP8[$12+2>>0]=(0>>16)&255;HEAP8[$12+3>>0]=0>>24;
   $13 = ($11|0)==(0|0);
   if ($13) {
    ___assert_fail((1713|0),(1578|0),12049,(1745|0));
    // unreachable;
   }
   _mb_free($11);
   HEAP32[3903] = 0;
   $14 = HEAP32[3904]|0;
   $15 = ($14|0)==(0|0);
   if ($15) {
    ___assert_fail((1756|0),(1578|0),12052,(1745|0));
    // unreachable;
   }
   $16 = ((($14)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ((($17)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ($19|0)==(0|0);
   if ($20) {
    ___assert_fail((1713|0),(1578|0),12054,(1745|0));
    // unreachable;
   }
   _mb_free($19);
   $21 = HEAP32[3904]|0;
   $22 = ((($21)) + 4|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ((($23)) + 4|0);
   HEAP8[$24>>0]=0&255;HEAP8[$24+1>>0]=(0>>8)&255;HEAP8[$24+2>>0]=(0>>16)&255;HEAP8[$24+3>>0]=0>>24;
   $25 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = ($26|0)==(0|0);
   if ($27) {
    ___assert_fail((1713|0),(1578|0),12055,(1745|0));
    // unreachable;
   }
   _mb_free($26);
   $28 = HEAP32[3904]|0;
   $29 = ((($28)) + 4|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   HEAP8[$30>>0]=0&255;HEAP8[$30+1>>0]=(0>>8)&255;HEAP8[$30+2>>0]=(0>>16)&255;HEAP8[$30+3>>0]=0>>24;
   $31 = HEAP32[3904]|0;
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ($33|0)==(0|0);
   if ($34) {
    ___assert_fail((1713|0),(1578|0),12056,(1745|0));
    // unreachable;
   }
   _mb_free($33);
   $35 = HEAP32[3904]|0;
   $36 = ((($35)) + 4|0);
   HEAP8[$36>>0]=0&255;HEAP8[$36+1>>0]=(0>>8)&255;HEAP8[$36+2>>0]=(0>>16)&255;HEAP8[$36+3>>0]=0>>24;
   $37 = ($35|0)==(0|0);
   if ($37) {
    ___assert_fail((1713|0),(1578|0),12057,(1745|0));
    // unreachable;
   }
   _mb_free($35);
   HEAP32[3904] = 0;
   $38 = HEAP32[3905]|0;
   $39 = ($38|0)==(0|0);
   if ($39) {
    ___assert_fail((1771|0),(1578|0),12060,(1745|0));
    // unreachable;
   }
   $40 = ((($38)) + 4|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = ((($41)) + 4|0);
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   $44 = ($43|0)==(0|0);
   if ($44) {
    ___assert_fail((1713|0),(1578|0),12062,(1745|0));
    // unreachable;
   }
   _mb_free($43);
   $45 = HEAP32[3905]|0;
   $46 = ((($45)) + 4|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = ((($47)) + 4|0);
   HEAP8[$48>>0]=0&255;HEAP8[$48+1>>0]=(0>>8)&255;HEAP8[$48+2>>0]=(0>>16)&255;HEAP8[$48+3>>0]=0>>24;
   $49 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ($50|0)==(0|0);
   if ($51) {
    ___assert_fail((1713|0),(1578|0),12063,(1745|0));
    // unreachable;
   }
   _mb_free($50);
   $52 = HEAP32[3905]|0;
   $53 = ((($52)) + 4|0);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   HEAP8[$54>>0]=0&255;HEAP8[$54+1>>0]=(0>>8)&255;HEAP8[$54+2>>0]=(0>>16)&255;HEAP8[$54+3>>0]=0>>24;
   $55 = HEAP32[3905]|0;
   $56 = ((($55)) + 4|0);
   $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
   $58 = ($57|0)==(0|0);
   if ($58) {
    ___assert_fail((1713|0),(1578|0),12064,(1745|0));
    // unreachable;
   }
   _mb_free($57);
   $59 = HEAP32[3905]|0;
   $60 = ((($59)) + 4|0);
   HEAP8[$60>>0]=0&255;HEAP8[$60+1>>0]=(0>>8)&255;HEAP8[$60+2>>0]=(0>>16)&255;HEAP8[$60+3>>0]=0>>24;
   $61 = ($59|0)==(0|0);
   if ($61) {
    ___assert_fail((1713|0),(1578|0),12065,(1745|0));
    // unreachable;
   } else {
    _mb_free($59);
    HEAP32[3905] = 0;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _mb_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1787|0),(1578|0),3233,(1789|0));
  // unreachable;
 }
 $2 = ((($0)) + -2|0);
 $3 = HEAP16[$2>>1]|0;
 $4 = $3&65535;
 $5 = HEAP32[3907]|0;
 $6 = (($5) - ($4))|0;
 HEAP32[3907] = $6;
 $7 = HEAP32[3908]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  _free($2);
 } else {
  FUNCTION_TABLE_vi[$7 & 127]($2);
 }
 return;
}
function _mb_open($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 3;
 } else {
  $2 = (_mb_malloc(175)|0);
  HEAP32[$0>>2] = $2;
  _memset(($2|0),0,175)|0;
  $3 = HEAP32[$0>>2]|0;
  $4 = ((($3)) + 12|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = $5 | 1;
  HEAP8[$4>>0] = $6;
  $7 = (__ht_create(119,120,121)|0);
  $8 = HEAP32[$0>>2]|0;
  $9 = ((($8)) + 47|0);
  HEAP8[$9>>0]=$7&255;HEAP8[$9+1>>0]=($7>>8)&255;HEAP8[$9+2>>0]=($7>>16)&255;HEAP8[$9+3>>0]=$7>>24;
  $10 = (__ht_create(119,120,121)|0);
  $11 = HEAP32[$0>>2]|0;
  $12 = ((($11)) + 51|0);
  HEAP8[$12>>0]=$10&255;HEAP8[$12+1>>0]=($10>>8)&255;HEAP8[$12+2>>0]=($10>>16)&255;HEAP8[$12+3>>0]=$10>>24;
  $13 = (__ht_create(119,120,122)|0);
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($14)) + 55|0);
  HEAP8[$15>>0]=$13&255;HEAP8[$15+1>>0]=($13>>8)&255;HEAP8[$15+2>>0]=($13>>16)&255;HEAP8[$15+3>>0]=$13>>24;
  $16 = (__ls_create()|0);
  $17 = HEAP32[$0>>2]|0;
  $18 = ((($17)) + 63|0);
  HEAP8[$18>>0]=$16&255;HEAP8[$18+1>>0]=($16>>8)&255;HEAP8[$18+2>>0]=($16>>16)&255;HEAP8[$18+3>>0]=$16>>24;
  $19 = HEAP32[$0>>2]|0;
  $20 = ((($19)) + 71|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = (__reset_parsing_context($21)|0);
  $23 = HEAP32[$0>>2]|0;
  $24 = ((($23)) + 71|0);
  HEAP8[$24>>0]=$22&255;HEAP8[$24+1>>0]=($22>>8)&255;HEAP8[$24+2>>0]=($22>>16)&255;HEAP8[$24+3>>0]=$22>>24;
  $25 = (__ls_create()|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = ((($26)) + 39|0);
  HEAP8[$27>>0]=$25&255;HEAP8[$27+1>>0]=($25>>8)&255;HEAP8[$27+2>>0]=($25>>16)&255;HEAP8[$27+3>>0]=$25>>24;
  $28 = (__ls_create()|0);
  $29 = HEAP32[$0>>2]|0;
  $30 = ((($29)) + 43|0);
  HEAP8[$30>>0]=$28&255;HEAP8[$30+1>>0]=($28>>8)&255;HEAP8[$30+2>>0]=($28>>16)&255;HEAP8[$30+3>>0]=$28>>24;
  $31 = (__ht_create(123,124,125)|0);
  $32 = HEAP32[$0>>2]|0;
  $33 = ((($32)) + 21|0);
  HEAP8[$33>>0]=$31&255;HEAP8[$33+1>>0]=($31>>8)&255;HEAP8[$33+2>>0]=($31>>16)&255;HEAP8[$33+3>>0]=$31>>24;
  $34 = (__ht_create(123,124,125)|0);
  $35 = HEAP32[$0>>2]|0;
  $36 = ((($35)) + 25|0);
  HEAP8[$36>>0]=$34&255;HEAP8[$36+1>>0]=($34>>8)&255;HEAP8[$36+2>>0]=($34>>16)&255;HEAP8[$36+3>>0]=$34>>24;
  $37 = (__ht_create(123,124,125)|0);
  $38 = HEAP32[$0>>2]|0;
  $39 = ((($38)) + 29|0);
  HEAP8[$39>>0]=$37&255;HEAP8[$39+1>>0]=($37>>8)&255;HEAP8[$39+2>>0]=($37>>16)&255;HEAP8[$39+3>>0]=$37>>24;
  $40 = HEAP32[$0>>2]|0;
  $41 = ((($40)) + 33|0);
  HEAP8[$41>>0]=0&255;HEAP8[$41+1>>0]=(0>>8)&255;HEAP8[$41+2>>0]=(0>>16)&255;HEAP8[$41+3>>0]=0>>24;
  $42 = HEAP32[$0>>2]|0;
  $43 = ((($42)) + 37|0);
  HEAP8[$43>>0] = 0;
  $44 = (__create_running_context(1)|0);
  $45 = ((($44)) + 4|0);
  HEAP8[$45>>0]=1&255;HEAP8[$45+1>>0]=(1>>8)&255;HEAP8[$45+2>>0]=(1>>16)&255;HEAP8[$45+3>>0]=1>>24;
  $46 = HEAP32[$0>>2]|0;
  $47 = ((($46)) + 75|0);
  HEAP8[$47>>0]=$44&255;HEAP8[$47+1>>0]=($44>>8)&255;HEAP8[$47+2>>0]=($44>>16)&255;HEAP8[$47+3>>0]=$44>>24;
  $48 = (__ls_create()|0);
  $49 = HEAP32[$0>>2]|0;
  $50 = ((($49)) + 102|0);
  HEAP8[$50>>0]=$48&255;HEAP8[$50+1>>0]=($48>>8)&255;HEAP8[$50+2>>0]=($48>>16)&255;HEAP8[$50+3>>0]=$48>>24;
  $51 = (__ls_create()|0);
  $52 = HEAP32[$0>>2]|0;
  $53 = ((($52)) + 122|0);
  HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
  $54 = (__ls_create()|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = ((($55)) + 126|0);
  HEAP8[$56>>0]=$54&255;HEAP8[$56+1>>0]=($54>>8)&255;HEAP8[$56+2>>0]=($54>>16)&255;HEAP8[$56+3>>0]=$54>>24;
  $57 = (__ls_create()|0);
  $58 = HEAP32[$0>>2]|0;
  $59 = ((($58)) + 130|0);
  HEAP8[$59>>0]=$57&255;HEAP8[$59+1>>0]=($57>>8)&255;HEAP8[$59+2>>0]=($57>>16)&255;HEAP8[$59+3>>0]=$57>>24;
  $60 = (__ls_create()|0);
  $61 = HEAP32[$0>>2]|0;
  $62 = ((($61)) + 17|0);
  HEAP8[$62>>0]=$60&255;HEAP8[$62+1>>0]=($60>>8)&255;HEAP8[$62+2>>0]=($60>>16)&255;HEAP8[$62+3>>0]=$60>>24;
  $63 = HEAP32[$0>>2]|0;
  __open_core_lib($63);
  $64 = HEAP32[$0>>2]|0;
  __open_std_lib($64);
  $65 = HEAP32[$0>>2]|0;
  __open_coll_lib($65);
  $66 = HEAP32[$0>>2]|0;
  __open_constant($66);
  $$0 = 0;
 }
 return ($$0|0);
}
function __ht_cmp_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strcmp($0,$1)|0);
 return ($2|0);
}
function __ht_hash_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$01719 = 0, $$018 = 0, $$020 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2281|0),(1578|0),2827,(12016|0));
  // unreachable;
 }
 $3 = ((($0)) + 12|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(1);
 if ($5) {
  $$018 = 0;
 } else {
  $6 = HEAP8[$1>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $$0$lcssa = 0;
  } else {
   $$01719 = $1;$$020 = 0;$10 = $6;
   while(1) {
    $8 = ($$020*5)|0;
    $9 = $10 << 24 >> 24;
    $11 = (($8) + ($9))|0;
    $12 = ((($$01719)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = ($13<<24>>24)==(0);
    if ($14) {
     $$0$lcssa = $11;
     break;
    } else {
     $$01719 = $12;$$020 = $11;$10 = $13;
    }
   }
  }
  $15 = (($$0$lcssa>>>0) % ($4>>>0))&-1;
  $$018 = $15;
 }
 return ($$018|0);
}
function __ls_free_extra($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  ___assert_fail((11995|0),(1578|0),2731,(12001|0));
  // unreachable;
 } else {
  _mb_free($1);
  return -1;
 }
 return (0)|0;
}
function __ht_create($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$020 = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_ht_cmp_intptr$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 $_ht_cmp_intptr$ = $3 ? 126 : $0;
 $4 = ($1|0)==(0|0);
 $$020 = $4 ? 127 : $1;
 $5 = (_mb_malloc(24)|0);
 HEAP8[$5>>0]=$2&255;HEAP8[$5+1>>0]=($2>>8)&255;HEAP8[$5+2>>0]=($2>>16)&255;HEAP8[$5+3>>0]=$2>>24;
 $6 = ((($5)) + 4|0);
 HEAP8[$6>>0]=$_ht_cmp_intptr$&255;HEAP8[$6+1>>0]=($_ht_cmp_intptr$>>8)&255;HEAP8[$6+2>>0]=($_ht_cmp_intptr$>>16)&255;HEAP8[$6+3>>0]=$_ht_cmp_intptr$>>24;
 $7 = ((($5)) + 8|0);
 HEAP8[$7>>0]=$$020&255;HEAP8[$7+1>>0]=($$020>>8)&255;HEAP8[$7+2>>0]=($$020>>16)&255;HEAP8[$7+3>>0]=$$020>>24;
 $8 = ((($5)) + 12|0);
 HEAP8[$8>>0]=193&255;HEAP8[$8+1>>0]=(193>>8)&255;HEAP8[$8+2>>0]=(193>>16)&255;HEAP8[$8+3>>0]=193>>24;
 $9 = ((($5)) + 16|0);
 HEAP8[$9>>0]=0&255;HEAP8[$9+1>>0]=(0>>8)&255;HEAP8[$9+2>>0]=(0>>16)&255;HEAP8[$9+3>>0]=0>>24;
 $10 = ((($5)) + 20|0);
 HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
 return ($5|0);
}
function __ht_destroy_module_func_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),11711,(11942|0));
  // unreachable;
 }
 (__ls_foreach($0,128)|0);
 __ls_destroy($0);
 $3 = ($1|0)==(0|0);
 if ($3) {
  ___assert_fail((1713|0),(1578|0),11717,(11942|0));
  // unreachable;
 } else {
  _mb_free($1);
  return -1;
 }
 return (0)|0;
}
function __ls_create() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ls_create_node(0)|0);
 return ($0|0);
}
function __reset_parsing_context($0) {
 $0 = $0|0;
 var $$01213 = 0, $$01214 = 0, $$1 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $2 = (_mb_malloc(172)|0);
  _memset(($2|0),0,172)|0;
  $3 = ((($2)) + 168|0);
  HEAP8[$3>>0]=1&255;HEAP8[$3+1>>0]=1>>8;
  $$01214 = $2;
  label = 4;
 } else {
  $4 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  _memset(($0|0),0,172)|0;
  $5 = ((($0)) + 168|0);
  HEAP8[$5>>0]=1&255;HEAP8[$5+1>>0]=1>>8;
  $6 = ($4|0)==(0|0);
  if ($6) {
   $$01214 = $0;
   label = 4;
  } else {
   (__ls_foreach($4,129)|0);
   __ls_clear($4);
   $$01213 = $0;$$1 = $4;
  }
 }
 if ((label|0) == 4) {
  $7 = (__ls_create()|0);
  $$01213 = $$01214;$$1 = $7;
 }
 HEAP8[$$01213>>0]=$$1&255;HEAP8[$$01213+1>>0]=($$1>>8)&255;HEAP8[$$01213+2>>0]=($$1>>16)&255;HEAP8[$$01213+3>>0]=$$1>>24;
 __end_of_file($$01213);
 return ($$01213|0);
}
function __ht_cmp_ref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0;
 $3 = $1;
 $4 = (($2) - ($3))|0;
 $5 = ($4|0)<(0);
 $6 = ($4|0)!=(0);
 $$ = $6&1;
 $$0 = $5 ? -1 : $$;
 return ($$0|0);
}
function __ht_hash_ref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2281|0),(1578|0),2861,(11913|0));
  // unreachable;
 }
 $3 = ((($0)) + 12|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(1);
 if ($5) {
  $$0 = 0;
 } else {
  $6 = $1;
  $7 = (($6>>>0) % ($4>>>0))&-1;
  $$0 = $7;
 }
 return ($$0|0);
}
function __do_nothing_on_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __create_running_context($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = (_mb_malloc(36)|0);
 dest=$1; stop=dest+36|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $2 = ((($1)) + 28|0);
 HEAP8[$2>>0]=-1&255;HEAP8[$2+1>>0]=(-1>>8)&255;HEAP8[$2+2>>0]=(-1>>16)&255;HEAP8[$2+3>>0]=-1>>24;
 $3 = ($0<<24>>24)==(0);
 if (!($3)) {
  $4 = (__ht_create(119,120,0)|0);
  $5 = ((($1)) + 8|0);
  HEAP8[$5>>0]=$4&255;HEAP8[$5+1>>0]=($4>>8)&255;HEAP8[$5+2>>0]=($4>>16)&255;HEAP8[$5+3>>0]=$4>>24;
 }
 return ($1|0);
}
function __open_core_lib($0) {
 $0 = $0|0;
 var $$01 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11921,(10968|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 while(1) {
  $2 = (10983 + ($$01<<3)|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = (((10983 + ($$01<<3)|0)) + 4|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  (__register_func($0,$3,$5,1)|0);
  $6 = (($$01) + 1)|0;
  $exitcond = ($6|0)==(54);
  if ($exitcond) {
   break;
  } else {
   $$01 = $6;
  }
 }
 return;
}
function __open_std_lib($0) {
 $0 = $0|0;
 var $$01 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11947,(9624|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 while(1) {
  $2 = (9638 + ($$01<<3)|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = (((9638 + ($$01<<3)|0)) + 4|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  (__register_func($0,$3,$5,1)|0);
  $6 = (($$01) + 1)|0;
  $exitcond = ($6|0)==(29);
  if ($exitcond) {
   break;
  } else {
   $$01 = $6;
  }
 }
 return;
}
function __open_coll_lib($0) {
 $0 = $0|0;
 var $$01 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11974,(1897|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 while(1) {
  $2 = (1912 + ($$01<<3)|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = (((1912 + ($$01<<3)|0)) + 4|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  (__register_func($0,$3,$5,1)|0);
  $6 = (($$01) + 1)|0;
  $exitcond = ($6|0)==(15);
  if ($exitcond) {
   break;
  } else {
   $$01 = $6;
  }
 }
 return;
}
function __open_constant($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11895,(1797|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 75|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($3)) + 8|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = HEAP32[3904]|0;
  __ht_set_or_insert($5,1602,$6);
  $7 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $8 = HEAP32[3905]|0;
  __ht_set_or_insert($7,1624,$8);
  return;
 }
}
function __ht_set_or_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01 = 0, $$pre = 0, $$pre3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((1812|0),(1578|0),3051,(1822|0));
  // unreachable;
 }
 $5 = (__ht_find($0,$1)|0);
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $7 = ((($0)) + 8|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = (FUNCTION_TABLE_iii[$8 & 255]($0,$1)|0);
   $10 = ((($0)) + 20|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = ($11|0)==(0|0);
   if ($12) {
    $13 = ((($0)) + 12|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = $14 << 2;
    $16 = (_mb_malloc($15)|0);
    HEAP8[$10>>0]=$16&255;HEAP8[$10+1>>0]=($16>>8)&255;HEAP8[$10+2>>0]=($16>>16)&255;HEAP8[$10+3>>0]=$16>>24;
    $17 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $18 = ($17|0)==(0);
    if ($18) {
     $24 = $16;
    } else {
     $$01 = 0;$20 = $16;
     while(1) {
      $19 = (($20) + ($$01<<2)|0);
      HEAP32[$19>>2] = 0;
      $21 = (($$01) + 1)|0;
      $22 = ($21>>>0)<($17>>>0);
      $$pre = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
      if ($22) {
       $$01 = $21;$20 = $$pre;
      } else {
       $24 = $$pre;
       break;
      }
     }
    }
   } else {
    $24 = $11;
   }
   $23 = (($24) + ($9<<2)|0);
   $25 = HEAP32[$23>>2]|0;
   $26 = ($25|0)==(0|0);
   if ($26) {
    $27 = (__ls_create()|0);
    $28 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $29 = (($28) + ($9<<2)|0);
    HEAP32[$29>>2] = $27;
    $$pre3 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $31 = $$pre3;
   } else {
    $31 = $24;
   }
   $30 = (($31) + ($9<<2)|0);
   $32 = HEAP32[$30>>2]|0;
   $33 = (__ls_pushback($32,$2)|0);
   $34 = ($33|0)==(0|0);
   if ($34) {
    ___assert_fail((1840|0),(1578|0),3068,(1822|0));
    // unreachable;
   } else {
    $35 = ((($33)) + 12|0);
    HEAP8[$35>>0]=$1&255;HEAP8[$35+1>>0]=($1>>8)&255;HEAP8[$35+2>>0]=($1>>16)&255;HEAP8[$35+3>>0]=$1>>24;
    $36 = ((($0)) + 16|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = (($37) + 1)|0;
    HEAP8[$36>>0]=$38&255;HEAP8[$36+1>>0]=($38>>8)&255;HEAP8[$36+2>>0]=($38>>16)&255;HEAP8[$36+3>>0]=$38>>24;
    break;
   }
  } else {
   HEAP8[$5>>0]=$2&255;HEAP8[$5+1>>0]=($2>>8)&255;HEAP8[$5+2>>0]=($2>>16)&255;HEAP8[$5+3>>0]=$2>>24;
  }
 } while(0);
 return;
}
function __ht_find($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$024 = 0, $$025 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((1812|0),(1578|0),3026,(1888|0));
  // unreachable;
 }
 $4 = ((($0)) + 8|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = (FUNCTION_TABLE_iii[$5 & 255]($0,$1)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(0|0);
 L4: do {
  if ($9) {
   $$024 = 0;
  } else {
   $10 = (($8) + ($6<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(0|0);
   if ($12) {
    $$024 = 0;
   } else {
    $13 = ((($11)) + 8|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = ((($0)) + 4|0);
    $16 = ($14|0)==(0|0);
    if ($16) {
     $$024 = 0;
    } else {
     $$025 = $14;
     while(1) {
      $17 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
      $18 = ((($$025)) + 12|0);
      $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
      $20 = (FUNCTION_TABLE_iii[$17 & 255]($19,$1)|0);
      $21 = ($20|0)==(0);
      if ($21) {
       $$024 = $$025;
       break L4;
      }
      $22 = ((($$025)) + 8|0);
      $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      $24 = ($23|0)==(0|0);
      if ($24) {
       $$024 = 0;
       break;
      } else {
       $$025 = $23;
      }
     }
    }
   }
  }
 } while(0);
 return ($$024|0);
}
function __ls_pushback($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1847|0),(1578|0),2423,(1852|0));
  // unreachable;
 } else {
  $3 = (__ls_create_node($1)|0);
  $4 = (__ls_back($0)|0);
  $5 = ($4|0)==(0|0);
  $$ = $5 ? $0 : $4;
  $6 = ((($$)) + 8|0);
  HEAP8[$6>>0]=$3&255;HEAP8[$6+1>>0]=($3>>8)&255;HEAP8[$6+2>>0]=($3>>16)&255;HEAP8[$6+3>>0]=$3>>24;
  $7 = ((($3)) + 4|0);
  HEAP8[$7>>0]=$$&255;HEAP8[$7+1>>0]=($$>>8)&255;HEAP8[$7+2>>0]=($$>>16)&255;HEAP8[$7+3>>0]=$$>>24;
  $8 = ((($0)) + 4|0);
  HEAP8[$8>>0]=$3&255;HEAP8[$8+1>>0]=($3>>8)&255;HEAP8[$8+2>>0]=($3>>16)&255;HEAP8[$8+3>>0]=$3>>24;
  $9 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  $10 = ((($9)) + 1|0);
  HEAP8[$0>>0]=$10&255;HEAP8[$0+1>>0]=($10>>8)&255;HEAP8[$0+2>>0]=($10>>16)&255;HEAP8[$0+3>>0]=$10>>24;
  return ($3|0);
 }
 return (0)|0;
}
function __ls_create_node($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = (_mb_malloc(16)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  ___assert_fail((1865|0),(1578|0),2375,(1872|0));
  // unreachable;
 } else {
  $3 = ((($1)) + 4|0);
  dest=$3; stop=dest+12|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP8[$1>>0]=$0&255;HEAP8[$1+1>>0]=($0>>8)&255;HEAP8[$1+2>>0]=($0>>16)&255;HEAP8[$1+3>>0]=$0>>24;
  return ($1|0);
 }
 return (0)|0;
}
function __ls_back($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 return ($2|0);
}
function __register_func($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$056 = 0, $$058 = 0, $$1 = 0, $$157 = 0, $$2 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 if ($4) {
  ___assert_fail((1649|0),(1578|0),11759,(2032|0));
  // unreachable;
 }
 $5 = ($1|0)==(0|0);
 do {
  if ($5) {
   $$058 = 0;
  } else {
   $6 = (_strlen($1)|0);
   $7 = (($6) + 1)|0;
   $8 = (_mb_strdup($1,$7)|0);
   (_mb_strupr($8)|0);
   $9 = ($3<<24>>24)!=(0);
   $10 = ((($0)) + 51|0);
   $11 = ((($0)) + 47|0);
   $$sink = $9 ? $11 : $10;
   $12 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
   $13 = ((($0)) + 59|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ($14|0)==(0|0);
   if ($15) {
    label = 6;
   } else {
    $16 = (__generate_func_name($0,$8,1)|0);
    $17 = ($16|0)==(0|0);
    if ($17) {
     label = 6;
    } else {
     $$1 = $16;
    }
   }
   if ((label|0) == 6) {
    $18 = (_strlen($8)|0);
    $19 = (($18) + 1)|0;
    $20 = (_mb_strdup($8,$19)|0);
    $$1 = $20;
   }
   $21 = (__ht_find($12,$$1)|0);
   $22 = ($21|0)==(0|0);
   do {
    if ($22) {
     __ht_set_or_insert($12,$$1,$2);
     $$056 = 1;
    } else {
     (__set_current_error($0,1,0)|0);
     $23 = ($$1|0)==(0|0);
     if ($23) {
      ___assert_fail((1713|0),(1578|0),11779,(2032|0));
      // unreachable;
     } else {
      _mb_free($$1);
      $$056 = 0;
      break;
     }
    }
   } while(0);
   $24 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $25 = ($24|0)==(0|0);
   do {
    if ($25) {
     $$2 = $$056;
    } else {
     $26 = ((($0)) + 55|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = (__ht_find($27,$8)|0);
     $29 = ($28|0)==(0|0);
     if ($29) {
      $30 = (__generate_func_name($0,$8,0)|0);
      $31 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
      $32 = (__ls_create()|0);
      __ht_set_or_insert($31,$30,$32);
      $33 = (($$056) + 1)|0;
      $$157 = $33;
     } else {
      $$157 = $$056;
     }
     $34 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $35 = (__ht_find($34,$8)|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = (__ls_find($36,$0,130,0)|0);
     $38 = ($37|0)==(0|0);
     if ($38) {
      $39 = (__create_module_func($0,$2)|0);
      (__ls_pushback($36,$39)|0);
      $$2 = $$157;
      break;
     } else {
      (__set_current_error($0,1,0)|0);
      $$2 = $$157;
      break;
     }
    }
   } while(0);
   $40 = ($8|0)==(0|0);
   if ($40) {
    ___assert_fail((1713|0),(1578|0),11800,(2032|0));
    // unreachable;
   } else {
    _mb_free($8);
    $$058 = $$2;
    break;
   }
  }
 } while(0);
 return ($$058|0);
}
function _mb_strupr($0) {
 $0 = $0|0;
 var $$ = 0, $$010 = 0, $$off = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $$010 = $0;$4 = $1;
  while(1) {
   $3 = $4 << 24 >> 24;
   $$off = (($4) + -97)<<24>>24;
   $5 = ($$off&255)<(26);
   $6 = (($3) + 224)|0;
   $$ = $5 ? $6 : $3;
   $7 = $$&255;
   HEAP8[$$010>>0] = $7;
   $8 = ((($$010)) + 1|0);
   $9 = HEAP8[$8>>0]|0;
   $10 = ($9<<24>>24)==(0);
   if ($10) {
    break;
   } else {
    $$010 = $8;$4 = $9;
   }
  }
 }
 return ($0|0);
}
function __generate_func_name($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2096|0),(1578|0),11728,(2103|0));
  // unreachable;
 }
 $5 = (_strlen($1)|0);
 $6 = ($2<<24>>24)==(0);
 if ($6) {
  label = 6;
 } else {
  $7 = ((($0)) + 59|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)==(0|0);
  if ($9) {
   label = 6;
  } else {
   $10 = (_strlen($8)|0);
   $11 = (($5) + 2)|0;
   $12 = (($11) + ($10))|0;
   $13 = (_mb_malloc($12)|0);
   $14 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   _memcpy(($13|0),($14|0),($10|0))|0;
   $15 = (($13) + ($10)|0);
   HEAP8[$15>>0] = 46;
   $16 = ((($15)) + 1|0);
   $17 = (($5) + 1)|0;
   _memcpy(($16|0),($1|0),($17|0))|0;
   $$0 = $13;
  }
 }
 if ((label|0) == 6) {
  $18 = (($5) + 1)|0;
  $19 = (_mb_malloc($18)|0);
  _memcpy(($19|0),($1|0),($18|0))|0;
  $$0 = $19;
 }
 (_mb_strupr($$0)|0);
 return ($$0|0);
}
function __ls_cmp_module_func($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $3 = ((($1)) + 59|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = (_strcmp($2,$4)|0);
 return ($5|0);
}
function __ls_find($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$02324 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 $6 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $6;
 if (!($or$cond5)) {
  ___assert_fail((2067|0),(1578|0),2393,(2087|0));
  // unreachable;
 }
 $7 = ($3|0)!=(0|0);
 if ($7) {
  HEAP32[$3>>2] = 0;
 }
 $8 = ((($0)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(0|0);
 L7: do {
  if ($10) {
   $$0 = 0;
  } else {
   $$02324 = $9;
   while(1) {
    $11 = HEAPU8[$$02324>>0]|(HEAPU8[$$02324+1>>0]<<8)|(HEAPU8[$$02324+2>>0]<<16)|(HEAPU8[$$02324+3>>0]<<24);
    $12 = (FUNCTION_TABLE_iii[$2 & 255]($11,$1)|0);
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = $$02324;
     break L7;
    }
    $14 = ((($$02324)) + 8|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    if ($7) {
     $16 = HEAP32[$3>>2]|0;
     $17 = (($16) + 1)|0;
     HEAP32[$3>>2] = $17;
    }
    $18 = ($15|0)==(0|0);
    if ($18) {
     $$0 = 0;
     break;
    } else {
     $$02324 = $15;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __create_module_func($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),11678,(2047|0));
  // unreachable;
 }
 $3 = ((($0)) + 59|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 0;
 } else {
  $6 = (_mb_malloc(8)|0);
  $7 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $8 = (_mb_strdup($7,0)|0);
  HEAP8[$6>>0]=$8&255;HEAP8[$6+1>>0]=($8>>8)&255;HEAP8[$6+2>>0]=($8>>16)&255;HEAP8[$6+3>>0]=$8>>24;
  $9 = ((($6)) + 4|0);
  HEAP8[$9>>0]=$1&255;HEAP8[$9+1>>0]=($1>>8)&255;HEAP8[$9+2>>0]=($1>>16)&255;HEAP8[$9+3>>0]=$1>>24;
  $$0 = $6;
 }
 return ($$0|0);
}
function __coll_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$109 = 0, $$6$ph = 0, $$7 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18409,(9613|0));
  // unreachable;
 }
 $7 = (_mb_attempt_open_bracket($0,$1)|0);
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   $9 = (__create_list($0)|0);
   $10 = (_mb_has_arg($0,$1)|0);
   $11 = ($10|0)==(0);
   L6: do {
    if ($11) {
     label = 31;
    } else {
     HEAP32[$3>>2] = 0;
     $12 = ((($2)) + 4|0);
     HEAP32[$12>>2] = 0;
     HEAP32[$2>>2] = 0;
     $13 = (_mb_pop_value($0,$1,$2)|0);
     $14 = ($13|0)==(0);
     L8: do {
      if ($14) {
       $15 = HEAP32[$1>>2]|0;
       HEAP32[$3>>2] = $15;
       $16 = ($15|0)==(0|0);
       do {
        if ($16) {
         label = 13;
        } else {
         $17 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
         $18 = HEAP32[$2>>2]|0;
         $19 = ($18|0)==(2);
         $20 = ($17|0)!=(0|0);
         $or$cond4 = $20 & $19;
         if ($or$cond4) {
          $21 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
          $22 = ($21|0)==(8);
          if ($22) {
           $23 = ((($17)) + 4|0);
           $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
           $25 = ((($24)) + 4|0);
           $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
           $27 = ($26|0)==(74|0);
           if ($27) {
            $28 = HEAP32[$12>>2]|0;
            HEAP32[$4>>2] = 0;
            $29 = ((($15)) + 8|0);
            $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
            HEAP32[$3>>2] = $30;
            $31 = (_mb_pop_int($0,$3,$4)|0);
            $32 = ($31|0)==(0);
            if ($32) {
             $33 = HEAP32[$4>>2]|0;
             $34 = (($33) - ($28))|0;
             $35 = ($34|0)==(0);
             $36 = ($34|0)>(0);
             $37 = $36 ? 1 : -1;
             $38 = $35 ? 0 : $37;
             $39 = (_mb_malloc(4)|0);
             $40 = ((($9)) + 35|0);
             HEAP8[$40>>0]=$39&255;HEAP8[$40+1>>0]=($39>>8)&255;HEAP8[$40+2>>0]=($39>>16)&255;HEAP8[$40+3>>0]=$39>>24;
             HEAP32[$39>>2] = $28;
             $41 = HEAP32[$4>>2]|0;
             $42 = (($41) - ($28))|0;
             $43 = (($42) + ($38))|0;
             $44 = ((($9)) + 31|0);
             $45 = ($43|0)==(0);
             $$109 = $45 ? 1 : $43;
             HEAP8[$44>>0]=$$109&255;HEAP8[$44+1>>0]=($$109>>8)&255;HEAP8[$44+2>>0]=($$109>>16)&255;HEAP8[$44+3>>0]=$$109>>24;
             $46 = HEAP32[$3>>2]|0;
             HEAP32[$1>>2] = $46;
             break;
            } else {
             $$6$ph = $31;
             break L8;
            }
           } else {
            label = 13;
           }
          } else {
           label = 13;
          }
         } else {
          label = 13;
         }
        }
       } while(0);
       L18: do {
        if ((label|0) == 13) {
         $47 = (__push_list($9,$2,0)|0);
         $48 = ($47<<24>>24)==(0);
         if ($48) {
          $49 = HEAP32[$1>>2]|0;
          $50 = ($49|0)==(0|0);
          if (!($50)) {
           $51 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
           $52 = ($51|0)==(0|0);
           if (!($52)) {
            $53 = ((($0)) + 67|0);
            $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
            $55 = (__set_current_error($0,46,$54)|0);
            $56 = ($55<<24>>24)==(0);
            if ($56) {
             $$6$ph = 0;
             break L8;
            }
            $57 = HEAP32[$1>>2]|0;
            $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
            $59 = ((($58)) + 9|0);
            $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
            $61 = ((($58)) + 13|0);
            $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
            $63 = ((($58)) + 15|0);
            $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
            __set_error_pos($0,$60,$62,$64);
            $$6$ph = 3;
            break L8;
           }
          }
          $65 = ((($0)) + 67|0);
          $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
          $67 = (__set_current_error($0,46,$66)|0);
          $68 = ($67<<24>>24)==(0);
          if ($68) {
           $$6$ph = 0;
           break L8;
          }
          __set_error_pos($0,0,0,0);
          $$6$ph = 3;
          break L8;
         }
         while(1) {
          $69 = (_mb_has_arg($0,$1)|0);
          $70 = ($69|0)==(0);
          if ($70) {
           break L18;
          }
          HEAP32[$12>>2] = 0;
          HEAP32[$2>>2] = 0;
          $71 = (_mb_pop_value($0,$1,$2)|0);
          $72 = ($71|0)==(0);
          if (!($72)) {
           $$6$ph = $71;
           break L8;
          }
          $73 = (__push_list($9,$2,0)|0);
          $74 = ($73<<24>>24)==(0);
          if ($74) {
           break;
          }
         }
         $75 = HEAP32[$1>>2]|0;
         $76 = ($75|0)==(0|0);
         if (!($76)) {
          $77 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
          $78 = ($77|0)==(0|0);
          if (!($78)) {
           $79 = ((($0)) + 67|0);
           $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
           $81 = (__set_current_error($0,46,$80)|0);
           $82 = ($81<<24>>24)==(0);
           if ($82) {
            $$6$ph = 0;
            break L8;
           }
           $83 = HEAP32[$1>>2]|0;
           $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
           $85 = ((($84)) + 9|0);
           $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
           $87 = ((($84)) + 13|0);
           $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8);
           $89 = ((($84)) + 15|0);
           $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8);
           __set_error_pos($0,$86,$88,$90);
           $$6$ph = 3;
           break L8;
          }
         }
         $91 = ((($0)) + 67|0);
         $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
         $93 = (__set_current_error($0,46,$92)|0);
         $94 = ($93<<24>>24)==(0);
         if ($94) {
          $$6$ph = 0;
          break L8;
         }
         __set_error_pos($0,0,0,0);
         $$6$ph = 3;
         break L8;
        }
       } while(0);
       label = 31;
       break L6;
      } else {
       $$6$ph = $13;
      }
     } while(0);
     $$7 = $$6$ph;$$pre$phiZ2D = $2;
    }
   } while(0);
   if ((label|0) == 31) {
    $95 = (_mb_attempt_close_bracket($0,$1)|0);
    $96 = ($95|0)==(0);
    if ($96) {
     HEAP32[$2>>2] = 256;
     $97 = ((($2)) + 4|0);
     HEAP32[$97>>2] = $9;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
     $98 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $99 = ($98|0)==(0);
     if ($99) {
      $$1 = 0;
      break;
     } else {
      $$7 = $98;$$pre$phiZ2D = $2;
     }
    } else {
     $$7 = $95;$$pre$phiZ2D = $2;
    }
   }
   $100 = ((($2)) + 4|0);
   HEAP32[$100>>2] = 0;
   HEAP32[$$pre$phiZ2D>>2] = 0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
   (_mb_push_value($0,$1,$$byval_copy1)|0);
   __destroy_list($9);
   $$1 = $$7;
  } else {
   $$1 = $7;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __coll_dict($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$055 = 0, $$1 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18473,(9602|0));
  // unreachable;
 }
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (__create_dict($0)|0);
   $9 = ((($2)) + 4|0);
   $10 = ((($3)) + 4|0);
   while(1) {
    $11 = (_mb_has_arg($0,$1)|0);
    $12 = ($11|0)==(0);
    if ($12) {
     label = 15;
     break;
    }
    HEAP32[$9>>2] = 0;
    HEAP32[$2>>2] = 0;
    HEAP32[$10>>2] = 0;
    HEAP32[$3>>2] = 0;
    $13 = (_mb_pop_value($0,$1,$2)|0);
    $14 = ($13|0)==(0);
    if (!($14)) {
     $$055 = $13;
     break;
    }
    $15 = (_mb_pop_value($0,$1,$3)|0);
    $16 = ($15|0)==(0);
    if (!($16)) {
     $$055 = $15;
     break;
    }
    $17 = (__set_dict($8,$2,$3,0,0)|0);
    $18 = ($17<<24>>24)==(0);
    if ($18) {
     label = 9;
     break;
    }
   }
   do {
    if ((label|0) == 9) {
     $19 = HEAP32[$1>>2]|0;
     $20 = ($19|0)==(0|0);
     if (!($20)) {
      $21 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
      $22 = ($21|0)==(0|0);
      if (!($22)) {
       $23 = ((($0)) + 67|0);
       $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $25 = (__set_current_error($0,46,$24)|0);
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $$055 = 0;
        break;
       }
       $27 = HEAP32[$1>>2]|0;
       $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
       $29 = ((($28)) + 9|0);
       $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
       $31 = ((($28)) + 13|0);
       $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
       $33 = ((($28)) + 15|0);
       $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
       __set_error_pos($0,$30,$32,$34);
       $$055 = 3;
       break;
      }
     }
     $35 = ((($0)) + 67|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = (__set_current_error($0,46,$36)|0);
     $38 = ($37<<24>>24)==(0);
     if ($38) {
      $$055 = 0;
     } else {
      __set_error_pos($0,0,0,0);
      $$055 = 3;
     }
    }
    else if ((label|0) == 15) {
     $39 = (_mb_attempt_close_bracket($0,$1)|0);
     $40 = ($39|0)==(0);
     if ($40) {
      HEAP32[$2>>2] = 1024;
      $41 = ((($2)) + 4|0);
      HEAP32[$41>>2] = $8;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
      $42 = (_mb_push_value($0,$1,$$byval_copy)|0);
      $43 = ($42|0)==(0);
      if ($43) {
       $$1 = 0;
       break L4;
      } else {
       $$055 = $42;
      }
     } else {
      $$055 = $39;
     }
    }
   } while(0);
   HEAP32[$9>>2] = 0;
   HEAP32[$2>>2] = 0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
   (_mb_push_value($0,$1,$$byval_copy1)|0);
   __destroy_dict($8);
   $$1 = $$055;
  } else {
   $$1 = $6;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __coll_push($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 24|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18513,(9591|0));
  // unreachable;
 }
 $7 = ((($2)) + 4|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$2>>2] = 0;
 $8 = ((($3)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$3>>2] = 0;
 $9 = (_mb_attempt_open_bracket($0,$1)|0);
 $10 = ($9|0)==(0);
 L4: do {
  if ($10) {
   $11 = (_mb_pop_value($0,$1,$2)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = (__try_overridden($0,$1,$2,2133,64)|0);
    $14 = $13 & 1;
    $15 = ($14|0)==(0);
    L7: do {
     if ($15) {
      $16 = HEAP32[$2>>2]|0;
      $17 = ($16|0)==(256);
      if (!($17)) {
       $18 = HEAP32[$1>>2]|0;
       $19 = ($18|0)==(0|0);
       if (!($19)) {
        $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
        $21 = ($20|0)==(0|0);
        if (!($21)) {
         $22 = ((($0)) + 67|0);
         $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
         $24 = (__set_current_error($0,60,$23)|0);
         $25 = ($24<<24>>24)==(0);
         if ($25) {
          $$0 = 0;
          break L4;
         }
         $26 = HEAP32[$1>>2]|0;
         $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
         $28 = ((($27)) + 9|0);
         $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
         $30 = ((($27)) + 13|0);
         $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
         $32 = ((($27)) + 15|0);
         $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
         __set_error_pos($0,$29,$31,$33);
         $$0 = 3;
         break L4;
        }
       }
       $34 = ((($0)) + 67|0);
       $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
       $36 = (__set_current_error($0,60,$35)|0);
       $37 = ($36<<24>>24)==(0);
       if ($37) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
      }
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      (__public_value_to_internal_object($2,$4)|0);
      $38 = ((($4)) + 4|0);
      while(1) {
       $39 = (_mb_has_arg($0,$1)|0);
       $40 = ($39|0)==(0);
       if ($40) {
        break L7;
       }
       HEAP32[$8>>2] = 0;
       HEAP32[$3>>2] = 0;
       $41 = (_mb_pop_value($0,$1,$3)|0);
       $42 = ($41|0)==(0);
       if (!($42)) {
        $$0 = $41;
        break L4;
       }
       $43 = HEAP32[$38>>2]|0;
       $44 = (__push_list($43,$3,0)|0);
       $45 = ($44<<24>>24)==(0);
       if ($45) {
        break;
       }
      }
      $46 = HEAP32[$1>>2]|0;
      $47 = ($46|0)==(0|0);
      if (!($47)) {
       $48 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       $49 = ($48|0)==(0|0);
       if (!($49)) {
        $50 = ((($0)) + 67|0);
        $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
        $52 = (__set_current_error($0,46,$51)|0);
        $53 = ($52<<24>>24)==(0);
        if ($53) {
         $$0 = 0;
         break L4;
        }
        $54 = HEAP32[$1>>2]|0;
        $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
        $56 = ((($55)) + 9|0);
        $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
        $58 = ((($55)) + 13|0);
        $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
        $60 = ((($55)) + 15|0);
        $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8);
        __set_error_pos($0,$57,$59,$61);
        $$0 = 3;
        break L4;
       }
      }
      $62 = ((($0)) + 67|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $64 = (__set_current_error($0,46,$63)|0);
      $65 = ($64<<24>>24)==(0);
      if ($65) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
    } while(0);
    $66 = (_mb_attempt_close_bracket($0,$1)|0);
    $67 = $13 & 2;
    $68 = $66 | $67;
    $69 = ($68|0)==(0);
    if ($69) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
     $70 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $70;
    } else {
     $$0 = $66;
    }
   } else {
    $$0 = $11;
   }
  } else {
   $$0 = $9;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_pop($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0100 = 0, $$7 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy1 = sp + 64|0;
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 20|0;
 $5 = sp;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18559,(9554|0));
  // unreachable;
 }
 $8 = ((($2)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$2>>2] = 0;
 $9 = ((($3)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$3>>2] = 0;
 $10 = (_mb_attempt_open_bracket($0,$1)|0);
 $11 = ($10|0)==(0);
 L4: do {
  if ($11) {
   $12 = (_mb_pop_value($0,$1,$2)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = (__try_overridden($0,$1,$2,2138,64)|0);
    $15 = $14 & 1;
    $16 = ($15|0)==(0);
    do {
     if ($16) {
      $17 = HEAP32[$2>>2]|0;
      $18 = ($17|0)==(256);
      if (!($18)) {
       __assign_public_value($0,$2,0,1);
       $19 = HEAP32[$1>>2]|0;
       $20 = ($19|0)==(0|0);
       if (!($20)) {
        $21 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
        $22 = ($21|0)==(0|0);
        if (!($22)) {
         $23 = ((($0)) + 67|0);
         $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
         $25 = (__set_current_error($0,60,$24)|0);
         $26 = ($25<<24>>24)==(0);
         if ($26) {
          $$0100 = 0;
          break;
         }
         $27 = HEAP32[$1>>2]|0;
         $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
         $29 = ((($28)) + 9|0);
         $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
         $31 = ((($28)) + 13|0);
         $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
         $33 = ((($28)) + 15|0);
         $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
         __set_error_pos($0,$30,$32,$34);
         $$0100 = 3;
         break;
        }
       }
       $35 = ((($0)) + 67|0);
       $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
       $37 = (__set_current_error($0,60,$36)|0);
       $38 = ($37<<24>>24)==(0);
       if ($38) {
        $$0100 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$0100 = 3;
       break;
      }
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      (__public_value_to_internal_object($2,$4)|0);
      $39 = ((($4)) + 4|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = (__pop_list($40,$3,$0)|0);
      $42 = ($41<<24>>24)==(0);
      ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
      $43 = (_mb_push_value($0,$1,$$byval_copy)|0);
      $44 = ($43|0)==(0);
      if ($42) {
       if (!($44)) {
        $$7 = $43;
        break L4;
       }
       __assign_public_value($0,$2,0,1);
       $78 = HEAP32[$1>>2]|0;
       $79 = ($78|0)==(0|0);
       if (!($79)) {
        $80 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
        $81 = ($80|0)==(0|0);
        if (!($81)) {
         $82 = ((($0)) + 67|0);
         $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
         $84 = (__set_current_error($0,59,$83)|0);
         $85 = ($84<<24>>24)==(0);
         if ($85) {
          $$0100 = 0;
          break;
         }
         $86 = HEAP32[$1>>2]|0;
         $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
         $88 = ((($87)) + 9|0);
         $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
         $90 = ((($87)) + 13|0);
         $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8);
         $92 = ((($87)) + 15|0);
         $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8);
         __set_error_pos($0,$89,$91,$93);
         $$0100 = 0;
         break;
        }
       }
       $94 = ((($0)) + 67|0);
       $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
       $96 = (__set_current_error($0,59,$95)|0);
       $97 = ($96<<24>>24)==(0);
       if ($97) {
        $$0100 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$0100 = 0;
       break;
      }
      if (!($44)) {
       $$7 = $43;
       break L4;
      }
      ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
      (__public_value_to_internal_object($3,$5)|0);
      $45 = HEAP32[$5>>2]|0;
      L29: do {
       switch ($45|0) {
       case 7:  {
        $46 = ((($5)) + 4|0);
        $47 = HEAP32[$46>>2]|0;
        __unref($47,$47);
        break;
       }
       case 10:  {
        $48 = ((($5)) + 8|0);
        $49 = HEAP8[$48>>0]|0;
        $50 = $49 & 1;
        $51 = ($50<<24>>24)==(0);
        if ($51) {
         $52 = ((($5)) + 4|0);
         $53 = HEAP32[$52>>2]|0;
         __unref($53,$53);
        }
        break;
       }
       case 11:  {
        $54 = ((($5)) + 4|0);
        $55 = HEAP32[$54>>2]|0;
        __unref($55,$55);
        break;
       }
       case 13:  {
        $56 = ((($5)) + 4|0);
        $57 = HEAP32[$56>>2]|0;
        __unref($57,$57);
        break;
       }
       case 16:  {
        $58 = ((($5)) + 8|0);
        $59 = HEAP8[$58>>0]|0;
        $60 = $59 & 1;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         $62 = ((($5)) + 4|0);
         $63 = HEAP32[$62>>2]|0;
         __unref($63,$63);
        }
        break;
       }
       case 17:  {
        $64 = ((($5)) + 8|0);
        $65 = HEAP8[$64>>0]|0;
        $66 = $65 & 1;
        $67 = ($66<<24>>24)==(0);
        if ($67) {
         $68 = ((($5)) + 4|0);
         $69 = HEAP32[$68>>2]|0;
         $70 = ((($69)) + 58|0);
         $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
         $72 = ($71|0)==(2);
         if ($72) {
          __unref($69,$69);
          break L29;
         }
         $73 = ((($5)) + 4|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = ((($74)) + 58|0);
         $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
         $77 = ($76|0)==(2);
         if (!($77)) {
          __destroy_routine(0,$74);
         }
        }
        break;
       }
       default: {
       }
       }
      } while(0);
      __assign_public_value($0,$2,0,1);
      label = 38;
     } else {
      $98 = $14 & 2;
      $99 = ($98|0)==(0);
      if ($99) {
       ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
       $100 = (_mb_push_value($0,$1,$$byval_copy1)|0);
       $101 = ($100|0)==(0);
       if ($101) {
        label = 38;
       } else {
        $$7 = $100;
        break L4;
       }
      } else {
       label = 38;
      }
     }
    } while(0);
    if ((label|0) == 38) {
     $102 = (_mb_attempt_close_bracket($0,$1)|0);
     $103 = ($102|0)==(0);
     if ($103) {
      $$0100 = 0;
     } else {
      $$7 = $102;
      break;
     }
    }
    $$7 = $$0100;
   } else {
    $$7 = $12;
   }
  } else {
   $$7 = $10;
  }
 } while(0);
 STACKTOP = sp;return ($$7|0);
}
function __coll_back($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0107 = 0, $$7 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 48|0;
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 24|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18612,(9543|0));
  // unreachable;
 }
 $7 = ((($2)) + 4|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$2>>2] = 0;
 $8 = ((($3)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$3>>2] = 0;
 $9 = (_mb_attempt_open_bracket($0,$1)|0);
 $10 = ($9|0)==(0);
 L4: do {
  if ($10) {
   $11 = (_mb_pop_value($0,$1,$2)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = (__try_overridden($0,$1,$2,2142,64)|0);
    $14 = $13 & 1;
    $15 = ($14|0)==(0);
    do {
     if ($15) {
      $16 = HEAP32[$2>>2]|0;
      $17 = ($16|0)==(256);
      if (!($17)) {
       __assign_public_value($0,$2,0,1);
       $18 = HEAP32[$1>>2]|0;
       $19 = ($18|0)==(0|0);
       if (!($19)) {
        $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
        $21 = ($20|0)==(0|0);
        if (!($21)) {
         $22 = ((($0)) + 67|0);
         $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
         $24 = (__set_current_error($0,60,$23)|0);
         $25 = ($24<<24>>24)==(0);
         if ($25) {
          $$0107 = 0;
          break;
         }
         $26 = HEAP32[$1>>2]|0;
         $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
         $28 = ((($27)) + 9|0);
         $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
         $30 = ((($27)) + 13|0);
         $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
         $32 = ((($27)) + 15|0);
         $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
         __set_error_pos($0,$29,$31,$33);
         $$0107 = 3;
         break;
        }
       }
       $34 = ((($0)) + 67|0);
       $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
       $36 = (__set_current_error($0,60,$35)|0);
       $37 = ($36<<24>>24)==(0);
       if ($37) {
        $$0107 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$0107 = 3;
       break;
      }
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      (__public_value_to_internal_object($2,$4)|0);
      $38 = ((($4)) + 4|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($39)) + 19|0);
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = (__ls_back($41)|0);
      $43 = ($42|0)==(0|0);
      if (!($43)) {
       $44 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
       $45 = ($44|0)==(0|0);
       if (!($45)) {
        (__internal_object_to_public_value($44,$3)|0);
        ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
        $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
        $47 = ($46|0)==(0);
        if (!($47)) {
         $$7 = $46;
         break L4;
        }
        __assign_public_value($0,$2,0,1);
        label = 26;
        break;
       }
      }
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
      $48 = (_mb_push_value($0,$1,$$byval_copy1)|0);
      $49 = ($48|0)==(0);
      if (!($49)) {
       $$7 = $48;
       break L4;
      }
      __assign_public_value($0,$2,0,1);
      $50 = HEAP32[$1>>2]|0;
      $51 = ($50|0)==(0|0);
      if (!($51)) {
       $52 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
       $53 = ($52|0)==(0|0);
       if (!($53)) {
        $54 = ((($0)) + 67|0);
        $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
        $56 = (__set_current_error($0,59,$55)|0);
        $57 = ($56<<24>>24)==(0);
        if ($57) {
         $$0107 = 0;
         break;
        }
        $58 = HEAP32[$1>>2]|0;
        $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
        $60 = ((($59)) + 9|0);
        $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
        $62 = ((($59)) + 13|0);
        $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
        $64 = ((($59)) + 15|0);
        $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8);
        __set_error_pos($0,$61,$63,$65);
        $$0107 = 0;
        break;
       }
      }
      $66 = ((($0)) + 67|0);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = (__set_current_error($0,59,$67)|0);
      $69 = ($68<<24>>24)==(0);
      if ($69) {
       $$0107 = 0;
      } else {
       __set_error_pos($0,0,0,0);
       $$0107 = 0;
      }
     } else {
      $70 = $13 & 2;
      $71 = ($70|0)==(0);
      if ($71) {
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$3+4>>2]|0;
       $72 = (_mb_push_value($0,$1,$$byval_copy2)|0);
       $73 = ($72|0)==(0);
       if ($73) {
        label = 26;
       } else {
        $$7 = $72;
        break L4;
       }
      } else {
       label = 26;
      }
     }
    } while(0);
    if ((label|0) == 26) {
     $74 = (_mb_attempt_close_bracket($0,$1)|0);
     $75 = ($74|0)==(0);
     if ($75) {
      $$0107 = 0;
     } else {
      $$7 = $74;
      break;
     }
    }
    $$7 = $$0107;
   } else {
    $$7 = $11;
   }
  } else {
   $$7 = $9;
  }
 } while(0);
 STACKTOP = sp;return ($$7|0);
}
function __coll_insert($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 4|0;
 $6 = sp;
 HEAP32[$3>>2] = 0;
 HEAP32[$6>>2] = 0;
 $7 = ($0|0)!=(0|0);
 $8 = ($1|0)!=(0|0);
 $or$cond = $7 & $8;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18666,(9503|0));
  // unreachable;
 }
 $9 = ((($2)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$2>>2] = 0;
 $10 = ((($4)) + 4|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$4>>2] = 0;
 $11 = (_mb_attempt_open_bracket($0,$1)|0);
 $12 = ($11|0)==(0);
 L4: do {
  if ($12) {
   $13 = (_mb_pop_value($0,$1,$2)|0);
   $14 = ($13|0)==(0);
   if ($14) {
    $15 = (__try_overridden($0,$1,$2,2147,64)|0);
    $16 = $15 & 1;
    $17 = ($16|0)==(0);
    do {
     if ($17) {
      $18 = (_mb_pop_int($0,$1,$3)|0);
      $19 = ($18|0)==(0);
      if (!($19)) {
       $$0 = $18;
       break L4;
      }
      $20 = (_mb_pop_value($0,$1,$4)|0);
      $21 = ($20|0)==(0);
      if (!($21)) {
       $$0 = $20;
       break L4;
      }
      $22 = HEAP32[$2>>2]|0;
      $23 = ($22|0)==(256);
      if (!($23)) {
       $24 = HEAP32[$1>>2]|0;
       $25 = ($24|0)==(0|0);
       if (!($25)) {
        $26 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $27 = ($26|0)==(0|0);
        if (!($27)) {
         $28 = ((($0)) + 67|0);
         $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
         $30 = (__set_current_error($0,60,$29)|0);
         $31 = ($30<<24>>24)==(0);
         if ($31) {
          $$0 = 0;
          break L4;
         }
         $32 = HEAP32[$1>>2]|0;
         $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $34 = ((($33)) + 9|0);
         $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
         $36 = ((($33)) + 13|0);
         $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
         $38 = ((($33)) + 15|0);
         $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
         __set_error_pos($0,$35,$37,$39);
         $$0 = 3;
         break L4;
        }
       }
       $40 = ((($0)) + 67|0);
       $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
       $42 = (__set_current_error($0,60,$41)|0);
       $43 = ($42<<24>>24)==(0);
       if ($43) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
      }
      ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
      (__public_value_to_internal_object($2,$5)|0);
      $44 = ((($5)) + 4|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = HEAP32[$3>>2]|0;
      $47 = (__insert_list($45,$46,$4,$6)|0);
      $48 = ($47<<24>>24)==(0);
      if (!($48)) {
       ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
       $71 = (_mb_push_value($0,$1,$$byval_copy)|0);
       $72 = ($71|0)==(0);
       if ($72) {
        break;
       } else {
        $$0 = $71;
        break L4;
       }
      }
      $49 = HEAP32[$6>>2]|0;
      $50 = ($49|0)==(0|0);
      if (!($50)) {
       (__destroy_object($49,0)|0);
      }
      $51 = HEAP32[$1>>2]|0;
      $52 = ($51|0)==(0|0);
      if (!($52)) {
       $53 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
       $54 = ($53|0)==(0|0);
       if (!($54)) {
        $55 = ((($0)) + 67|0);
        $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
        $57 = (__set_current_error($0,46,$56)|0);
        $58 = ($57<<24>>24)==(0);
        if ($58) {
         $$0 = 0;
         break L4;
        }
        $59 = HEAP32[$1>>2]|0;
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
        $61 = ((($60)) + 9|0);
        $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
        $63 = ((($60)) + 13|0);
        $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
        $65 = ((($60)) + 15|0);
        $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8);
        __set_error_pos($0,$62,$64,$66);
        $$0 = 3;
        break L4;
       }
      }
      $67 = ((($0)) + 67|0);
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $69 = (__set_current_error($0,46,$68)|0);
      $70 = ($69<<24>>24)==(0);
      if ($70) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     } else {
      $73 = $15 & 2;
      $74 = ($73|0)==(0);
      if ($74) {
       ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
       $75 = (_mb_push_value($0,$1,$$byval_copy1)|0);
       $76 = ($75|0)==(0);
       if (!($76)) {
        $$0 = $75;
        break L4;
       }
      }
     }
    } while(0);
    $77 = (_mb_attempt_close_bracket($0,$1)|0);
    $$0 = $77;
   } else {
    $$0 = $13;
   }
  } else {
   $$0 = $11;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_sort($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18714,(9451|0));
  // unreachable;
 }
 $6 = ((($2)) + 4|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$2>>2] = 0;
 $7 = (_mb_attempt_open_bracket($0,$1)|0);
 $8 = ($7|0)==(0);
 L4: do {
  if ($8) {
   $9 = (_mb_pop_value($0,$1,$2)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (__try_overridden($0,$1,$2,2154,64)|0);
    $12 = $11 & 1;
    $13 = ($12|0)==(0);
    do {
     if ($13) {
      $14 = HEAP32[$2>>2]|0;
      $15 = ($14|0)==(256);
      if ($15) {
       ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
       (__public_value_to_internal_object($2,$3)|0);
       $36 = ((($3)) + 4|0);
       $37 = HEAP32[$36>>2]|0;
       __sort_list($37);
       break;
      }
      $16 = HEAP32[$1>>2]|0;
      $17 = ($16|0)==(0|0);
      if (!($17)) {
       $18 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
       $19 = ($18|0)==(0|0);
       if (!($19)) {
        $20 = ((($0)) + 67|0);
        $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
        $22 = (__set_current_error($0,60,$21)|0);
        $23 = ($22<<24>>24)==(0);
        if ($23) {
         $$0 = 0;
         break L4;
        }
        $24 = HEAP32[$1>>2]|0;
        $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $26 = ((($25)) + 9|0);
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($25)) + 13|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
        $30 = ((($25)) + 15|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        __set_error_pos($0,$27,$29,$31);
        $$0 = 3;
        break L4;
       }
      }
      $32 = ((($0)) + 67|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $34 = (__set_current_error($0,60,$33)|0);
      $35 = ($34<<24>>24)==(0);
      if ($35) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
    } while(0);
    $38 = (_mb_attempt_close_bracket($0,$1)|0);
    $39 = $11 & 2;
    $40 = $38 | $39;
    $41 = ($40|0)==(0);
    if ($41) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
     $42 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $42;
    } else {
     $$0 = $38;
    }
   } else {
    $$0 = $9;
   }
  } else {
   $$0 = $7;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_exists($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$sink4 = 0, $$sink4$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18753,(9438|0));
  // unreachable;
 }
 $8 = ((($2)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$2>>2] = 0;
 $9 = ((($3)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$3>>2] = 0;
 $10 = ((($5)) + 4|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$5>>2] = 0;
 $11 = (_mb_attempt_open_bracket($0,$1)|0);
 $12 = ($11|0)==(0);
 L4: do {
  if ($12) {
   $13 = (_mb_pop_value($0,$1,$2)|0);
   $14 = ($13|0)==(0);
   if ($14) {
    $15 = (__try_overridden($0,$1,$2,2159,64)|0);
    $16 = $15 & 1;
    $17 = ($16|0)==(0);
    if ($17) {
     $18 = (_mb_pop_value($0,$1,$3)|0);
     $19 = ($18|0)==(0);
     if (!($19)) {
      $$0 = $18;
      break;
     }
     ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
     $20 = HEAP32[$2>>2]|0;
     switch ($20|0) {
     case 256:  {
      (__public_value_to_internal_object($2,$4)|0);
      $21 = ((($4)) + 4|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = (__find_list($22,$3,0)|0);
      $$sink4$in = $23;
      break;
     }
     case 1024:  {
      (__public_value_to_internal_object($2,$4)|0);
      $24 = ((($4)) + 4|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = (__find_dict($25,$3,0)|0);
      $$sink4$in = $26;
      break;
     }
     default: {
      $27 = HEAP32[$1>>2]|0;
      $28 = ($27|0)==(0|0);
      if (!($28)) {
       $29 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
       $30 = ($29|0)==(0|0);
       if (!($30)) {
        $31 = ((($0)) + 67|0);
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
        $33 = (__set_current_error($0,63,$32)|0);
        $34 = ($33<<24>>24)==(0);
        if ($34) {
         $$0 = 0;
         break L4;
        }
        $35 = HEAP32[$1>>2]|0;
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
        $37 = ((($36)) + 9|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
        $39 = ((($36)) + 13|0);
        $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
        $41 = ((($36)) + 15|0);
        $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8);
        __set_error_pos($0,$38,$40,$42);
        $$0 = 3;
        break L4;
       }
      }
      $43 = ((($0)) + 67|0);
      $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
      $45 = (__set_current_error($0,63,$44)|0);
      $46 = ($45<<24>>24)==(0);
      if ($46) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
     }
     $$sink4 = ($$sink4$in<<24>>24)!=(0);
     $47 = $$sink4&1;
     HEAP32[$10>>2] = $47;
     HEAP32[$5>>2] = 2;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
     $48 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $49 = ($48|0)==(0);
     if (!($49)) {
      $$0 = $48;
      break;
     }
    } else {
     $50 = $15 & 2;
     $51 = ($50|0)==(0);
     if ($51) {
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
      $52 = (_mb_push_value($0,$1,$$byval_copy1)|0);
      $53 = ($52|0)==(0);
      if (!($53)) {
       $$0 = $52;
       break;
      }
     }
    }
    $54 = (_mb_attempt_close_bracket($0,$1)|0);
    $$0 = $54;
   } else {
    $$0 = $13;
   }
  } else {
   $$0 = $11;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_index_of($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 8|0;
 $6 = sp;
 HEAP32[$2>>2] = 0;
 $7 = ($0|0)!=(0|0);
 $8 = ($1|0)!=(0|0);
 $or$cond = $7 & $8;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18808,(9412|0));
  // unreachable;
 }
 $9 = ((($3)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$3>>2] = 0;
 $10 = ((($5)) + 4|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$5>>2] = 0;
 $11 = ((($6)) + 4|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$6>>2] = 0;
 $12 = (_mb_attempt_open_bracket($0,$1)|0);
 $13 = ($12|0)==(0);
 L4: do {
  if ($13) {
   $14 = (_mb_pop_value($0,$1,$3)|0);
   $15 = ($14|0)==(0);
   if ($15) {
    $16 = (__try_overridden($0,$1,$3,2166,64)|0);
    $17 = $16 & 1;
    $18 = ($17|0)==(0);
    do {
     if ($18) {
      HEAP32[$6>>2] = 1;
      $19 = (_mb_pop_value($0,$1,$5)|0);
      $20 = ($19|0)==(0);
      if (!($20)) {
       $$0 = $19;
       break L4;
      }
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      $21 = HEAP32[$3>>2]|0;
      $cond = ($21|0)==(256);
      if ($cond) {
       (__public_value_to_internal_object($3,$4)|0);
       $22 = ((($4)) + 4|0);
       $23 = HEAP32[$22>>2]|0;
       $24 = (__find_list($23,$5,$2)|0);
       $25 = ($24<<24>>24)==(0);
       if ($25) {
        break;
       }
       $26 = HEAP32[$2>>2]|0;
       HEAP32[$11>>2] = $26;
       HEAP32[$6>>2] = 2;
       break;
      }
      $27 = HEAP32[$1>>2]|0;
      $28 = ($27|0)==(0|0);
      if (!($28)) {
       $29 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
       $30 = ($29|0)==(0|0);
       if (!($30)) {
        $31 = ((($0)) + 67|0);
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
        $33 = (__set_current_error($0,60,$32)|0);
        $34 = ($33<<24>>24)==(0);
        if ($34) {
         $$0 = 0;
         break L4;
        }
        $35 = HEAP32[$1>>2]|0;
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
        $37 = ((($36)) + 9|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
        $39 = ((($36)) + 13|0);
        $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
        $41 = ((($36)) + 15|0);
        $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8);
        __set_error_pos($0,$38,$40,$42);
        $$0 = 3;
        break L4;
       }
      }
      $43 = ((($0)) + 67|0);
      $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
      $45 = (__set_current_error($0,60,$44)|0);
      $46 = ($45<<24>>24)==(0);
      if ($46) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
    } while(0);
    $47 = (_mb_attempt_close_bracket($0,$1)|0);
    $48 = $16 & 2;
    $49 = $47 | $48;
    $50 = ($49|0)==(0);
    if ($50) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
     $51 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $51;
    } else {
     $$0 = $47;
    }
   } else {
    $$0 = $14;
   }
  } else {
   $$0 = $12;
  }
 } while(0);
 __assign_public_value($0,$3,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp;
 HEAP32[$3>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18858,(9334|0));
  // unreachable;
 }
 $8 = ((($2)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$2>>2] = 0;
 $9 = ((($4)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$4>>2] = 0;
 $10 = (_mb_attempt_open_bracket($0,$1)|0);
 $11 = ($10|0)==(0);
 L4: do {
  if ($11) {
   $12 = (_mb_pop_value($0,$1,$2)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = (__try_overridden($0,$1,$2,2175,64)|0);
    $15 = $14 & 1;
    $16 = ($15|0)==(0);
    L7: do {
     if ($16) {
      ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
      $17 = HEAP32[$2>>2]|0;
      switch ($17|0) {
      case 256:  {
       (__public_value_to_internal_object($2,$5)|0);
       $18 = ((($5)) + 4|0);
       while(1) {
        $19 = (_mb_has_arg($0,$1)|0);
        $20 = ($19|0)==(0);
        if ($20) {
         break L7;
        }
        $21 = (_mb_pop_int($0,$1,$3)|0);
        $22 = ($21|0)==(0);
        if (!($22)) {
         $$0 = $21;
         break L4;
        }
        $23 = HEAP32[$18>>2]|0;
        $24 = HEAP32[$3>>2]|0;
        $25 = (__remove_at_list($23,$24)|0);
        $26 = ($25<<24>>24)==(0);
        if ($26) {
         break;
        }
       }
       $27 = HEAP32[$1>>2]|0;
       $28 = ($27|0)==(0|0);
       if (!($28)) {
        $29 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
        $30 = ($29|0)==(0|0);
        if (!($30)) {
         $31 = ((($0)) + 67|0);
         $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
         $33 = (__set_current_error($0,20,$32)|0);
         $34 = ($33<<24>>24)==(0);
         if ($34) {
          $$0 = 0;
          break L4;
         }
         $35 = HEAP32[$1>>2]|0;
         $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
         $37 = ((($36)) + 9|0);
         $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
         $39 = ((($36)) + 13|0);
         $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
         $41 = ((($36)) + 15|0);
         $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8);
         __set_error_pos($0,$38,$40,$42);
         $$0 = 3;
         break L4;
        }
       }
       $43 = ((($0)) + 67|0);
       $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
       $45 = (__set_current_error($0,20,$44)|0);
       $46 = ($45<<24>>24)==(0);
       if ($46) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      case 1024:  {
       (__public_value_to_internal_object($2,$5)|0);
       $47 = ((($5)) + 4|0);
       while(1) {
        $48 = (_mb_has_arg($0,$1)|0);
        $49 = ($48|0)==(0);
        if ($49) {
         break L7;
        }
        $50 = (_mb_pop_value($0,$1,$4)|0);
        $51 = ($50|0)==(0);
        if (!($51)) {
         $$0 = $50;
         break L4;
        }
        $52 = HEAP32[$47>>2]|0;
        $53 = (__remove_dict($52,$4)|0);
        $54 = ($53<<24>>24)==(0);
        if ($54) {
         break;
        }
       }
       $55 = HEAP32[$1>>2]|0;
       $56 = ($55|0)==(0|0);
       if (!($56)) {
        $57 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
        $58 = ($57|0)==(0|0);
        if (!($58)) {
         $59 = ((($0)) + 67|0);
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = (__set_current_error($0,20,$60)|0);
         $62 = ($61<<24>>24)==(0);
         if ($62) {
          $$0 = 0;
          break L4;
         }
         $63 = HEAP32[$1>>2]|0;
         $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
         $65 = ((($64)) + 9|0);
         $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
         $67 = ((($64)) + 13|0);
         $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8);
         $69 = ((($64)) + 15|0);
         $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
         __set_error_pos($0,$66,$68,$70);
         $$0 = 3;
         break L4;
        }
       }
       $71 = ((($0)) + 67|0);
       $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
       $73 = (__set_current_error($0,20,$72)|0);
       $74 = ($73<<24>>24)==(0);
       if ($74) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      default: {
       $75 = HEAP32[$1>>2]|0;
       $76 = ($75|0)==(0|0);
       if (!($76)) {
        $77 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
        $78 = ($77|0)==(0|0);
        if (!($78)) {
         $79 = ((($0)) + 67|0);
         $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
         $81 = (__set_current_error($0,63,$80)|0);
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $$0 = 0;
          break L4;
         }
         $83 = HEAP32[$1>>2]|0;
         $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
         $85 = ((($84)) + 9|0);
         $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
         $87 = ((($84)) + 13|0);
         $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8);
         $89 = ((($84)) + 15|0);
         $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8);
         __set_error_pos($0,$86,$88,$90);
         $$0 = 3;
         break L4;
        }
       }
       $91 = ((($0)) + 67|0);
       $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
       $93 = (__set_current_error($0,63,$92)|0);
       $94 = ($93<<24>>24)==(0);
       if ($94) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
      }
      }
     }
    } while(0);
    $95 = (_mb_attempt_close_bracket($0,$1)|0);
    $96 = $14 & 2;
    $97 = $95 | $96;
    $98 = ($97|0)==(0);
    if ($98) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
     $99 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $99;
    } else {
     $$0 = $95;
    }
   } else {
    $$0 = $12;
   }
  } else {
   $$0 = $10;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_clear($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18918,(9298|0));
  // unreachable;
 }
 $6 = ((($2)) + 4|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$2>>2] = 0;
 $7 = (_mb_attempt_open_bracket($0,$1)|0);
 $8 = ($7|0)==(0);
 L4: do {
  if ($8) {
   $9 = (_mb_pop_value($0,$1,$2)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (__try_overridden($0,$1,$2,2182,64)|0);
    $12 = $11 & 1;
    $13 = ($12|0)==(0);
    L7: do {
     if ($13) {
      ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
      $14 = HEAP32[$2>>2]|0;
      switch ($14|0) {
      case 256:  {
       (__public_value_to_internal_object($2,$3)|0);
       $15 = ((($3)) + 4|0);
       $16 = HEAP32[$15>>2]|0;
       __clear_list($16);
       break L7;
       break;
      }
      case 1024:  {
       (__public_value_to_internal_object($2,$3)|0);
       $17 = ((($3)) + 4|0);
       $18 = HEAP32[$17>>2]|0;
       __clear_dict($18);
       break L7;
       break;
      }
      default: {
       $19 = HEAP32[$1>>2]|0;
       $20 = ($19|0)==(0|0);
       if (!($20)) {
        $21 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
        $22 = ($21|0)==(0|0);
        if (!($22)) {
         $23 = ((($0)) + 67|0);
         $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
         $25 = (__set_current_error($0,63,$24)|0);
         $26 = ($25<<24>>24)==(0);
         if ($26) {
          $$0 = 0;
          break L4;
         }
         $27 = HEAP32[$1>>2]|0;
         $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
         $29 = ((($28)) + 9|0);
         $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
         $31 = ((($28)) + 13|0);
         $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
         $33 = ((($28)) + 15|0);
         $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
         __set_error_pos($0,$30,$32,$34);
         $$0 = 3;
         break L4;
        }
       }
       $35 = ((($0)) + 67|0);
       $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
       $37 = (__set_current_error($0,63,$36)|0);
       $38 = ($37<<24>>24)==(0);
       if ($38) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
      }
      }
     }
    } while(0);
    $39 = (_mb_attempt_close_bracket($0,$1)|0);
    $40 = $11 & 2;
    $41 = $39 | $40;
    $42 = ($41|0)==(0);
    if ($42) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
     $43 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $43;
    } else {
     $$0 = $39;
    }
   } else {
    $$0 = $9;
   }
  } else {
   $$0 = $7;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_clone($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 28|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18966,(9286|0));
  // unreachable;
 }
 $8 = ((($2)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$2>>2] = 0;
 $9 = ((($5)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$5>>2] = 0;
 $10 = (_mb_attempt_open_bracket($0,$1)|0);
 $11 = ($10|0)==(0);
 L4: do {
  if ($11) {
   $12 = (_mb_pop_value($0,$1,$2)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = (_mb_attempt_close_bracket($0,$1)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
     $16 = HEAP32[$2>>2]|0;
     switch ($16|0) {
     case 64:  {
      (__public_value_to_internal_object($2,$3)|0);
      $17 = ((($3)) + 4|0);
      $18 = HEAP32[$17>>2]|0;
      __clone_usertype_ref($18,$4);
      (__internal_object_to_public_value($4,$5)|0);
      break;
     }
     case 256:  {
      (__public_value_to_internal_object($2,$3)|0);
      __clone_object($0,$3,$4,0,1);
      HEAP32[$5>>2] = 256;
      $19 = ((($4)) + 4|0);
      $20 = HEAP32[$19>>2]|0;
      HEAP32[$9>>2] = $20;
      break;
     }
     case 1024:  {
      (__public_value_to_internal_object($2,$3)|0);
      __clone_object($0,$3,$4,0,1);
      HEAP32[$5>>2] = 1024;
      $21 = ((($4)) + 4|0);
      $22 = HEAP32[$21>>2]|0;
      HEAP32[$9>>2] = $22;
      break;
     }
     default: {
      $23 = HEAP32[$1>>2]|0;
      $24 = ($23|0)==(0|0);
      if (!($24)) {
       $25 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $26 = ($25|0)==(0|0);
       if (!($26)) {
        $27 = ((($0)) + 67|0);
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
        $29 = (__set_current_error($0,63,$28)|0);
        $30 = ($29<<24>>24)==(0);
        if ($30) {
         $$0 = 0;
         break L4;
        }
        $31 = HEAP32[$1>>2]|0;
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
        $33 = ((($32)) + 9|0);
        $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
        $35 = ((($32)) + 13|0);
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
        $37 = ((($32)) + 15|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
        __set_error_pos($0,$34,$36,$38);
        $$0 = 3;
        break L4;
       }
      }
      $39 = ((($0)) + 67|0);
      $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
      $41 = (__set_current_error($0,63,$40)|0);
      $42 = ($41<<24>>24)==(0);
      if ($42) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
     }
     ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
     $43 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $43;
    } else {
     $$0 = $14;
    }
   } else {
    $$0 = $12;
   }
  } else {
   $$0 = $10;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_to_array($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in69 = 0, $$068 = 0, $$070 = 0, $$071 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cond = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 20|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),19025,(9229|0));
  // unreachable;
 }
 $8 = ((($2)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$2>>2] = 0;
 $9 = ((($5)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$5>>2] = 0;
 $10 = (_mb_attempt_open_bracket($0,$1)|0);
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = (_mb_pop_value($0,$1,$2)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = (_mb_attempt_close_bracket($0,$1)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     $16 = HEAP32[$2>>2]|0;
     $cond = ($16|0)==(256);
     if ($cond) {
      (__public_value_to_internal_object($2,$3)|0);
      $17 = (_mb_strdup(16212,1)|0);
      $18 = (__create_array($0,$17,3)|0);
      $19 = ((($3)) + 4|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = ((($20)) + 31|0);
      $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
      $23 = ((($18)) + 29|0);
      HEAP8[$23>>0]=$22&255;HEAP8[$23+1>>0]=($22>>8)&255;HEAP8[$23+2>>0]=($22>>16)&255;HEAP8[$23+3>>0]=$22>>24;
      $24 = ((($18)) + 33|0);
      HEAP8[$24>>0] = 1;
      $25 = ((($18)) + 34|0);
      HEAP8[$25>>0]=$22&255;HEAP8[$25+1>>0]=($22>>8)&255;HEAP8[$25+2>>0]=($22>>16)&255;HEAP8[$25+3>>0]=$22>>24;
      __init_array($18);
      HEAP32[$4>>2] = $0;
      $26 = ((($4)) + 4|0);
      HEAP32[$26>>2] = $18;
      $27 = ((($4)) + 8|0);
      HEAP32[$27>>2] = 0;
      $28 = HEAP32[$19>>2]|0;
      $29 = ((($28)) + 19|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $31 = ($30|0)==(0|0);
      if ($31) {
       ___assert_fail((9244|0),(1578|0),19048,(9229|0));
       // unreachable;
      }
      $$0$in69 = ((($30)) + 8|0);
      $$070 = HEAPU8[$$0$in69>>0]|(HEAPU8[$$0$in69+1>>0]<<8)|(HEAPU8[$$0$in69+2>>0]<<16)|(HEAPU8[$$0$in69+3>>0]<<24);
      $32 = ($$070|0)==(0|0);
      if (!($32)) {
       $$071 = $$070;
       while(1) {
        $33 = HEAPU8[$$071>>0]|(HEAPU8[$$071+1>>0]<<8)|(HEAPU8[$$071+2>>0]<<16)|(HEAPU8[$$071+3>>0]<<24);
        __copy_list_to_array($33,$4);
        $$0$in = ((($$071)) + 8|0);
        $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
        $34 = ($$0|0)==(0|0);
        if ($34) {
         break;
        } else {
         $$071 = $$0;
        }
       }
      }
      HEAP32[$5>>2] = 128;
      HEAP32[$9>>2] = $18;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
      $35 = (_mb_push_value($0,$1,$$byval_copy)|0);
      $$068 = $35;
      break;
     }
     $36 = HEAP32[$1>>2]|0;
     $37 = ($36|0)==(0|0);
     if (!($37)) {
      $38 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
      $39 = ($38|0)==(0|0);
      if (!($39)) {
       $40 = ((($0)) + 67|0);
       $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
       $42 = (__set_current_error($0,60,$41)|0);
       $43 = ($42<<24>>24)==(0);
       if ($43) {
        $$068 = 0;
        break;
       }
       $44 = HEAP32[$1>>2]|0;
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $46 = ((($45)) + 9|0);
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       $48 = ((($45)) + 13|0);
       $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8);
       $50 = ((($45)) + 15|0);
       $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8);
       __set_error_pos($0,$47,$49,$51);
       $$068 = 3;
       break;
      }
     }
     $52 = ((($0)) + 67|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = (__set_current_error($0,60,$53)|0);
     $55 = ($54<<24>>24)==(0);
     if ($55) {
      $$068 = 0;
     } else {
      __set_error_pos($0,0,0,0);
      $$068 = 3;
     }
    } else {
     $$068 = $14;
    }
   } else {
    $$068 = $12;
   }
  } else {
   $$068 = $10;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$068|0);
}
function __coll_iterator($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),19077,(9214|0));
  // unreachable;
 }
 $7 = ((($2)) + 4|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$2>>2] = 0;
 $8 = ((($4)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$4>>2] = 0;
 $9 = (_mb_attempt_open_bracket($0,$1)|0);
 $10 = ($9|0)==(0);
 L4: do {
  if ($10) {
   $11 = (_mb_pop_value($0,$1,$2)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = (__try_overridden($0,$1,$2,2203,64)|0);
    $14 = $13 & 1;
    $15 = ($14|0)==(0);
    if ($15) {
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     $16 = HEAP32[$2>>2]|0;
     switch ($16|0) {
     case 256:  {
      (__public_value_to_internal_object($2,$3)|0);
      $17 = ((($3)) + 4|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (__create_list_it($18,0)|0);
      $$sink = $19;$storemerge = 512;
      break;
     }
     case 1024:  {
      (__public_value_to_internal_object($2,$3)|0);
      $20 = ((($3)) + 4|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (__create_dict_it($21,0)|0);
      $$sink = $22;$storemerge = 2048;
      break;
     }
     default: {
      $23 = HEAP32[$1>>2]|0;
      $24 = ($23|0)==(0|0);
      if (!($24)) {
       $25 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $26 = ($25|0)==(0|0);
       if (!($26)) {
        $27 = ((($0)) + 67|0);
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
        $29 = (__set_current_error($0,63,$28)|0);
        $30 = ($29<<24>>24)==(0);
        if ($30) {
         $$0 = 0;
         break L4;
        }
        $31 = HEAP32[$1>>2]|0;
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
        $33 = ((($32)) + 9|0);
        $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
        $35 = ((($32)) + 13|0);
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
        $37 = ((($32)) + 15|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
        __set_error_pos($0,$34,$36,$38);
        $$0 = 3;
        break L4;
       }
      }
      $39 = ((($0)) + 67|0);
      $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
      $41 = (__set_current_error($0,63,$40)|0);
      $42 = ($41<<24>>24)==(0);
      if ($42) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
     }
     HEAP32[$4>>2] = $storemerge;
     HEAP32[$8>>2] = $$sink;
    }
    $43 = (_mb_attempt_close_bracket($0,$1)|0);
    $44 = $13 & 2;
    $45 = $43 | $44;
    $46 = ($45|0)==(0);
    if ($46) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
     $47 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $47;
    } else {
     $$0 = $43;
    }
   } else {
    $$0 = $11;
   }
  } else {
   $$0 = $9;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __coll_move_next($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$125 = 0, $$126 = 0, $$byval_copy = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$$sink = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),19131,(2229|0));
  // unreachable;
 }
 $7 = ((($2)) + 4|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$2>>2] = 0;
 $8 = ((($4)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$4>>2] = 0;
 $9 = (_mb_attempt_open_bracket($0,$1)|0);
 $10 = ($9|0)==(0);
 L4: do {
  if ($10) {
   $11 = HEAP32[$1>>2]|0;
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    $13 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = ($14|0)==(8);
    if ($15) {
     $16 = ((($13)) + 4|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     $18 = ((($17)) + 4|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ($19|0)==(14|0);
     if ($20) {
      $21 = ((($0)) + 67|0);
      $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
      $23 = (__set_current_error($0,61,$22)|0);
      $24 = ($23<<24>>24)==(0);
      if ($24) {
       $$0 = 0;
       break;
      }
      $25 = HEAP32[$1>>2]|0;
      $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
      $27 = ((($26)) + 9|0);
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      $29 = ((($26)) + 13|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
      $31 = ((($26)) + 15|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
      __set_error_pos($0,$28,$30,$32);
      $$0 = 3;
      break;
     }
    }
   }
   $33 = (_mb_pop_value($0,$1,$2)|0);
   $34 = ($33|0)==(0);
   if ($34) {
    $35 = (__try_overridden($0,$1,$2,2212,64)|0);
    $36 = $35 & 1;
    $37 = ($36|0)==(0);
    if ($37) {
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     $38 = HEAP32[$2>>2]|0;
     L15: do {
      switch ($38|0) {
      case 512:  {
       (__public_value_to_internal_object($2,$3)|0);
       $39 = ((($3)) + 4|0);
       $40 = HEAP32[$39>>2]|0;
       $41 = (__move_list_it_next($40)|0);
       HEAP32[$39>>2] = $41;
       $42 = (__invalid_list_it($41)|0);
       $43 = ($42<<24>>24)==(0);
       if ($43) {
        $64 = ($41|0)==(0|0);
        $$sink = $64;
        break L15;
       }
       $44 = HEAP32[$1>>2]|0;
       $45 = ($44|0)==(0|0);
       if (!($45)) {
        $46 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
        $47 = ($46|0)==(0|0);
        if (!($47)) {
         $48 = ((($0)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($0,61,$49)|0);
         $51 = ($50<<24>>24)==(0);
         if ($51) {
          $$0 = 0;
          break L4;
         }
         $52 = HEAP32[$1>>2]|0;
         $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
         $54 = ((($53)) + 9|0);
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($53)) + 13|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
         $58 = ((($53)) + 15|0);
         $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
         __set_error_pos($0,$55,$57,$59);
         $$0 = 3;
         break L4;
        }
       }
       $60 = ((($0)) + 67|0);
       $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
       $62 = (__set_current_error($0,61,$61)|0);
       $63 = ($62<<24>>24)==(0);
       if ($63) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      case 2048:  {
       (__public_value_to_internal_object($2,$3)|0);
       $65 = ((($3)) + 4|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($66|0)==(0|0);
       if (!($67)) {
        $68 = ((($66)) + 26|0);
        $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
        $70 = ($69|0)==((-1)|0);
        if ($70) {
         $71 = (__invalid_dict_it($66)|0);
         $72 = ($71<<24>>24)==(0);
         if (!($72)) {
          $73 = HEAP32[$1>>2]|0;
          $74 = ($73|0)==(0|0);
          if (!($74)) {
           $75 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
           $76 = ($75|0)==(0|0);
           if (!($76)) {
            $77 = ((($0)) + 67|0);
            $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
            $79 = (__set_current_error($0,61,$78)|0);
            $80 = ($79<<24>>24)==(0);
            if ($80) {
             $$0 = 0;
             break L4;
            }
            $81 = HEAP32[$1>>2]|0;
            $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
            $83 = ((($82)) + 9|0);
            $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
            $85 = ((($82)) + 13|0);
            $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8);
            $87 = ((($82)) + 15|0);
            $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8);
            __set_error_pos($0,$84,$86,$88);
            $$0 = 3;
            break L4;
           }
          }
          $89 = ((($0)) + 67|0);
          $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
          $91 = (__set_current_error($0,61,$90)|0);
          $92 = ($91<<24>>24)==(0);
          if ($92) {
           $$0 = 0;
           break L4;
          }
          __set_error_pos($0,0,0,0);
          $$0 = 3;
          break L4;
         }
        }
       }
       $93 = (__move_dict_it_next($66)|0);
       HEAP32[$65>>2] = $93;
       $94 = (__invalid_dict_it($93)|0);
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $116 = ($93|0)==(0|0);
        $$sink = $116;
        break L15;
       }
       $96 = HEAP32[$1>>2]|0;
       $97 = ($96|0)==(0|0);
       if (!($97)) {
        $98 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
        $99 = ($98|0)==(0|0);
        if (!($99)) {
         $100 = ((($0)) + 67|0);
         $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
         $102 = (__set_current_error($0,61,$101)|0);
         $103 = ($102<<24>>24)==(0);
         if ($103) {
          $$0 = 0;
          break L4;
         }
         $104 = HEAP32[$1>>2]|0;
         $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
         $106 = ((($105)) + 9|0);
         $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
         $108 = ((($105)) + 13|0);
         $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8);
         $110 = ((($105)) + 15|0);
         $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8);
         __set_error_pos($0,$107,$109,$111);
         $$0 = 3;
         break L4;
        }
       }
       $112 = ((($0)) + 67|0);
       $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
       $114 = (__set_current_error($0,61,$113)|0);
       $115 = ($114<<24>>24)==(0);
       if ($115) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      default: {
       __assign_public_value($0,$2,0,1);
       $117 = HEAP32[$1>>2]|0;
       $118 = ($117|0)==(0|0);
       if (!($118)) {
        $119 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
        $120 = ($119|0)==(0|0);
        if (!($120)) {
         $121 = ((($0)) + 67|0);
         $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
         $123 = (__set_current_error($0,62,$122)|0);
         $124 = ($123<<24>>24)==(0);
         if ($124) {
          $$0 = 0;
          break L4;
         }
         $125 = HEAP32[$1>>2]|0;
         $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
         $127 = ((($126)) + 9|0);
         $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
         $129 = ((($126)) + 13|0);
         $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8);
         $131 = ((($126)) + 15|0);
         $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8);
         __set_error_pos($0,$128,$130,$132);
         $$0 = 3;
         break L4;
        }
       }
       $133 = ((($0)) + 67|0);
       $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
       $135 = (__set_current_error($0,62,$134)|0);
       $136 = ($135<<24>>24)==(0);
       if ($136) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
      }
      }
     } while(0);
     $not$$sink = $$sink ^ 1;
     $$125 = $not$$sink&1;
     $$126 = $$sink ? 0 : 2;
     HEAP32[$8>>2] = $$125;
     HEAP32[$4>>2] = $$126;
    }
    $137 = (_mb_attempt_close_bracket($0,$1)|0);
    $138 = $35 & 2;
    $139 = $137 | $138;
    $140 = ($139|0)==(0);
    if ($140) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
     $141 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $141;
    } else {
     $$0 = $137;
    }
   } else {
    $$0 = $33;
   }
  } else {
   $$0 = $9;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _mb_attempt_open_bracket($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$062 = 0, $$1 = 0, $$in = 0, $$in64 = 0, $$pn = 0, $$pn$in = 0, $$sink10 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 do {
  if ($or$cond) {
   $4 = HEAP32[$1>>2]|0;
   $5 = ((($0)) + 130|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   (__ls_pushback($6,(1))|0);
   $$0 = $4;
   L3: while(1) {
    $7 = ((($$0)) + 8|0);
    $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $9 = ($8|0)==(0|0);
    if ($9) {
     label = 8;
     break;
    }
    $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $11 = ($10|0)==(0|0);
    if ($11) {
     label = 7;
     break;
    }
    $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    switch ($12|0) {
    case 22:  {
     $$0 = $8;
     break;
    }
    case 8:  {
     label = 6;
     break L3;
     break;
    }
    default: {
     label = 7;
     break L3;
    }
    }
   }
   if ((label|0) == 6) {
    $13 = ((($10)) + 4|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = ((($14)) + 4|0);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = ($16|0)==(22|0);
    if ($17) {
     $40 = ((($8)) + 8|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $$062 = 0;$$1 = $41;
     break;
    } else {
     label = 7;
    }
   }
   else if ((label|0) == 8) {
    $21 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    (__ls_popback($21)|0);
    $22 = HEAP32[$1>>2]|0;
    $23 = ($22|0)==(0|0);
    if ($23) {
     $42 = 0;
     label = 15;
    } else {
     $24 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $25 = ($24|0)==(0|0);
     if ($25) {
      $42 = 0;
      label = 15;
     } else {
      $43 = 0;$44 = 0;
     }
    }
   }
   if ((label|0) == 7) {
    $18 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    (__ls_popback($18)|0);
    $19 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $20 = ($19|0)==(0|0);
    if ($20) {
     $42 = $8;
     label = 15;
    } else {
     $43 = $8;$44 = 1;
    }
   }
   if ((label|0) == 15) {
    $36 = ((($0)) + 67|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = (__set_current_error($0,31,$37)|0);
    $39 = ($38<<24>>24)==(0);
    if ($39) {
     $$062 = 0;$$1 = $42;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$062 = 3;$$1 = $42;
    break;
   }
   $26 = ((($0)) + 67|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = (__set_current_error($0,31,$27)|0);
   $29 = ($28<<24>>24)==(0);
   if ($29) {
    $$062 = 0;$$1 = $43;
   } else {
    if ($44) {
     $$pn$in = $43;$$sink10 = $43;
    } else {
     $30 = HEAP32[$1>>2]|0;
     $$pn$in = $30;$$sink10 = $30;
    }
    $$pn = HEAPU8[$$pn$in>>0]|(HEAPU8[$$pn$in+1>>0]<<8)|(HEAPU8[$$pn$in+2>>0]<<16)|(HEAPU8[$$pn$in+3>>0]<<24);
    $$in64 = ((($$pn)) + 9|0);
    $$in = ((($$pn)) + 13|0);
    $31 = HEAPU8[$$in64>>0]|(HEAPU8[$$in64+1>>0]<<8)|(HEAPU8[$$in64+2>>0]<<16)|(HEAPU8[$$in64+3>>0]<<24);
    $32 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8);
    $33 = HEAPU8[$$sink10>>0]|(HEAPU8[$$sink10+1>>0]<<8)|(HEAPU8[$$sink10+2>>0]<<16)|(HEAPU8[$$sink10+3>>0]<<24);
    $34 = ((($33)) + 15|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8);
    __set_error_pos($0,$31,$32,$35);
    $$062 = 3;$$1 = $43;
   }
  } else {
   $$062 = 3;$$1 = 0;
  }
 } while(0);
 HEAP32[$1>>2] = $$1;
 return ($$062|0);
}
function _mb_pop_value($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$035 = 0, $$036 = 0, $$old = 0, $$old4 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 24|0;
 $4 = sp + 4|0;
 $5 = sp;
 HEAP32[$3>>2] = 0;
 HEAP32[$5>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 $8 = ($2|0)!=(0|0);
 $or$cond3 = $or$cond & $8;
 do {
  if ($or$cond3) {
   $9 = ((($0)) + 122|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = (__ls_empty($10)|0);
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $13 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $14 = (__ls_back($13)|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $$035 = $15;
   } else {
    $$035 = 0;
   }
   HEAP32[$5>>2] = $4;
   $16 = ((($0)) + 88|0);
   ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ($17|0)==(0|0);
   $19 = HEAP32[$1>>2]|0;
   HEAP32[$3>>2] = $19;
   if ($18) {
    $20 = ($19|0)==(0|0);
    if ($20) {
     $$036 = 0;
     break;
    }
    $21 = (__multiline_statement($0)|0);
    $22 = ($21<<24>>24)==(0);
    L9: do {
     if (!($22)) {
      $24 = $19;
      L10: while(1) {
       $23 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
       $$0 = $23;$29 = $24;
       while(1) {
        $25 = ($$0|0)==(0|0);
        if ($25) {
         break L9;
        }
        $26 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
        $27 = ($26|0)==(22);
        if (!($27)) {
         break L9;
        }
        $28 = ((($29)) + 8|0);
        $30 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        HEAP32[$3>>2] = $30;
        $31 = ($30|0)==(0|0);
        if ($31) {
         $$0 = 0;$29 = 0;
        } else {
         $24 = $30;
         continue L10;
        }
       }
      }
     }
    } while(0);
    $32 = (__calc_expression($0,$3,$5)|0);
    $33 = ($32|0)==(0);
    if (!($33)) {
     $$036 = $32;
     break;
    }
   } else {
    dest=$4; src=$17; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
   }
   $34 = HEAP32[$4>>2]|0;
   $35 = ($34|0)==(4);
   if ($35) {
    $36 = ((($4)) + 8|0);
    $37 = HEAP8[$36>>0]|0;
    $38 = $37 & 1;
    $39 = ($38<<24>>24)==(0);
    if ($39) {
     __destroy_edge_objects($0);
     $40 = ((($4)) + 4|0);
     $41 = HEAP32[$40>>2]|0;
     __mark_edge_destroy_string($0,$41);
     $$pre = HEAP32[$4>>2]|0;
     $42 = $$pre;
     label = 16;
    }
   } else {
    $42 = $34;
    label = 16;
   }
   L22: do {
    if ((label|0) == 16) {
     switch ($42|0) {
     case 7:  {
      $43 = ((($4)) + 4|0);
      $44 = HEAP32[$43>>2]|0;
      __ref($44,$44);
      break L22;
      break;
     }
     case 10:  {
      $45 = ((($4)) + 8|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = $46 & 1;
      $48 = ($47<<24>>24)==(0);
      if (!($48)) {
       break L22;
      }
      $49 = ((($4)) + 4|0);
      $50 = HEAP32[$49>>2]|0;
      __ref($50,$50);
      break L22;
      break;
     }
     case 11:  {
      $51 = ((($4)) + 4|0);
      $52 = HEAP32[$51>>2]|0;
      __ref($52,$52);
      break L22;
      break;
     }
     case 13:  {
      $53 = ((($4)) + 4|0);
      $54 = HEAP32[$53>>2]|0;
      __ref($54,$54);
      break L22;
      break;
     }
     case 16:  {
      $55 = ((($4)) + 4|0);
      $56 = HEAP32[$55>>2]|0;
      __ref($56,$56);
      break L22;
      break;
     }
     case 17:  {
      $57 = ((($4)) + 8|0);
      $58 = HEAP8[$57>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if (!($60)) {
       break L22;
      }
      $61 = ((($4)) + 4|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ((($62)) + 58|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
      $65 = ($64|0)==(2);
      if (!($65)) {
       break L22;
      }
      __ref($62,$62);
      break L22;
      break;
     }
     default: {
      break L22;
     }
     }
    }
   } while(0);
   $66 = ((($0)) + 114|0);
   $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
   $68 = ($67|0)<(2);
   do {
    if ($68) {
     $69 = ($$035|0)==(0|0);
     if ($69) {
      $$old = HEAP32[$3>>2]|0;
      $$old4 = ($$old|0)==(0|0);
      if ($$old4) {
       break;
      } else {
       $75 = $$old;
      }
     } else {
      $70 = HEAP32[$$035>>2]|0;
      $71 = ($70|0)==(0);
      $72 = HEAP32[$3>>2]|0;
      $73 = ($72|0)!=(0|0);
      $or$cond5 = $71 & $73;
      if ($or$cond5) {
       $75 = $72;
      } else {
       break;
      }
     }
     $74 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $76 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
     $77 = ($76|0)==(19);
     if ($77) {
      $78 = ((($74)) + 4|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ($79<<24>>24)==(44);
      if ($80) {
       $81 = ((($75)) + 8|0);
       $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
       HEAP32[$3>>2] = $82;
      }
     }
    }
   } while(0);
   $83 = (__internal_object_to_public_value($4,$2)|0);
   $$036 = $83;
  } else {
   $$036 = 3;
  }
 } while(0);
 $84 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $84;
 STACKTOP = sp;return ($$036|0);
}
function __try_overridden($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$5 = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $vararg_buffer = sp;
 $5 = sp + 40|0;
 $6 = sp + 64|0;
 $7 = sp + 20|0;
 $8 = sp + 16|0;
 $9 = sp + 8|0;
 $10 = ($0|0)!=(0|0);
 $11 = ($1|0)!=(0|0);
 $or$cond = $10 & $11;
 $12 = ($2|0)!=(0|0);
 $or$cond3 = $or$cond & $12;
 $13 = ($3|0)!=(0|0);
 $or$cond9 = $or$cond3 & $13;
 if (!($or$cond9)) {
  ___assert_fail((3669|0),(1578|0),4792,(3686|0));
  // unreachable;
 }
 $14 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $15 = ($14|0)==(64);
 do {
  if ($15) {
   ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
   (__public_value_to_internal_object($2,$5)|0);
   switch ($4|0) {
   case 64:  {
    $16 = ((($5)) + 4|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ((($17)) + 49|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = ($19|0)==(0|0);
    if ($20) {
     label = 9;
    } else {
     $21 = (FUNCTION_TABLE_iiiii[$19 & 0]($0,$1,$2,$3)|0);
     $$0 = $21;
     label = 10;
    }
    break;
   }
   case 128:  {
    $22 = ((($5)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($23)) + 53|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ($25|0)==(0|0);
    if ($26) {
     label = 9;
    } else {
     $27 = (FUNCTION_TABLE_iiiii[$25 & 0]($0,$1,$2,$3)|0);
     $$0 = $27;
     label = 10;
    }
    break;
   }
   default: {
    label = 9;
   }
   }
   if ((label|0) == 9) {
    $$pr = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $28 = $$pr;
    label = 11;
    break;
   }
   else if ((label|0) == 10) {
    $$5 = $$0;
    break;
   }
  } else {
   $28 = $14;
   label = 11;
  }
 } while(0);
 L14: do {
  if ((label|0) == 11) {
   $29 = ($28|0)==(4096);
   if ($29) {
    ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;HEAP32[$7+12>>2]=0|0;HEAP8[$7+16>>0]=0|0;
    (__public_value_to_internal_object($2,$7)|0);
    HEAP32[$vararg_buffer>>2] = $3;
    (_sprintf($6,3702,$vararg_buffer)|0);
    $30 = ((($7)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (__search_identifier_in_class($0,$31,$6,0,0)|0);
    $33 = ($32|0)==(0|0);
    do {
     if (!($33)) {
      $34 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $35 = HEAP32[$1>>2]|0;
      HEAP32[$8>>2] = $35;
      $36 = ((($9)) + 4|0);
      HEAP32[$36>>2] = 0;
      HEAP32[$9>>2] = 0;
      $37 = ((($34)) + 4|0);
      $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
      $39 = (__eval_routine($0,$8,$9,0,$38,131,132)|0);
      $40 = ($39|0)==(0);
      if (!($40)) {
       break;
      }
      $41 = HEAP32[$8>>2]|0;
      $42 = ($41|0)==(0|0);
      if (!($42)) {
       $43 = ((($41)) + 4|0);
       $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
       HEAP32[$1>>2] = $44;
      }
      $$5 = 3;
      break L14;
     }
    } while(0);
    $$5 = 0;
   } else {
    $$5 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$5|0);
}
function __public_value_to_internal_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((3336|0),(1578|0),10243,(3636|0));
  // unreachable;
 }
 $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 L4: do {
  switch ($4|0) {
  case 7:  {
   $5 = ((($1)) + 4|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   __unref($6,$6);
   break;
  }
  case 10:  {
   $7 = ((($1)) + 8|0);
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 & 1;
   $10 = ($9<<24>>24)==(0);
   if ($10) {
    $11 = ((($1)) + 4|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    __unref($12,$12);
   }
   break;
  }
  case 11:  {
   $13 = ((($1)) + 4|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   __unref($14,$14);
   break;
  }
  case 13:  {
   $15 = ((($1)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   __unref($16,$16);
   break;
  }
  case 16:  {
   $17 = ((($1)) + 8|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $21 = ((($1)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    __unref($22,$22);
   }
   break;
  }
  case 17:  {
   $23 = ((($1)) + 8|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = $24 & 1;
   $26 = ($25<<24>>24)==(0);
   if ($26) {
    $27 = ((($1)) + 4|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ((($28)) + 58|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = ($30|0)==(2);
    if ($31) {
     __unref($28,$28);
     break L4;
    }
    $32 = ((($1)) + 4|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 58|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = ($35|0)==(2);
    if (!($36)) {
     __destroy_routine(0,$33);
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $37 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 do {
  switch ($37|0) {
  case 0:  {
   HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
   $38 = ((($1)) + 4|0);
   HEAP8[$38>>0]=0&255;HEAP8[$38+1>>0]=(0>>8)&255;HEAP8[$38+2>>0]=(0>>16)&255;HEAP8[$38+3>>0]=0>>24;
   $$0 = 0;
   break;
  }
  case 1:  {
   HEAP8[$1>>0]=1&255;HEAP8[$1+1>>0]=(1>>8)&255;HEAP8[$1+2>>0]=(1>>16)&255;HEAP8[$1+3>>0]=1>>24;
   $39 = ((($1)) + 4|0);
   HEAP8[$39>>0]=0&255;HEAP8[$39+1>>0]=(0>>8)&255;HEAP8[$39+2>>0]=(0>>16)&255;HEAP8[$39+3>>0]=0>>24;
   $$0 = 0;
   break;
  }
  case 2:  {
   HEAP8[$1>>0]=2&255;HEAP8[$1+1>>0]=(2>>8)&255;HEAP8[$1+2>>0]=(2>>16)&255;HEAP8[$1+3>>0]=2>>24;
   $40 = ((($0)) + 4|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = ((($1)) + 4|0);
   HEAP8[$42>>0]=$41&255;HEAP8[$42+1>>0]=($41>>8)&255;HEAP8[$42+2>>0]=($41>>16)&255;HEAP8[$42+3>>0]=$41>>24;
   $$0 = 0;
   break;
  }
  case 4:  {
   HEAP8[$1>>0]=3&255;HEAP8[$1+1>>0]=(3>>8)&255;HEAP8[$1+2>>0]=(3>>16)&255;HEAP8[$1+3>>0]=3>>24;
   $43 = ((($0)) + 4|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ((($1)) + 4|0);
   HEAP8[$45>>0]=$44&255;HEAP8[$45+1>>0]=($44>>8)&255;HEAP8[$45+2>>0]=($44>>16)&255;HEAP8[$45+3>>0]=$44>>24;
   $$0 = 0;
   break;
  }
  case 8:  {
   HEAP8[$1>>0]=4&255;HEAP8[$1+1>>0]=(4>>8)&255;HEAP8[$1+2>>0]=(4>>16)&255;HEAP8[$1+3>>0]=4>>24;
   $46 = ((($0)) + 4|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = ((($1)) + 4|0);
   HEAP8[$48>>0]=$47&255;HEAP8[$48+1>>0]=($47>>8)&255;HEAP8[$48+2>>0]=($47>>16)&255;HEAP8[$48+3>>0]=$47>>24;
   $49 = ((($1)) + 8|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 | 1;
   HEAP8[$49>>0] = $51;
   $$0 = 0;
   break;
  }
  case 16:  {
   HEAP8[$1>>0]=5&255;HEAP8[$1+1>>0]=(5>>8)&255;HEAP8[$1+2>>0]=(5>>16)&255;HEAP8[$1+3>>0]=5>>24;
   $52 = ((($0)) + 4|0);
   $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
   $54 = ((($1)) + 4|0);
   HEAP8[$54>>0]=$53&255;HEAP8[$54+1>>0]=($53>>8)&255;HEAP8[$54+2>>0]=($53>>16)&255;HEAP8[$54+3>>0]=$53>>24;
   $$0 = 0;
   break;
  }
  case 32:  {
   HEAP8[$1>>0]=6&255;HEAP8[$1+1>>0]=(6>>8)&255;HEAP8[$1+2>>0]=(6>>16)&255;HEAP8[$1+3>>0]=6>>24;
   $55 = ((($0)) + 4|0);
   $56 = ((($1)) + 4|0);
   $57 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
   HEAP8[$56>>0]=$57&255;HEAP8[$56+1>>0]=($57>>8)&255;HEAP8[$56+2>>0]=($57>>16)&255;HEAP8[$56+3>>0]=$57>>24;
   $$0 = 0;
   break;
  }
  case 64:  {
   HEAP8[$1>>0]=7&255;HEAP8[$1+1>>0]=(7>>8)&255;HEAP8[$1+2>>0]=(7>>16)&255;HEAP8[$1+3>>0]=7>>24;
   $58 = ((($0)) + 4|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = ((($1)) + 4|0);
   HEAP8[$60>>0]=$59&255;HEAP8[$60+1>>0]=($59>>8)&255;HEAP8[$60+2>>0]=($59>>16)&255;HEAP8[$60+3>>0]=$59>>24;
   $$0 = 0;
   break;
  }
  case 128:  {
   HEAP8[$1>>0]=10&255;HEAP8[$1+1>>0]=(10>>8)&255;HEAP8[$1+2>>0]=(10>>16)&255;HEAP8[$1+3>>0]=10>>24;
   $61 = ((($0)) + 4|0);
   $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   $63 = ((($1)) + 4|0);
   HEAP8[$63>>0]=$62&255;HEAP8[$63+1>>0]=($62>>8)&255;HEAP8[$63+2>>0]=($62>>16)&255;HEAP8[$63+3>>0]=$62>>24;
   $64 = ((($1)) + 8|0);
   $65 = HEAP8[$64>>0]|0;
   $66 = $65 & -2;
   HEAP8[$64>>0] = $66;
   $$0 = 0;
   break;
  }
  case 256:  {
   HEAP8[$1>>0]=11&255;HEAP8[$1+1>>0]=(11>>8)&255;HEAP8[$1+2>>0]=(11>>16)&255;HEAP8[$1+3>>0]=11>>24;
   $67 = ((($0)) + 4|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = ((($1)) + 4|0);
   HEAP8[$69>>0]=$68&255;HEAP8[$69+1>>0]=($68>>8)&255;HEAP8[$69+2>>0]=($68>>16)&255;HEAP8[$69+3>>0]=$68>>24;
   $$0 = 0;
   break;
  }
  case 512:  {
   HEAP8[$1>>0]=12&255;HEAP8[$1+1>>0]=(12>>8)&255;HEAP8[$1+2>>0]=(12>>16)&255;HEAP8[$1+3>>0]=12>>24;
   $70 = ((($0)) + 4|0);
   $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
   $72 = ((($1)) + 4|0);
   HEAP8[$72>>0]=$71&255;HEAP8[$72+1>>0]=($71>>8)&255;HEAP8[$72+2>>0]=($71>>16)&255;HEAP8[$72+3>>0]=$71>>24;
   $$0 = 0;
   break;
  }
  case 1024:  {
   HEAP8[$1>>0]=13&255;HEAP8[$1+1>>0]=(13>>8)&255;HEAP8[$1+2>>0]=(13>>16)&255;HEAP8[$1+3>>0]=13>>24;
   $73 = ((($0)) + 4|0);
   $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
   $75 = ((($1)) + 4|0);
   HEAP8[$75>>0]=$74&255;HEAP8[$75+1>>0]=($74>>8)&255;HEAP8[$75+2>>0]=($74>>16)&255;HEAP8[$75+3>>0]=$74>>24;
   $$0 = 0;
   break;
  }
  case 2048:  {
   HEAP8[$1>>0]=14&255;HEAP8[$1+1>>0]=(14>>8)&255;HEAP8[$1+2>>0]=(14>>16)&255;HEAP8[$1+3>>0]=14>>24;
   $76 = ((($0)) + 4|0);
   $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
   $78 = ((($1)) + 4|0);
   HEAP8[$78>>0]=$77&255;HEAP8[$78+1>>0]=($77>>8)&255;HEAP8[$78+2>>0]=($77>>16)&255;HEAP8[$78+3>>0]=$77>>24;
   $$0 = 0;
   break;
  }
  case 4096:  {
   HEAP8[$1>>0]=16&255;HEAP8[$1+1>>0]=(16>>8)&255;HEAP8[$1+2>>0]=(16>>16)&255;HEAP8[$1+3>>0]=16>>24;
   $79 = ((($0)) + 4|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ((($1)) + 4|0);
   HEAP8[$81>>0]=$80&255;HEAP8[$81+1>>0]=($80>>8)&255;HEAP8[$81+2>>0]=($80>>16)&255;HEAP8[$81+3>>0]=$80>>24;
   $$0 = 0;
   break;
  }
  case 8192:  {
   HEAP8[$1>>0]=17&255;HEAP8[$1+1>>0]=(17>>8)&255;HEAP8[$1+2>>0]=(17>>16)&255;HEAP8[$1+3>>0]=17>>24;
   $82 = ((($0)) + 4|0);
   $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
   $84 = ((($1)) + 4|0);
   HEAP8[$84>>0]=$83&255;HEAP8[$84+1>>0]=($83>>8)&255;HEAP8[$84+2>>0]=($83>>16)&255;HEAP8[$84+3>>0]=$83>>24;
   $$0 = 0;
   break;
  }
  default: {
   $$0 = 3;
  }
  }
 } while(0);
 return ($$0|0);
}
function __move_list_it_next($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $$27 = 0, $$36 = 0, $$pre$phi30Z2D = 0, $$pre29 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$0 = 0;
  } else {
   $2 = ((($0)) + 17|0);
   $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $4 = ($3|0)==(0|0);
   if ($4) {
    $$0 = 0;
   } else {
    $5 = ((($3)) + 19|0);
    $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $7 = ($6|0)==(0|0);
    if ($7) {
     $$0 = 0;
    } else {
     $8 = ((($3)) + 17|0);
     $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
     $10 = ($9<<16>>16)<(0);
     if ($10) {
      $$0 = $0;
     } else {
      $11 = ((($0)) + 22|0);
      $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
      $13 = ($12|0)==(0|0);
      $14 = $12;
      $15 = ((($3)) + 35|0);
      $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
      $17 = ($16|0)==(0|0);
      do {
       if ($13) {
        if ($17) {
         $$0 = 0;
         break L1;
        }
        $18 = ($9<<16>>16)==(0);
        if ($18) {
         label = 10;
        } else {
         label = 11;
        }
       } else {
        $19 = ($9<<16>>16)!=(0);
        if (!($17)) {
         if ($19) {
          label = 11;
          break;
         } else {
          label = 10;
          break;
         }
        }
        if ($19) {
         $39 = ((($12)) + 8|0);
         $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
         HEAP8[$11>>0]=$40&255;HEAP8[$11+1>>0]=($40>>8)&255;HEAP8[$11+2>>0]=($40>>16)&255;HEAP8[$11+3>>0]=$40>>24;
         $41 = $40;
         $42 = $41;
        } else {
         $42 = $12;
        }
        $43 = ($42|0)==(0|0);
        $$27 = $43 ? 0 : $0;
        $$0 = $$27;
        break L1;
       }
      } while(0);
      if ((label|0) == 10) {
       $$pre29 = ((($3)) + 31|0);
       $$pre$phi30Z2D = $$pre29;$32 = $14;
      }
      else if ((label|0) == 11) {
       $20 = ((($3)) + 31|0);
       $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
       $22 = ($21|0)==(0);
       $23 = ($21|0)>(0);
       $24 = $23 ? 1 : -1;
       $25 = $22 ? 0 : $24;
       $26 = (($25) + ($14))|0;
       HEAP8[$11>>0]=$26&255;HEAP8[$11+1>>0]=($26>>8)&255;HEAP8[$11+2>>0]=($26>>16)&255;HEAP8[$11+3>>0]=$26>>24;
       $$pre$phi30Z2D = $20;$32 = $26;
      }
      $27 = HEAPU8[$$pre$phi30Z2D>>0]|(HEAPU8[$$pre$phi30Z2D+1>>0]<<8)|(HEAPU8[$$pre$phi30Z2D+2>>0]<<16)|(HEAPU8[$$pre$phi30Z2D+3>>0]<<24);
      $28 = ($27|0)>(0);
      if ($28) {
       $29 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
       $30 = HEAP32[$29>>2]|0;
       $31 = (($30) + ($27))|0;
       $33 = ($32|0)<($31|0);
       $$36 = $33 ? $0 : 0;
       return ($$36|0);
      }
      $34 = ($27|0)<(0);
      if ($34) {
       $35 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
       $36 = HEAP32[$35>>2]|0;
       $37 = (($36) + ($27))|0;
       $38 = ($32|0)>($37|0);
       $$ = $38 ? $0 : 0;
       return ($$|0);
      } else {
       $$0 = 0;
      }
     }
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __invalid_list_it($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 0;
 } else {
  $2 = ((($0)) + 17|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ((($3)) + 17|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8);
   $7 = ($6<<16>>16)<(1);
   $phitmp = $7&1;
   $$0 = $phitmp;
  }
 }
 return ($$0|0);
}
function __invalid_dict_it($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 0;
 } else {
  $2 = ((($0)) + 17|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ((($3)) + 17|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8);
   $7 = ($6<<16>>16)<(1);
   $phitmp = $7&1;
   $$0 = $phitmp;
  }
 }
 return ($$0|0);
}
function __move_dict_it_next($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $magicptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 L1: do {
  if (!($1)) {
   $2 = ((($0)) + 17|0);
   $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $4 = ($3|0)==(0|0);
   if (!($4)) {
    $5 = ((($3)) + 19|0);
    $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $7 = ($6|0)==(0|0);
    if (!($7)) {
     $8 = ((($0)) + 26|0);
     $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $10 = ($9|0)==(0|0);
     if (!($10)) {
      $11 = ((($3)) + 17|0);
      $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
      $13 = ($12<<16>>16)==(0);
      if (!($13)) {
       $14 = ($9|0)==((-1)|0);
       if ($14) {
        $21 = (-1);
       } else {
        $15 = ((($9)) + 8|0);
        $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
        HEAP8[$8>>0]=$16&255;HEAP8[$8+1>>0]=($16>>8)&255;HEAP8[$8+2>>0]=($16>>16)&255;HEAP8[$8+3>>0]=$16>>24;
        $17 = ($16|0)==(0|0);
        if ($17) {
         $18 = ((($0)) + 22|0);
         $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
         $20 = (($19) + 1)|0;
         HEAP8[$18>>0]=$20&255;HEAP8[$18+1>>0]=($20>>8)&255;HEAP8[$18+2>>0]=($20>>16)&255;HEAP8[$18+3>>0]=$20>>24;
         $21 = 0;
        } else {
         $21 = $16;
        }
       }
       $magicptr = $21;
       L11: do {
        switch ($magicptr|0) {
        case -1: case 0:  {
         $22 = ((($6)) + 20|0);
         $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
         $24 = ($23|0)==(0|0);
         if ($24) {
          break L1;
         }
         $25 = ((($0)) + 22|0);
         $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
         $27 = ((($6)) + 12|0);
         $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
         $29 = ($26>>>0)<($28>>>0);
         if ($29) {
          $31 = $26;
          while(1) {
           $30 = (($23) + ($31<<2)|0);
           $32 = HEAP32[$30>>2]|0;
           HEAP8[$8>>0]=$32&255;HEAP8[$8+1>>0]=($32>>8)&255;HEAP8[$8+2>>0]=($32>>16)&255;HEAP8[$8+3>>0]=$32>>24;
           $33 = ($32|0)==(0|0);
           if (!($33)) {
            $34 = ((($32)) + 8|0);
            $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
            $36 = ($35|0)==(0|0);
            if (!($36)) {
             break;
            }
           }
           $37 = (($31) + 1)|0;
           HEAP8[$25>>0]=$37&255;HEAP8[$25+1>>0]=($37>>8)&255;HEAP8[$25+2>>0]=($37>>16)&255;HEAP8[$25+3>>0]=$37>>24;
           $38 = ($37>>>0)<($28>>>0);
           if ($38) {
            $31 = $37;
           } else {
            $39 = $32;
            label = 16;
            break L11;
           }
          }
          HEAP8[$8>>0]=$35&255;HEAP8[$8+1>>0]=($35>>8)&255;HEAP8[$8+2>>0]=($35>>16)&255;HEAP8[$8+3>>0]=$35>>24;
          $42 = $35;
         } else {
          $39 = $21;
          label = 16;
         }
         break;
        }
        default: {
         $39 = $21;
         label = 16;
        }
        }
       } while(0);
       if ((label|0) == 16) {
        $40 = ($39|0)==(0|0);
        if ($40) {
         break;
        } else {
         $42 = $39;
        }
       }
       $41 = ((($42)) + 12|0);
       $43 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $44 = ($43|0)==(0|0);
       $$ = $44 ? 0 : $0;
       return ($$|0);
      }
     }
    }
   }
  }
 } while(0);
 return (0|0);
}
function __assign_public_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$4$sroa_raw_idx = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($1|0)==(0|0);
 if ($6) {
  ___assert_fail((3579|0),(1578|0),10627,(3583|0));
  // unreachable;
 }
 $7 = ($3<<24>>24)==(0);
 if ($7) {
  label = 5;
 } else {
  $8 = (__try_purge_it($0,$1,0)|0);
  $9 = ($8<<24>>24)==(0);
  if ($9) {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
  (__public_value_to_internal_object($1,$4)|0);
  $10 = HEAP32[$4>>2]|0;
  L8: do {
   switch ($10|0) {
   case 7:  {
    $11 = ((($4)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __unref($12,$12);
    break;
   }
   case 10:  {
    $13 = ((($4)) + 8|0);
    $14 = HEAP8[$13>>0]|0;
    $15 = $14 & 1;
    $16 = ($15<<24>>24)==(0);
    if ($16) {
     $17 = ((($4)) + 4|0);
     $18 = HEAP32[$17>>2]|0;
     __unref($18,$18);
    }
    break;
   }
   case 11:  {
    $19 = ((($4)) + 4|0);
    $20 = HEAP32[$19>>2]|0;
    __unref($20,$20);
    break;
   }
   case 13:  {
    $21 = ((($4)) + 4|0);
    $22 = HEAP32[$21>>2]|0;
    __unref($22,$22);
    break;
   }
   case 16:  {
    $23 = ((($4)) + 8|0);
    $24 = HEAP8[$23>>0]|0;
    $25 = $24 & 1;
    $26 = ($25<<24>>24)==(0);
    if ($26) {
     $27 = ((($4)) + 4|0);
     $28 = HEAP32[$27>>2]|0;
     __unref($28,$28);
    }
    break;
   }
   case 17:  {
    $29 = ((($4)) + 8|0);
    $30 = HEAP8[$29>>0]|0;
    $31 = $30 & 1;
    $32 = ($31<<24>>24)==(0);
    if ($32) {
     $33 = ((($4)) + 4|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 58|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ($36|0)==(2);
     if ($37) {
      __unref($34,$34);
      break L8;
     }
     $38 = ((($4)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ((($39)) + 58|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ($41|0)==(2);
     if (!($42)) {
      __destroy_routine(0,$39);
     }
    }
    break;
   }
   default: {
   }
   }
  } while(0);
  $$4$sroa_raw_idx = ((($5)) + 4|0);
  HEAP32[$$4$sroa_raw_idx>>2] = 0;
  HEAP32[$5>>2] = 0;
  $43 = ($2|0)==(0|0);
  $44 = $43 ? $5 : $2;
  $45 = $44;
  $46 = $45;
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  $48 = (($45) + 4)|0;
  $49 = $48;
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = $1;
  $52 = $51;
  HEAP8[$52>>0]=$47&255;HEAP8[$52+1>>0]=($47>>8)&255;HEAP8[$52+2>>0]=($47>>16)&255;HEAP8[$52+3>>0]=$47>>24;
  $53 = (($51) + 4)|0;
  $54 = $53;
  HEAP8[$54>>0]=$50&255;HEAP8[$54+1>>0]=($50>>8)&255;HEAP8[$54+2>>0]=($50>>16)&255;HEAP8[$54+3>>0]=$50>>24;
  $55 = $5;
  $56 = $55;
  $57 = HEAP32[$56>>2]|0;
  $58 = (($55) + 4)|0;
  $59 = $58;
  $60 = HEAP32[$59>>2]|0;
  $61 = $44;
  $62 = $61;
  HEAP8[$62>>0]=$57&255;HEAP8[$62+1>>0]=($57>>8)&255;HEAP8[$62+2>>0]=($57>>16)&255;HEAP8[$62+3>>0]=$57>>24;
  $63 = (($61) + 4)|0;
  $64 = $63;
  HEAP8[$64>>0]=$60&255;HEAP8[$64+1>>0]=($60>>8)&255;HEAP8[$64+2>>0]=($60>>16)&255;HEAP8[$64+3>>0]=$60>>24;
 }
 STACKTOP = sp;return;
}
function _mb_attempt_close_bracket($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$077 = 0, $$078 = 0, $$1 = 0, $$in = 0, $$in83 = 0, $$pn = 0, $$pn$in = 0, $$sink10 = 0, $$sink82 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 do {
  if ($or$cond) {
   $4 = HEAP32[$1>>2]|0;
   $5 = ($4|0)==(0|0);
   if ($5) {
    $6 = ((($0)) + 67|0);
    $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
    $8 = (__set_current_error($0,32,$7)|0);
    $9 = ($8<<24>>24)==(0);
    if ($9) {
     $$078 = 0;$$1 = 0;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$078 = 3;$$1 = 0;
    break;
   }
   $10 = ((($0)) + 130|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   (__ls_popback($11)|0);
   $$sink82 = $4;
   L7: while(1) {
    $12 = HEAPU8[$$sink82>>0]|(HEAPU8[$$sink82+1>>0]<<8)|(HEAPU8[$$sink82+2>>0]<<16)|(HEAPU8[$$sink82+3>>0]<<24);
    $$0 = $12;$$077 = $$sink82;
    while(1) {
     $13 = ($$0|0)==(0|0);
     if ($13) {
      break L7;
     }
     $14 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
     switch ($14|0) {
     case 8:  {
      label = 10;
      break L7;
      break;
     }
     case 22:  {
      break;
     }
     default: {
      break L7;
     }
     }
     $15 = ((($$077)) + 8|0);
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ($16|0)==(0|0);
     if ($17) {
      $$0 = 0;$$077 = 0;
     } else {
      $$sink82 = $16;
      continue L7;
     }
    }
   }
   if ((label|0) == 10) {
    $18 = ((($$0)) + 4|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ($21|0)==(23|0);
    if ($22) {
     $44 = ($$077|0)==(0|0);
     if ($44) {
      $$078 = 0;$$1 = 0;
      break;
     }
     $45 = ((($$077)) + 8|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $$078 = 0;$$1 = $46;
     break;
    }
   }
   $23 = ($$077|0)!=(0|0);
   if ($23) {
    $24 = HEAPU8[$$077>>0]|(HEAPU8[$$077+1>>0]<<8)|(HEAPU8[$$077+2>>0]<<16)|(HEAPU8[$$077+3>>0]<<24);
    $25 = ($24|0)==(0|0);
    if ($25) {
     label = 20;
    }
   } else {
    $26 = HEAP32[$1>>2]|0;
    $27 = ($26|0)==(0|0);
    if ($27) {
     label = 20;
    } else {
     $28 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $29 = ($28|0)==(0|0);
     if ($29) {
      label = 20;
     }
    }
   }
   if ((label|0) == 20) {
    $40 = ((($0)) + 67|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = (__set_current_error($0,32,$41)|0);
    $43 = ($42<<24>>24)==(0);
    if ($43) {
     $$078 = 0;$$1 = $$077;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$078 = 3;$$1 = $$077;
    break;
   }
   $30 = ((($0)) + 67|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = (__set_current_error($0,32,$31)|0);
   $33 = ($32<<24>>24)==(0);
   if ($33) {
    $$078 = 0;$$1 = $$077;
   } else {
    if ($23) {
     $$pn$in = $$077;$$sink10 = $$077;
    } else {
     $34 = HEAP32[$1>>2]|0;
     $$pn$in = $34;$$sink10 = $34;
    }
    $$pn = HEAPU8[$$pn$in>>0]|(HEAPU8[$$pn$in+1>>0]<<8)|(HEAPU8[$$pn$in+2>>0]<<16)|(HEAPU8[$$pn$in+3>>0]<<24);
    $$in83 = ((($$pn)) + 9|0);
    $$in = ((($$pn)) + 13|0);
    $35 = HEAPU8[$$in83>>0]|(HEAPU8[$$in83+1>>0]<<8)|(HEAPU8[$$in83+2>>0]<<16)|(HEAPU8[$$in83+3>>0]<<24);
    $36 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8);
    $37 = HEAPU8[$$sink10>>0]|(HEAPU8[$$sink10+1>>0]<<8)|(HEAPU8[$$sink10+2>>0]<<16)|(HEAPU8[$$sink10+3>>0]<<24);
    $38 = ((($37)) + 15|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
    __set_error_pos($0,$35,$36,$39);
    $$078 = 3;$$1 = $$077;
   }
  } else {
   $$078 = 3;$$1 = 0;
  }
 } while(0);
 HEAP32[$1>>2] = $$1;
 return ($$078|0);
}
function _mb_push_value($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  $6 = ((($0)) + 75|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ((($7)) + 20|0);
  __assign_public_value($0,$8,$2,0);
  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
  (__public_value_to_internal_object($8,$3)|0);
  $9 = HEAP32[$3>>2]|0;
  switch ($9|0) {
  case 7:  {
   $10 = ((($3)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   __ref($11,$11);
   break;
  }
  case 10:  {
   $12 = ((($3)) + 8|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   if ($15) {
    $16 = ((($3)) + 4|0);
    $17 = HEAP32[$16>>2]|0;
    __ref($17,$17);
   }
   break;
  }
  case 11:  {
   $18 = ((($3)) + 4|0);
   $19 = HEAP32[$18>>2]|0;
   __ref($19,$19);
   break;
  }
  case 13:  {
   $20 = ((($3)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   __ref($21,$21);
   break;
  }
  case 16:  {
   $22 = ((($3)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   __ref($23,$23);
   break;
  }
  case 17:  {
   $24 = ((($3)) + 8|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $28 = ((($3)) + 4|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ((($29)) + 58|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ($31|0)==(2);
    if ($32) {
     __ref($29,$29);
    }
   }
   break;
  }
  default: {
  }
  }
  __gc_try_trigger($0);
  $$0 = 0;
 } else {
  $$0 = 3;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($0|0);
 if (!($4)) {
  ___assert_fail((2413|0),(1578|0),6311,(3444|0));
  // unreachable;
 }
 $5 = (($3) + 1)|0;
 HEAP32[$2>>2] = $5;
 $6 = ($3|0)==(-1);
 if ($6) {
  ___assert_fail((3449|0),(1578|0),6315,(3444|0));
  // unreachable;
 } else {
  return;
 }
}
function __gc_try_trigger($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = ((($0)) + 21|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = (__ht_count($3)|0);
  $5 = ($4>>>0)>(15);
  if ($5) {
   __gc_collect_garbage($0,1);
  }
 }
 return;
}
function __ht_count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2281|0),(1578|0),3115,(3434|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 16|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  return ($3|0);
 }
 return (0)|0;
}
function __gc_collect_garbage($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in309 = 0, $$0262313 = 0, $$0263 = 0, $$0263$in = 0, $$0263$in303 = 0, $$0263304 = 0, $$0263305 = 0, $$0264307 = 0, $$0265 = 0, $$0265$in = 0, $$0265$in298 = 0, $$0265299 = 0, $$0265300 = 0, $$0266301 = 0, $$0267 = 0, $$0267$in = 0, $$0267$in315 = 0, $$0267316 = 0;
 var $$0267317 = 0, $$0268319 = 0, $$0269 = 0, $$0269$in = 0, $$0269$in321 = 0, $$0269322 = 0, $$0269323 = 0, $$0270325 = 0, $$0271 = 0, $$0271$in = 0, $$0271$in327 = 0, $$0271328 = 0, $$0271329 = 0, $$0272$lcssa = 0, $$0310 = 0, $$0311 = 0, $$phi$trans$insert = 0, $$phi$trans$insert343 = 0, $$phi$trans$insert348 = 0, $$pre = 0;
 var $$pre336 = 0, $$pre337 = 0, $$pre338 = 0, $$pre339 = 0, $$pre340 = 0, $$pre344 = 0, $$pre345 = 0, $$pre349 = 0, $$pre350 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1649|0),(1578|0),6917,(2245|0));
  // unreachable;
 }
 $4 = (_mb_get_forked_from($0,$2)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  while(1) {
   $6 = HEAP32[$2>>2]|0;
   $7 = (_mb_get_forked_from($6,$2)|0);
   $8 = ($7|0)==(0);
   if (!($8)) {
    $$0272$lcssa = $6;
    break;
   }
  }
 } else {
  $$0272$lcssa = $0;
 }
 $9 = ((($$0272$lcssa)) + 21|0);
 $10 = ((($$0272$lcssa)) + 38|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 & 1;
 $13 = ($12<<24>>24)==(0);
 if ($13) {
  $14 = ((($$0272$lcssa)) + 37|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   HEAP8[$14>>0] = 1;
   $17 = (__ht_create(123,124,125)|0);
   $18 = ($1|0)==(-1);
   if (!($18)) {
    $19 = ((($$0272$lcssa)) + 33|0);
    HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
   }
   __gc_get_reachable($$0272$lcssa,$17,0);
   $20 = ((($$0272$lcssa)) + 8|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ($21|0)==(0|0);
   if (!($22)) {
    $$0271$in327 = ((($21)) + 8|0);
    $$0271328 = HEAPU8[$$0271$in327>>0]|(HEAPU8[$$0271$in327+1>>0]<<8)|(HEAPU8[$$0271$in327+2>>0]<<16)|(HEAPU8[$$0271$in327+3>>0]<<24);
    $23 = ($$0271328|0)==(0|0);
    if (!($23)) {
     $$0271329 = $$0271328;
     while(1) {
      $24 = HEAPU8[$$0271329>>0]|(HEAPU8[$$0271329+1>>0]<<8)|(HEAPU8[$$0271329+2>>0]<<16)|(HEAPU8[$$0271329+3>>0]<<24);
      __gc_get_reachable_in_forked($24,$17);
      $$0271$in = ((($$0271329)) + 8|0);
      $$0271 = HEAPU8[$$0271$in>>0]|(HEAPU8[$$0271$in+1>>0]<<8)|(HEAPU8[$$0271$in+2>>0]<<16)|(HEAPU8[$$0271$in+3>>0]<<24);
      $25 = ($$0271|0)==(0|0);
      if ($25) {
       break;
      } else {
       $$0271329 = $$0271;
      }
     }
    }
   }
   $26 = ((($$0272$lcssa)) + 151|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)==(0|0);
   if (!($28)) {
    FUNCTION_TABLE_viii[$27 & 255]($$0272$lcssa,$17,133);
   }
   $29 = ((($17)) + 20|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = ($30|0)==(0|0);
   L22: do {
    if (!($31)) {
     $32 = ((($17)) + 12|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = ($33|0)==(0);
     if (!($34)) {
      $$0270325 = 0;$139 = $33;$38 = $30;
      while(1) {
       $37 = (($38) + ($$0270325<<2)|0);
       $39 = HEAP32[$37>>2]|0;
       $40 = ($39|0)==(0|0);
       if ($40) {
        $48 = $139;$49 = $38;
       } else {
        $$0269$in321 = ((($39)) + 8|0);
        $$0269322 = HEAPU8[$$0269$in321>>0]|(HEAPU8[$$0269$in321+1>>0]<<8)|(HEAPU8[$$0269$in321+2>>0]<<16)|(HEAPU8[$$0269$in321+3>>0]<<24);
        $41 = ($$0269322|0)==(0|0);
        if ($41) {
         $48 = $139;$49 = $38;
        } else {
         $$0269323 = $$0269322;
         while(1) {
          $42 = ((($$0269323)) + 12|0);
          $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
          $44 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
          __ht_remove_existing($43,$44);
          $$0269$in = ((($$0269323)) + 8|0);
          $$0269 = HEAPU8[$$0269$in>>0]|(HEAPU8[$$0269$in+1>>0]<<8)|(HEAPU8[$$0269$in+2>>0]<<16)|(HEAPU8[$$0269$in+3>>0]<<24);
          $45 = ($$0269|0)==(0|0);
          if ($45) {
           break;
          } else {
           $$0269323 = $$0269;
          }
         }
         $$pre = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $$pre336 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
         $48 = $$pre;$49 = $$pre336;
        }
       }
       $46 = (($$0270325) + 1)|0;
       $47 = ($46>>>0)<($48>>>0);
       if ($47) {
        $$0270325 = $46;$139 = $48;$38 = $49;
       } else {
        break;
       }
      }
      $50 = ($49|0)==(0|0);
      $51 = ($48|0)==(0);
      $or$cond = $50 | $51;
      if (!($or$cond)) {
       $52 = ((($$0272$lcssa)) + 25|0);
       $$0268319 = 0;$140 = $48;$54 = $49;
       while(1) {
        $53 = (($54) + ($$0268319<<2)|0);
        $55 = HEAP32[$53>>2]|0;
        $56 = ($55|0)==(0|0);
        if ($56) {
         $64 = $140;
        } else {
         $$0267$in315 = ((($55)) + 8|0);
         $$0267316 = HEAPU8[$$0267$in315>>0]|(HEAPU8[$$0267$in315+1>>0]<<8)|(HEAPU8[$$0267$in315+2>>0]<<16)|(HEAPU8[$$0267$in315+3>>0]<<24);
         $57 = ($$0267316|0)==(0|0);
         if ($57) {
          $64 = $140;
         } else {
          $$0267317 = $$0267316;
          while(1) {
           $58 = ((($$0267317)) + 12|0);
           $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
           $60 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
           __ht_remove_existing($59,$60);
           $$0267$in = ((($$0267317)) + 8|0);
           $$0267 = HEAPU8[$$0267$in>>0]|(HEAPU8[$$0267$in+1>>0]<<8)|(HEAPU8[$$0267$in+2>>0]<<16)|(HEAPU8[$$0267$in+3>>0]<<24);
           $61 = ($$0267|0)==(0|0);
           if ($61) {
            break;
           } else {
            $$0267317 = $$0267;
           }
          }
          $$pre338 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
          $64 = $$pre338;
         }
        }
        $62 = (($$0268319) + 1)|0;
        $63 = ($62>>>0)<($64>>>0);
        if (!($63)) {
         break L22;
        }
        $$pre337 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
        $$0268319 = $62;$140 = $64;$54 = $$pre337;
       }
      }
     }
    }
   } while(0);
   $35 = ((($$0272$lcssa)) + 25|0);
   $36 = ($1|0)==(0);
   while(1) {
    $65 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $66 = ((($65)) + 20|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = ($67|0)==(0|0);
    L47: do {
     if ($68) {
      $124 = $65;
     } else {
      $69 = ((($65)) + 12|0);
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
      $71 = ($70|0)==(0);
      if ($71) {
       $141 = $67;$88 = $65;
      } else {
       $$0266301 = 0;$142 = $65;$73 = $67;
       while(1) {
        $72 = (($73) + ($$0266301<<2)|0);
        $74 = HEAP32[$72>>2]|0;
        $75 = ($74|0)==(0|0);
        if ($75) {
         $83 = $142;
        } else {
         $$0265$in298 = ((($74)) + 8|0);
         $$0265299 = HEAPU8[$$0265$in298>>0]|(HEAPU8[$$0265$in298+1>>0]<<8)|(HEAPU8[$$0265$in298+2>>0]<<16)|(HEAPU8[$$0265$in298+3>>0]<<24);
         $76 = ($$0265299|0)==(0|0);
         if ($76) {
          $83 = $142;
         } else {
          $$0265300 = $$0265299;
          while(1) {
           $77 = HEAPU8[$$0265300>>0]|(HEAPU8[$$0265300+1>>0]<<8)|(HEAPU8[$$0265300+2>>0]<<16)|(HEAPU8[$$0265300+3>>0]<<24);
           $78 = ((($$0265300)) + 12|0);
           $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
           __gc_destroy_garbage_class($77,$79,$9);
           $$0265$in = ((($$0265300)) + 8|0);
           $$0265 = HEAPU8[$$0265$in>>0]|(HEAPU8[$$0265$in+1>>0]<<8)|(HEAPU8[$$0265$in+2>>0]<<16)|(HEAPU8[$$0265$in+3>>0]<<24);
           $80 = ($$0265|0)==(0|0);
           if ($80) {
            break;
           } else {
            $$0265300 = $$0265;
           }
          }
          $$pre340 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
          $83 = $$pre340;
         }
        }
        $81 = (($$0266301) + 1)|0;
        $82 = ((($83)) + 12|0);
        $84 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
        $85 = ($81>>>0)<($84>>>0);
        $$phi$trans$insert = ((($83)) + 20|0);
        $$pre339 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
        if ($85) {
         $$0266301 = $81;$142 = $83;$73 = $$pre339;
        } else {
         break;
        }
       }
       $86 = ($$pre339|0)==(0|0);
       if ($86) {
        $124 = $83;
        break;
       } else {
        $141 = $$pre339;$88 = $83;
       }
      }
      $87 = ((($88)) + 12|0);
      $89 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
      $90 = ($89|0)==(0);
      if ($90) {
       $107 = $88;$143 = $141;
      } else {
       $$0264307 = 0;$144 = $88;$92 = $141;
       while(1) {
        $91 = (($92) + ($$0264307<<2)|0);
        $93 = HEAP32[$91>>2]|0;
        $94 = ($93|0)==(0|0);
        if ($94) {
         $102 = $144;
        } else {
         $$0263$in303 = ((($93)) + 8|0);
         $$0263304 = HEAPU8[$$0263$in303>>0]|(HEAPU8[$$0263$in303+1>>0]<<8)|(HEAPU8[$$0263$in303+2>>0]<<16)|(HEAPU8[$$0263$in303+3>>0]<<24);
         $95 = ($$0263304|0)==(0|0);
         if ($95) {
          $102 = $144;
         } else {
          $$0263305 = $$0263304;
          while(1) {
           $96 = HEAPU8[$$0263305>>0]|(HEAPU8[$$0263305+1>>0]<<8)|(HEAPU8[$$0263305+2>>0]<<16)|(HEAPU8[$$0263305+3>>0]<<24);
           $97 = ((($$0263305)) + 12|0);
           $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
           __gc_destroy_garbage($96,$98,$9);
           $$0263$in = ((($$0263305)) + 8|0);
           $$0263 = HEAPU8[$$0263$in>>0]|(HEAPU8[$$0263$in+1>>0]<<8)|(HEAPU8[$$0263$in+2>>0]<<16)|(HEAPU8[$$0263$in+3>>0]<<24);
           $99 = ($$0263|0)==(0|0);
           if ($99) {
            break;
           } else {
            $$0263305 = $$0263;
           }
          }
          $$pre345 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
          $102 = $$pre345;
         }
        }
        $100 = (($$0264307) + 1)|0;
        $101 = ((($102)) + 12|0);
        $103 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
        $104 = ($100>>>0)<($103>>>0);
        $$phi$trans$insert343 = ((($102)) + 20|0);
        $$pre344 = HEAPU8[$$phi$trans$insert343>>0]|(HEAPU8[$$phi$trans$insert343+1>>0]<<8)|(HEAPU8[$$phi$trans$insert343+2>>0]<<16)|(HEAPU8[$$phi$trans$insert343+3>>0]<<24);
        if ($104) {
         $$0264307 = $100;$144 = $102;$92 = $$pre344;
        } else {
         break;
        }
       }
       $105 = ($$pre344|0)==(0|0);
       if ($105) {
        $124 = $102;
        break;
       } else {
        $107 = $102;$143 = $$pre344;
       }
      }
      $106 = ((($107)) + 12|0);
      $108 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
      $109 = ($108|0)==(0);
      if ($109) {
       $124 = $107;
      } else {
       $$0262313 = 0;$111 = $143;$145 = $107;
       while(1) {
        $110 = (($111) + ($$0262313<<2)|0);
        $112 = HEAP32[$110>>2]|0;
        $113 = ($112|0)==(0|0);
        if ($113) {
         $121 = $145;
        } else {
         $$0$in309 = ((($112)) + 8|0);
         $$0310 = HEAPU8[$$0$in309>>0]|(HEAPU8[$$0$in309+1>>0]<<8)|(HEAPU8[$$0$in309+2>>0]<<16)|(HEAPU8[$$0$in309+3>>0]<<24);
         $114 = ($$0310|0)==(0|0);
         if ($114) {
          $121 = $145;
         } else {
          $$0311 = $$0310;
          while(1) {
           $115 = HEAPU8[$$0311>>0]|(HEAPU8[$$0311+1>>0]<<8)|(HEAPU8[$$0311+2>>0]<<16)|(HEAPU8[$$0311+3>>0]<<24);
           $116 = ((($$0311)) + 12|0);
           $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
           __gc_destroy_garbage_outer_scope($115,$117,$9);
           $$0$in = ((($$0311)) + 8|0);
           $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
           $118 = ($$0|0)==(0|0);
           if ($118) {
            break;
           } else {
            $$0311 = $$0;
           }
          }
          $$pre350 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
          $121 = $$pre350;
         }
        }
        $119 = (($$0262313) + 1)|0;
        $120 = ((($121)) + 12|0);
        $122 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
        $123 = ($119>>>0)<($122>>>0);
        if (!($123)) {
         $124 = $121;
         break L47;
        }
        $$phi$trans$insert348 = ((($121)) + 20|0);
        $$pre349 = HEAPU8[$$phi$trans$insert348>>0]|(HEAPU8[$$phi$trans$insert348+1>>0]<<8)|(HEAPU8[$$phi$trans$insert348+2>>0]<<16)|(HEAPU8[$$phi$trans$insert348+3>>0]<<24);
        $$0262313 = $119;$111 = $$pre349;$145 = $121;
       }
      }
     }
    } while(0);
    __ht_clear($124);
    $125 = HEAP8[$14>>0]|0;
    $126 = ($125&255)>(1);
    if ($126) {
     $127 = (($125) + -1)<<24>>24;
     HEAP8[$14>>0] = $127;
    }
    if ($36) {
     break;
    }
    $128 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $129 = (__ht_count($128)|0);
    $130 = ($129|0)==(0);
    if ($130) {
     break;
    }
    __gc_swap_tables($$0272$lcssa);
    $131 = HEAP8[$14>>0]|0;
    $132 = (($131) + 1)<<24>>24;
    HEAP8[$14>>0] = $132;
   }
   $133 = ((($$0272$lcssa)) + 29|0);
   $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
   __ht_clear($134);
   $135 = ((($$0272$lcssa)) + 33|0);
   HEAP8[$135>>0]=0&255;HEAP8[$135+1>>0]=(0>>8)&255;HEAP8[$135+2>>0]=(0>>16)&255;HEAP8[$135+3>>0]=0>>24;
   __ht_clear($17);
   __ht_destroy($17);
   $136 = HEAP8[$14>>0]|0;
   $137 = (($136) + -1)<<24>>24;
   HEAP8[$14>>0] = $137;
   $138 = ($137<<24>>24)==(0);
   if (!($138)) {
    ___assert_fail((2265|0),(1578|0),6981,(2245|0));
    // unreachable;
   }
  }
 }
 STACKTOP = sp;return;
}
function _mb_get_forked_from($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$0 = 3;
  } else {
   HEAP32[$1>>2] = $4;
   $$0 = 0;
  }
 } else {
  $$0 = 3;
 }
 return ($$0|0);
}
function __gc_get_reachable($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$0$in58 = 0, $$05361 = 0, $$054 = 0, $$05463 = 0, $$05465 = 0, $$059 = 0, $$060 = 0, $$pre = 0, $$pre67 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond55 = 0, $or$cond5564 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((3408|0),(1578|0),6603,(3416|0));
  // unreachable;
 }
 $5 = ((($0)) + 75|0);
 $$05463 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $6 = ($$05463|0)==(0|0);
 $7 = ($$05463|0)==($2|0);
 $or$cond5564 = $6 | $7;
 if (!($or$cond5564)) {
  $$05465 = $$05463;
  while(1) {
   $8 = ((($$05465)) + 8|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)==(0|0);
   L8: do {
    if (!($10)) {
     $11 = ((($9)) + 20|0);
     $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
     $13 = ($12|0)==(0|0);
     if (!($13)) {
      $14 = ((($9)) + 12|0);
      $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
      $16 = ($15|0)==(0);
      if (!($16)) {
       $$05361 = 0;$18 = $12;$31 = $15;
       while(1) {
        $17 = (($18) + ($$05361<<2)|0);
        $19 = HEAP32[$17>>2]|0;
        $20 = ($19|0)==(0|0);
        if ($20) {
         $28 = $31;
        } else {
         $$0$in58 = ((($19)) + 8|0);
         $$059 = HEAPU8[$$0$in58>>0]|(HEAPU8[$$0$in58+1>>0]<<8)|(HEAPU8[$$0$in58+2>>0]<<16)|(HEAPU8[$$0$in58+3>>0]<<24);
         $21 = ($$059|0)==(0|0);
         if ($21) {
          $28 = $31;
         } else {
          $$060 = $$059;
          while(1) {
           $22 = HEAPU8[$$060>>0]|(HEAPU8[$$060+1>>0]<<8)|(HEAPU8[$$060+2>>0]<<16)|(HEAPU8[$$060+3>>0]<<24);
           $23 = ((($$060)) + 12|0);
           $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
           (__gc_add_reachable($22,$24,$1)|0);
           $$0$in = ((($$060)) + 8|0);
           $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
           $25 = ($$0|0)==(0|0);
           if ($25) {
            break;
           } else {
            $$060 = $$0;
           }
          }
          $$pre67 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
          $28 = $$pre67;
         }
        }
        $26 = (($$05361) + 1)|0;
        $27 = ($26>>>0)<($28>>>0);
        if (!($27)) {
         break L8;
        }
        $$pre = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
        $$05361 = $26;$18 = $$pre;$31 = $28;
       }
      }
     }
    }
   } while(0);
   $$054 = HEAPU8[$$05465>>0]|(HEAPU8[$$05465+1>>0]<<8)|(HEAPU8[$$05465+2>>0]<<16)|(HEAPU8[$$05465+3>>0]<<24);
   $29 = ($$054|0)==(0|0);
   $30 = ($$054|0)==($2|0);
   $or$cond55 = $29 | $30;
   if ($or$cond55) {
    break;
   } else {
    $$05465 = $$054;
   }
  }
 }
 return;
}
function __gc_get_reachable_in_forked($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),6588,(3380|0));
  // unreachable;
 } else {
  $3 = ((($0)) + 75|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $5 = (__get_root_scope($4)|0);
  __gc_get_reachable($0,$1,$5);
  return;
 }
}
function __gc_alive_marker($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
 (__public_value_to_internal_object($2,$3)|0);
 (__gc_add_reachable($3,0,$1)|0);
 STACKTOP = sp;return;
}
function __ht_remove_existing($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ht_find($1,$0)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  (__ht_remove($1,$0,0)|0);
 }
 return;
}
function __gc_destroy_garbage_class($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$0$in4 = 0, $$05 = 0, $$06 = 0, $$0647 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2367|0),(1578|0),6812,(3105|0));
  // unreachable;
 }
 $5 = ((($2)) + 8|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = (__ht_find($6,$1)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $9 = ((($1)) + 12|0);
  $10 = HEAP8[$9>>0]|0;
  $cond = ($10<<24>>24)==(16);
  if ($cond) {
   $11 = ((($0)) + 29|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ((($12)) + 8|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 20|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)==(0|0);
   L7: do {
    if ($17) {
     $35 = $14;
    } else {
     $18 = ((($14)) + 12|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ($19|0)==(0);
     if ($20) {
      $35 = $14;
     } else {
      $$0647 = 0;$22 = $16;$46 = $12;
      while(1) {
       $21 = (($22) + ($$0647<<2)|0);
       $23 = HEAP32[$21>>2]|0;
       $24 = ($23|0)==(0|0);
       if ($24) {
        $30 = $46;
       } else {
        $$0$in4 = ((($23)) + 8|0);
        $$05 = HEAPU8[$$0$in4>>0]|(HEAPU8[$$0$in4+1>>0]<<8)|(HEAPU8[$$0$in4+2>>0]<<16)|(HEAPU8[$$0$in4+3>>0]<<24);
        $25 = ($$05|0)==(0|0);
        if ($25) {
         $30 = $46;
        } else {
         $$06 = $$05;
         while(1) {
          $26 = HEAPU8[$$06>>0]|(HEAPU8[$$06+1>>0]<<8)|(HEAPU8[$$06+2>>0]<<16)|(HEAPU8[$$06+3>>0]<<24);
          __gc_destroy_garbage_in_class($26,$2);
          $$0$in = ((($$06)) + 8|0);
          $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
          $27 = ($$0|0)==(0|0);
          if ($27) {
           break;
          } else {
           $$06 = $$0;
          }
         }
         $$pre9 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
         $30 = $$pre9;
        }
       }
       $28 = (($$0647) + 1)|0;
       $29 = ((($30)) + 8|0);
       $31 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
       $32 = ((($31)) + 12|0);
       $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
       $34 = ($28>>>0)<($33>>>0);
       if (!($34)) {
        $35 = $31;
        break L7;
       }
       $$phi$trans$insert = ((($31)) + 20|0);
       $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
       $$0647 = $28;$22 = $$pre;$46 = $30;
      }
     }
    }
   } while(0);
   __ht_clear($35);
   $36 = ((($0)) + 25|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   __ls_clear($37);
   $38 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $39 = ((($38)) + 32|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ($40|0)==(0|0);
   if (!($41)) {
    __ls_destroy($40);
    $42 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    $43 = ((($42)) + 32|0);
    HEAP8[$43>>0]=0&255;HEAP8[$43+1>>0]=(0>>8)&255;HEAP8[$43+2>>0]=(0>>16)&255;HEAP8[$43+3>>0]=0>>24;
   }
   $44 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
   $45 = ($44|0)==(0|0);
   if (!($45)) {
    __unref($1,$0);
   }
  }
 }
 return;
}
function __gc_destroy_garbage($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$0$in27 = 0, $$019031 = 0, $$0191 = 0, $$0191$in = 0, $$0191$in36 = 0, $$019137 = 0, $$019138 = 0, $$019240 = 0, $$0193 = 0, $$0193$in = 0, $$0193$in21 = 0, $$019322 = 0, $$019323 = 0, $$019425 = 0, $$0195 = 0, $$0195$in = 0, $$0195$in18 = 0, $$019519 = 0;
 var $$019520 = 0, $$019633 = 0, $$028 = 0, $$029 = 0, $$phi$trans$insert = 0, $$phi$trans$insert43 = 0, $$phi$trans$insert46 = 0, $$pre = 0, $$pre42 = 0, $$pre44 = 0, $$pre45 = 0, $$pre47 = 0, $$pre48 = 0, $$pre49 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2367|0),(1578|0),6738,(2956|0));
  // unreachable;
 }
 $5 = ((($2)) + 8|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = (__ht_find($6,$1)|0);
 $8 = ($7|0)==(0|0);
 L4: do {
  if ($8) {
   $9 = ((($1)) + 12|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 << 24 >> 24;
   L6: do {
    switch ($11|0) {
    case 11:  {
     $12 = ((($0)) + 19|0);
     $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $14 = ($13|0)==(0|0);
     if ($14) {
      ___assert_fail((2976|0),(1578|0),6750,(2956|0));
      // unreachable;
     }
     $$0195$in18 = ((($13)) + 8|0);
     $$019519 = HEAPU8[$$0195$in18>>0]|(HEAPU8[$$0195$in18+1>>0]<<8)|(HEAPU8[$$0195$in18+2>>0]<<16)|(HEAPU8[$$0195$in18+3>>0]<<24);
     $15 = ($$019519|0)==(0|0);
     if ($15) {
      $18 = $13;
     } else {
      $$019520 = $$019519;
      while(1) {
       $16 = HEAPU8[$$019520>>0]|(HEAPU8[$$019520+1>>0]<<8)|(HEAPU8[$$019520+2>>0]<<16)|(HEAPU8[$$019520+3>>0]<<24);
       __gc_destroy_garbage_in_list($16,$2);
       $$0195$in = ((($$019520)) + 8|0);
       $$0195 = HEAPU8[$$0195$in>>0]|(HEAPU8[$$0195$in+1>>0]<<8)|(HEAPU8[$$0195$in+2>>0]<<16)|(HEAPU8[$$0195$in+3>>0]<<24);
       $17 = ($$0195|0)==(0|0);
       if ($17) {
        break;
       } else {
        $$019520 = $$0195;
       }
      }
      $$pre49 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
      $18 = $$pre49;
     }
     __ls_clear($18);
     $19 = ((($0)) + 31|0);
     HEAP8[$19>>0]=0&255;HEAP8[$19+1>>0]=(0>>8)&255;HEAP8[$19+2>>0]=(0>>16)&255;HEAP8[$19+3>>0]=0>>24;
     break;
    }
    case 13:  {
     $20 = ((($0)) + 19|0);
     $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
     $22 = ((($21)) + 20|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ($23|0)==(0|0);
     L17: do {
      if ($24) {
       $42 = $21;
      } else {
       $25 = ((($21)) + 12|0);
       $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
       $27 = ($26|0)==(0);
       if ($27) {
        $42 = $21;
       } else {
        $$019425 = 0;$109 = $21;$29 = $23;
        while(1) {
         $28 = (($29) + ($$019425<<2)|0);
         $30 = HEAP32[$28>>2]|0;
         $31 = ($30|0)==(0|0);
         if ($31) {
          $39 = $109;
         } else {
          $$0193$in21 = ((($30)) + 8|0);
          $$019322 = HEAPU8[$$0193$in21>>0]|(HEAPU8[$$0193$in21+1>>0]<<8)|(HEAPU8[$$0193$in21+2>>0]<<16)|(HEAPU8[$$0193$in21+3>>0]<<24);
          $32 = ($$019322|0)==(0|0);
          if ($32) {
           $39 = $109;
          } else {
           $$019323 = $$019322;
           while(1) {
            $33 = HEAPU8[$$019323>>0]|(HEAPU8[$$019323+1>>0]<<8)|(HEAPU8[$$019323+2>>0]<<16)|(HEAPU8[$$019323+3>>0]<<24);
            $34 = ((($$019323)) + 12|0);
            $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
            __gc_destroy_garbage_in_dict($33,$35,$2);
            $$0193$in = ((($$019323)) + 8|0);
            $$0193 = HEAPU8[$$0193$in>>0]|(HEAPU8[$$0193$in+1>>0]<<8)|(HEAPU8[$$0193$in+2>>0]<<16)|(HEAPU8[$$0193$in+3>>0]<<24);
            $36 = ($$0193|0)==(0|0);
            if ($36) {
             break;
            } else {
             $$019323 = $$0193;
            }
           }
           $$pre48 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
           $39 = $$pre48;
          }
         }
         $37 = (($$019425) + 1)|0;
         $38 = ((($39)) + 12|0);
         $40 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
         $41 = ($37>>>0)<($40>>>0);
         if (!($41)) {
          $42 = $39;
          break L17;
         }
         $$phi$trans$insert46 = ((($39)) + 20|0);
         $$pre47 = HEAPU8[$$phi$trans$insert46>>0]|(HEAPU8[$$phi$trans$insert46+1>>0]<<8)|(HEAPU8[$$phi$trans$insert46+2>>0]<<16)|(HEAPU8[$$phi$trans$insert46+3>>0]<<24);
         $$019425 = $37;$109 = $39;$29 = $$pre47;
        }
       }
      }
     } while(0);
     __ht_clear($42);
     break;
    }
    case 17:  {
     $43 = ((($0)) + 58|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $45 = ($44|0)==(2);
     if ($45) {
      $46 = ((($0)) + 17|0);
      $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $48 = ((($47)) + 8|0);
      $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      $50 = ((($49)) + 20|0);
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = ($51|0)==(0|0);
      L31: do {
       if ($52) {
        $70 = $49;
       } else {
        $53 = ((($49)) + 12|0);
        $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
        $55 = ($54|0)==(0);
        if ($55) {
         $70 = $49;
        } else {
         $$019240 = 0;$110 = $47;$57 = $51;
         while(1) {
          $56 = (($57) + ($$019240<<2)|0);
          $58 = HEAP32[$56>>2]|0;
          $59 = ($58|0)==(0|0);
          if ($59) {
           $65 = $110;
          } else {
           $$0191$in36 = ((($58)) + 8|0);
           $$019137 = HEAPU8[$$0191$in36>>0]|(HEAPU8[$$0191$in36+1>>0]<<8)|(HEAPU8[$$0191$in36+2>>0]<<16)|(HEAPU8[$$0191$in36+3>>0]<<24);
           $60 = ($$019137|0)==(0|0);
           if ($60) {
            $65 = $110;
           } else {
            $$019138 = $$019137;
            while(1) {
             $61 = HEAPU8[$$019138>>0]|(HEAPU8[$$019138+1>>0]<<8)|(HEAPU8[$$019138+2>>0]<<16)|(HEAPU8[$$019138+3>>0]<<24);
             __gc_destroy_garbage_in_lambda($61,$2);
             $$0191$in = ((($$019138)) + 8|0);
             $$0191 = HEAPU8[$$0191$in>>0]|(HEAPU8[$$0191$in+1>>0]<<8)|(HEAPU8[$$0191$in+2>>0]<<16)|(HEAPU8[$$0191$in+3>>0]<<24);
             $62 = ($$0191|0)==(0|0);
             if ($62) {
              break;
             } else {
              $$019138 = $$0191;
             }
            }
            $$pre42 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
            $65 = $$pre42;
           }
          }
          $63 = (($$019240) + 1)|0;
          $64 = ((($65)) + 8|0);
          $66 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
          $67 = ((($66)) + 12|0);
          $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
          $69 = ($63>>>0)<($68>>>0);
          if (!($69)) {
           $70 = $66;
           break L31;
          }
          $$phi$trans$insert = ((($66)) + 20|0);
          $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
          $$019240 = $63;$110 = $65;$57 = $$pre;
         }
        }
       }
      } while(0);
      __ht_clear($70);
      $71 = ((($0)) + 25|0);
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
      $73 = ($72|0)==(0|0);
      if (!($73)) {
       $74 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
       $75 = (__ht_find($74,$72)|0);
       $76 = ($75|0)==(0|0);
       if ($76) {
        __gc_add($72,$72,$2);
       }
       HEAP8[$71>>0]=0&255;HEAP8[$71+1>>0]=(0>>8)&255;HEAP8[$71+2>>0]=(0>>16)&255;HEAP8[$71+3>>0]=0>>24;
       $$019633 = $72;
       while(1) {
        $77 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
        $78 = (__ht_find($77,$$019633)|0);
        $79 = ($78|0)==(0|0);
        if (!($79)) {
         break L6;
        }
        $80 = ((($$019633)) + 21|0);
        $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
        $82 = ((($81)) + 8|0);
        $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
        $84 = ((($83)) + 20|0);
        $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
        $86 = ($85|0)==(0|0);
        L50: do {
         if (!($86)) {
          $87 = ((($83)) + 12|0);
          $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
          $89 = ($88|0)==(0);
          if (!($89)) {
           $$019031 = 0;$111 = $81;$91 = $85;
           while(1) {
            $90 = (($91) + ($$019031<<2)|0);
            $92 = HEAP32[$90>>2]|0;
            $93 = ($92|0)==(0|0);
            if ($93) {
             $99 = $111;
            } else {
             $$0$in27 = ((($92)) + 8|0);
             $$028 = HEAPU8[$$0$in27>>0]|(HEAPU8[$$0$in27+1>>0]<<8)|(HEAPU8[$$0$in27+2>>0]<<16)|(HEAPU8[$$0$in27+3>>0]<<24);
             $94 = ($$028|0)==(0|0);
             if ($94) {
              $99 = $111;
             } else {
              $$029 = $$028;
              while(1) {
               $95 = HEAPU8[$$029>>0]|(HEAPU8[$$029+1>>0]<<8)|(HEAPU8[$$029+2>>0]<<16)|(HEAPU8[$$029+3>>0]<<24);
               __remove_this_lambda_from_upvalue($95,$0);
               $$0$in = ((($$029)) + 8|0);
               $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
               $96 = ($$0|0)==(0|0);
               if ($96) {
                break;
               } else {
                $$029 = $$0;
               }
              }
              $$pre45 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
              $99 = $$pre45;
             }
            }
            $97 = (($$019031) + 1)|0;
            $98 = ((($99)) + 8|0);
            $100 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
            $101 = ((($100)) + 12|0);
            $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
            $103 = ($97>>>0)<($102>>>0);
            if (!($103)) {
             break L50;
            }
            $$phi$trans$insert43 = ((($100)) + 20|0);
            $$pre44 = HEAPU8[$$phi$trans$insert43>>0]|(HEAPU8[$$phi$trans$insert43+1>>0]<<8)|(HEAPU8[$$phi$trans$insert43+2>>0]<<16)|(HEAPU8[$$phi$trans$insert43+3>>0]<<24);
            $$019031 = $97;$111 = $99;$91 = $$pre44;
           }
          }
         }
        } while(0);
        $104 = ((($$019633)) + 17|0);
        $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
        $106 = ($105|0)==(0|0);
        if ($106) {
         break;
        } else {
         $$019633 = $105;
        }
       }
      }
     }
     break;
    }
    case 10: case 7:  {
     break;
    }
    default: {
     break L4;
    }
    }
   } while(0);
   $107 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
   $108 = ($107|0)==(0|0);
   if (!($108)) {
    __unref($1,$0);
   }
  }
 } while(0);
 return;
}
function __gc_destroy_garbage_outer_scope($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2367|0),(1578|0),6858,(2381|0));
  // unreachable;
 }
 $5 = ((($2)) + 8|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = (__ht_find($6,$1)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $9 = ((($1)) + 12|0);
  $10 = HEAP8[$9>>0]|0;
  $cond = ($10<<24>>24)==(18);
  if ($cond) {
   $11 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $12 = (__ht_find($11,$0)|0);
   $13 = ($12|0)==(0|0);
   if ($13) {
    __gc_destroy_garbage_in_outer_scope($0,$2);
   }
   $14 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
   $15 = ($14|0)==(0|0);
   if (!($15)) {
    __unref($1,$0);
   }
  }
 }
 return;
}
function __ht_clear($0) {
 $0 = $0|0;
 var $$010 = 0, $$pre = 0, $$pre11 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2281|0),(1578|0),3123,(2357|0));
  // unreachable;
 }
 $2 = ((($0)) + 20|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($0)) + 12|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(0);
  L6: do {
   if (!($7)) {
    $$010 = 0;$16 = $6;$9 = $3;
    while(1) {
     $8 = (($9) + ($$010<<2)|0);
     $10 = HEAP32[$8>>2]|0;
     $11 = ($10|0)==(0|0);
     if ($11) {
      $14 = $16;
     } else {
      __ls_clear($10);
      $$pre11 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
      $14 = $$pre11;
     }
     $12 = (($$010) + 1)|0;
     $13 = ($12>>>0)<($14>>>0);
     if (!($13)) {
      break L6;
     }
     $$pre = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
     $$010 = $12;$16 = $14;$9 = $$pre;
    }
   }
  } while(0);
  $15 = ((($0)) + 16|0);
  HEAP8[$15>>0]=0&255;HEAP8[$15+1>>0]=(0>>8)&255;HEAP8[$15+2>>0]=(0>>16)&255;HEAP8[$15+3>>0]=0>>24;
 }
 return;
}
function __gc_swap_tables($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),6893,(2341|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 21|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($0)) + 25|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  HEAP8[$2>>0]=$5&255;HEAP8[$2+1>>0]=($5>>8)&255;HEAP8[$2+2>>0]=($5>>16)&255;HEAP8[$2+3>>0]=$5>>24;
  HEAP8[$4>>0]=$3&255;HEAP8[$4+1>>0]=($3>>8)&255;HEAP8[$4+2>>0]=($3>>16)&255;HEAP8[$4+3>>0]=$3>>24;
  return;
 }
}
function __ht_destroy($0) {
 $0 = $0|0;
 var $$017 = 0, $$lcssa = 0, $$pre = 0, $$pre19 = 0, $$pre20 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2281|0),(1578|0),3137,(2284|0));
  // unreachable;
 }
 $2 = ((($0)) + 20|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 do {
  if (!($4)) {
   $5 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   $6 = ($5|0)==(0|0);
   if ($6) {
    $18 = $3;
   } else {
    __ht_foreach($0,$5);
    $$pre = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $18 = $$pre;
   }
   $7 = ((($0)) + 12|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ($8|0)==(0);
   if ($9) {
    $$lcssa = $18;
   } else {
    $$017 = 0;$11 = $18;$19 = $8;
    while(1) {
     $10 = (($11) + ($$017<<2)|0);
     $12 = HEAP32[$10>>2]|0;
     $13 = ($12|0)==(0|0);
     if ($13) {
      $16 = $19;$20 = $11;
     } else {
      __ls_destroy($12);
      $$pre19 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $$pre20 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
      $16 = $$pre19;$20 = $$pre20;
     }
     $14 = (($$017) + 1)|0;
     $15 = ($14>>>0)<($16>>>0);
     if ($15) {
      $$017 = $14;$11 = $20;$19 = $16;
     } else {
      $$lcssa = $20;
      break;
     }
    }
   }
   $17 = ($$lcssa|0)==(0|0);
   if ($17) {
    ___assert_fail((1713|0),(1578|0),3148,(2284|0));
    // unreachable;
   } else {
    _mb_free($$lcssa);
    HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
    break;
   }
  }
 } while(0);
 _mb_free($0);
 return;
}
function __ht_foreach($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$02 = 0, $$pre = 0, $$pre3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 L1: do {
  if (!($4)) {
   $5 = ((($0)) + 12|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = ($6|0)==(0);
   if (!($7)) {
    $$02 = 0;$15 = $6;$9 = $3;
    while(1) {
     $8 = (($9) + ($$02<<2)|0);
     $10 = HEAP32[$8>>2]|0;
     $11 = ($10|0)==(0|0);
     if ($11) {
      $14 = $15;
     } else {
      (__ls_foreach($10,$1)|0);
      $$pre3 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
      $14 = $$pre3;
     }
     $12 = (($$02) + 1)|0;
     $13 = ($12>>>0)<($14>>>0);
     if (!($13)) {
      break L1;
     }
     $$pre = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
     $$02 = $12;$15 = $14;$9 = $$pre;
    }
   }
  }
 } while(0);
 return;
}
function __ls_destroy($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ls_clear($0);
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1713|0),(1578|0),2724,(2296|0));
  // unreachable;
 } else {
  _mb_free($0);
  return;
 }
}
function __ls_clear($0) {
 $0 = $0|0;
 var $$in1314 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1847|0),(1578|0),2706,(2308|0));
  // unreachable;
 }
 HEAP8[$0>>0]=0&255;HEAP8[$0+1>>0]=(0>>8)&255;HEAP8[$0+2>>0]=(0>>16)&255;HEAP8[$0+3>>0]=0>>24;
 $2 = ((($0)) + 8|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 $4 = ((($0)) + 4|0);
 HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
 $5 = ($3|0)==(0|0);
 if (!($5)) {
  $$in1314 = $3;
  while(1) {
   $6 = ((($$in1314)) + 8|0);
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   _mb_free($$in1314);
   $8 = ($7|0)==(0|0);
   if ($8) {
    break;
   } else {
    $$in1314 = $7;
   }
  }
 }
 return;
}
function __ls_foreach($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$030$lcssa = 0, $$03031 = 0, $$032 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2318|0),(1578|0),2574,(2329|0));
  // unreachable;
 }
 $4 = ((($0)) + 8|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $$030$lcssa = 0;
 } else {
  $$03031 = 0;$$032 = $5;
  while(1) {
   $7 = HEAPU8[$$032>>0]|(HEAPU8[$$032+1>>0]<<8)|(HEAPU8[$$032+2>>0]<<16)|(HEAPU8[$$032+3>>0]<<24);
   $8 = ((($$032)) + 12|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = (FUNCTION_TABLE_iii[$1 & 255]($7,$9)|0);
   $11 = (($$03031) + 1)|0;
   $12 = ((($$032)) + 8|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($10|0)==(-1);
   if ($14) {
    $15 = ((($$032)) + 4|0);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = ((($16)) + 8|0);
    HEAP8[$17>>0]=$13&255;HEAP8[$17+1>>0]=($13>>8)&255;HEAP8[$17+2>>0]=($13>>16)&255;HEAP8[$17+3>>0]=$13>>24;
    $18 = ($13|0)==(0|0);
    if (!($18)) {
     $19 = $16;
     $20 = ((($13)) + 4|0);
     HEAP8[$20>>0]=$19&255;HEAP8[$20+1>>0]=($19>>8)&255;HEAP8[$20+2>>0]=($19>>16)&255;HEAP8[$20+3>>0]=$19>>24;
    }
    _mb_free($$032);
    $21 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
    $22 = ((($21)) + -1|0);
    HEAP8[$0>>0]=$22&255;HEAP8[$0+1>>0]=($22>>8)&255;HEAP8[$0+2>>0]=($22>>16)&255;HEAP8[$0+3>>0]=$22>>24;
   }
   $23 = ($13|0)==(0|0);
   if ($23) {
    $$030$lcssa = $11;
    break;
   } else {
    $$03031 = $11;$$032 = $13;
   }
  }
 }
 return ($$030$lcssa|0);
}
function __gc_destroy_garbage_in_outer_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in47 = 0, $$04350 = 0, $$04452 = 0, $$048 = 0, $$049 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre54 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  $$04452 = $0;
  while(1) {
   $3 = ((($$04452)) + 17|0);
   $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
   $5 = ((($$04452)) + 21|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = ((($6)) + 8|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ((($8)) + 20|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)==(0|0);
   L4: do {
    if ($11) {
     $29 = $8;
    } else {
     $12 = ((($8)) + 12|0);
     $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $14 = ($13|0)==(0);
     if ($14) {
      $29 = $8;
     } else {
      $$04350 = 0;$16 = $10;$31 = $6;
      while(1) {
       $15 = (($16) + ($$04350<<2)|0);
       $17 = HEAP32[$15>>2]|0;
       $18 = ($17|0)==(0|0);
       if ($18) {
        $24 = $31;
       } else {
        $$0$in47 = ((($17)) + 8|0);
        $$048 = HEAPU8[$$0$in47>>0]|(HEAPU8[$$0$in47+1>>0]<<8)|(HEAPU8[$$0$in47+2>>0]<<16)|(HEAPU8[$$0$in47+3>>0]<<24);
        $19 = ($$048|0)==(0|0);
        if ($19) {
         $24 = $31;
        } else {
         $$049 = $$048;
         while(1) {
          $20 = HEAPU8[$$049>>0]|(HEAPU8[$$049+1>>0]<<8)|(HEAPU8[$$049+2>>0]<<16)|(HEAPU8[$$049+3>>0]<<24);
          __gc_destroy_garbage_in_lambda($20,$1);
          $$0$in = ((($$049)) + 8|0);
          $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
          $21 = ($$0|0)==(0|0);
          if ($21) {
           break;
          } else {
           $$049 = $$0;
          }
         }
         $$pre54 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
         $24 = $$pre54;
        }
       }
       $22 = (($$04350) + 1)|0;
       $23 = ((($24)) + 8|0);
       $25 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $26 = ((($25)) + 12|0);
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       $28 = ($22>>>0)<($27>>>0);
       if (!($28)) {
        $29 = $25;
        break L4;
       }
       $$phi$trans$insert = ((($25)) + 20|0);
       $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
       $$04350 = $22;$16 = $$pre;$31 = $24;
      }
     }
    }
   } while(0);
   __ht_clear($29);
   $30 = ($4|0)==(0|0);
   if ($30) {
    break;
   } else {
    $$04452 = $4;
   }
  }
 }
 return;
}
function __unref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==($0|0);
 if (!($2)) {
  ___assert_fail((2413|0),(1578|0),6329,(2445|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(2);
 $6 = ((($0)) + 13|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($7)) + 21|0);
 $9 = (($4) + -1)|0;
 HEAP32[$3>>2] = $9;
 $10 = ($9|0)==(1);
 $11 = ($9|0)==(0);
 if ($11) {
  ___assert_fail((2452|0),(1578|0),6335,(2445|0));
  // unreachable;
 }
 __gc_add($0,$1,$8);
 $12 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $13 = ($12|0)==(0|0);
 if (!($13)) {
  $14 = HEAP32[$12>>2]|0;
  $15 = ($14|0)==(1);
  if ($15) {
   __collect_intermediate_value($0,$1);
  }
 }
 $16 = ((($0)) + 8|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 FUNCTION_TABLE_vii[$17 & 255]($0,$1);
 if ($10) {
  (__gc_remove($0,$1,$8)|0);
 }
 if ($5) {
  $18 = ((($7)) + 29|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  __ht_set_or_insert($19,$0,$1);
  $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  __ht_set_or_insert($20,$1,$0);
 }
 return;
}
function __gc_add($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2536|0),(1578|0),6422,(2643|0));
  // unreachable;
 }
 $5 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 do {
  if (!($6)) {
   $7 = ($2|0)==(0|0);
   if (!($7)) {
    $8 = ((($2)) + 8|0);
    $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $10 = (__ht_find($9,$0)|0);
    $11 = ($10|0)==(0|0);
    if (!($11)) {
     $12 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     (__ht_remove($12,$0,0)|0);
    }
   }
   $13 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $14 = ($13|0)==(0|0);
   if (!($14)) {
    $15 = ((($2)) + 16|0);
    $16 = HEAP8[$15>>0]|0;
    $17 = ($16<<24>>24)==(0);
    if ($17) {
     $$0 = $13;
    } else {
     $18 = ((($2)) + 4|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $$0 = $19;
    }
    $20 = ((($2)) + 12|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ($21|0)==(0|0);
    if (!($22)) {
     $23 = (__ht_find($21,$0)|0);
     $24 = ($23|0)==(0|0);
     if (!($24)) {
      (__ht_remove($$0,$0,0)|0);
      break;
     }
    }
    $25 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
    $26 = ($25|0)==(0|0);
    if (!($26)) {
     $27 = HEAP32[$25>>2]|0;
     $28 = ($27>>>0)>(1);
     if ($28) {
      __ht_set_or_insert($$0,$0,$1);
      break;
     }
    }
    (__ht_remove($$0,$0,0)|0);
   }
  }
 } while(0);
 return;
}
function __collect_intermediate_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in29 = 0, $$030 = 0, $$031 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2536|0),(1578|0),10804,(2548|0));
  // unreachable;
 }
 $5 = ((($0)) + 13|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 HEAP32[$2>>2] = $6;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  $8 = ((($6)) + 75|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   __collect_intermediate_value_in_scope($9,$1);
  }
  $11 = ((($6)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ($12|0)==(0|0);
  if (!($13)) {
   $14 = $6;
   while(1) {
    $15 = (_mb_get_forked_from($14,$2)|0);
    $16 = ($15|0)==(0);
    $$pre = HEAP32[$2>>2]|0;
    if ($16) {
     $14 = $$pre;
    } else {
     break;
    }
   }
   $17 = ((($$pre)) + 8|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ($18|0)==(0|0);
   if ($19) {
    ___assert_fail((2576|0),(1578|0),10815,(2548|0));
    // unreachable;
   }
   $$0$in29 = ((($18)) + 8|0);
   $$030 = HEAPU8[$$0$in29>>0]|(HEAPU8[$$0$in29+1>>0]<<8)|(HEAPU8[$$0$in29+2>>0]<<16)|(HEAPU8[$$0$in29+3>>0]<<24);
   $20 = ($$030|0)==(0|0);
   if (!($20)) {
    $$031 = $$030;
    while(1) {
     $21 = HEAPU8[$$031>>0]|(HEAPU8[$$031+1>>0]<<8)|(HEAPU8[$$031+2>>0]<<16)|(HEAPU8[$$031+3>>0]<<24);
     __collect_intermediate_value_in_scope_chain($21,$1);
     $$0$in = ((($$031)) + 8|0);
     $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
     $22 = ($$0|0)==(0|0);
     if ($22) {
      break;
     } else {
      $$031 = $$0;
     }
    }
   }
  }
 }
 STACKTOP = sp;return;
}
function __gc_remove($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$017 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if (!($or$cond5)) {
  ___assert_fail((2469|0),(1578|0),6450,(2487|0));
  // unreachable;
 }
 $6 = ((($2)) + 16|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ($7<<24>>24)==(0);
 $9 = ((($2)) + 4|0);
 $$0$in = $8 ? $2 : $9;
 $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
 $10 = ($$0|0)==(0|0);
 if ($10) {
  $$017 = 0;
 } else {
  $11 = (__ht_remove($$0,$0,0)|0);
  $$017 = $11;
 }
 return ($$017|0);
}
function __ht_remove($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_ls_cmp_extra$ = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((1812|0),(1578|0),3082,(2498|0));
  // unreachable;
 }
 $5 = ($2|0)==(0|0);
 $_ls_cmp_extra$ = $5 ? 134 : $2;
 (__ht_find($0,$1)|0);
 $6 = ((($0)) + 8|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (FUNCTION_TABLE_iii[$7 & 255]($0,$1)|0);
 $9 = ((($0)) + 20|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 0;
 } else {
  $12 = (($10) + ($8<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if ($14) {
   $$0 = 0;
  } else {
   $15 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   $16 = (__ls_try_remove($13,$1,$_ls_cmp_extra$,$15)|0);
   $17 = ((($0)) + 16|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = (($18) - ($16))|0;
   HEAP8[$17>>0]=$19&255;HEAP8[$17+1>>0]=($19>>8)&255;HEAP8[$17+2>>0]=($19>>16)&255;HEAP8[$17+3>>0]=$19>>24;
   $$0 = $16;
  }
 }
 return ($$0|0);
}
function __ls_cmp_extra($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)!=($1|0);
 $5 = $4&1;
 return ($5|0);
}
function __ls_try_remove($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$in = 0, $$035 = 0, $$pn = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)!=(0|0);
 $5 = ($2|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  $$pn = $0;
 } else {
  ___assert_fail((2509|0),(1578|0),2541,(2521|0));
  // unreachable;
 }
 while(1) {
  $$0$in = ((($$pn)) + 8|0);
  $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
  $6 = ($$0|0)==(0|0);
  if ($6) {
   $$035 = 0;
   break;
  }
  $7 = (FUNCTION_TABLE_iii[$2 & 255]($$0,$1)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   label = 5;
   break;
  } else {
   $$pn = $$0;
  }
 }
 if ((label|0) == 5) {
  $9 = ((($$0)) + 4|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(0|0);
  $12 = $10;
  $$pre = ((($$0)) + 8|0);
  if (!($11)) {
   $13 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8)|(HEAPU8[$$pre+2>>0]<<16)|(HEAPU8[$$pre+3>>0]<<24);
   $14 = ((($10)) + 8|0);
   HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
  }
  $15 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8)|(HEAPU8[$$pre+2>>0]<<16)|(HEAPU8[$$pre+3>>0]<<24);
  $16 = ($15|0)==(0|0);
  if (!($16)) {
   $17 = ((($15)) + 4|0);
   HEAP8[$17>>0]=$12&255;HEAP8[$17+1>>0]=($12>>8)&255;HEAP8[$17+2>>0]=($12>>16)&255;HEAP8[$17+3>>0]=$12>>24;
  }
  $18 = ((($0)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ($19|0)==($$0|0);
  if ($20) {
   $21 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   HEAP8[$18>>0]=$21&255;HEAP8[$18+1>>0]=($21>>8)&255;HEAP8[$18+2>>0]=($21>>16)&255;HEAP8[$18+3>>0]=$21>>24;
   $22 = $21;
   $23 = $22;
  } else {
   $23 = $19;
  }
  $24 = ($23|0)==($0|0);
  if ($24) {
   HEAP8[$18>>0]=0&255;HEAP8[$18+1>>0]=(0>>8)&255;HEAP8[$18+2>>0]=(0>>16)&255;HEAP8[$18+3>>0]=0>>24;
  }
  $25 = ($3|0)==(0|0);
  if (!($25)) {
   $26 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
   $27 = ((($$0)) + 12|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   (FUNCTION_TABLE_iii[$3 & 255]($26,$28)|0);
  }
  _mb_free($$0);
  $29 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  $30 = ((($29)) + -1|0);
  HEAP8[$0>>0]=$30&255;HEAP8[$0+1>>0]=($30>>8)&255;HEAP8[$0+2>>0]=($30>>16)&255;HEAP8[$0+3>>0]=$30>>24;
  $$035 = 1;
 }
 return ($$035|0);
}
function __collect_intermediate_value_in_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2590|0),(1578|0),10755,(2606|0));
  // unreachable;
 }
 $5 = ((($0)) + 20|0);
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP8[$2+16>>0]=0|0;
 (__public_value_to_internal_object($5,$2)|0);
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($1|0);
 L4: do {
  if ($8) {
   $9 = HEAP32[$2>>2]|0;
   switch ($9|0) {
   case 10: case 16: case 13: case 11: case 7:  {
    break;
   }
   default: {
    break L4;
   }
   }
   $10 = ((($0)) + 24|0);
   HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
   HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __collect_intermediate_value_in_scope_chain($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 75|0);
 $$01 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $3 = ($$01|0)==(0|0);
 if (!($3)) {
  $$02 = $$01;
  while(1) {
   __collect_intermediate_value_in_scope($$02,$1);
   $$0 = HEAPU8[$$02>>0]|(HEAPU8[$$02+1>>0]<<8)|(HEAPU8[$$02+2>>0]<<16)|(HEAPU8[$$02+3>>0]<<24);
   $4 = ($$0|0)==(0|0);
   if ($4) {
    break;
   } else {
    $$02 = $$0;
   }
  }
 }
 return;
}
function __gc_destroy_garbage_in_lambda($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$phi$trans$insert = 0, $$pre = 0, $$pre3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),6690,(2656|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = ($3|0)==(9);
 L4: do {
  if ($4) {
   $5 = (__is_string($0)|0);
   $6 = ($5<<24>>24)==(0);
   $$phi$trans$insert = ((($0)) + 4|0);
   $$pre3 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
   do {
    if ($6) {
     label = 9;
    } else {
     $7 = ((($$pre3)) + 8|0);
     $8 = HEAP8[$7>>0]|0;
     $9 = $8 & 3;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      label = 9;
     } else {
      $11 = ((($$pre3)) + 4|0);
      $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
      $13 = ($12|0)==(0|0);
      if ($13) {
       ___assert_fail((1713|0),(1578|0),6696,(2656|0));
       // unreachable;
      } else {
       _mb_free($12);
       $14 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
       $15 = ((($14)) + 4|0);
       HEAP8[$15>>0]=0&255;HEAP8[$15+1>>0]=(0>>8)&255;HEAP8[$15+2>>0]=(0>>16)&255;HEAP8[$15+3>>0]=0>>24;
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 9) {
    $16 = ((($$pre3)) + 4|0);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    __gc_destroy_garbage_in_lambda($17,$1);
   }
   $18 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ($19|0)==(0|0);
   if ($20) {
    ___assert_fail((1713|0),(1578|0),6703,(2656|0));
    // unreachable;
   }
   _mb_free($19);
   $21 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
   HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
   $22 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
   $23 = ($22|0)==(0|0);
   if ($23) {
    ___assert_fail((1713|0),(1578|0),6704,(2656|0));
    // unreachable;
   } else {
    _mb_free($22);
    HEAP8[$$phi$trans$insert>>0]=0&255;HEAP8[$$phi$trans$insert+1>>0]=(0>>8)&255;HEAP8[$$phi$trans$insert+2>>0]=(0>>16)&255;HEAP8[$$phi$trans$insert+3>>0]=0>>24;
    break;
   }
  } else {
   $24 = ((($0)) + 4|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = ($25|0)==(0|0);
   if ($26) {
    $31 = $3;
   } else {
    $27 = ((($1)) + 8|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = (__ht_find($28,$25)|0);
    $30 = ($29|0)==(0|0);
    if (!($30)) {
     break;
    }
    $$pre = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
    $31 = $$pre;
   }
   switch ($31|0) {
   case 7:  {
    $32 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __gc_add($32,$32,$1);
    break L4;
    break;
   }
   case 10:  {
    $33 = ((($0)) + 8|0);
    $34 = HEAP8[$33>>0]|0;
    $35 = $34 & 1;
    $36 = ($35<<24>>24)==(0);
    if (!($36)) {
     break L4;
    }
    $37 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __gc_add($37,$37,$1);
    break L4;
    break;
   }
   case 11:  {
    $38 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __gc_add($38,$38,$1);
    break L4;
    break;
   }
   case 13:  {
    $39 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __gc_add($39,$39,$1);
    break L4;
    break;
   }
   case 12:  {
    $40 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __destroy_list_it($40);
    break L4;
    break;
   }
   case 14:  {
    $41 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __destroy_dict_it($41);
    break L4;
    break;
   }
   case 16:  {
    $42 = ((($0)) + 8|0);
    $43 = HEAP8[$42>>0]|0;
    $44 = $43 & 1;
    $45 = ($44<<24>>24)==(0);
    if (!($45)) {
     break L4;
    }
    $46 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    __gc_add($46,$46,$1);
    break L4;
    break;
   }
   case 17:  {
    $47 = ((($0)) + 8|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 & 1;
    $50 = ($49<<24>>24)==(0);
    if (!($50)) {
     break L4;
    }
    $51 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $52 = ((($51)) + 58|0);
    $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
    $54 = ($53|0)==(2);
    if (!($54)) {
     break L4;
    }
    __gc_add($51,$51,$1);
    break L4;
    break;
   }
   case 4:  {
    (__dispose_object($0)|0);
    break L4;
    break;
   }
   default: {
    break L4;
   }
   }
  }
 } while(0);
 _mb_free($0);
 return;
}
function __is_string($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2686|0),(1578|0),6147,(2945|0));
  // unreachable;
 }
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 switch ($2|0) {
 case 4:  {
  $$0 = 1;
  break;
 }
 case 9:  {
  $3 = ((($0)) + 4|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $5 = ((($4)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)==(4);
  $9 = $8&1;
  $$0 = $9;
  break;
 }
 default: {
  $$0 = 0;
 }
 }
 return ($$0|0);
}
function __destroy_list_it($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2851|0),(1578|0),7542,(2928|0));
  // unreachable;
 }
 $2 = (__weak_unref($0)|0);
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = ((($0)) + 17|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = ((($5)) + 17|0);
  __unlock_ref_object($6,$5,$5);
 }
 _mb_free($0);
 return;
}
function __destroy_dict_it($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2851|0),(1578|0),7610,(2854|0));
  // unreachable;
 }
 $2 = (__weak_unref($0)|0);
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = ((($0)) + 17|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = ((($5)) + 17|0);
  __unlock_ref_object($6,$5,$5);
 }
 _mb_free($0);
 return;
}
function __dispose_object($0) {
 $0 = $0|0;
 var $$0 = 0, $$pre = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2686|0),(1578|0),9866,(2690|0));
  // unreachable;
 }
 $2 = (__is_internal_object($0)|0);
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  L6: do {
   switch ($4|0) {
   case 9:  {
    $5 = ((($0)) + 8|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = $6 & 1;
    $8 = ($7<<24>>24)==(0);
    if ($8) {
     $9 = ((($0)) + 4|0);
     $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
     $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
     $12 = ($11|0)==(0|0);
     if ($12) {
      ___assert_fail((1713|0),(1578|0),9874,(2690|0));
      // unreachable;
     }
     _mb_free($11);
     HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
     $13 = ((($10)) + 4|0);
     $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
     $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
     $16 = ($15|0)==(9);
     if ($16) {
      ___assert_fail((2706|0),(1578|0),9875,(2690|0));
      // unreachable;
     }
     $17 = ((($10)) + 8|0);
     $18 = HEAP8[$17>>0]|0;
     $19 = $18 & 4;
     $20 = ($19<<24>>24)==(0);
     if ($20) {
      (__destroy_object($14,0)|0);
     } else {
      __destroy_object_capsule_only($14);
     }
     _mb_free($10);
    }
    break;
   }
   case 4:  {
    $21 = ((($0)) + 8|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $25 = ((($0)) + 4|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ($26|0)==(0|0);
     if (!($27)) {
      _mb_free($26);
      HEAP8[$25>>0]=0&255;HEAP8[$25+1>>0]=(0>>8)&255;HEAP8[$25+2>>0]=(0>>16)&255;HEAP8[$25+3>>0]=0>>24;
     }
    }
    break;
   }
   case 8:  {
    $28 = ((($0)) + 4|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = ($30|0)==(0|0);
    if ($31) {
     ___assert_fail((1713|0),(1578|0),9893,(2690|0));
     // unreachable;
    }
    _mb_free($30);
    $32 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    HEAP8[$32>>0]=0&255;HEAP8[$32+1>>0]=(0>>8)&255;HEAP8[$32+2>>0]=(0>>16)&255;HEAP8[$32+3>>0]=0>>24;
    $33 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    $34 = ($33|0)==(0|0);
    if ($34) {
     ___assert_fail((1713|0),(1578|0),9894,(2690|0));
     // unreachable;
    } else {
     _mb_free($33);
     HEAP8[$28>>0]=0&255;HEAP8[$28+1>>0]=(0>>8)&255;HEAP8[$28+2>>0]=(0>>16)&255;HEAP8[$28+3>>0]=0>>24;
     break L6;
    }
    break;
   }
   case 7:  {
    $35 = ((($0)) + 4|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __unref($36,$36);
    break;
   }
   case 10:  {
    $37 = ((($0)) + 8|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = $38 & 1;
    $40 = ($39<<24>>24)==(0);
    if ($40) {
     $41 = ((($0)) + 4|0);
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     __unref($42,$42);
    }
    break;
   }
   case 11:  {
    $43 = ((($0)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    __unref($44,$44);
    break;
   }
   case 13:  {
    $45 = ((($0)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    __unref($46,$46);
    break;
   }
   case 12:  {
    $47 = ((($0)) + 4|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    __destroy_list_it($48);
    break;
   }
   case 14:  {
    $49 = ((($0)) + 4|0);
    $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
    __destroy_dict_it($50);
    break;
   }
   case 16:  {
    $51 = ((($0)) + 8|0);
    $52 = HEAP8[$51>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    if ($54) {
     $55 = ((($0)) + 4|0);
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     __unref($56,$56);
    }
    break;
   }
   case 17:  {
    $57 = ((($0)) + 8|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58 & 1;
    $60 = ($59<<24>>24)==(0);
    if ($60) {
     $61 = ((($0)) + 4|0);
     $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
     $63 = ((($62)) + 58|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $65 = ($64|0)==(2);
     if ($65) {
      __unref($62,$62);
      break L6;
     }
     $66 = ((($0)) + 4|0);
     $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     $68 = ((($67)) + 58|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = ($69|0)==(2);
     if (!($70)) {
      __destroy_routine(0,$67);
     }
    }
    break;
   }
   case 15:  {
    $71 = ((($0)) + 8|0);
    $72 = HEAP8[$71>>0]|0;
    $73 = $72 & 1;
    $74 = ($73<<24>>24)==(0);
    if ($74) {
     $75 = ((($0)) + 4|0);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
     $78 = ($77|0)==(0|0);
     if ($78) {
      ___assert_fail((1713|0),(1578|0),9909,(2690|0));
      // unreachable;
     }
     _mb_free($77);
     $79 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     HEAP8[$79>>0]=0&255;HEAP8[$79+1>>0]=(0>>8)&255;HEAP8[$79+2>>0]=(0>>16)&255;HEAP8[$79+3>>0]=0>>24;
     $80 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $81 = ($80|0)==(0|0);
     if ($81) {
      ___assert_fail((1713|0),(1578|0),9910,(2690|0));
      // unreachable;
     } else {
      _mb_free($80);
      HEAP8[$75>>0]=0&255;HEAP8[$75+1>>0]=(0>>8)&255;HEAP8[$75+2>>0]=(0>>16)&255;HEAP8[$75+3>>0]=0>>24;
      break L6;
     }
    }
    break;
   }
   case 21: case 20:  {
    $82 = ((($0)) + 8|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83 & 1;
    $85 = ($84<<24>>24)==(0);
    if ($85) {
     $86 = ((($0)) + 4|0);
     $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
     $88 = ($87|0)==(0|0);
     if (!($88)) {
      $89 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
      $90 = ($89|0)==(0|0);
      if ($90) {
       $93 = $87;
      } else {
       _mb_free($89);
       $91 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
       HEAP8[$91>>0]=0&255;HEAP8[$91+1>>0]=(0>>8)&255;HEAP8[$91+2>>0]=(0>>16)&255;HEAP8[$91+3>>0]=0>>24;
       $$pre = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
       $92 = ($$pre|0)==(0|0);
       if ($92) {
        ___assert_fail((1713|0),(1578|0),9922,(2690|0));
        // unreachable;
       } else {
        $93 = $$pre;
       }
      }
      _mb_free($93);
      HEAP8[$86>>0]=0&255;HEAP8[$86+1>>0]=(0>>8)&255;HEAP8[$86+2>>0]=(0>>16)&255;HEAP8[$86+3>>0]=0>>24;
     }
    }
    break;
   }
   case 6: case 22: case 19: case 5: case 3: case 2: case 1: case 0:  {
    break;
   }
   default: {
    ___assert_fail((2733|0),(1578|0),9938,(2690|0));
    // unreachable;
   }
   }
  } while(0);
  $94 = ((($0)) + 8|0);
  $95 = HEAP8[$94>>0]|0;
  $96 = $95 & -2;
  HEAP8[$94>>0] = $96;
  HEAP8[$0>>0]=0&255;HEAP8[$0+1>>0]=(0>>8)&255;HEAP8[$0+2>>0]=(0>>16)&255;HEAP8[$0+3>>0]=0>>24;
  $97 = ((($0)) + 4|0);
  HEAP8[$97>>0]=0&255;HEAP8[$97+1>>0]=(0>>8)&255;HEAP8[$97+2>>0]=(0>>16)&255;HEAP8[$97+3>>0]=0>>24;
  $98 = ((($0)) + 9|0);
  $99 = $98;
  $100 = $99;
  HEAP8[$100>>0]=0&255;HEAP8[$100+1>>0]=(0>>8)&255;HEAP8[$100+2>>0]=(0>>16)&255;HEAP8[$100+3>>0]=0>>24;
  $101 = (($99) + 4)|0;
  $102 = $101;
  HEAP8[$102>>0]=0&255;HEAP8[$102+1>>0]=(0>>8)&255;HEAP8[$102+2>>0]=(0>>16)&255;HEAP8[$102+3>>0]=0>>24;
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __is_internal_object($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $narrow = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2686|0),(1578|0),10145,(2831|0));
  // unreachable;
 } else {
  $2 = HEAP32[3903]|0;
  $3 = ($2|0)==($0|0);
  $4 = HEAP32[3904]|0;
  $5 = ($4|0)==($0|0);
  $or$cond = $3 | $5;
  $6 = HEAP32[3905]|0;
  $7 = ($6|0)==($0|0);
  $narrow = $or$cond | $7;
  $8 = $narrow&1;
  return ($8|0);
 }
 return (0)|0;
}
function __destroy_object_capsule_only($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2651|0),(1578|0),10020,(2802|0));
  // unreachable;
 } else {
  _mb_free($0);
  return;
 }
}
function __destroy_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),9964,(2786|0));
  // unreachable;
 }
 $3 = (__dispose_object($0)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _mb_free($0);
 }
 return -1;
}
function __destroy_routine($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  ___assert_fail((2754|0),(1578|0),8888,(2756|0));
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 $4 = ((($0)) + 21|0);
 $$ = $3 ? 0 : $4;
 $5 = ((($1)) + 57|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 L4: do {
  if ($8) {
   $9 = ((($1)) + 45|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)==(0|0);
   if (!($11)) {
    _mb_free($10);
    HEAP8[$9>>0]=0&255;HEAP8[$9+1>>0]=(0>>8)&255;HEAP8[$9+2>>0]=(0>>16)&255;HEAP8[$9+3>>0]=0>>24;
   }
   $12 = ((($1)) + 49|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)==(0|0);
   if (!($14)) {
    _mb_free($13);
    HEAP8[$12>>0]=0&255;HEAP8[$12+1>>0]=(0>>8)&255;HEAP8[$12+2>>0]=(0>>16)&255;HEAP8[$12+3>>0]=0>>24;
   }
   $15 = ((($1)) + 58|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   switch ($16|0) {
   case 1:  {
    $17 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
    $18 = ($17|0)==(0|0);
    if (!($18)) {
     __destroy_scope($17);
     HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
    }
    $19 = ((($1)) + 4|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = ($20|0)==(0|0);
    if ($21) {
     break L4;
    }
    __ls_destroy($20);
    break L4;
    break;
   }
   case 2:  {
    break;
   }
   default: {
    break L4;
   }
   }
   __destroy_ref($1);
   $22 = ((($1)) + 17|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ((($23)) + 8|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = ($25|0)==(0|0);
   if ($26) {
    $30 = $23;
   } else {
    __ht_foreach($25,135);
    $27 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $28 = ((($27)) + 8|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    __ht_destroy($29);
    $$pr = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $30 = $$pr;
   }
   $31 = ($30|0)==(0|0);
   if ($31) {
    ___assert_fail((1713|0),(1578|0),8916,(2756|0));
    // unreachable;
   }
   _mb_free($30);
   HEAP8[$22>>0]=0&255;HEAP8[$22+1>>0]=(0>>8)&255;HEAP8[$22+2>>0]=(0>>16)&255;HEAP8[$22+3>>0]=0>>24;
   $32 = ((($1)) + 21|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ($33|0)==(0|0);
   if (!($34)) {
    __ls_destroy($33);
   }
   $35 = ((($1)) + 25|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = ($36|0)==(0|0);
   if (!($37)) {
    $38 = ((($$)) + 8|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = (__ht_find($39,$36)|0);
    $41 = ($40|0)==(0|0);
    if ($41) {
     $42 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     __unref($42,$42);
    }
   }
   $43 = ((($1)) + 33|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ($44|0)==(0|0);
   if (!($45)) {
    __ht_destroy($44);
   }
  }
 } while(0);
 _mb_free($1);
 return;
}
function __destroy_scope($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  __ht_foreach($2,135);
  $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  __ht_destroy($4);
  $5 = ((($0)) + 32|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(0|0);
  if (!($7)) {
   __ls_destroy($6);
   HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
  }
 }
 _mb_free($0);
 return;
}
function __destroy_ref($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($0)) + 4|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = HEAP32[$4>>2]|0;
   $7 = ($6|0)==(1);
   do {
    if ($7) {
     _mb_free($4);
     HEAP8[$3>>0]=0&255;HEAP8[$3+1>>0]=(0>>8)&255;HEAP8[$3+2>>0]=(0>>16)&255;HEAP8[$3+3>>0]=0>>24;
     $8 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
     $9 = ($8|0)==(0|0);
     if ($9) {
      ___assert_fail((1713|0),(1578|0),6413,(2773|0));
      // unreachable;
     } else {
      _mb_free($8);
      HEAP8[$0>>0]=0&255;HEAP8[$0+1>>0]=(0>>8)&255;HEAP8[$0+2>>0]=(0>>16)&255;HEAP8[$0+3>>0]=0>>24;
      break;
     }
    }
   } while(0);
   $10 = ((($0)) + 8|0);
   HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
  }
 }
 return;
}
function __weak_unref($0) {
 $0 = $0|0;
 var $$ = 0, $$015 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$not = 0, $or$cond16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + -1)|0;
 HEAP32[$2>>2] = $4;
 $5 = ($4|0)==(0);
 if ($5) {
  ___assert_fail((2893|0),(1578|0),6372,(2916|0));
  // unreachable;
 }
 $6 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 do {
  if ($7) {
   $$015 = 1;
  } else {
   $8 = HEAP32[$6>>2]|0;
   $9 = ($8|0)!=(1);
   $$ = $9&1;
   $10 = ($8|0)==(1);
   $11 = ($2|0)!=(0|0);
   $or$cond$not = $11 & $10;
   $12 = ($4|0)==(1);
   $or$cond16 = $or$cond$not & $12;
   if ($or$cond16) {
    _mb_free($2);
    HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
    $13 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
    $14 = ($13|0)==(0|0);
    if ($14) {
     ___assert_fail((1713|0),(1578|0),6377,(2916|0));
     // unreachable;
    } else {
     _mb_free($13);
     HEAP8[$0>>0]=0&255;HEAP8[$0+1>>0]=(0>>8)&255;HEAP8[$0+2>>0]=(0>>16)&255;HEAP8[$0+3>>0]=0>>24;
     $$015 = $$;
     break;
    }
   } else {
    $$015 = $$;
   }
  }
 } while(0);
 return ($$015|0);
}
function __unlock_ref_object($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((2871|0),(1578|0),6245,(2874|0));
  // unreachable;
 }
 $4 = HEAP16[$0>>1]|0;
 $5 = ($4<<16>>16)>(0);
 if ($5) {
  $$sink1 = -1;
  label = 5;
 } else {
  $6 = ($4<<16>>16)<(0);
  if ($6) {
   $$sink1 = 1;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $7 = (($$sink1) + ($4))<<16>>16;
  HEAP16[$0>>1] = $7;
 }
 __unref($1,$2);
 return;
}
function __gc_destroy_garbage_in_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),6633,(3077|0));
  // unreachable;
 }
 $3 = ((($0)) + 4|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(0|0);
 if ($5) {
  label = 5;
 } else {
  $6 = ((($1)) + 8|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = (__ht_find($7,$4)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   label = 5;
  }
 }
 L6: do {
  if ((label|0) == 5) {
   $10 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   switch ($10|0) {
   case 7:  {
    $11 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __gc_add($11,$11,$1);
    break L6;
    break;
   }
   case 10:  {
    $12 = ((($0)) + 8|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = $13 & 1;
    $15 = ($14<<24>>24)==(0);
    if (!($15)) {
     break L6;
    }
    $16 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __gc_add($16,$16,$1);
    break L6;
    break;
   }
   case 11:  {
    $17 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __gc_add($17,$17,$1);
    break L6;
    break;
   }
   case 13:  {
    $18 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __gc_add($18,$18,$1);
    break L6;
    break;
   }
   case 12:  {
    $19 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __destroy_list_it($19);
    break L6;
    break;
   }
   case 14:  {
    $20 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __destroy_dict_it($20);
    break L6;
    break;
   }
   case 16:  {
    $21 = ((($0)) + 8|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if (!($24)) {
     break L6;
    }
    $25 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    __gc_add($25,$25,$1);
    break L6;
    break;
   }
   case 17:  {
    $26 = ((($0)) + 8|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27 & 1;
    $29 = ($28<<24>>24)==(0);
    if (!($29)) {
     break L6;
    }
    $30 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    $31 = ((($30)) + 58|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = ($32|0)==(2);
    if (!($33)) {
     break L6;
    }
    __gc_add($30,$30,$1);
    break L6;
    break;
   }
   case 4:  {
    (__dispose_object($0)|0);
    break L6;
    break;
   }
   default: {
    break L6;
   }
   }
  }
 } while(0);
 _mb_free($0);
 return;
}
function __gc_destroy_garbage_in_dict($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((2651|0),(1578|0),6647,(3049|0));
  // unreachable;
 }
 $4 = ((($0)) + 4|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 if ($6) {
  label = 5;
 } else {
  $7 = ((($2)) + 8|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = (__ht_find($8,$5)|0);
  $10 = ($9|0)==(0|0);
  if ($10) {
   label = 5;
  }
 }
 L6: do {
  if ((label|0) == 5) {
   $11 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   switch ($11|0) {
   case 7:  {
    $12 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __gc_add($12,$12,$2);
    break L6;
    break;
   }
   case 10:  {
    $13 = ((($0)) + 8|0);
    $14 = HEAP8[$13>>0]|0;
    $15 = $14 & 1;
    $16 = ($15<<24>>24)==(0);
    if (!($16)) {
     break L6;
    }
    $17 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __gc_add($17,$17,$2);
    break L6;
    break;
   }
   case 11:  {
    $18 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __gc_add($18,$18,$2);
    break L6;
    break;
   }
   case 13:  {
    $19 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __gc_add($19,$19,$2);
    break L6;
    break;
   }
   case 12:  {
    $20 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __destroy_list_it($20);
    break L6;
    break;
   }
   case 14:  {
    $21 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __destroy_dict_it($21);
    break L6;
    break;
   }
   case 16:  {
    $22 = ((($0)) + 8|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23 & 1;
    $25 = ($24<<24>>24)==(0);
    if (!($25)) {
     break L6;
    }
    $26 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    __gc_add($26,$26,$2);
    break L6;
    break;
   }
   case 17:  {
    $27 = ((($0)) + 8|0);
    $28 = HEAP8[$27>>0]|0;
    $29 = $28 & 1;
    $30 = ($29<<24>>24)==(0);
    if (!($30)) {
     break L6;
    }
    $31 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    $32 = ((($31)) + 58|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ($33|0)==(2);
    if (!($34)) {
     break L6;
    }
    __gc_add($31,$31,$2);
    break L6;
    break;
   }
   case 4:  {
    (__dispose_object($0)|0);
    break L6;
    break;
   }
   default: {
    break L6;
   }
   }
  }
 } while(0);
 _mb_free($0);
 $35 = ((($1)) + 4|0);
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)==(0|0);
 if ($37) {
  label = 21;
 } else {
  $38 = ((($2)) + 8|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = (__ht_find($39,$36)|0);
  $41 = ($40|0)==(0|0);
  if ($41) {
   label = 21;
  }
 }
 L25: do {
  if ((label|0) == 21) {
   $42 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
   switch ($42|0) {
   case 7:  {
    $43 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __gc_add($43,$43,$2);
    break L25;
    break;
   }
   case 10:  {
    $44 = ((($1)) + 8|0);
    $45 = HEAP8[$44>>0]|0;
    $46 = $45 & 1;
    $47 = ($46<<24>>24)==(0);
    if (!($47)) {
     break L25;
    }
    $48 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __gc_add($48,$48,$2);
    break L25;
    break;
   }
   case 11:  {
    $49 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __gc_add($49,$49,$2);
    break L25;
    break;
   }
   case 13:  {
    $50 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __gc_add($50,$50,$2);
    break L25;
    break;
   }
   case 12:  {
    $51 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __destroy_list_it($51);
    break L25;
    break;
   }
   case 14:  {
    $52 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __destroy_dict_it($52);
    break L25;
    break;
   }
   case 16:  {
    $53 = ((($1)) + 8|0);
    $54 = HEAP8[$53>>0]|0;
    $55 = $54 & 1;
    $56 = ($55<<24>>24)==(0);
    if (!($56)) {
     break L25;
    }
    $57 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __gc_add($57,$57,$2);
    break L25;
    break;
   }
   case 17:  {
    $58 = ((($1)) + 8|0);
    $59 = HEAP8[$58>>0]|0;
    $60 = $59 & 1;
    $61 = ($60<<24>>24)==(0);
    if (!($61)) {
     break L25;
    }
    $62 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $63 = ((($62)) + 58|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = ($64|0)==(2);
    if (!($65)) {
     break L25;
    }
    __gc_add($62,$62,$2);
    break L25;
    break;
   }
   case 4:  {
    (__dispose_object($1)|0);
    break L25;
    break;
   }
   default: {
    break L25;
   }
   }
  }
 } while(0);
 _mb_free($1);
 return;
}
function __remove_this_lambda_from_upvalue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 58|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(2);
 if (!($4)) {
  ___assert_fail((2986|0),(1578|0),9142,(3016|0));
  // unreachable;
 }
 $5 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $6 = ($5|0)==(9);
 if ($6) {
  $7 = ((($0)) + 4|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($8)) + 4|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $$0 = $10;$16 = $10;
 } else {
  $$0 = $0;$16 = $0;
 }
 $11 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
 $12 = ($11|0)==(17);
 if ($12) {
  $13 = ((($$0)) + 4|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ($14|0)==($1|0);
  if ($15) {
   dest=$16; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$$0>>0]=0&255;HEAP8[$$0+1>>0]=(0>>8)&255;HEAP8[$$0+2>>0]=(0>>16)&255;HEAP8[$$0+3>>0]=0>>24;
  }
 }
 return;
}
function __gc_destroy_garbage_in_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),6667,(3131|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = ($3|0)==(9);
 $5 = ((($0)) + 4|0);
 L4: do {
  if ($4) {
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = ((($6)) + 4|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   __gc_destroy_garbage_in_class($8,$1);
   $9 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)==(0|0);
   if ($11) {
    ___assert_fail((1713|0),(1578|0),6672,(3131|0));
    // unreachable;
   }
   _mb_free($10);
   $12 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   HEAP8[$12>>0]=0&255;HEAP8[$12+1>>0]=(0>>8)&255;HEAP8[$12+2>>0]=(0>>16)&255;HEAP8[$12+3>>0]=0>>24;
   $13 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $14 = ($13|0)==(0|0);
   if ($14) {
    ___assert_fail((1713|0),(1578|0),6673,(3131|0));
    // unreachable;
   } else {
    _mb_free($13);
    HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
    break;
   }
  } else {
   $15 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $16 = ($15|0)==(0|0);
   if ($16) {
    $21 = $3;
   } else {
    $17 = ((($1)) + 8|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = (__ht_find($18,$15)|0);
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     break;
    }
    $$pre = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
    $21 = $$pre;
   }
   switch ($21|0) {
   case 7:  {
    $22 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __gc_add($22,$22,$1);
    break L4;
    break;
   }
   case 10:  {
    $23 = ((($0)) + 8|0);
    $24 = HEAP8[$23>>0]|0;
    $25 = $24 & 1;
    $26 = ($25<<24>>24)==(0);
    if (!($26)) {
     break L4;
    }
    $27 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __gc_add($27,$27,$1);
    break L4;
    break;
   }
   case 11:  {
    $28 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __gc_add($28,$28,$1);
    break L4;
    break;
   }
   case 13:  {
    $29 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __gc_add($29,$29,$1);
    break L4;
    break;
   }
   case 12:  {
    $30 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __destroy_list_it($30);
    break L4;
    break;
   }
   case 14:  {
    $31 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __destroy_dict_it($31);
    break L4;
    break;
   }
   case 16:  {
    $32 = ((($0)) + 8|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = $33 & 1;
    $35 = ($34<<24>>24)==(0);
    if (!($35)) {
     break L4;
    }
    $36 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    __gc_add($36,$36,$1);
    break L4;
    break;
   }
   case 17:  {
    $37 = ((($0)) + 8|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = $38 & 1;
    $40 = ($39<<24>>24)==(0);
    if (!($40)) {
     break L4;
    }
    $41 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $42 = ((($41)) + 58|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ($43|0)==(2);
    if ($44) {
     __gc_add($41,$41,$1);
     break L4;
    }
    $45 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $46 = ((($45)) + 58|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ($47|0)==(2);
    if ($48) {
     break L4;
    }
    (__dispose_object($0)|0);
    break L4;
    break;
   }
   case 4:  {
    (__dispose_object($0)|0);
    break L4;
    break;
   }
   default: {
    break L4;
   }
   }
  }
 } while(0);
 _mb_free($0);
 return;
}
function __gc_add_reachable($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$0$in341 = 0, $$0288345 = 0, $$0289 = 0, $$0289$in = 0, $$0289$in349 = 0, $$0289350 = 0, $$0289351 = 0, $$0290353 = 0, $$0292 = 0, $$0292$in = 0, $$0292$in335 = 0, $$0292336 = 0, $$0292337 = 0, $$0293339 = 0, $$0294 = 0, $$0294$in = 0, $$0294$in331 = 0, $$0294332 = 0;
 var $$0294333 = 0, $$0295 = 0, $$0295$in = 0, $$0295$in325 = 0, $$0295326 = 0, $$0295327 = 0, $$0296329 = 0, $$0297 = 0, $$0297$in = 0, $$0297$in322 = 0, $$0297323 = 0, $$0297324 = 0, $$0342 = 0, $$0343 = 0, $$byval_copy = 0, $$in347 = 0, $$phi$trans$insert = 0, $$phi$trans$insert360 = 0, $$phi$trans$insert363 = 0, $$phi$trans$insert366 = 0;
 var $$pre = 0, $$pre359 = 0, $$pre361 = 0, $$pre362 = 0, $$pre364 = 0, $$pre365 = 0, $$pre367 = 0, $$pre368 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($2|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((3160|0),(1578|0),6470,(3170|0));
  // unreachable;
 }
 $6 = (__is_internal_object($0)|0);
 $7 = ($6<<24>>24)==(0);
 L4: do {
  if ($7) {
   $8 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   switch ($8|0) {
   case 9:  {
    $9 = ((($0)) + 4|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($10)) + 4|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    (__gc_add_reachable($12,$1,$2)|0);
    break L4;
    break;
   }
   case 7:  {
    $13 = ((($0)) + 4|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = (__ht_find($2,$14)|0);
    $16 = ($15|0)==(0|0);
    if ($16) {
     $17 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
     __ht_set_or_insert($2,$17,$17);
    }
    $18 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $19 = ((($18)) + 41|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = ($20|0)==(0|0);
    if ($21) {
     break L4;
    }
    $22 = ((($3)) + 4|0);
    HEAP32[$22>>2] = 0;
    HEAP32[$3>>2] = 0;
    (__internal_object_to_public_value($0,$3)|0);
    $23 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $24 = ((($23)) + 41|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ((($23)) + 13|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
    FUNCTION_TABLE_viiii[$25 & 0]($27,$2,$$byval_copy,133);
    break L4;
    break;
   }
   case 10:  {
    $28 = ((($0)) + 4|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    $30 = (__ht_find($2,$29)|0);
    $31 = ($30|0)==(0|0);
    if (!($31)) {
     break L4;
    }
    $32 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    __ht_set_or_insert($2,$32,$32);
    break L4;
    break;
   }
   case 11:  {
    $33 = ((($0)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = (__ht_find($2,$34)|0);
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     break L4;
    }
    $37 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    __ht_set_or_insert($2,$37,$37);
    $38 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $39 = ((($38)) + 19|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = ($40|0)==(0|0);
    if ($41) {
     ___assert_fail((3188|0),(1578|0),6508,(3170|0));
     // unreachable;
    }
    $$0297$in322 = ((($40)) + 8|0);
    $$0297323 = HEAPU8[$$0297$in322>>0]|(HEAPU8[$$0297$in322+1>>0]<<8)|(HEAPU8[$$0297$in322+2>>0]<<16)|(HEAPU8[$$0297$in322+3>>0]<<24);
    $42 = ($$0297323|0)==(0|0);
    if ($42) {
     break L4;
    } else {
     $$0297324 = $$0297323;
    }
    while(1) {
     $43 = HEAPU8[$$0297324>>0]|(HEAPU8[$$0297324+1>>0]<<8)|(HEAPU8[$$0297324+2>>0]<<16)|(HEAPU8[$$0297324+3>>0]<<24);
     $44 = ((($$0297324)) + 12|0);
     $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
     (__gc_add_reachable($43,$45,$2)|0);
     $$0297$in = ((($$0297324)) + 8|0);
     $$0297 = HEAPU8[$$0297$in>>0]|(HEAPU8[$$0297$in+1>>0]<<8)|(HEAPU8[$$0297$in+2>>0]<<16)|(HEAPU8[$$0297$in+3>>0]<<24);
     $46 = ($$0297|0)==(0|0);
     if ($46) {
      break;
     } else {
      $$0297324 = $$0297;
     }
    }
    break;
   }
   case 13:  {
    $47 = ((($0)) + 4|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = (__ht_find($2,$48)|0);
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     break L4;
    }
    $51 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    __ht_set_or_insert($2,$51,$51);
    $52 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $53 = ((($52)) + 19|0);
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    $55 = ((($54)) + 20|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = ($56|0)==(0|0);
    if ($57) {
     break L4;
    }
    $58 = ((($54)) + 12|0);
    $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
    $60 = ($59|0)==(0);
    if ($60) {
     break L4;
    } else {
     $$0296329 = 0;$210 = $52;$62 = $56;
    }
    while(1) {
     $61 = (($62) + ($$0296329<<2)|0);
     $63 = HEAP32[$61>>2]|0;
     $64 = ($63|0)==(0|0);
     if ($64) {
      $72 = $210;
     } else {
      $$0295$in325 = ((($63)) + 8|0);
      $$0295326 = HEAPU8[$$0295$in325>>0]|(HEAPU8[$$0295$in325+1>>0]<<8)|(HEAPU8[$$0295$in325+2>>0]<<16)|(HEAPU8[$$0295$in325+3>>0]<<24);
      $65 = ($$0295326|0)==(0|0);
      if ($65) {
       $72 = $210;
      } else {
       $$0295327 = $$0295326;
       while(1) {
        $66 = HEAPU8[$$0295327>>0]|(HEAPU8[$$0295327+1>>0]<<8)|(HEAPU8[$$0295327+2>>0]<<16)|(HEAPU8[$$0295327+3>>0]<<24);
        $67 = ((($$0295327)) + 12|0);
        $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
        __gc_add_reachable_both($66,$68,$2);
        $$0295$in = ((($$0295327)) + 8|0);
        $$0295 = HEAPU8[$$0295$in>>0]|(HEAPU8[$$0295$in+1>>0]<<8)|(HEAPU8[$$0295$in+2>>0]<<16)|(HEAPU8[$$0295$in+3>>0]<<24);
        $69 = ($$0295|0)==(0|0);
        if ($69) {
         break;
        } else {
         $$0295327 = $$0295;
        }
       }
       $$pre368 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $72 = $$pre368;
      }
     }
     $70 = (($$0296329) + 1)|0;
     $71 = ((($72)) + 19|0);
     $73 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
     $74 = ((($73)) + 12|0);
     $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
     $76 = ($70>>>0)<($75>>>0);
     if (!($76)) {
      break L4;
     }
     $$phi$trans$insert366 = ((($73)) + 20|0);
     $$pre367 = HEAPU8[$$phi$trans$insert366>>0]|(HEAPU8[$$phi$trans$insert366+1>>0]<<8)|(HEAPU8[$$phi$trans$insert366+2>>0]<<16)|(HEAPU8[$$phi$trans$insert366+3>>0]<<24);
     $$0296329 = $70;$210 = $72;$62 = $$pre367;
    }
    break;
   }
   case 12:  {
    $77 = ((($0)) + 4|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ((($78)) + 17|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = (__ht_find($2,$80)|0);
    $82 = ($81|0)==(0|0);
    if (!($82)) {
     break L4;
    }
    $83 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $84 = ((($83)) + 17|0);
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
    __ht_set_or_insert($2,$85,$85);
    $86 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $87 = ((($86)) + 17|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 19|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = ($90|0)==(0|0);
    if ($91) {
     ___assert_fail((3209|0),(1578|0),6522,(3170|0));
     // unreachable;
    }
    $$0294$in331 = ((($90)) + 8|0);
    $$0294332 = HEAPU8[$$0294$in331>>0]|(HEAPU8[$$0294$in331+1>>0]<<8)|(HEAPU8[$$0294$in331+2>>0]<<16)|(HEAPU8[$$0294$in331+3>>0]<<24);
    $92 = ($$0294332|0)==(0|0);
    if ($92) {
     break L4;
    } else {
     $$0294333 = $$0294332;
    }
    while(1) {
     $93 = HEAPU8[$$0294333>>0]|(HEAPU8[$$0294333+1>>0]<<8)|(HEAPU8[$$0294333+2>>0]<<16)|(HEAPU8[$$0294333+3>>0]<<24);
     $94 = ((($$0294333)) + 12|0);
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
     (__gc_add_reachable($93,$95,$2)|0);
     $$0294$in = ((($$0294333)) + 8|0);
     $$0294 = HEAPU8[$$0294$in>>0]|(HEAPU8[$$0294$in+1>>0]<<8)|(HEAPU8[$$0294$in+2>>0]<<16)|(HEAPU8[$$0294$in+3>>0]<<24);
     $96 = ($$0294|0)==(0|0);
     if ($96) {
      break;
     } else {
      $$0294333 = $$0294;
     }
    }
    break;
   }
   case 14:  {
    $97 = ((($0)) + 4|0);
    $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    $99 = ((($98)) + 17|0);
    $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
    $101 = (__ht_find($2,$100)|0);
    $102 = ($101|0)==(0|0);
    if (!($102)) {
     break L4;
    }
    $103 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    $104 = ((($103)) + 17|0);
    $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
    __ht_set_or_insert($2,$105,$105);
    $106 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    $107 = ((($106)) + 17|0);
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    $109 = ((($108)) + 19|0);
    $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
    $111 = ((($110)) + 20|0);
    $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
    $113 = ($112|0)==(0|0);
    if ($113) {
     break L4;
    }
    $114 = ((($110)) + 12|0);
    $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
    $116 = ($115|0)==(0);
    if ($116) {
     break L4;
    } else {
     $$0293339 = 0;$118 = $112;$211 = $106;
    }
    while(1) {
     $117 = (($118) + ($$0293339<<2)|0);
     $119 = HEAP32[$117>>2]|0;
     $120 = ($119|0)==(0|0);
     if ($120) {
      $128 = $211;
     } else {
      $$0292$in335 = ((($119)) + 8|0);
      $$0292336 = HEAPU8[$$0292$in335>>0]|(HEAPU8[$$0292$in335+1>>0]<<8)|(HEAPU8[$$0292$in335+2>>0]<<16)|(HEAPU8[$$0292$in335+3>>0]<<24);
      $121 = ($$0292336|0)==(0|0);
      if ($121) {
       $128 = $211;
      } else {
       $$0292337 = $$0292336;
       while(1) {
        $122 = HEAPU8[$$0292337>>0]|(HEAPU8[$$0292337+1>>0]<<8)|(HEAPU8[$$0292337+2>>0]<<16)|(HEAPU8[$$0292337+3>>0]<<24);
        $123 = ((($$0292337)) + 12|0);
        $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
        __gc_add_reachable_both($122,$124,$2);
        $$0292$in = ((($$0292337)) + 8|0);
        $$0292 = HEAPU8[$$0292$in>>0]|(HEAPU8[$$0292$in+1>>0]<<8)|(HEAPU8[$$0292$in+2>>0]<<16)|(HEAPU8[$$0292$in+3>>0]<<24);
        $125 = ($$0292|0)==(0|0);
        if ($125) {
         break;
        } else {
         $$0292337 = $$0292;
        }
       }
       $$pre365 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
       $128 = $$pre365;
      }
     }
     $126 = (($$0293339) + 1)|0;
     $127 = ((($128)) + 17|0);
     $129 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
     $130 = ((($129)) + 19|0);
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $132 = ((($131)) + 12|0);
     $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $134 = ($126>>>0)<($133>>>0);
     if (!($134)) {
      break L4;
     }
     $$phi$trans$insert363 = ((($131)) + 20|0);
     $$pre364 = HEAPU8[$$phi$trans$insert363>>0]|(HEAPU8[$$phi$trans$insert363+1>>0]<<8)|(HEAPU8[$$phi$trans$insert363+2>>0]<<16)|(HEAPU8[$$phi$trans$insert363+3>>0]<<24);
     $$0293339 = $126;$118 = $$pre364;$211 = $128;
    }
    break;
   }
   case 16:  {
    $135 = ((($0)) + 4|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = (__ht_find($2,$136)|0);
    $138 = ($137|0)==(0|0);
    if (!($138)) {
     break L4;
    }
    $139 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    __ht_set_or_insert($2,$139,$139);
    $140 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    (__traverse_class($140,136,137,-1,0,$2,0)|0);
    break L4;
    break;
   }
   case 17:  {
    $141 = ((($0)) + 4|0);
    $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
    $143 = ((($142)) + 58|0);
    $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
    $145 = ($144|0)==(2);
    if (!($145)) {
     break L4;
    }
    $146 = (__ht_find($2,$142)|0);
    $147 = ($146|0)==(0|0);
    if (!($147)) {
     break L4;
    }
    $148 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
    $149 = ((($148)) + 25|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    __ht_set_or_insert($2,$148,$148);
    $151 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
    $152 = ((($151)) + 17|0);
    $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
    $154 = ((($153)) + 8|0);
    $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
    $156 = ((($155)) + 20|0);
    $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
    $158 = ($157|0)==(0|0);
    L58: do {
     if (!($158)) {
      $159 = ((($155)) + 12|0);
      $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
      $161 = ($160|0)==(0);
      if (!($161)) {
       $$0290353 = 0;$164 = $157;$212 = $151;
       while(1) {
        $163 = (($164) + ($$0290353<<2)|0);
        $165 = HEAP32[$163>>2]|0;
        $166 = ($165|0)==(0|0);
        if ($166) {
         $174 = $212;
        } else {
         $$0289$in349 = ((($165)) + 8|0);
         $$0289350 = HEAPU8[$$0289$in349>>0]|(HEAPU8[$$0289$in349+1>>0]<<8)|(HEAPU8[$$0289$in349+2>>0]<<16)|(HEAPU8[$$0289$in349+3>>0]<<24);
         $167 = ($$0289350|0)==(0|0);
         if ($167) {
          $174 = $212;
         } else {
          $$0289351 = $$0289350;
          while(1) {
           $168 = HEAPU8[$$0289351>>0]|(HEAPU8[$$0289351+1>>0]<<8)|(HEAPU8[$$0289351+2>>0]<<16)|(HEAPU8[$$0289351+3>>0]<<24);
           $169 = ((($$0289351)) + 12|0);
           $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
           (__gc_add_reachable($168,$170,$2)|0);
           $$0289$in = ((($$0289351)) + 8|0);
           $$0289 = HEAPU8[$$0289$in>>0]|(HEAPU8[$$0289$in+1>>0]<<8)|(HEAPU8[$$0289$in+2>>0]<<16)|(HEAPU8[$$0289$in+3>>0]<<24);
           $171 = ($$0289|0)==(0|0);
           if ($171) {
            break;
           } else {
            $$0289351 = $$0289;
           }
          }
          $$pre359 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
          $174 = $$pre359;
         }
        }
        $172 = (($$0290353) + 1)|0;
        $173 = ((($174)) + 17|0);
        $175 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
        $176 = ((($175)) + 8|0);
        $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
        $178 = ((($177)) + 12|0);
        $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
        $180 = ($172>>>0)<($179>>>0);
        if (!($180)) {
         break L58;
        }
        $$phi$trans$insert = ((($177)) + 20|0);
        $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
        $$0290353 = $172;$164 = $$pre;$212 = $174;
       }
      }
     }
    } while(0);
    $162 = ($150|0)==(0|0);
    if ($162) {
     break L4;
    } else {
     $$in347 = $150;
    }
    while(1) {
     __ht_set_or_insert($2,$$in347,$$in347);
     $181 = ((($$in347)) + 21|0);
     $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
     $183 = ((($182)) + 8|0);
     $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
     $185 = ((($184)) + 20|0);
     $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
     $187 = ($186|0)==(0|0);
     L72: do {
      if (!($187)) {
       $188 = ((($184)) + 12|0);
       $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
       $190 = ($189|0)==(0);
       if (!($190)) {
        $$0288345 = 0;$192 = $186;$213 = $182;
        while(1) {
         $191 = (($192) + ($$0288345<<2)|0);
         $193 = HEAP32[$191>>2]|0;
         $194 = ($193|0)==(0|0);
         if ($194) {
          $202 = $213;
         } else {
          $$0$in341 = ((($193)) + 8|0);
          $$0342 = HEAPU8[$$0$in341>>0]|(HEAPU8[$$0$in341+1>>0]<<8)|(HEAPU8[$$0$in341+2>>0]<<16)|(HEAPU8[$$0$in341+3>>0]<<24);
          $195 = ($$0342|0)==(0|0);
          if ($195) {
           $202 = $213;
          } else {
           $$0343 = $$0342;
           while(1) {
            $196 = HEAPU8[$$0343>>0]|(HEAPU8[$$0343+1>>0]<<8)|(HEAPU8[$$0343+2>>0]<<16)|(HEAPU8[$$0343+3>>0]<<24);
            $197 = ((($$0343)) + 12|0);
            $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
            (__gc_add_reachable($196,$198,$2)|0);
            $$0$in = ((($$0343)) + 8|0);
            $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
            $199 = ($$0|0)==(0|0);
            if ($199) {
             break;
            } else {
             $$0343 = $$0;
            }
           }
           $$pre362 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
           $202 = $$pre362;
          }
         }
         $200 = (($$0288345) + 1)|0;
         $201 = ((($202)) + 8|0);
         $203 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
         $204 = ((($203)) + 12|0);
         $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
         $206 = ($200>>>0)<($205>>>0);
         if (!($206)) {
          break L72;
         }
         $$phi$trans$insert360 = ((($203)) + 20|0);
         $$pre361 = HEAPU8[$$phi$trans$insert360>>0]|(HEAPU8[$$phi$trans$insert360+1>>0]<<8)|(HEAPU8[$$phi$trans$insert360+2>>0]<<16)|(HEAPU8[$$phi$trans$insert360+3>>0]<<24);
         $$0288345 = $200;$192 = $$pre361;$213 = $202;
        }
       }
      }
     } while(0);
     $207 = ((($$in347)) + 17|0);
     $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
     $209 = ($208|0)==(0|0);
     if ($209) {
      break;
     } else {
      $$in347 = $208;
     }
    }
    break;
   }
   default: {
    break L4;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __internal_object_to_public_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$tr70 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond69 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)!=(0|0);
 $3 = ($0|0)!=(0|0);
 $or$cond69 = $2 & $3;
 L1: do {
  if ($or$cond69) {
   $$tr70 = $0;
   L2: while(1) {
    $4 = HEAPU8[$$tr70>>0]|(HEAPU8[$$tr70+1>>0]<<8)|(HEAPU8[$$tr70+2>>0]<<16)|(HEAPU8[$$tr70+3>>0]<<24);
    switch ($4|0) {
    case 0:  {
     label = 5;
     break L2;
     break;
    }
    case 1:  {
     label = 6;
     break L2;
     break;
    }
    case 2:  {
     label = 7;
     break L2;
     break;
    }
    case 3:  {
     label = 8;
     break L2;
     break;
    }
    case 4:  {
     label = 9;
     break L2;
     break;
    }
    case 5:  {
     label = 10;
     break L2;
     break;
    }
    case 6:  {
     label = 11;
     break L2;
     break;
    }
    case 7:  {
     label = 12;
     break L2;
     break;
    }
    case 10:  {
     label = 13;
     break L2;
     break;
    }
    case 11:  {
     label = 14;
     break L2;
     break;
    }
    case 12:  {
     label = 15;
     break L2;
     break;
    }
    case 13:  {
     label = 16;
     break L2;
     break;
    }
    case 14:  {
     label = 17;
     break L2;
     break;
    }
    case 16:  {
     label = 18;
     break L2;
     break;
    }
    case 17:  {
     label = 19;
     break L2;
     break;
    }
    case 9:  {
     break;
    }
    default: {
     $$0 = 3;
     break L2;
    }
    }
    $5 = ((($$tr70)) + 4|0);
    $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $7 = ((($6)) + 4|0);
    $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $9 = ($8|0)==(0|0);
    if ($9) {
     break L1;
    } else {
     $$tr70 = $8;
    }
   }
   switch (label|0) {
    case 5: {
     $10 = ((($1)) + 4|0);
     HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
     HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
     $$0 = 0;
     break;
    }
    case 6: {
     HEAP8[$1>>0]=1&255;HEAP8[$1+1>>0]=(1>>8)&255;HEAP8[$1+2>>0]=(1>>16)&255;HEAP8[$1+3>>0]=1>>24;
     $11 = ((($1)) + 4|0);
     HEAP8[$11>>0]=0&255;HEAP8[$11+1>>0]=(0>>8)&255;HEAP8[$11+2>>0]=(0>>16)&255;HEAP8[$11+3>>0]=0>>24;
     $$0 = 0;
     break;
    }
    case 7: {
     HEAP8[$1>>0]=2&255;HEAP8[$1+1>>0]=(2>>8)&255;HEAP8[$1+2>>0]=(2>>16)&255;HEAP8[$1+3>>0]=2>>24;
     $12 = ((($$tr70)) + 4|0);
     $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $14 = ((($1)) + 4|0);
     HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
     $$0 = 0;
     break;
    }
    case 8: {
     HEAP8[$1>>0]=4&255;HEAP8[$1+1>>0]=(4>>8)&255;HEAP8[$1+2>>0]=(4>>16)&255;HEAP8[$1+3>>0]=4>>24;
     $15 = ((($$tr70)) + 4|0);
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ((($1)) + 4|0);
     HEAP8[$17>>0]=$16&255;HEAP8[$17+1>>0]=($16>>8)&255;HEAP8[$17+2>>0]=($16>>16)&255;HEAP8[$17+3>>0]=$16>>24;
     $$0 = 0;
     break;
    }
    case 9: {
     HEAP8[$1>>0]=8&255;HEAP8[$1+1>>0]=(8>>8)&255;HEAP8[$1+2>>0]=(8>>16)&255;HEAP8[$1+3>>0]=8>>24;
     $18 = ((($$tr70)) + 4|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ((($1)) + 4|0);
     HEAP8[$20>>0]=$19&255;HEAP8[$20+1>>0]=($19>>8)&255;HEAP8[$20+2>>0]=($19>>16)&255;HEAP8[$20+3>>0]=$19>>24;
     $$0 = 0;
     break;
    }
    case 10: {
     HEAP8[$1>>0]=16&255;HEAP8[$1+1>>0]=(16>>8)&255;HEAP8[$1+2>>0]=(16>>16)&255;HEAP8[$1+3>>0]=16>>24;
     $21 = ((($$tr70)) + 4|0);
     $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
     $23 = ((($1)) + 4|0);
     HEAP8[$23>>0]=$22&255;HEAP8[$23+1>>0]=($22>>8)&255;HEAP8[$23+2>>0]=($22>>16)&255;HEAP8[$23+3>>0]=$22>>24;
     $$0 = 0;
     break;
    }
    case 11: {
     HEAP8[$1>>0]=32&255;HEAP8[$1+1>>0]=(32>>8)&255;HEAP8[$1+2>>0]=(32>>16)&255;HEAP8[$1+3>>0]=32>>24;
     $24 = ((($$tr70)) + 4|0);
     $25 = ((($1)) + 4|0);
     $26 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     HEAP8[$25>>0]=$26&255;HEAP8[$25+1>>0]=($26>>8)&255;HEAP8[$25+2>>0]=($26>>16)&255;HEAP8[$25+3>>0]=$26>>24;
     $$0 = 0;
     break;
    }
    case 12: {
     HEAP8[$1>>0]=64&255;HEAP8[$1+1>>0]=(64>>8)&255;HEAP8[$1+2>>0]=(64>>16)&255;HEAP8[$1+3>>0]=64>>24;
     $27 = ((($$tr70)) + 4|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ((($1)) + 4|0);
     HEAP8[$29>>0]=$28&255;HEAP8[$29+1>>0]=($28>>8)&255;HEAP8[$29+2>>0]=($28>>16)&255;HEAP8[$29+3>>0]=$28>>24;
     $$0 = 0;
     break;
    }
    case 13: {
     HEAP8[$1>>0]=128&255;HEAP8[$1+1>>0]=(128>>8)&255;HEAP8[$1+2>>0]=(128>>16)&255;HEAP8[$1+3>>0]=128>>24;
     $30 = ((($$tr70)) + 4|0);
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = ((($1)) + 4|0);
     HEAP8[$32>>0]=$31&255;HEAP8[$32+1>>0]=($31>>8)&255;HEAP8[$32+2>>0]=($31>>16)&255;HEAP8[$32+3>>0]=$31>>24;
     $$0 = 0;
     break;
    }
    case 14: {
     HEAP8[$1>>0]=256&255;HEAP8[$1+1>>0]=(256>>8)&255;HEAP8[$1+2>>0]=(256>>16)&255;HEAP8[$1+3>>0]=256>>24;
     $33 = ((($$tr70)) + 4|0);
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ((($1)) + 4|0);
     HEAP8[$35>>0]=$34&255;HEAP8[$35+1>>0]=($34>>8)&255;HEAP8[$35+2>>0]=($34>>16)&255;HEAP8[$35+3>>0]=$34>>24;
     $$0 = 0;
     break;
    }
    case 15: {
     HEAP8[$1>>0]=512&255;HEAP8[$1+1>>0]=(512>>8)&255;HEAP8[$1+2>>0]=(512>>16)&255;HEAP8[$1+3>>0]=512>>24;
     $36 = ((($$tr70)) + 4|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     $38 = ((($1)) + 4|0);
     HEAP8[$38>>0]=$37&255;HEAP8[$38+1>>0]=($37>>8)&255;HEAP8[$38+2>>0]=($37>>16)&255;HEAP8[$38+3>>0]=$37>>24;
     $$0 = 0;
     break;
    }
    case 16: {
     HEAP8[$1>>0]=1024&255;HEAP8[$1+1>>0]=(1024>>8)&255;HEAP8[$1+2>>0]=(1024>>16)&255;HEAP8[$1+3>>0]=1024>>24;
     $39 = ((($$tr70)) + 4|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = ((($1)) + 4|0);
     HEAP8[$41>>0]=$40&255;HEAP8[$41+1>>0]=($40>>8)&255;HEAP8[$41+2>>0]=($40>>16)&255;HEAP8[$41+3>>0]=$40>>24;
     $$0 = 0;
     break;
    }
    case 17: {
     HEAP8[$1>>0]=2048&255;HEAP8[$1+1>>0]=(2048>>8)&255;HEAP8[$1+2>>0]=(2048>>16)&255;HEAP8[$1+3>>0]=2048>>24;
     $42 = ((($$tr70)) + 4|0);
     $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
     $44 = ((($1)) + 4|0);
     HEAP8[$44>>0]=$43&255;HEAP8[$44+1>>0]=($43>>8)&255;HEAP8[$44+2>>0]=($43>>16)&255;HEAP8[$44+3>>0]=$43>>24;
     $$0 = 0;
     break;
    }
    case 18: {
     HEAP8[$1>>0]=4096&255;HEAP8[$1+1>>0]=(4096>>8)&255;HEAP8[$1+2>>0]=(4096>>16)&255;HEAP8[$1+3>>0]=4096>>24;
     $45 = ((($$tr70)) + 4|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $47 = ((($1)) + 4|0);
     HEAP8[$47>>0]=$46&255;HEAP8[$47+1>>0]=($46>>8)&255;HEAP8[$47+2>>0]=($46>>16)&255;HEAP8[$47+3>>0]=$46>>24;
     $$0 = 0;
     break;
    }
    case 19: {
     HEAP8[$1>>0]=8192&255;HEAP8[$1+1>>0]=(8192>>8)&255;HEAP8[$1+2>>0]=(8192>>16)&255;HEAP8[$1+3>>0]=8192>>24;
     $48 = ((($$tr70)) + 4|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = ((($1)) + 4|0);
     HEAP8[$50>>0]=$49&255;HEAP8[$50+1>>0]=($49>>8)&255;HEAP8[$50+2>>0]=($49>>16)&255;HEAP8[$50+3>>0]=$49>>24;
     $$0 = 0;
     break;
    }
   }
   return ($$0|0);
  }
 } while(0);
 ___assert_fail((3336|0),(1578|0),10344,(3347|0));
 // unreachable;
 return (0)|0;
}
function __gc_add_reachable_both($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if ($or$cond5) {
  (__gc_add_reachable($1,0,$2)|0);
  (__gc_add_reachable($0,$1,$2)|0);
  return;
 } else {
  ___assert_fail((3294|0),(1578|0),6572,(3313|0));
  // unreachable;
 }
}
function __add_class_meta_reachable($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((3257|0),(1578|0),8556,(3268|0));
  // unreachable;
 }
 $5 = (__ht_find($1,$0)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  __ht_set_or_insert($1,$0,$0);
 }
 return 1;
}
function __traverse_class($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$in = 0, $$0$in90 = 0, $$07894 = 0, $$07985 = 0, $$080 = 0, $$091 = 0, $$092 = 0, $$2 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre96 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ($0|0)==(0|0);
 if ($7) {
  ___assert_fail((3239|0),(1578|0),8336,(3241|0));
  // unreachable;
 }
 $8 = ($1|0)==(0|0);
 L4: do {
  if (!($8)) {
   $9 = ((($0)) + 29|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ((($10)) + 8|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ((($12)) + 20|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ($14|0)==(0|0);
   if (!($15)) {
    $16 = ((($12)) + 12|0);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $18 = ($17|0)==(0);
    if (!($18)) {
     $$07894 = 0;$20 = $14;$56 = $10;
     while(1) {
      $19 = (($20) + ($$07894<<2)|0);
      $21 = HEAP32[$19>>2]|0;
      $22 = ($21|0)==(0|0);
      if ($22) {
       $30 = $56;
      } else {
       $$0$in90 = ((($21)) + 8|0);
       $$091 = HEAPU8[$$0$in90>>0]|(HEAPU8[$$0$in90+1>>0]<<8)|(HEAPU8[$$0$in90+2>>0]<<16)|(HEAPU8[$$0$in90+3>>0]<<24);
       $23 = ($$091|0)==(0|0);
       if ($23) {
        $30 = $56;
       } else {
        $$092 = $$091;
        while(1) {
         $24 = HEAPU8[$$092>>0]|(HEAPU8[$$092+1>>0]<<8)|(HEAPU8[$$092+2>>0]<<16)|(HEAPU8[$$092+3>>0]<<24);
         $25 = ((($$092)) + 12|0);
         $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
         (FUNCTION_TABLE_iiii[$1 & 255]($24,$26,$5)|0);
         $$0$in = ((($$092)) + 8|0);
         $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
         $27 = ($$0|0)==(0|0);
         if ($27) {
          break;
         } else {
          $$092 = $$0;
         }
        }
        $$pre96 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
        $30 = $$pre96;
       }
      }
      $28 = (($$07894) + 1)|0;
      $29 = ((($30)) + 8|0);
      $31 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $32 = ((($31)) + 12|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $34 = ($28>>>0)<($33>>>0);
      if (!($34)) {
       break L4;
      }
      $$phi$trans$insert = ((($31)) + 20|0);
      $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
      $$07894 = $28;$20 = $$pre;$56 = $30;
     }
    }
   }
  }
 } while(0);
 $35 = ($4<<24>>24)!=(0);
 $36 = ($2|0)!=(0|0);
 $or$cond3 = $36 & $35;
 if ($or$cond3) {
  $37 = (FUNCTION_TABLE_iiii[$2 & 255]($0,$5,$6)|0);
  $38 = ($37<<24>>24)==(0);
  if ($38) {
   $$2 = 0;
  } else {
   $$080 = $37;
   label = 14;
  }
 } else {
  $$080 = 1;
  label = 14;
 }
 L19: do {
  if ((label|0) == 14) {
   $39 = ((($0)) + 25|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ($40|0)==(0|0);
   if ($41) {
    $$2 = $$080;
   } else {
    $42 = ((($40)) + 8|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ($43|0)==(0|0);
    if ($44) {
     $$2 = $$080;
    } else {
     $45 = ($3|0)!=(0);
     $or$cond = $36 & $45;
     $46 = (($3) + -1)|0;
     $47 = $45 ? $46 : 0;
     $$07985 = $43;
     while(1) {
      $48 = HEAPU8[$$07985>>0]|(HEAPU8[$$07985+1>>0]<<8)|(HEAPU8[$$07985+2>>0]<<16)|(HEAPU8[$$07985+3>>0]<<24);
      if ($or$cond) {
       $49 = (FUNCTION_TABLE_iiii[$2 & 255]($48,$5,$6)|0);
       $50 = ($49<<24>>24)==(0);
       if ($50) {
        $$2 = 0;
        break L19;
       }
      }
      $51 = (__traverse_class($48,$1,$2,$47,$4,$5,$6)|0);
      $52 = ($51<<24>>24)==(0);
      if ($52) {
       $$2 = 0;
       break L19;
      }
      $53 = ((($$07985)) + 8|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $55 = ($54|0)==(0|0);
      if ($55) {
       $$2 = $51;
       break;
      } else {
       $$07985 = $54;
      }
     }
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function __get_root_scope($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$056 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$lcssa = 0;
 } else {
  $$056 = $0;
  while(1) {
   $2 = HEAPU8[$$056>>0]|(HEAPU8[$$056+1>>0]<<8)|(HEAPU8[$$056+2>>0]<<16)|(HEAPU8[$$056+3>>0]<<24);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$0$lcssa = $$056;
    break;
   } else {
    $$056 = $2;
   }
  }
 }
 return ($$0$lcssa|0);
}
function __ls_popback($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1847|0),(1578|0),2442,(3567|0));
  // unreachable;
 }
 $2 = (__ls_back($0)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ((($2)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==($0|0);
  $$ = $7 ? 0 : $6;
  $8 = ((($0)) + 4|0);
  HEAP8[$8>>0]=$$&255;HEAP8[$8+1>>0]=($$>>8)&255;HEAP8[$8+2>>0]=($$>>16)&255;HEAP8[$8+3>>0]=$$>>24;
  $9 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $10 = ((($9)) + 8|0);
  HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
  _mb_free($2);
  $11 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  $12 = ((($11)) + -1|0);
  HEAP8[$0>>0]=$12&255;HEAP8[$0+1>>0]=($12>>8)&255;HEAP8[$0+2>>0]=($12>>16)&255;HEAP8[$0+3>>0]=$12>>24;
  $$0 = $4;
 }
 return ($$0|0);
}
function __core_close_bracket($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 98|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if ($4) {
  label = 4;
 } else {
  $5 = ((($3)) + 58|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(2);
  if ($7) {
   $8 = (__core_return($0,$1)|0);
   $$3 = $8;
  } else {
   label = 4;
  }
 }
 do {
  if ((label|0) == 4) {
   $9 = HEAP32[$1>>2]|0;
   $10 = ($9|0)==(0|0);
   if (!($10)) {
    $11 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $12 = ($11|0)==(0|0);
    if (!($12)) {
     $13 = (__set_current_error($0,48,3524)|0);
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$3 = 0;
      break;
     }
     $15 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
     $16 = ((($15)) + 9|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     $18 = ((($15)) + 13|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
     $20 = ((($15)) + 15|0);
     $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
     __set_error_pos($0,$17,$19,$21);
     $$3 = 3;
     break;
    }
   }
   $22 = (__set_current_error($0,48,3524)|0);
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $$3 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$3 = 3;
   }
  }
 } while(0);
 return ($$3|0);
}
function __core_return($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $$byval_copy = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16241,(3544|0));
  // unreachable;
 }
 $6 = ((($3)) + 4|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$3>>2] = 0;
 $7 = ((($0)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($0)) + 102|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$pre$phiZ2D = $2;
  label = 8;
 } else {
  $13 = HEAP32[$1>>2]|0;
  $14 = ((($13)) + 8|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  HEAP32[$2>>2] = $15;
  $16 = (_mb_has_arg($0,$2)|0);
  $17 = ($16|0)==(0);
  if ($17) {
   $$pre$phiZ2D = $2;
   label = 8;
  } else {
   $18 = (_mb_pop_value($0,$2,$3)|0);
   $19 = ($18|0)==(0);
   if ($19) {
    ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
    $20 = (_mb_push_value($0,$2,$$byval_copy)|0);
    $21 = ($20|0)==(0);
    if ($21) {
     $$pre$phiZ2D = $2;
     label = 8;
    } else {
     $$2 = $20;
    }
   } else {
    $$2 = $18;
   }
  }
 }
 do {
  if ((label|0) == 8) {
   $22 = (__ls_popback($10)|0);
   HEAP32[$$pre$phiZ2D>>2] = $22;
   $23 = ($22|0)==(0|0);
   if (!($23)) {
    HEAP32[$1>>2] = $22;
    $$2 = 103;
    break;
   }
   $24 = ((($0)) + 67|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = (__set_current_error($0,27,$25)|0);
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $$2 = 103;
   } else {
    __set_error_pos($0,0,0,0);
    $$2 = 3;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$2|0);
}
function _mb_has_arg($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$025 = 0, $$026 = 0, $$129 = 0, $$old2 = 0, $$pr = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 L1: do {
  if ($or$cond) {
   $4 = HEAP32[$1>>2]|0;
   $5 = ($4|0)==(0|0);
   if ($5) {
    $$026 = 0;
   } else {
    $6 = (__multiline_statement($0)|0);
    $7 = ($6<<24>>24)!=(0);
    $8 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    $9 = ($8|0)!=(0|0);
    $or$cond3 = $7 & $9;
    L4: do {
     if ($or$cond3) {
      $$0 = $8;$$025 = $4;
      while(1) {
       $10 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
       $11 = ($10|0)==(22);
       if (!($11)) {
        $$129 = $$0;$$pr = $10;
        break L4;
       }
       $12 = ((($$025)) + 8|0);
       $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
       $14 = ($13|0)==(0|0);
       if ($14) {
        $$026 = 0;
        break L1;
       }
       $15 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
       $$old2 = ($15|0)==(0|0);
       if ($$old2) {
        $$026 = 0;
        break L1;
       } else {
        $$0 = $15;$$025 = $13;
       }
      }
     } else {
      $16 = ($8|0)==(0|0);
      if ($16) {
       $$026 = 0;
       break L1;
      }
      $$pre = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
      $$129 = $8;$$pr = $$pre;
     }
    } while(0);
    switch ($$pr|0) {
    case 19: case 22:  {
     $$026 = 0;
     break L1;
     break;
    }
    case 8:  {
     $17 = ((($$129)) + 4|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = ((($18)) + 4|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     $21 = ($20|0)==(23|0);
     if ($21) {
      $$026 = 0;
      break L1;
     }
     break;
    }
    default: {
    }
    }
    $$026 = 1;
   }
  } else {
   $$026 = 0;
  }
 } while(0);
 return ($$026|0);
}
function __multiline_statement($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 130|0);
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $3 = (__ls_empty($2)|0);
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $5 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  $6 = (__ls_back($5)|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = $7&255;
  $$0 = $8;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ls_empty($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1847|0),(1578|0),2696,(3557|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 8|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ($3|0)==(0|0);
  $5 = $4&1;
  return ($5|0);
 }
 return (0)|0;
}
function __try_purge_it($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$02123 = 0, $$022 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $4 = ($0|0)==(0|0);
 if (!($4)) {
  $5 = ($1|0)!=(0|0);
  $6 = ($2|0)!=(0|0);
  $or$cond = $5 | $6;
  if ($or$cond) {
   ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
   L4: do {
    if ($5) {
     $7 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
     switch ($7|0) {
     case 2048: case 512:  {
      break;
     }
     default: {
      label = 7;
      break L4;
     }
     }
     (__public_value_to_internal_object($1,$3)|0);
     $$02123 = $3;
     label = 8;
    } else {
     label = 7;
    }
   } while(0);
   if ((label|0) == 7) {
    $8 = ($2|0)==(0|0);
    if ($8) {
     $$022 = 0;
    } else {
     $$02123 = $2;
     label = 8;
    }
   }
   L9: do {
    if ((label|0) == 8) {
     $9 = HEAPU8[$$02123>>0]|(HEAPU8[$$02123+1>>0]<<8)|(HEAPU8[$$02123+2>>0]<<16)|(HEAPU8[$$02123+3>>0]<<24);
     switch ($9|0) {
     case 12:  {
      $10 = ((($$02123)) + 4|0);
      $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
      $12 = ((($11)) + 21|0);
      $13 = HEAP8[$12>>0]|0;
      $14 = $13 & 1;
      $15 = ($14<<24>>24)==(0);
      if (!($15)) {
       $$022 = 1;
       break L9;
      }
      __destroy_list_it($11);
      $$022 = 1;
      break L9;
      break;
     }
     case 14:  {
      $16 = ((($$02123)) + 4|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      $18 = ((($17)) + 21|0);
      $19 = HEAP8[$18>>0]|0;
      $20 = $19 & 1;
      $21 = ($20<<24>>24)==(0);
      if (!($21)) {
       $$022 = 1;
       break L9;
      }
      __destroy_dict_it($17);
      $$022 = 1;
      break L9;
      break;
     }
     default: {
      $$022 = 0;
      break L9;
     }
     }
    }
   } while(0);
   STACKTOP = sp;return ($$022|0);
  }
 }
 ___assert_fail((3604|0),(1578|0),8118,(3622|0));
 // unreachable;
 return (0)|0;
}
function __search_identifier_in_class($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 $7 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $7;
 if (!($or$cond5)) {
  ___assert_fail((4236|0),(1578|0),9275,(9160|0));
  // unreachable;
 }
 $8 = ((($1)) + 29|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($9)) + 8|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = (__ht_find($11,$2)|0);
 $13 = ($12|0)==(0|0);
 L4: do {
  if ($13) {
   $20 = ((($1)) + 25|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ($21|0)==(0|0);
   if ($22) {
    $$1 = 0;
   } else {
    $23 = ((($21)) + 8|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ($24|0)==(0|0);
    if ($25) {
     $$1 = 0;
    } else {
     $$039 = $24;
     while(1) {
      $26 = HEAPU8[$$039>>0]|(HEAPU8[$$039+1>>0]<<8)|(HEAPU8[$$039+2>>0]<<16)|(HEAPU8[$$039+3>>0]<<24);
      $27 = (__search_identifier_in_class($0,$26,$2,$3,$4)|0);
      $28 = ($27|0)==(0|0);
      if (!($28)) {
       $$1 = $27;
       break L4;
      }
      $29 = ((($$039)) + 8|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $31 = ($30|0)==(0|0);
      if ($31) {
       $$1 = 0;
       break;
      } else {
       $$039 = $30;
      }
     }
    }
   }
  } else {
   $14 = ($3|0)==(0|0);
   if (!($14)) {
    $15 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $16 = ((($15)) + 8|0);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    HEAP32[$3>>2] = $17;
   }
   $18 = ($4|0)==(0|0);
   if ($18) {
    $$1 = $12;
   } else {
    $19 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    HEAP32[$4>>2] = $19;
    $$1 = $12;
   }
  }
 } while(0);
 return ($$1|0);
}
function __has_routine_lex_arg($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (_mb_has_arg($0,$1)|0);
 return ($6|0);
}
function __pop_routine_lex_arg($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (_mb_pop_value($0,$1,$6)|0);
 return ($7|0);
}
function __eval_routine($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer = sp;
 $7 = sp + 8|0;
 $8 = ((($0)) + 126|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($4)) + 45|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 (__ls_pushback($9,$11)|0);
 $12 = ((($0)) + 67|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ((($4)) + 49|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 HEAP8[$12>>0]=$15&255;HEAP8[$12+1>>0]=($15>>8)&255;HEAP8[$12+2>>0]=($15>>16)&255;HEAP8[$12+3>>0]=$15>>24;
 $16 = ((($4)) + 58|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = $15;
 switch ($17|0) {
 case 1:  {
  $19 = ((($4)) + 8|0);
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)==(0|0);
  if ($21) {
   label = 10;
  } else {
   $22 = (__eval_script_routine($0,$1,$2,$3,$4,$5,$6)|0);
   $$0 = $22;
  }
  break;
 }
 case 2:  {
  $23 = ((($4)) + 37|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = ($24|0)==(0|0);
  if ($25) {
   label = 10;
  } else {
   $26 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $27 = (__ls_back($26)|0);
   $28 = ($27|0)==(0|0);
   if (!($28)) {
    HEAP32[$vararg_buffer>>2] = $4;
    (_sprintf($7,3706,$vararg_buffer)|0);
    HEAP8[$27>>0]=$7&255;HEAP8[$27+1>>0]=($7>>8)&255;HEAP8[$27+2>>0]=($7>>16)&255;HEAP8[$27+3>>0]=$7>>24;
   }
   $29 = (__eval_lambda_routine($0,$1,$2,$3,$4,$5,$6)|0);
   $$0 = $29;
  }
  break;
 }
 case 3:  {
  $30 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $31 = ($30|0)==(0|0);
  if ($31) {
   label = 10;
  } else {
   $32 = (__eval_native_routine($0,$1,$2,$3,$4,$5,$6)|0);
   $$0 = $32;
  }
  break;
 }
 default: {
  label = 10;
 }
 }
 do {
  if ((label|0) == 10) {
   $33 = ($1|0)==(0|0);
   if (!($33)) {
    $34 = HEAP32[$1>>2]|0;
    $35 = ($34|0)==(0|0);
    if (!($35)) {
     $36 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $37 = ($36|0)==(0|0);
     if (!($37)) {
      $38 = (__set_current_error($0,51,$18)|0);
      $39 = ($38<<24>>24)==(0);
      if ($39) {
       $$0 = 0;
       break;
      }
      $40 = HEAP32[$1>>2]|0;
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = ((($41)) + 9|0);
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      $44 = ((($41)) + 13|0);
      $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8);
      $46 = ((($41)) + 15|0);
      $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8);
      __set_error_pos($0,$43,$45,$47);
      $$0 = 3;
      break;
     }
    }
   }
   $48 = (__set_current_error($0,51,$18)|0);
   $49 = ($48<<24>>24)==(0);
   if ($49) {
    $$0 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$0 = 3;
   }
  }
 } while(0);
 HEAP8[$12>>0]=$13&255;HEAP8[$12+1>>0]=($13>>8)&255;HEAP8[$12+2>>0]=($13>>16)&255;HEAP8[$12+3>>0]=$13>>24;
 $50 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 (__ls_popback($50)|0);
 STACKTOP = sp;return ($$0|0);
}
function __eval_script_routine($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0187 = 0, $$0188 = 0, $$0189194 = 0, $$1 = 0, $$1186$ph = 0, $$1186196 = 0, $$2 = 0, $$pre = 0, $$sink = 0, $$sink14 = 0, $$sink212 = 0, $$sink213 = 0, $$sink214 = 0, $$sink9 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $or$cond190 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp + 8|0;
 $8 = sp;
 HEAP32[$7>>2] = 0;
 $9 = ((($0)) + 98|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(0|0);
 $12 = $10;
 if ($11) {
  $25 = 0;
 } else {
  $13 = ((($10)) + 53|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ((($4)) + 53|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ($14|0)==($16|0);
  $18 = $17&1;
  $25 = $18;
 }
 $19 = ($1|0)!=(0|0);
 $20 = ($4|0)!=(0|0);
 $or$cond5 = $19 & $20;
 if (!($or$cond5)) {
  ___assert_fail((3718|0),(1578|0),4479,(9116|0));
  // unreachable;
 }
 $21 = ($2|0)!=(0|0);
 L7: do {
  if ($21) {
   HEAP8[$9>>0]=$4&255;HEAP8[$9+1>>0]=($4>>8)&255;HEAP8[$9+2>>0]=($4>>16)&255;HEAP8[$9+3>>0]=$4>>24;
   $58 = (__push_var_args($0)|0);
   $208 = $12;$209 = $9;$65 = $58;
   label = 19;
  } else {
   do {
    if (!($11)) {
     $22 = ((($10)) + 4|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ($23|0)!=(0|0);
     $26 = ($25|0)==(0);
     $or$cond190 = $26 | $24;
     if (!($or$cond190)) {
      $27 = ((($10)) + 45|0);
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      $29 = ((($4)) + 45|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $31 = ($28|0)==($30|0);
      if (!($31)) {
       $32 = (_strcmp($28,$30)|0);
       $33 = ($32|0)==(0);
       if (!($33)) {
        break;
       }
      }
      $34 = HEAP32[$1>>2]|0;
      HEAP32[$7>>2] = $34;
      (__skip_to($0,$7,0,22)|0);
      $35 = HEAP32[$7>>2]|0;
      $36 = ($35|0)==(0|0);
      if (!($36)) {
       $37 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
       $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
       $39 = ($38|0)==(22);
       if ($39) {
        $40 = ((($35)) + 8|0);
        $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
        HEAP32[$7>>2] = $41;
        $42 = $41;
        $43 = ($41|0)==(0);
        if ($43) {
         break;
        } else {
         $45 = $42;
        }
       } else {
        $45 = $35;
       }
       $44 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $46 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $47 = ($46|0)==(8);
       if ($47) {
        $48 = ((($44)) + 4|0);
        $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
        $50 = ((($49)) + 4|0);
        $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
        $52 = ($51|0)==(87|0);
        if ($52) {
         $53 = ((($4)) + 8|0);
         $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
         HEAP32[$1>>2] = $54;
         $55 = ($54|0)==(0|0);
         if ($55) {
          $$1 = 0;
          break L7;
         }
         $56 = ((($54)) + 8|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         HEAP32[$1>>2] = $57;
         $$1 = 0;
         break L7;
        }
       }
      }
     }
    }
   } while(0);
   $59 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   HEAP8[$9>>0]=$4&255;HEAP8[$9+1>>0]=($4>>8)&255;HEAP8[$9+2>>0]=($4>>16)&255;HEAP8[$9+3>>0]=$4>>24;
   $60 = (__push_var_args($0)|0);
   $61 = (_mb_attempt_open_bracket($0,$1)|0);
   $62 = ($61|0)==(0);
   if ($62) {
    $208 = $59;$209 = $9;$65 = $60;
    label = 19;
   } else {
    $$1 = $61;
   }
  }
 } while(0);
 if ((label|0) == 19) {
  $63 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $64 = (__push_weak_scope_by_routine($0,$63,$4)|0);
  $66 = (__proc_args($0,$1,$64,$2,$3,$4,$5,$6,1,$65)|0);
  $67 = ($66|0)==(0);
  do {
   if ($67) {
    $71 = (__pop_weak_scope($0,$64)|0);
    if (!($21)) {
     $72 = (_mb_attempt_close_bracket($0,$1)|0);
     $73 = ($72|0)==(0);
     if (!($73)) {
      $$2 = $72;
      break;
     }
    }
    $74 = HEAP32[$1>>2]|0;
    HEAP32[$7>>2] = $74;
    $75 = ((($0)) + 102|0);
    $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
    (__ls_pushback($76,$74)|0);
    $77 = ((($4)) + 53|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ($78|0)==(0|0);
    if ($79) {
     $$0187 = 0;$$0188 = 0;
    } else {
     $80 = ((($0)) + 93|0);
     $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
     $82 = ($81|0)==($78|0);
     if ($82) {
      $$0187 = 0;$$0188 = 0;
     } else {
      HEAP8[$80>>0]=$78&255;HEAP8[$80+1>>0]=($78>>8)&255;HEAP8[$80+2>>0]=($78>>16)&255;HEAP8[$80+3>>0]=$78>>24;
      $83 = ((($78)) + 29|0);
      $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
      __push_scope_by_class($0,$84);
      $$0187 = $81;$$0188 = 1;
     }
    }
    $85 = (__push_scope_by_routine($0,$71)|0);
    $86 = ((($4)) + 8|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    HEAP32[$1>>2] = $87;
    $88 = ($87|0)==(0|0);
    do {
     if ($88) {
      $89 = HEAP32[$7>>2]|0;
      $90 = ($89|0)==(0|0);
      if (!($90)) {
       $91 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $92 = ($91|0)==(0|0);
       if (!($92)) {
        $93 = ((($0)) + 67|0);
        $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
        $95 = (__set_current_error($0,51,$94)|0);
        $96 = ($95<<24>>24)==(0);
        if ($96) {
         $$1186$ph = 0;
         label = 58;
         break;
        }
        $97 = HEAP32[$7>>2]|0;
        $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
        $99 = ((($98)) + 9|0);
        $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
        $101 = ((($98)) + 13|0);
        $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8);
        $103 = ((($98)) + 15|0);
        $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8);
        __set_error_pos($0,$100,$102,$104);
        $$1186$ph = 3;
        label = 58;
        break;
       }
      }
      $105 = ((($0)) + 67|0);
      $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
      $107 = (__set_current_error($0,51,$106)|0);
      $108 = ($107<<24>>24)==(0);
      if ($108) {
       $$1186$ph = 0;
       label = 58;
      } else {
       __set_error_pos($0,0,0,0);
       $$1186$ph = 3;
       label = 58;
      }
     } else {
      L43: while(1) {
       $109 = (__execute_statement($0,$1,1)|0);
       $110 = HEAP32[$1>>2]|0;
       HEAP32[$7>>2] = $110;
       switch ($109|0) {
       case 103:  {
        label = 56;
        break L43;
        break;
       }
       case 5:  {
        label = 36;
        break L43;
        break;
       }
       case 0:  {
        break;
       }
       default: {
        label = 44;
        break L43;
       }
       }
       $195 = ($110|0)==(0|0);
       if ($195) {
        label = 56;
        break;
       }
      }
      if ((label|0) == 36) {
       $111 = ((($0)) + 139|0);
       $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
       (__set_current_error($0,49,$112)|0);
       $113 = ((($0)) + 159|0);
       $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
       $115 = ($114|0)==(0|0);
       if ($115) {
        $$1186$ph = 5;
        label = 58;
        break;
       }
       $116 = ((($0)) + 134|0);
       $117 = HEAP8[$116>>0]|0;
       $118 = $117 & 1;
       $119 = ($118<<24>>24)==(0);
       if (!($119)) {
        $$1186$ph = 5;
        label = 58;
        break;
       }
       $120 = $117 | 1;
       HEAP8[$116>>0] = $120;
       $121 = ((($0)) + 135|0);
       $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
       $123 = (_mb_get_error_desc($122)|0);
       $124 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
       $125 = ((($0)) + 71|0);
       $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
       $127 = ($126|0)==(0|0);
       if ($127) {
        $128 = ((($0)) + 143|0);
        $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
        $130 = ((($0)) + 147|0);
        $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8);
        $210 = $131;$211 = $129;
        label = 42;
       } else {
        $132 = ((($0)) + 79|0);
        $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
        $134 = ($133|0)==(0);
        $135 = ((($0)) + 143|0);
        $136 = ((($126)) + 164|0);
        $$sink = $134 ? $136 : $135;
        $137 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
        $138 = ((($0)) + 79|0);
        $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
        $140 = ($139|0)==(0);
        $141 = ((($0)) + 147|0);
        $142 = ((($126)) + 168|0);
        $$sink212 = $140 ? $142 : $141;
        $143 = HEAPU8[$$sink212>>0]|(HEAPU8[$$sink212+1>>0]<<8);
        $144 = ((($0)) + 79|0);
        $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
        $146 = ($145|0)==(0);
        if ($146) {
         $147 = ((($126)) + 170|0);
         $$sink9 = $147;$150 = $137;$151 = $143;
        } else {
         $210 = $143;$211 = $137;
         label = 42;
        }
       }
       if ((label|0) == 42) {
        $148 = ((($0)) + 149|0);
        $$sink9 = $148;$150 = $211;$151 = $210;
       }
       $149 = HEAPU8[$$sink9>>0]|(HEAPU8[$$sink9+1>>0]<<8);
       FUNCTION_TABLE_viiiiiiii[$114 & 127]($0,$122,$123,$124,$150,$151,$149,5);
       $$1186$ph = 5;
       label = 58;
       break;
      }
      else if ((label|0) == 44) {
       $152 = ($109|0)>(200);
       $153 = ((($0)) + 135|0);
       if ($152) {
        HEAP8[$153>>0]=66&255;HEAP8[$153+1>>0]=(66>>8)&255;HEAP8[$153+2>>0]=(66>>16)&255;HEAP8[$153+3>>0]=66>>24;
        $156 = 66;
       } else {
        $$pre = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
        $156 = $$pre;
       }
       $154 = ((($0)) + 139|0);
       $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
       (__set_current_error($0,$156,$155)|0);
       $157 = ((($0)) + 159|0);
       $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
       $159 = ($158|0)==(0|0);
       if ($159) {
        $$1186$ph = $109;
        label = 58;
        break;
       }
       $160 = ((($0)) + 134|0);
       $161 = HEAP8[$160>>0]|0;
       $162 = $161 & 1;
       $163 = ($162<<24>>24)==(0);
       if (!($163)) {
        $$1186$ph = $109;
        label = 58;
        break;
       }
       $164 = $161 | 1;
       HEAP8[$160>>0] = $164;
       $165 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
       $166 = (_mb_get_error_desc($165)|0);
       $167 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
       $168 = ((($0)) + 71|0);
       $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
       $170 = ($169|0)==(0|0);
       if ($170) {
        $171 = ((($0)) + 143|0);
        $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
        $173 = ((($0)) + 147|0);
        $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8);
        $212 = $174;$213 = $172;
        label = 53;
       } else {
        $175 = ((($0)) + 79|0);
        $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
        $177 = ($176|0)==(0);
        $178 = ((($0)) + 143|0);
        $179 = ((($169)) + 164|0);
        $$sink213 = $177 ? $179 : $178;
        $180 = HEAPU8[$$sink213>>0]|(HEAPU8[$$sink213+1>>0]<<8)|(HEAPU8[$$sink213+2>>0]<<16)|(HEAPU8[$$sink213+3>>0]<<24);
        $181 = ((($0)) + 79|0);
        $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
        $183 = ($182|0)==(0);
        $184 = ((($0)) + 147|0);
        $185 = ((($169)) + 168|0);
        $$sink214 = $183 ? $185 : $184;
        $186 = HEAPU8[$$sink214>>0]|(HEAPU8[$$sink214+1>>0]<<8);
        $187 = ((($0)) + 79|0);
        $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
        $189 = ($188|0)==(0);
        if ($189) {
         $190 = ((($169)) + 170|0);
         $$sink14 = $190;$193 = $180;$194 = $186;
        } else {
         $212 = $186;$213 = $180;
         label = 53;
        }
       }
       if ((label|0) == 53) {
        $191 = ((($0)) + 149|0);
        $$sink14 = $191;$193 = $213;$194 = $212;
       }
       $192 = HEAPU8[$$sink14>>0]|(HEAPU8[$$sink14+1>>0]<<8);
       FUNCTION_TABLE_viiiiiiii[$158 & 127]($0,$165,$166,$167,$193,$194,$192,$109);
       $$1186$ph = $109;
       label = 58;
       break;
      }
      else if ((label|0) == 56) {
       $196 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
       __out_of_scope($0,$85,$196,1);
       $197 = (__proc_args($0,$1,$85,0,0,$4,0,0,0,0)|0);
       $198 = ($197|0)==(0);
       if (!($198)) {
        $$1186$ph = $197;
        label = 58;
        break;
       }
       $199 = ((($8)) + 4|0);
       HEAP32[$199>>2] = 0;
       HEAP32[$8>>2] = 0;
       $200 = ((($85)) + 20|0);
       __swap_public_value($8,$200);
       __pop_scope($0,1);
       $$0189194 = 1;$$1186196 = 0;
       break;
      }
     }
    } while(0);
    if ((label|0) == 58) {
     __pop_scope($0,1);
     $$0189194 = 0;$$1186196 = $$1186$ph;
    }
    $201 = ($$0188<<24>>24)==(0);
    if (!($201)) {
     $202 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
     $203 = ($202|0)==(0|0);
     if (!($203)) {
      __pop_scope($0,0);
     }
     $204 = ((($0)) + 93|0);
     HEAP8[$204>>0]=$$0187&255;HEAP8[$204+1>>0]=($$0187>>8)&255;HEAP8[$204+2>>0]=($$0187>>16)&255;HEAP8[$204+3>>0]=$$0187>>24;
    }
    if ($$0189194) {
     $205 = ((($0)) + 75|0);
     $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
     $207 = ((($206)) + 20|0);
     __assign_public_value($0,$207,$8,0);
     $$2 = $$1186196;
    } else {
     $$2 = $$1186196;
    }
   } else {
    $68 = ((($64)) + 4|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = ($69|0)==(2);
    if ($70) {
     __destroy_scope($64);
     $$2 = $66;
     break;
    } else {
     (__pop_weak_scope($0,$64)|0);
     $$2 = $66;
     break;
    }
   }
  } while(0);
  HEAP8[$209>>0]=$208&255;HEAP8[$209+1>>0]=($208>>8)&255;HEAP8[$209+2>>0]=($208>>16)&255;HEAP8[$209+3>>0]=$208>>24;
  __pop_var_args($0,$65);
  $$1 = $$2;
 }
 STACKTOP = sp;return ($$1|0);
}
function __eval_lambda_routine($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0181186 = 0, $$1 = 0, $$1182 = 0, $$1184185 = 0, $$2 = 0, $$lcssa196 = 0, $$pre = 0, $$sink = 0, $$sink14 = 0, $$sink214 = 0, $$sink215 = 0, $$sink216 = 0, $$sink9 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $8 = ($0|0)!=(0|0);
 $9 = ($1|0)!=(0|0);
 $or$cond = $8 & $9;
 $10 = ($4|0)!=(0|0);
 $or$cond5 = $or$cond & $10;
 if (!($or$cond5)) {
  ___assert_fail((3718|0),(1578|0),4613,(3768|0));
  // unreachable;
 }
 $11 = ((($0)) + 98|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 HEAP8[$11>>0]=$4&255;HEAP8[$11+1>>0]=($4>>8)&255;HEAP8[$11+2>>0]=($4>>16)&255;HEAP8[$11+3>>0]=$4>>24;
 $13 = (__push_var_args($0)|0);
 $14 = ($2|0)!=(0|0);
 if ($14) {
  label = 5;
 } else {
  $15 = (_mb_attempt_open_bracket($0,$1)|0);
  $16 = ($15|0)==(0);
  if ($16) {
   label = 5;
  } else {
   $$1 = $15;
  }
 }
 if ((label|0) == 5) {
  $17 = (__link_lambda_scope_chain($0,$4,1)|0);
  $18 = ($17|0)==(0|0);
  L8: do {
   if ($18) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     $21 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     $22 = ($21|0)==(0|0);
     if (!($22)) {
      $23 = ((($0)) + 67|0);
      $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
      $25 = (__set_current_error($0,51,$24)|0);
      $26 = ($25<<24>>24)==(0);
      if ($26) {
       $$1182 = 0;$$2 = 0;
       break;
      }
      $27 = HEAP32[$1>>2]|0;
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      $29 = ((($28)) + 9|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $31 = ((($28)) + 13|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
      $33 = ((($28)) + 15|0);
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
      __set_error_pos($0,$30,$32,$34);
      $$1182 = 0;$$2 = 3;
      break;
     }
    }
    $35 = ((($0)) + 67|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $37 = (__set_current_error($0,51,$36)|0);
    $38 = ($37<<24>>24)==(0);
    if ($38) {
     $$1182 = 0;$$2 = 0;
    } else {
     __set_error_pos($0,0,0,0);
     $$1182 = 0;$$2 = 3;
    }
   } else {
    $39 = (__proc_args($0,$1,$17,$2,$3,$4,$5,$6,1,$13)|0);
    $40 = HEAP32[$1>>2]|0;
    $41 = ($39|0)==(0);
    __unlink_lambda_scope_chain($0,$4,1);
    if ($41) {
     if (!($14)) {
      $42 = (_mb_attempt_close_bracket($0,$1)|0);
      $43 = ($42|0)==(0);
      if (!($43)) {
       $$1182 = $40;$$2 = $42;
       break;
      }
     }
     $44 = HEAP32[$1>>2]|0;
     $45 = ((($0)) + 102|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     (__ls_pushback($46,$44)|0);
     $47 = (__link_lambda_scope_chain($0,$4,0)|0);
     $48 = ((($4)) + 37|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     HEAP32[$1>>2] = $49;
     $50 = ($49|0)==(0|0);
     do {
      if ($50) {
       $51 = ($44|0)==(0|0);
       if (!($51)) {
        $52 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
        $53 = ($52|0)==(0|0);
        if (!($53)) {
         $54 = ((($0)) + 67|0);
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = (__set_current_error($0,51,$55)|0);
         $57 = ($56<<24>>24)==(0);
         if ($57) {
          $$1182 = $44;$$2 = 0;
          break L8;
         }
         $58 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
         $59 = ((($58)) + 9|0);
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($58)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = ((($58)) + 15|0);
         $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
         __set_error_pos($0,$60,$62,$64);
         $$0181186 = $44;$$1184185 = 3;
         break;
        }
       }
       $65 = ((($0)) + 67|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
       $67 = (__set_current_error($0,51,$66)|0);
       $68 = ($67<<24>>24)==(0);
       if ($68) {
        $$1182 = $44;$$2 = 0;
        break L8;
       }
       __set_error_pos($0,0,0,0);
       $$0181186 = $44;$$1184185 = 3;
      } else {
       L29: while(1) {
        $69 = (__execute_statement($0,$1,1)|0);
        $70 = HEAP32[$1>>2]|0;
        switch ($69|0) {
        case 103:  {
         $$lcssa196 = $70;
         label = 43;
         break L29;
         break;
        }
        case 5:  {
         label = 23;
         break L29;
         break;
        }
        case 0:  {
         break;
        }
        default: {
         label = 31;
         break L29;
        }
        }
        $155 = ($70|0)==(0|0);
        if ($155) {
         $$lcssa196 = 0;
         label = 43;
         break;
        }
       }
       if ((label|0) == 23) {
        $71 = ((($0)) + 139|0);
        $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
        (__set_current_error($0,49,$72)|0);
        $73 = ((($0)) + 159|0);
        $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
        $75 = ($74|0)==(0|0);
        if ($75) {
         $$0181186 = $70;$$1184185 = 5;
         break;
        }
        $76 = ((($0)) + 134|0);
        $77 = HEAP8[$76>>0]|0;
        $78 = $77 & 1;
        $79 = ($78<<24>>24)==(0);
        if (!($79)) {
         $$0181186 = $70;$$1184185 = 5;
         break;
        }
        $80 = $77 | 1;
        HEAP8[$76>>0] = $80;
        $81 = ((($0)) + 135|0);
        $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
        $83 = (_mb_get_error_desc($82)|0);
        $84 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
        $85 = ((($0)) + 71|0);
        $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
        $87 = ($86|0)==(0|0);
        if ($87) {
         $88 = ((($0)) + 143|0);
         $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
         $90 = ((($0)) + 147|0);
         $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8);
         $164 = $91;$165 = $89;
         label = 29;
        } else {
         $92 = ((($0)) + 79|0);
         $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
         $94 = ($93|0)==(0);
         $95 = ((($0)) + 143|0);
         $96 = ((($86)) + 164|0);
         $$sink = $94 ? $96 : $95;
         $97 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
         $98 = ((($0)) + 79|0);
         $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
         $100 = ($99|0)==(0);
         $101 = ((($0)) + 147|0);
         $102 = ((($86)) + 168|0);
         $$sink214 = $100 ? $102 : $101;
         $103 = HEAPU8[$$sink214>>0]|(HEAPU8[$$sink214+1>>0]<<8);
         $104 = ((($0)) + 79|0);
         $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
         $106 = ($105|0)==(0);
         if ($106) {
          $107 = ((($86)) + 170|0);
          $$sink9 = $107;$110 = $97;$111 = $103;
         } else {
          $164 = $103;$165 = $97;
          label = 29;
         }
        }
        if ((label|0) == 29) {
         $108 = ((($0)) + 149|0);
         $$sink9 = $108;$110 = $165;$111 = $164;
        }
        $109 = HEAPU8[$$sink9>>0]|(HEAPU8[$$sink9+1>>0]<<8);
        FUNCTION_TABLE_viiiiiiii[$74 & 127]($0,$82,$83,$84,$110,$111,$109,5);
        $$0181186 = $70;$$1184185 = 5;
        break;
       }
       else if ((label|0) == 31) {
        $112 = ($69|0)>(200);
        $113 = ((($0)) + 135|0);
        if ($112) {
         HEAP8[$113>>0]=66&255;HEAP8[$113+1>>0]=(66>>8)&255;HEAP8[$113+2>>0]=(66>>16)&255;HEAP8[$113+3>>0]=66>>24;
         $116 = 66;
        } else {
         $$pre = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
         $116 = $$pre;
        }
        $114 = ((($0)) + 139|0);
        $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
        (__set_current_error($0,$116,$115)|0);
        $117 = ((($0)) + 159|0);
        $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
        $119 = ($118|0)==(0|0);
        if (!($119)) {
         $120 = ((($0)) + 134|0);
         $121 = HEAP8[$120>>0]|0;
         $122 = $121 & 1;
         $123 = ($122<<24>>24)==(0);
         if ($123) {
          $124 = $121 | 1;
          HEAP8[$120>>0] = $124;
          $125 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
          $126 = (_mb_get_error_desc($125)|0);
          $127 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
          $128 = ((($0)) + 71|0);
          $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
          $130 = ($129|0)==(0|0);
          if ($130) {
           $131 = ((($0)) + 143|0);
           $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
           $133 = ((($0)) + 147|0);
           $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8);
           $166 = $134;$167 = $132;
           label = 40;
          } else {
           $135 = ((($0)) + 79|0);
           $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
           $137 = ($136|0)==(0);
           $138 = ((($0)) + 143|0);
           $139 = ((($129)) + 164|0);
           $$sink215 = $137 ? $139 : $138;
           $140 = HEAPU8[$$sink215>>0]|(HEAPU8[$$sink215+1>>0]<<8)|(HEAPU8[$$sink215+2>>0]<<16)|(HEAPU8[$$sink215+3>>0]<<24);
           $141 = ((($0)) + 79|0);
           $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
           $143 = ($142|0)==(0);
           $144 = ((($0)) + 147|0);
           $145 = ((($129)) + 168|0);
           $$sink216 = $143 ? $145 : $144;
           $146 = HEAPU8[$$sink216>>0]|(HEAPU8[$$sink216+1>>0]<<8);
           $147 = ((($0)) + 79|0);
           $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
           $149 = ($148|0)==(0);
           if ($149) {
            $150 = ((($129)) + 170|0);
            $$sink14 = $150;$153 = $140;$154 = $146;
           } else {
            $166 = $146;$167 = $140;
            label = 40;
           }
          }
          if ((label|0) == 40) {
           $151 = ((($0)) + 149|0);
           $$sink14 = $151;$153 = $167;$154 = $166;
          }
          $152 = HEAPU8[$$sink14>>0]|(HEAPU8[$$sink14+1>>0]<<8);
          FUNCTION_TABLE_viiiiiiii[$118 & 127]($0,$125,$126,$127,$153,$154,$152,$69);
         }
        }
        $163 = ($69|0)==(0);
        if ($163) {
         $$1182 = $70;$$2 = 0;
         break L8;
        } else {
         $$0181186 = $70;$$1184185 = $69;
         break;
        }
       }
       else if ((label|0) == 43) {
        __out_of_scope($0,$47,0,1);
        $156 = (__proc_args($0,$1,$47,0,0,$4,0,0,0,0)|0);
        $157 = ($156|0)==(0);
        if (!($157)) {
         $$0181186 = $$lcssa196;$$1184185 = $156;
         break;
        }
        $158 = ((($7)) + 4|0);
        HEAP32[$158>>2] = 0;
        HEAP32[$7>>2] = 0;
        $159 = ((($47)) + 20|0);
        __swap_public_value($7,$159);
        __unlink_lambda_scope_chain($0,$4,0);
        $160 = ((($0)) + 75|0);
        $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
        $162 = ((($161)) + 20|0);
        __assign_public_value($0,$162,$7,0);
        $$1182 = $$lcssa196;$$2 = 0;
        break L8;
       }
      }
     } while(0);
     __unlink_lambda_scope_chain($0,$4,0);
     $$1182 = $$0181186;$$2 = $$1184185;
    } else {
     $$1182 = $40;$$2 = $39;
    }
   }
  } while(0);
  HEAP8[$11>>0]=$12&255;HEAP8[$11+1>>0]=($12>>8)&255;HEAP8[$11+2>>0]=($12>>16)&255;HEAP8[$11+3>>0]=$12>>24;
  __pop_var_args($0,$13);
  HEAP32[$1>>2] = $$1182;
  $$1 = $$2;
 }
 STACKTOP = sp;return ($$1|0);
}
function __eval_native_routine($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ($0|0)!=(0|0);
 $8 = ($1|0)!=(0|0);
 $or$cond = $7 & $8;
 $9 = ($4|0)!=(0|0);
 $or$cond5 = $or$cond & $9;
 if (!($or$cond5)) {
  ___assert_fail((3718|0),(1578|0),4708,(3730|0));
  // unreachable;
 }
 $10 = ((($0)) + 98|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 HEAP8[$10>>0]=$4&255;HEAP8[$10+1>>0]=($4>>8)&255;HEAP8[$10+2>>0]=($4>>16)&255;HEAP8[$10+3>>0]=$4>>24;
 $12 = (__push_var_args($0)|0);
 $13 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   $15 = HEAP32[$1>>2]|0;
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $18 = ($17|0)==(0|0);
    if (!($18)) {
     $19 = ((($0)) + 67|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     $21 = (__set_current_error($0,51,$20)|0);
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $$0 = 0;
      break;
     }
     $23 = HEAP32[$1>>2]|0;
     $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
     $25 = ((($24)) + 9|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ((($24)) + 13|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
     $29 = ((($24)) + 15|0);
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
     __set_error_pos($0,$26,$28,$30);
     $$0 = 3;
     break;
    }
   }
   $31 = ((($0)) + 67|0);
   $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
   $33 = (__set_current_error($0,51,$32)|0);
   $34 = ($33<<24>>24)==(0);
   if ($34) {
    $$0 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$0 = 3;
   }
  } else {
   $35 = (FUNCTION_TABLE_iiiiiiii[$13 & 255]($0,$1,$2,$3,$4,$5,$6)|0);
   $$0 = $35;
  }
 } while(0);
 HEAP8[$10>>0]=$11&255;HEAP8[$10+1>>0]=($11>>8)&255;HEAP8[$10+2>>0]=($11>>16)&255;HEAP8[$10+3>>0]=$11>>24;
 __pop_var_args($0,$12);
 return ($$0|0);
}
function __push_var_args($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 84|0);
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
 return ($2|0);
}
function __pop_var_args($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in33 = 0, $$034 = 0, $$035 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 84|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 HEAP8[$2>>0]=$1&255;HEAP8[$2+1>>0]=($1>>8)&255;HEAP8[$2+2>>0]=($1>>16)&255;HEAP8[$2+3>>0]=$1>>24;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $$0$in33 = ((($3)) + 8|0);
  $$034 = HEAPU8[$$0$in33>>0]|(HEAPU8[$$0$in33+1>>0]<<8)|(HEAPU8[$$0$in33+2>>0]<<16)|(HEAPU8[$$0$in33+3>>0]<<24);
  $5 = ($$034|0)==(0|0);
  if (!($5)) {
   $$035 = $$034;
   while(1) {
    $6 = HEAPU8[$$035>>0]|(HEAPU8[$$035+1>>0]<<8)|(HEAPU8[$$035+2>>0]<<16)|(HEAPU8[$$035+3>>0]<<24);
    __destroy_var_arg($6);
    $$0$in = ((($$035)) + 8|0);
    $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
    $7 = ($$0|0)==(0|0);
    if ($7) {
     break;
    } else {
     $$035 = $$0;
    }
   }
  }
  __ls_destroy($3);
 }
 return;
}
function __destroy_var_arg($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2651|0),(1578|0),10573,(3751|0));
  // unreachable;
 }
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 L4: do {
  switch ($2|0) {
  case 7:  {
   $3 = ((($0)) + 4|0);
   $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
   __unref($4,$4);
   break;
  }
  case 10:  {
   $5 = ((($0)) + 8|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = $6 & 1;
   $8 = ($7<<24>>24)==(0);
   if ($8) {
    $9 = ((($0)) + 4|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    __unref($10,$10);
   }
   break;
  }
  case 11:  {
   $11 = ((($0)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   __unref($12,$12);
   break;
  }
  case 13:  {
   $13 = ((($0)) + 4|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   __unref($14,$14);
   break;
  }
  case 16:  {
   $15 = ((($0)) + 8|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $19 = ((($0)) + 4|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    __unref($20,$20);
   }
   break;
  }
  case 17:  {
   $21 = ((($0)) + 8|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   if ($24) {
    $25 = ((($0)) + 4|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = ((($26)) + 58|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ($28|0)==(2);
    if ($29) {
     __unref($26,$26);
     break L4;
    }
    $30 = ((($0)) + 4|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ((($31)) + 58|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ($33|0)==(2);
    if (!($34)) {
     __destroy_routine(0,$31);
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 _mb_free($0);
 return;
}
function __link_lambda_scope_chain($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 25|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $$pre = ((($1)) + 17|0);
   $$pre$phiZ2D = $$pre;
   label = 7;
  } else {
   $6 = ((($4)) + 21|0);
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   $8 = ((($1)) + 17|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   HEAP8[$9>>0]=$7&255;HEAP8[$9+1>>0]=($7>>8)&255;HEAP8[$9+2>>0]=($7>>16)&255;HEAP8[$9+3>>0]=$7>>24;
   $10 = $7;
   $11 = (__find_scope($0,$10)|0);
   $12 = ($11|0)==(0|0);
   if ($12) {
    $18 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    $19 = (__get_root_ref_scope($18)|0);
    $20 = ((($19)) + 21|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
    $$pre$phiZ2D = $8;
    label = 7;
    break;
   }
   $13 = ((($0)) + 75|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($1)) + 29|0);
   HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
   $16 = ($2<<24>>24)==(0);
   if ($16) {
    $17 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    HEAP8[$13>>0]=$17&255;HEAP8[$13+1>>0]=($17>>8)&255;HEAP8[$13+2>>0]=($17>>16)&255;HEAP8[$13+3>>0]=$17>>24;
    $$sink = $8;
    label = 11;
   } else {
    $$sink = $8;
    label = 11;
   }
  }
 } while(0);
 do {
  if ((label|0) == 7) {
   $22 = HEAPU8[$$pre$phiZ2D>>0]|(HEAPU8[$$pre$phiZ2D+1>>0]<<8)|(HEAPU8[$$pre$phiZ2D+2>>0]<<16)|(HEAPU8[$$pre$phiZ2D+3>>0]<<24);
   $23 = (__get_root_scope($22)|0);
   $24 = ($2<<24>>24)==(0);
   if ($24) {
    $27 = $22;
    $28 = ((($0)) + 75|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    HEAP8[$23>>0]=$29&255;HEAP8[$23+1>>0]=($29>>8)&255;HEAP8[$23+2>>0]=($29>>16)&255;HEAP8[$23+3>>0]=$29>>24;
    HEAP8[$28>>0]=$27&255;HEAP8[$28+1>>0]=($27>>8)&255;HEAP8[$28+2>>0]=($27>>16)&255;HEAP8[$28+3>>0]=$27>>24;
    $$sink = $$pre$phiZ2D;
    label = 11;
    break;
   }
   $25 = (__push_weak_scope_by_routine($0,$23,0)|0);
   $26 = ($25|0)==($23|0);
   if ($26) {
    $$sink = $$pre$phiZ2D;
    label = 11;
   } else {
    __destroy_scope($25);
    $$1 = 0;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  $30 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
  $$1 = $30;
 }
 return ($$1|0);
}
function __proc_args($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0157 = 0, $$0157$in = 0, $$0160200 = 0, $$0163199 = 0, $$1161 = 0, $$1164 = 0, $$2150 = 0, $$2150169 = 0, $$2165 = 0, $$3151196 = 0, $$3166 = 0, $$4152 = 0, $$4167 = 0, $$5153 = 0, $$6154 = 0, $$9 = 0, $$old8 = 0, $$old8198 = 0, $$pre = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $10 = sp + 8|0;
 $11 = sp;
 HEAP32[$11>>2] = 0;
 $12 = ((($5)) + 4|0);
 $13 = ((($5)) + 58|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = ($14|0)==(2);
 $16 = ((($5)) + 21|0);
 $$0157$in = $15 ? $16 : $12;
 $$0157 = HEAPU8[$$0157$in>>0]|(HEAPU8[$$0157$in+1>>0]<<8)|(HEAPU8[$$0157$in+2>>0]<<16)|(HEAPU8[$$0157$in+3>>0]<<24);
 $17 = ($$0157|0)==(0|0);
 L1: do {
  if ($17) {
   $$9 = 0;
  } else {
   $18 = ((($10)) + 4|0);
   HEAP32[$18>>2] = 0;
   HEAP32[$10>>2] = 0;
   $19 = ((($$0157)) + 8|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $$old8198 = ($20|0)==(0|0);
   L3: do {
    if ($$old8198) {
     $$6154 = 0;
    } else {
     $21 = ($6|0)==(0|0);
     $22 = ($7|0)!=(0|0);
     $23 = ((($2)) + 4|0);
     $24 = ((($2)) + 8|0);
     $25 = ($8<<24>>24)==(0);
     $26 = ($9|0)==(0|0);
     $$0160200 = $20;$$0163199 = 0;
     L5: while(1) {
      $$1161 = $$0160200;$$1164 = $$0163199;
      while(1) {
       if (!($21)) {
        $28 = (FUNCTION_TABLE_iiiiiii[$6 & 255]($0,$1,$3,$4,$11,$5)|0);
        $29 = ($28|0)==(0);
        if ($29) {
         $$2150 = 0;$$4167 = $$1164;
         label = 33;
         break L5;
        }
       }
       $30 = HEAPU8[$$1161>>0]|(HEAPU8[$$1161+1>>0]<<8)|(HEAPU8[$$1161+2>>0]<<16)|(HEAPU8[$$1161+3>>0]<<24);
       $31 = ((($$1161)) + 8|0);
       $27 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
       $32 = ($30|0)==(8964|0);
       if ($32) {
        $$2150169 = 0;
        break L5;
       }
       if ($22) {
        $33 = (__pop_arg($0,$1,$3,$4,$11,$5,$7,$9,$10)|0);
        $34 = ($33|0)==(0);
        if (!($34)) {
         $$9 = $33;
         break L1;
        }
        $35 = (__try_purge_it($0,$10,0)|0);
        $36 = ($35<<24>>24)==(0);
        if (!($36)) {
         label = 12;
         break L5;
        }
       }
       $58 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $59 = ($58|0)==(2);
       if ($59) {
        $60 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $61 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
        $62 = (__ht_find($60,$61)|0);
        $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
        $64 = ((($63)) + 4|0);
        $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
        if ($25) {
         $$3166 = $65;
        } else {
         $66 = ((($65)) + 4|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
         $68 = ((($67)) + 8|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = $69 & -2;
         HEAP8[$68>>0] = $70;
         $$3166 = $65;
        }
       } else {
        $71 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
        $72 = (__search_identifier_in_scope_chain($0,$2,$71,0,0,0)|0);
        $73 = ($72|0)==(0|0);
        if ($73) {
         $$2165 = $30;
        } else {
         $74 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
         $75 = ((($74)) + 4|0);
         $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
         $$2165 = $76;
        }
        if ($25) {
         $$3166 = $$2165;
        } else {
         $77 = ((($$2165)) + 4|0);
         $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
         $79 = ((($78)) + 8|0);
         $80 = HEAP8[$79>>0]|0;
         $81 = $80 | 1;
         HEAP8[$79>>0] = $81;
         $$3166 = $$2165;
        }
       }
       $$pre = ((($$3166)) + 4|0);
       if (!($22)) {
        $82 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8)|(HEAPU8[$$pre+2>>0]<<16)|(HEAPU8[$$pre+3>>0]<<24);
        $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
        $84 = ($83|0)==(4);
        if ($84) {
         $85 = ((($82)) + 8|0);
         $86 = HEAP8[$85>>0]|0;
         $87 = $86 & 1;
         $88 = ($87<<24>>24)==(0);
         if ($88) {
          $89 = ((($82)) + 4|0);
          $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
          __mark_lazy_destroy_string($0,$90);
         }
        }
       }
       $91 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8)|(HEAPU8[$$pre+2>>0]<<16)|(HEAPU8[$$pre+3>>0]<<24);
       $92 = (__public_value_to_internal_object($10,$91)|0);
       $93 = ($92|0)==(0);
       if (!($93)) {
        $$2150 = $92;$$4167 = $$3166;
        label = 33;
        break L5;
       }
       if ($26) {
        break;
       }
       $94 = (__ls_empty($9)|0);
       $95 = ($94<<24>>24)==(0);
       $96 = ($27|0)!=(0|0);
       $or$cond9 = $96 & $95;
       if ($or$cond9) {
        $$1161 = $27;$$1164 = $$3166;
       } else {
        $$2150 = 0;$$4167 = $$3166;
        label = 33;
        break L5;
       }
      }
      $$old8 = ($27|0)==(0|0);
      if ($$old8) {
       $$2150 = 0;$$4167 = $$3166;
       label = 33;
       break;
      } else {
       $$0160200 = $27;$$0163199 = $$3166;
      }
     }
     if ((label|0) == 12) {
      $37 = ($1|0)==(0|0);
      if (!($37)) {
       $38 = HEAP32[$1>>2]|0;
       $39 = ($38|0)==(0|0);
       if (!($39)) {
        $40 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
        $41 = ($40|0)==(0|0);
        if (!($41)) {
         $42 = ((($0)) + 67|0);
         $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
         $44 = (__set_current_error($0,61,$43)|0);
         $45 = ($44<<24>>24)==(0);
         if ($45) {
          $$9 = 0;
          break L1;
         }
         $46 = HEAP32[$1>>2]|0;
         $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
         $48 = ((($47)) + 9|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = ((($47)) + 13|0);
         $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8);
         $52 = ((($47)) + 15|0);
         $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8);
         __set_error_pos($0,$49,$51,$53);
         $$9 = 3;
         break L1;
        }
       }
      }
      $54 = ((($0)) + 67|0);
      $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
      $56 = (__set_current_error($0,61,$55)|0);
      $57 = ($56<<24>>24)==(0);
      if ($57) {
       $$9 = 0;
       break L1;
      }
      __set_error_pos($0,0,0,0);
      $$9 = 3;
      break L1;
     }
     else if ((label|0) == 33) {
      $97 = ($$4167|0)==(8964|0);
      if ($97) {
       $$2150169 = $$2150;
      } else {
       $$6154 = $$2150;
       break;
      }
     }
     $98 = ($6|0)==(0|0);
     if ($98) {
      $$6154 = $$2150169;
     } else {
      $99 = (__ls_create()|0);
      $100 = ((($0)) + 84|0);
      HEAP8[$100>>0]=$99&255;HEAP8[$100+1>>0]=($99>>8)&255;HEAP8[$100+2>>0]=($99>>16)&255;HEAP8[$100+3>>0]=$99>>24;
      $101 = ($7|0)==(0|0);
      $102 = ($99|0)==(0|0);
      $103 = ($9|0)==(0|0);
      $$3151196 = $$2150169;
      L46: while(1) {
       $$4152 = $$3151196;
       while(1) {
        $104 = (FUNCTION_TABLE_iiiiiii[$6 & 255]($0,$1,$3,$4,$11,$5)|0);
        $105 = ($104|0)==(0);
        if ($105) {
         $$6154 = $$4152;
         break L3;
        }
        if (!($101)) {
         $106 = (__pop_arg($0,$1,$3,$4,$11,$5,$7,$9,$10)|0);
         $107 = ($106|0)==(0);
         if (!($107)) {
          $$9 = $106;
          break L1;
         }
        }
        if ($102) {
         $$5153 = $$4152;
        } else {
         $108 = (__create_object()|0);
         $109 = (__public_value_to_internal_object($10,$108)|0);
         $110 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
         $111 = ($110|0)==(17);
         if ($111) {
          $112 = ((($108)) + 4|0);
          $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
          $114 = ((($113)) + 58|0);
          $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
          $116 = ($115|0)==(1);
          if ($116) {
           $117 = ((($108)) + 8|0);
           $118 = HEAP8[$117>>0]|0;
           $119 = $118 | 1;
           HEAP8[$117>>0] = $119;
          }
         }
         (__ls_pushback($99,$108)|0);
         $$5153 = $109;
        }
        if ($103) {
         $$3151196 = $$5153;
         continue L46;
        }
        $120 = (__ls_empty($9)|0);
        $121 = ($120<<24>>24)==(0);
        if ($121) {
         $$4152 = $$5153;
        } else {
         $$6154 = $$5153;
         break L3;
        }
       }
      }
     }
    }
   } while(0);
   $122 = HEAP32[$1>>2]|0;
   $123 = ($122|0)==(0|0);
   if ($123) {
    $$9 = $$6154;
   } else {
    $124 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
    $125 = ($124|0)==(0|0);
    if ($125) {
     $$9 = $$6154;
    } else {
     $126 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $127 = ($126|0)==(8);
     if ($127) {
      $128 = ((($124)) + 4|0);
      $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
      $130 = ((($129)) + 4|0);
      $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
      $132 = ($131|0)==(88|0);
      if ($132) {
       $133 = ((($122)) + 8|0);
       $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
       HEAP32[$1>>2] = $134;
       $$9 = $$6154;
      } else {
       $$9 = $$6154;
      }
     } else {
      $$9 = $$6154;
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$9|0);
}
function __unlink_lambda_scope_chain($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 25|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $13 = ((($1)) + 17|0);
   $$0$in = $13;
   label = 7;
  } else {
   $6 = ((($1)) + 29|0);
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   $8 = ($7|0)==(0|0);
   if ($8) {
    $11 = (__get_root_ref_scope($4)|0);
    $12 = ((($11)) + 21|0);
    $$0$in = $12;
    label = 7;
    break;
   }
   $9 = ($2<<24>>24)==(0);
   if ($9) {
    $10 = ((($0)) + 75|0);
    HEAP8[$10>>0]=$7&255;HEAP8[$10+1>>0]=($7>>8)&255;HEAP8[$10+2>>0]=($7>>16)&255;HEAP8[$10+3>>0]=$7>>24;
    $$sink = $6;
   } else {
    $$sink = $6;
   }
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
  $14 = ($2<<24>>24)==(0);
  if ($14) {
   $15 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
   $16 = ((($0)) + 75|0);
   HEAP8[$16>>0]=$15&255;HEAP8[$16+1>>0]=($15>>8)&255;HEAP8[$16+2>>0]=($15>>16)&255;HEAP8[$16+3>>0]=$15>>24;
  } else {
   (__pop_weak_scope($0,$$0)|0);
  }
  $$sink = $$0;
 }
 HEAP8[$$sink>>0]=0&255;HEAP8[$$sink+1>>0]=(0>>8)&255;HEAP8[$$sink+2>>0]=(0>>16)&255;HEAP8[$$sink+3>>0]=0>>24;
 $17 = ((($1)) + 17|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 HEAP8[$18>>0]=0&255;HEAP8[$18+1>>0]=(0>>8)&255;HEAP8[$18+2>>0]=(0>>16)&255;HEAP8[$18+3>>0]=0>>24;
 return;
}
function __execute_statement($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0151 = 0, $$0153 = 0, $$pr = 0, $$pr159 = 0, $$pre$pre = 0, $$pre197 = 0, $$pre201 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond158 = 0, $or$cond240 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),10926,(6741|0));
  // unreachable;
 }
 $8 = ((($0)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($0)) + 102|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = HEAP32[$1>>2]|0;
 HEAP32[$4>>2] = $12;
 $13 = ((($0)) + 126|0);
 $14 = ((($0)) + 93|0);
 $$sink = $12;$16 = $12;
 L4: while(1) {
  $15 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
  $17 = ($16|0)==(0|0);
  $18 = ((($16)) + 8|0);
  $$pre197 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $$0151 = $15;$19 = $$pre197;
  L6: while(1) {
   switch ($19|0) {
   case 10:  {
    label = 31;
    break L4;
    break;
   }
   case 4: case 3: case 2:  {
    label = 32;
    break L4;
    break;
   }
   case 16:  {
    label = 38;
    break L4;
    break;
   }
   case 17:  {
    label = 44;
    break L4;
    break;
   }
   case 20:  {
    label = 45;
    break L4;
    break;
   }
   case 21:  {
    label = 46;
    break L4;
    break;
   }
   case 8:  {
    break L6;
    break;
   }
   case 9:  {
    break;
   }
   default: {
    label = 47;
    break L4;
   }
   }
   $57 = ((($$0151)) + 4|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = ((($58)) + 4|0);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = ($61|0)==(17);
   if (!($62)) {
    label = 24;
    break;
   }
   if ($17) {
    label = 23;
    break L4;
   }
   $63 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $64 = ($63|0)==(0|0);
   if ($64) {
    label = 23;
    break L4;
   }
   $65 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   $67 = ($66|0)==(8);
   if (!($67)) {
    label = 23;
    break L4;
   }
   $68 = ((($65)) + 4|0);
   $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
   $70 = ((($69)) + 4|0);
   $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
   $72 = ($71|0)==(22|0);
   if ($72) {
    $$0151 = $60;$19 = 17;
   } else {
    label = 23;
    break L4;
   }
  }
  if ((label|0) == 24) {
   label = 0;
   $74 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $75 = ($74|0)==(0|0);
   $76 = ((($58)) + 8|0);
   $77 = HEAP8[$76>>0]|0;
   $78 = $77 & 3;
   $79 = ($78<<24>>24)==(0);
   $or$cond240 = $75 & $79;
   if ($or$cond240) {
    label = 30;
    break;
   }
   $80 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $81 = $77 & 3;
   $82 = ($81<<24>>24)!=(0);
   $83 = $82 ? 2 : 0;
   $84 = (__search_identifier_in_scope_chain($0,0,$80,$83,0,0)|0);
   $85 = ($84|0)==(0|0);
   if ($85) {
    label = 28;
    break;
   }
   $86 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
   $87 = ($86|0)==(0|0);
   $88 = ($$0151|0)==($86|0);
   $or$cond158 = $87 | $88;
   if ($or$cond158) {
    label = 28;
    break;
   }
   $89 = (__try_call_func_on_usertype_ref($0,$4,$$0151,$84,$3)|0);
   $90 = ($89<<24>>24)==(0);
   if (!($90)) {
    label = 47;
    break;
   }
   $$pre$pre = HEAP32[$4>>2]|0;
   $$sink = $84;$16 = $$pre$pre;
   continue;
  }
  $20 = ((($$0151)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = (__is_binary($23)|0);
  $25 = ($24<<24>>24)==(0);
  if (!($25)) {
   label = 7;
   break;
  }
  $44 = (__is_flow($23)|0);
  $45 = ($44<<24>>24)==(0);
  if ($45) {
   $47 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $48 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   (__ls_pushback($47,$48)|0);
   $49 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = (FUNCTION_TABLE_iii[$51 & 255]($0,$4)|0);
   HEAP32[$3>>2] = $52;
   $53 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   (__ls_popback($53)|0);
   __mark_dangling_intermediate_value($0,$9);
   $$pr = HEAP32[$3>>2]|0;
   $54 = $$pr;
  } else {
   $46 = (FUNCTION_TABLE_iii[$23 & 255]($0,$4)|0);
   HEAP32[$3>>2] = $46;
   $54 = $46;
  }
  $55 = ($54|0)==(1);
  if (!($55)) {
   label = 47;
   break;
  }
  HEAP32[$3>>2] = 0;
  $56 = HEAP32[$4>>2]|0;
  $$sink = $56;$16 = $56;
 }
 switch (label|0) {
  case 7: {
   if (!($17)) {
    $26 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $27 = ($26|0)==(0|0);
    if (!($27)) {
     $28 = ((($0)) + 67|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = (__set_current_error($0,46,$29)|0);
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      break;
     }
     $32 = HEAP32[$4>>2]|0;
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = ((($33)) + 9|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ((($33)) + 13|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
     $38 = ((($33)) + 15|0);
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
     __set_error_pos($0,$35,$37,$39);
     HEAP32[$3>>2] = 3;
     break;
    }
   }
   $40 = ((($0)) + 67|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = (__set_current_error($0,46,$41)|0);
   $43 = ($42<<24>>24)==(0);
   if (!($43)) {
    __set_error_pos($0,0,0,0);
    HEAP32[$3>>2] = 3;
   }
   break;
  }
  case 23: {
   $73 = (__core_let($0,$4)|0);
   HEAP32[$3>>2] = $73;
   label = 47;
   break;
  }
  case 28: {
   $91 = (__core_let($0,$4)|0);
   HEAP32[$3>>2] = $91;
   label = 47;
   break;
  }
  case 30: {
   $92 = (__core_let($0,$4)|0);
   HEAP32[$3>>2] = $92;
   label = 47;
   break;
  }
  case 31: {
   $93 = (__core_let($0,$4)|0);
   HEAP32[$3>>2] = $93;
   label = 47;
   break;
  }
  case 32: {
   if (!($17)) {
    $94 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $95 = ($94|0)==(0|0);
    if (!($95)) {
     $96 = ((($0)) + 67|0);
     $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
     $98 = (__set_current_error($0,46,$97)|0);
     $99 = ($98<<24>>24)==(0);
     if ($99) {
      break;
     }
     $100 = HEAP32[$4>>2]|0;
     $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
     $102 = ((($101)) + 9|0);
     $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
     $104 = ((($101)) + 13|0);
     $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8);
     $106 = ((($101)) + 15|0);
     $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8);
     __set_error_pos($0,$103,$105,$107);
     HEAP32[$3>>2] = 3;
     break;
    }
   }
   $108 = ((($0)) + 67|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = (__set_current_error($0,46,$109)|0);
   $111 = ($110<<24>>24)==(0);
   if (!($111)) {
    __set_error_pos($0,0,0,0);
    HEAP32[$3>>2] = 3;
   }
   break;
  }
  case 38: {
   if (!($17)) {
    $112 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $113 = ($112|0)==(0|0);
    if (!($113)) {
     $114 = ((($0)) + 67|0);
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
     $116 = (__set_current_error($0,46,$115)|0);
     $117 = ($116<<24>>24)==(0);
     if ($117) {
      break;
     }
     $118 = HEAP32[$4>>2]|0;
     $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
     $120 = ((($119)) + 9|0);
     $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $122 = ((($119)) + 13|0);
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8);
     $124 = ((($119)) + 15|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8);
     __set_error_pos($0,$121,$123,$125);
     HEAP32[$3>>2] = 3;
     break;
    }
   }
   $126 = ((($0)) + 67|0);
   $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
   $128 = (__set_current_error($0,46,$127)|0);
   $129 = ($128<<24>>24)==(0);
   if (!($129)) {
    __set_error_pos($0,0,0,0);
    HEAP32[$3>>2] = 3;
   }
   break;
  }
  case 44: {
   $130 = ((($16)) + 4|0);
   $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
   HEAP32[$4>>2] = $131;
   $132 = (__core_call($0,$4)|0);
   HEAP32[$3>>2] = $132;
   __mark_dangling_intermediate_value($0,$9);
   label = 47;
   break;
  }
  case 45: {
   $133 = ((($$0151)) + 4|0);
   $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
   $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
   $136 = ((($0)) + 67|0);
   HEAP8[$136>>0]=$135&255;HEAP8[$136+1>>0]=($135>>8)&255;HEAP8[$136+2>>0]=($135>>16)&255;HEAP8[$136+3>>0]=$135>>24;
   label = 47;
   break;
  }
  case 46: {
   $137 = ((($$0151)) + 4|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
   $140 = ((($0)) + 67|0);
   HEAP8[$140>>0]=$139&255;HEAP8[$140+1>>0]=($139>>8)&255;HEAP8[$140+2>>0]=($139>>16)&255;HEAP8[$140+3>>0]=$139>>24;
   label = 47;
   break;
  }
 }
 L55: do {
  if ((label|0) == 47) {
   $141 = ((($0)) + 110|0);
   $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
   switch ($142|0) {
   case 0:  {
    $$pr159 = HEAP32[$3>>2]|0;
    $144 = $$pr159;
    break;
   }
   case 5:  {
    (_mb_suspend($0,$4)|0);
    $$pre201 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
    $143 = $$pre201;
    label = 49;
    break;
   }
   default: {
    $143 = $142;
    label = 49;
   }
   }
   if ((label|0) == 49) {
    HEAP32[$3>>2] = $143;
    HEAP8[$141>>0]=0&255;HEAP8[$141+1>>0]=(0>>8)&255;HEAP8[$141+2>>0]=(0>>16)&255;HEAP8[$141+3>>0]=0>>24;
    $144 = $143;
   }
   switch ($144|0) {
   case 0: case 5: case 103:  {
    break;
   }
   default: {
    break L55;
   }
   }
   $145 = HEAP32[$4>>2]|0;
   $146 = ($145|0)==(0|0);
   L64: do {
    if (!($146)) {
     $147 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $148 = ($147|0)==(0|0);
     if (!($148)) {
      $149 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
      switch ($149|0) {
      case 22:  {
       $150 = ($2<<24>>24)!=(0);
       $151 = ($144|0)!=(103);
       $or$cond7 = $150 | $151;
       if (!($or$cond7)) {
        break L64;
       }
       $152 = ((($145)) + 8|0);
       $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
       HEAP32[$4>>2] = $153;
       break L64;
       break;
      }
      case 19:  {
       $154 = ((($147)) + 4|0);
       $155 = HEAP8[$154>>0]|0;
       $156 = ($155<<24>>24)==(58);
       if ($156) {
        $157 = ((($145)) + 8|0);
        $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
        HEAP32[$4>>2] = $158;
        break L55;
       }
       break;
      }
      case 9:  {
       HEAP32[$5>>2] = 0;
       $159 = ((($147)) + 4|0);
       $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
       $161 = (__is_valid_class_accessor_following_routine($0,$160,$145,$5)|0);
       $162 = ($161<<24>>24)==(0);
       do {
        if ($162) {
         $190 = HEAP32[$4>>2]|0;
         $191 = ($190|0)==(0|0);
         if (!($191)) {
          $192 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
          $193 = ($192|0)==(0|0);
          if (!($193)) {
           $194 = ((($0)) + 67|0);
           $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
           $196 = (__set_current_error($0,28,$195)|0);
           $197 = ($196<<24>>24)==(0);
           if ($197) {
            break;
           }
           $198 = HEAP32[$4>>2]|0;
           $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
           $200 = ((($199)) + 9|0);
           $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
           $202 = ((($199)) + 13|0);
           $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8);
           $204 = ((($199)) + 15|0);
           $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8);
           __set_error_pos($0,$201,$203,$205);
           HEAP32[$3>>2] = 3;
           break;
          }
         }
         $206 = ((($0)) + 67|0);
         $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
         $208 = (__set_current_error($0,28,$207)|0);
         $209 = ($208<<24>>24)==(0);
         if (!($209)) {
          __set_error_pos($0,0,0,0);
          HEAP32[$3>>2] = 3;
         }
        } else {
         $163 = HEAP32[$5>>2]|0;
         $164 = ($163|0)==(0|0);
         if (!($164)) {
          $165 = ((($0)) + 97|0);
          $166 = HEAP8[$165>>0]|0;
          $167 = $166 & 1;
          $168 = ($167<<24>>24)==(0);
          if (!($168)) {
           $169 = (__core_let($0,$4)|0);
           HEAP32[$3>>2] = $169;
          }
          break L64;
         }
         $170 = HEAP32[$4>>2]|0;
         $171 = ($170|0)==(0|0);
         if (!($171)) {
          $172 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
          $173 = ($172|0)==(0|0);
          if (!($173)) {
           $174 = ((($0)) + 67|0);
           $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
           $176 = (__set_current_error($0,23,$175)|0);
           $177 = ($176<<24>>24)==(0);
           if ($177) {
            break;
           }
           $178 = HEAP32[$4>>2]|0;
           $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
           $180 = ((($179)) + 9|0);
           $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
           $182 = ((($179)) + 13|0);
           $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8);
           $184 = ((($179)) + 15|0);
           $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8);
           __set_error_pos($0,$181,$183,$185);
           HEAP32[$3>>2] = 3;
           break;
          }
         }
         $186 = ((($0)) + 67|0);
         $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
         $188 = (__set_current_error($0,23,$187)|0);
         $189 = ($188<<24>>24)==(0);
         if (!($189)) {
          __set_error_pos($0,0,0,0);
          HEAP32[$3>>2] = 3;
         }
        }
       } while(0);
       break L55;
       break;
      }
      case 8:  {
       $210 = ((($147)) + 4|0);
       $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
       $212 = ((($211)) + 4|0);
       $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8)|(HEAPU8[$212+2>>0]<<16)|(HEAPU8[$212+3>>0]<<24);
       $214 = ($213|0)==(87|0);
       $215 = ($144|0)!=(103);
       $or$cond9 = $214 & $215;
       if ($or$cond9) {
        $216 = (__ls_popback($11)|0);
        HEAP32[$4>>2] = $216;
        break L64;
       }
       $217 = ((($147)) + 4|0);
       $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
       $219 = ((($218)) + 4|0);
       $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
       $221 = ($220|0)==(23|0);
       if ($221) {
        $222 = ((($0)) + 98|0);
        $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
        $224 = ($223|0)==(0|0);
        if (!($224)) {
         $225 = ((($223)) + 58|0);
         $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
         $227 = ($226|0)==(2);
         if ($227) {
          break L64;
         }
        }
       }
       $228 = (__is_operator($220)|0);
       $229 = ($228<<24>>24)==(0);
       if ($229) {
        $230 = (__is_flow($220)|0);
        $231 = ($230<<24>>24)==(0);
        if ($231) {
         break L64;
        }
       }
       $232 = ((($145)) + 8|0);
       $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
       HEAP32[$4>>2] = $233;
       break L64;
       break;
      }
      default: {
      }
      }
      $234 = ((($145)) + 8|0);
      $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
      HEAP32[$4>>2] = $235;
     }
    }
   } while(0);
   $236 = ((($0)) + 118|0);
   $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
   $238 = ($237|0)==(0|0);
   if (!($238)) {
    $239 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $240 = (__ls_back($239)|0);
    $241 = ($237|0)==($240|0);
    if ($241) {
     HEAP8[$236>>0]=0&255;HEAP8[$236+1>>0]=(0>>8)&255;HEAP8[$236+2>>0]=(0>>16)&255;HEAP8[$236+3>>0]=0>>24;
     $242 = HEAP32[$4>>2]|0;
     $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
     $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
     $245 = ($244|0)==(22);
     if (!($245)) {
      $246 = (__skip_to($0,$4,0,22)|0);
      HEAP32[$3>>2] = $246;
     }
    }
   }
  }
 } while(0);
 __destroy_lazy_objects($0);
 $247 = HEAP32[$4>>2]|0;
 HEAP32[$1>>2] = $247;
 $248 = ($247|0)==(0);
 $249 = $247;
 if ($248) {
  $250 = ((($0)) + 17|0);
  $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
  $252 = (__ls_back($251)|0);
  HEAP32[$4>>2] = $252;
  $$0153 = 1;$253 = $252;
 } else {
  $$0153 = 0;$253 = $249;
 }
 $254 = (__stepped($0,$253)|0);
 $255 = HEAP32[$3>>2]|0;
 $256 = ($255|0)==(0);
 if ($256) {
  HEAP32[$3>>2] = $254;
  $263 = $254;
 } else {
  $263 = $255;
 }
 $257 = ($$0153|0)!=(0);
 $258 = HEAP32[$4>>2]|0;
 $259 = ($258|0)!=(0|0);
 $or$cond11 = $257 & $259;
 if ($or$cond11) {
  $260 = ((($258)) + 8|0);
  $261 = HEAPU8[$260>>0]|(HEAPU8[$260+1>>0]<<8)|(HEAPU8[$260+2>>0]<<16)|(HEAPU8[$260+3>>0]<<24);
  $262 = ($261|0)==(0|0);
  if (!($262)) {
   HEAP32[$1>>2] = $261;
  }
 }
 STACKTOP = sp;return ($263|0);
}
function _mb_get_error_desc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(67);
 if ($1) {
  $2 = (8 + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $$0 = $3;
 } else {
  $$0 = 5409;
 }
 return ($$0|0);
}
function __out_of_scope($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$in = 0, $$0$in5 = 0, $$06 = 0, $$07 = 0, $$0768 = 0, $$077 = 0, $$077$in = 0, $$077$in10 = 0, $$07711 = 0, $$07712 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre14 = 0, $$pre15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $5 = ($0|0)==(0|0);
 if ($5) {
  ___assert_fail((1649|0),(1578|0),9395,(3819|0));
  // unreachable;
 }
 $6 = ((($1)) + 32|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  HEAP32[$4>>2] = $0;
  $9 = ((($4)) + 4|0);
  HEAP32[$9>>2] = $2;
  $10 = ((($4)) + 8|0);
  HEAP32[$10>>2] = $1;
  $11 = (__create_outer_scope($0)|0);
  $12 = ((($4)) + 12|0);
  HEAP32[$12>>2] = $11;
  $13 = ((($4)) + 16|0);
  HEAP32[$13>>2] = 0;
  $14 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $15 = ($14|0)==(0|0);
  if ($15) {
   ___assert_fail((3833|0),(1578|0),9409,(3819|0));
   // unreachable;
  }
  $$077$in10 = ((($14)) + 8|0);
  $$07711 = HEAPU8[$$077$in10>>0]|(HEAPU8[$$077$in10+1>>0]<<8)|(HEAPU8[$$077$in10+2>>0]<<16)|(HEAPU8[$$077$in10+3>>0]<<24);
  $16 = ($$07711|0)==(0|0);
  if ($16) {
   $19 = $14;
  } else {
   $$07712 = $$07711;
   while(1) {
    $17 = HEAPU8[$$07712>>0]|(HEAPU8[$$07712+1>>0]<<8)|(HEAPU8[$$07712+2>>0]<<16)|(HEAPU8[$$07712+3>>0]<<24);
    __fill_outer_scope($17,$4);
    $$077$in = ((($$07712)) + 8|0);
    $$077 = HEAPU8[$$077$in>>0]|(HEAPU8[$$077$in+1>>0]<<8)|(HEAPU8[$$077$in+2>>0]<<16)|(HEAPU8[$$077$in+3>>0]<<24);
    $18 = ($$077|0)==(0|0);
    if ($18) {
     break;
    } else {
     $$07712 = $$077;
    }
   }
   $$pre = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   $19 = $$pre;
  }
  __ls_destroy($19);
  HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
 }
 $20 = ($3<<24>>24)==(0);
 L15: do {
  if (!($20)) {
   $21 = ((($1)) + 8|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ($22|0)==(0|0);
   if (!($23)) {
    $24 = ((($22)) + 20|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ($25|0)==(0|0);
    if (!($26)) {
     $27 = ((($22)) + 12|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ($28|0)==(0);
     if (!($29)) {
      $$0768 = 0;$31 = $25;$44 = $22;
      while(1) {
       $30 = (($31) + ($$0768<<2)|0);
       $32 = HEAP32[$30>>2]|0;
       $33 = ($32|0)==(0|0);
       if ($33) {
        $41 = $44;
       } else {
        $$0$in5 = ((($32)) + 8|0);
        $$06 = HEAPU8[$$0$in5>>0]|(HEAPU8[$$0$in5+1>>0]<<8)|(HEAPU8[$$0$in5+2>>0]<<16)|(HEAPU8[$$0$in5+3>>0]<<24);
        $34 = ($$06|0)==(0|0);
        if ($34) {
         $41 = $44;
        } else {
         $$07 = $$06;
         while(1) {
          $35 = HEAPU8[$$07>>0]|(HEAPU8[$$07+1>>0]<<8)|(HEAPU8[$$07+2>>0]<<16)|(HEAPU8[$$07+3>>0]<<24);
          $36 = ((($$07)) + 12|0);
          $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
          __lose_object($35,$37,$1);
          $$0$in = ((($$07)) + 8|0);
          $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
          $38 = ($$0|0)==(0|0);
          if ($38) {
           break;
          } else {
           $$07 = $$0;
          }
         }
         $$pre15 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
         $41 = $$pre15;
        }
       }
       $39 = (($$0768) + 1)|0;
       $40 = ((($41)) + 12|0);
       $42 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
       $43 = ($39>>>0)<($42>>>0);
       if (!($43)) {
        break L15;
       }
       $$phi$trans$insert = ((($41)) + 20|0);
       $$pre14 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
       $$0768 = $39;$31 = $$pre14;$44 = $41;
      }
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __swap_public_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = $0;
  $5 = $4;
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = (($4) + 4)|0;
  $8 = $7;
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = $1;
  $11 = $10;
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = (($10) + 4)|0;
  $14 = $13;
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = $0;
  $17 = $16;
  HEAP8[$17>>0]=$12&255;HEAP8[$17+1>>0]=($12>>8)&255;HEAP8[$17+2>>0]=($12>>16)&255;HEAP8[$17+3>>0]=$12>>24;
  $18 = (($16) + 4)|0;
  $19 = $18;
  HEAP8[$19>>0]=$15&255;HEAP8[$19+1>>0]=($15>>8)&255;HEAP8[$19+2>>0]=($15>>16)&255;HEAP8[$19+3>>0]=$15>>24;
  $20 = $1;
  $21 = $20;
  HEAP8[$21>>0]=$6&255;HEAP8[$21+1>>0]=($6>>8)&255;HEAP8[$21+2>>0]=($6>>16)&255;HEAP8[$21+3>>0]=$6>>24;
  $22 = (($20) + 4)|0;
  $23 = $22;
  HEAP8[$23>>0]=$9&255;HEAP8[$23+1>>0]=($9>>8)&255;HEAP8[$23+2>>0]=($9>>16)&255;HEAP8[$23+3>>0]=$9>>24;
  return;
 } else {
  ___assert_fail((3789|0),(1578|0),10652,(3800|0));
  // unreachable;
 }
}
function __create_outer_scope($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8988,(5349|0));
  // unreachable;
 } else {
  $2 = (_mb_malloc(25)|0);
  dest=$2; stop=dest+25|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  __create_ref($2,138,18,$0);
  $3 = (__create_running_context(1)|0);
  $4 = ((($2)) + 21|0);
  HEAP8[$4>>0]=$3&255;HEAP8[$4+1>>0]=($3>>8)&255;HEAP8[$4+2>>0]=($3>>16)&255;HEAP8[$4+3>>0]=$3>>24;
  return ($2|0);
 }
 return (0)|0;
}
function __fill_outer_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in8 = 0, $$010 = 0, $$010111 = 0, $$0102 = 0, $$0102$in = 0, $$0102$in13 = 0, $$010214 = 0, $$010215 = 0, $$010317 = 0, $$09 = 0, $$phi$trans$insert = 0, $$phi$trans$insert21 = 0, $$pre = 0, $$pre19 = 0, $$pre20 = 0, $$pre22 = 0, $$pre23 = 0, $$pre24 = 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 33|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = (__ht_create(126,127,0)|0);
  $6 = ((($1)) + 20|0);
  HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=($5>>8)&255;HEAP8[$6+2>>0]=($5>>16)&255;HEAP8[$6+3>>0]=$5>>24;
  $7 = ((($1)) + 16|0);
  HEAP8[$7>>0]=$0&255;HEAP8[$7+1>>0]=($0>>8)&255;HEAP8[$7+2>>0]=($0>>16)&255;HEAP8[$7+3>>0]=$0>>24;
  $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $9 = ((($8)) + 20|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $30 = $5;$71 = $8;
  } else {
   $12 = ((($8)) + 12|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)==(0);
   if ($14) {
    $30 = $5;$71 = $8;
   } else {
    $$010317 = 0;$16 = $10;$72 = $8;
    while(1) {
     $15 = (($16) + ($$010317<<2)|0);
     $17 = HEAP32[$15>>2]|0;
     $18 = ($17|0)==(0|0);
     if ($18) {
      $26 = $72;
     } else {
      $$0102$in13 = ((($17)) + 8|0);
      $$010214 = HEAPU8[$$0102$in13>>0]|(HEAPU8[$$0102$in13+1>>0]<<8)|(HEAPU8[$$0102$in13+2>>0]<<16)|(HEAPU8[$$0102$in13+3>>0]<<24);
      $19 = ($$010214|0)==(0|0);
      if ($19) {
       $26 = $72;
      } else {
       $$010215 = $$010214;
       while(1) {
        $20 = HEAPU8[$$010215>>0]|(HEAPU8[$$010215+1>>0]<<8)|(HEAPU8[$$010215+2>>0]<<16)|(HEAPU8[$$010215+3>>0]<<24);
        $21 = ((($$010215)) + 12|0);
        $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
        __fill_with_upvalue($20,$22,$1);
        $$0102$in = ((($$010215)) + 8|0);
        $$0102 = HEAPU8[$$0102$in>>0]|(HEAPU8[$$0102$in+1>>0]<<8)|(HEAPU8[$$0102$in+2>>0]<<16)|(HEAPU8[$$0102$in+3>>0]<<24);
        $23 = ($$0102|0)==(0|0);
        if ($23) {
         break;
        } else {
         $$010215 = $$0102;
        }
       }
       $$pre19 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
       $26 = $$pre19;
      }
     }
     $24 = (($$010317) + 1)|0;
     $25 = ((($26)) + 12|0);
     $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $28 = ($24>>>0)<($27>>>0);
     if (!($28)) {
      break;
     }
     $$phi$trans$insert = ((($26)) + 20|0);
     $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
     $$010317 = $24;$16 = $$pre;$72 = $26;
    }
    $$pre20 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
    $30 = $$pre20;$71 = $26;
   }
  }
  HEAP8[$7>>0]=0&255;HEAP8[$7+1>>0]=(0>>8)&255;HEAP8[$7+2>>0]=(0>>16)&255;HEAP8[$7+3>>0]=0>>24;
  $29 = ((($30)) + 20|0);
  $31 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $32 = ($31|0)==(0|0);
  if ($32) {
   $50 = $71;
  } else {
   $33 = ((($30)) + 12|0);
   $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
   $35 = ($34|0)==(0);
   if ($35) {
    $50 = $71;
   } else {
    $$010111 = 0;$37 = $31;$73 = $30;
    while(1) {
     $36 = (($37) + ($$010111<<2)|0);
     $38 = HEAP32[$36>>2]|0;
     $39 = ($38|0)==(0|0);
     if ($39) {
      $47 = $73;
     } else {
      $$0$in8 = ((($38)) + 8|0);
      $$09 = HEAPU8[$$0$in8>>0]|(HEAPU8[$$0$in8+1>>0]<<8)|(HEAPU8[$$0$in8+2>>0]<<16)|(HEAPU8[$$0$in8+3>>0]<<24);
      $40 = ($$09|0)==(0|0);
      if ($40) {
       $47 = $73;
      } else {
       $$010 = $$09;
       while(1) {
        $41 = ((($$010)) + 12|0);
        $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
        $43 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
        __remove_filled_upvalue($42,$43);
        $$0$in = ((($$010)) + 8|0);
        $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
        $44 = ($$0|0)==(0|0);
        if ($44) {
         break;
        } else {
         $$010 = $$0;
        }
       }
       $$pre23 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
       $47 = $$pre23;
      }
     }
     $45 = (($$010111) + 1)|0;
     $46 = ((($47)) + 12|0);
     $48 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $49 = ($45>>>0)<($48>>>0);
     if (!($49)) {
      break;
     }
     $$phi$trans$insert21 = ((($47)) + 20|0);
     $$pre22 = HEAPU8[$$phi$trans$insert21>>0]|(HEAPU8[$$phi$trans$insert21+1>>0]<<8)|(HEAPU8[$$phi$trans$insert21+2>>0]<<16)|(HEAPU8[$$phi$trans$insert21+3>>0]<<24);
     $$010111 = $45;$37 = $$pre22;$73 = $47;
    }
    $$pre24 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $50 = $$pre24;
   }
  }
  $51 = (__ht_count($50)|0);
  $52 = ($51|0)==(0);
  if ($52) {
   $53 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   __ht_destroy($53);
   HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
  }
  $54 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  __ht_destroy($54);
 }
 $55 = ((($0)) + 25|0);
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = ($56|0)==(0|0);
 if ($57) {
  $67 = ((($1)) + 12|0);
  $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
  HEAP8[$55>>0]=$68&255;HEAP8[$55+1>>0]=($68>>8)&255;HEAP8[$55+2>>0]=($68>>16)&255;HEAP8[$55+3>>0]=$68>>24;
  $69 = $68;
  $70 = $69;
 } else {
  $58 = (__get_root_ref_scope($56)|0);
  $59 = ((($1)) + 12|0);
  $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
  $61 = ((($58)) + 17|0);
  HEAP8[$61>>0]=$60&255;HEAP8[$61+1>>0]=($60>>8)&255;HEAP8[$61+2>>0]=($60>>16)&255;HEAP8[$61+3>>0]=$60>>24;
  $62 = $60;
  $63 = ((($62)) + 21|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ((($58)) + 21|0);
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  HEAP8[$66>>0]=$64&255;HEAP8[$66+1>>0]=($64>>8)&255;HEAP8[$66+2>>0]=($64>>16)&255;HEAP8[$66+3>>0]=$64>>24;
  $70 = $62;
 }
 __ref($70,$70);
 return;
}
function __lose_object($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$phi$trans$insert = 0, $$phi$trans$insert60 = 0, $$pre = 0, $$pre62 = 0, $$tr38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $or$cond37 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond37 = $4 & $3;
 L1: do {
  if ($or$cond37) {
   $$tr38 = $0;
   L2: while(1) {
    $5 = HEAPU8[$$tr38>>0]|(HEAPU8[$$tr38+1>>0]<<8)|(HEAPU8[$$tr38+2>>0]<<16)|(HEAPU8[$$tr38+3>>0]<<24);
    switch ($5|0) {
    case 17:  {
     label = 4;
     break L2;
     break;
    }
    case 12:  {
     label = 6;
     break L2;
     break;
    }
    case 14:  {
     label = 10;
     break L2;
     break;
    }
    case 7:  {
     label = 15;
     break L2;
     break;
    }
    case 10:  {
     label = 16;
     break L2;
     break;
    }
    case 11:  {
     label = 18;
     break L2;
     break;
    }
    case 13:  {
     label = 19;
     break L2;
     break;
    }
    case 16:  {
     label = 20;
     break L2;
     break;
    }
    case 9:  {
     break;
    }
    default: {
     break L2;
    }
    }
    $36 = ((($$tr38)) + 4|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = ((($37)) + 4|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = ($39|0)==(0|0);
    if ($40) {
     break L1;
    } else {
     $$tr38 = $39;
    }
   }
   do {
    if ((label|0) == 4) {
     $6 = ((($$tr38)) + 4|0);
     $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
     $8 = ((($7)) + 58|0);
     $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $10 = ($9|0)==(2);
     if ($10) {
      $11 = ((($$tr38)) + 8|0);
      $12 = HEAP8[$11>>0]|0;
      $13 = $12 & -2;
      HEAP8[$11>>0] = $13;
     }
     $59 = ((($$tr38)) + 8|0);
     $60 = HEAP8[$59>>0]|0;
     $61 = $60 & 1;
     $62 = ($61<<24>>24)==(0);
     if ($62) {
      $63 = ((($$tr38)) + 4|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
      $65 = ((($64)) + 58|0);
      $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
      $67 = ($66|0)==(2);
      if ($67) {
       __unref($64,$64);
       label = 27;
       break;
      }
      $68 = ((($$tr38)) + 4|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $70 = ((($69)) + 58|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = ($71|0)==(2);
      if ($72) {
       label = 27;
      } else {
       __destroy_routine(0,$69);
       label = 27;
      }
     } else {
      label = 27;
     }
    }
    else if ((label|0) == 6) {
     $14 = ((($$tr38)) + 8|0);
     $15 = HEAP8[$14>>0]|0;
     $16 = $15 & 1;
     $17 = ($16<<24>>24)==(0);
     $$phi$trans$insert60 = ((($$tr38)) + 4|0);
     $$pre62 = HEAPU8[$$phi$trans$insert60>>0]|(HEAPU8[$$phi$trans$insert60+1>>0]<<8)|(HEAPU8[$$phi$trans$insert60+2>>0]<<16)|(HEAPU8[$$phi$trans$insert60+3>>0]<<24);
     if (!($17)) {
      $18 = ((($$pre62)) + 21|0);
      $19 = HEAP8[$18>>0]|0;
      $20 = $19 & 1;
      $21 = ($20<<24>>24)==(0);
      if (!($21)) {
       label = 27;
       break;
      }
     }
     $22 = ((($2)) + 24|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ($23|0)==($$pre62|0);
     if ($24) {
      label = 27;
     } else {
      __destroy_list_it($$pre62);
      label = 27;
     }
    }
    else if ((label|0) == 10) {
     $25 = ((($$tr38)) + 8|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = $26 & 1;
     $28 = ($27<<24>>24)==(0);
     $$phi$trans$insert = ((($$tr38)) + 4|0);
     $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
     if (!($28)) {
      $29 = ((($$pre)) + 21|0);
      $30 = HEAP8[$29>>0]|0;
      $31 = $30 & 1;
      $32 = ($31<<24>>24)==(0);
      if (!($32)) {
       label = 27;
       break;
      }
     }
     $33 = ((($2)) + 24|0);
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ($34|0)==($$pre|0);
     if ($35) {
      label = 27;
     } else {
      __destroy_dict_it($$pre);
      label = 27;
     }
    }
    else if ((label|0) == 15) {
     $41 = ((($$tr38)) + 4|0);
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     __unref($42,$42);
     label = 27;
    }
    else if ((label|0) == 16) {
     $43 = ((($$tr38)) + 8|0);
     $44 = HEAP8[$43>>0]|0;
     $45 = $44 & 1;
     $46 = ($45<<24>>24)==(0);
     if ($46) {
      $47 = ((($$tr38)) + 4|0);
      $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
      __unref($48,$48);
      label = 27;
     } else {
      label = 27;
     }
    }
    else if ((label|0) == 18) {
     $49 = ((($$tr38)) + 4|0);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     __unref($50,$50);
     label = 27;
    }
    else if ((label|0) == 19) {
     $51 = ((($$tr38)) + 4|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     __unref($52,$52);
     label = 27;
    }
    else if ((label|0) == 20) {
     $53 = ((($$tr38)) + 8|0);
     $54 = HEAP8[$53>>0]|0;
     $55 = $54 & 1;
     $56 = ($55<<24>>24)==(0);
     if ($56) {
      $57 = ((($$tr38)) + 4|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      __unref($58,$58);
      label = 27;
     } else {
      label = 27;
     }
    }
   } while(0);
   if ((label|0) == 27) {
    dest=$$tr38; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   }
   return;
  }
 } while(0);
 ___assert_fail((2367|0),(1578|0),10043,(3858|0));
 // unreachable;
}
function __ht_cmp_intptr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)<($1|0);
 $3 = ($0|0)>($1|0);
 $$ = $3&1;
 $$0 = $2 ? -1 : $$;
 return ($$0|0);
}
function __ht_hash_intptr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2281|0),(1578|0),2844,(5333|0));
  // unreachable;
 }
 $3 = ((($0)) + 12|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(1);
 if ($5) {
  $$0 = 0;
 } else {
  $6 = $1;
  $7 = (($6>>>0) % ($4>>>0))&-1;
  $$0 = $7;
 }
 return ($$0|0);
}
function __fill_with_upvalue($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$070 = 0, $$0701 = 0, $$07025 = 0, $$pr = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($2)) + 12|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($5)) + 21|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($7)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = (__ht_find($9,$1)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $12 = ((($2)) + 4|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = ($13|0)==(0|0);
  if ($14) {
   $19 = ((($2)) + 8|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = ((($20)) + 8|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = (__ht_find($22,$1)|0);
   $$0 = $23;
  } else {
   $15 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $16 = ((($2)) + 8|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = (__search_identifier_in_scope_chain($15,$17,$1,1,0,0)|0);
   $$0 = $18;
  }
  $24 = ($$0|0)==(0|0);
  if (!($24)) {
   HEAP32[$3>>2] = 0;
   $25 = (__create_var($3,$1,0)|0);
   $26 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
   $27 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $28 = ((($25)) + 4|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   __clone_object($27,$26,$29,1,1);
   $30 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   switch ($31|0) {
   case 7:  {
    $32 = ((($30)) + 4|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    __ref($33,$33);
    break;
   }
   case 10:  {
    $34 = ((($30)) + 8|0);
    $35 = HEAP8[$34>>0]|0;
    $36 = $35 & 1;
    $37 = ($36<<24>>24)==(0);
    if ($37) {
     $38 = ((($30)) + 4|0);
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     __ref($39,$39);
    }
    break;
   }
   case 11:  {
    $40 = ((($30)) + 4|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    __ref($41,$41);
    break;
   }
   case 13:  {
    $42 = ((($30)) + 4|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    __ref($43,$43);
    break;
   }
   case 16:  {
    $44 = ((($30)) + 4|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    __ref($45,$45);
    break;
   }
   case 17:  {
    $46 = ((($30)) + 8|0);
    $47 = HEAP8[$46>>0]|0;
    $48 = $47 & 1;
    $49 = ($48<<24>>24)==(0);
    if ($49) {
     $50 = ((($30)) + 4|0);
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     $52 = ((($51)) + 58|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = ($53|0)==(2);
     if ($54) {
      __ref($51,$51);
     }
    }
    break;
   }
   default: {
   }
   }
   $55 = ($26|0)==(0|0);
   if ($55) {
    label = 20;
   } else {
    $56 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $57 = ($56|0)==(17);
    if ($57) {
     $58 = ((($26)) + 4|0);
     $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
     $60 = ((($59)) + 58|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = ($61|0)==(2);
     if ($62) {
      label = 20;
     } else {
      $63 = HEAP32[$3>>2]|0;
      $64 = ((($63)) + 8|0);
      $65 = HEAP8[$64>>0]|0;
      $66 = $65 | 1;
      HEAP8[$64>>0] = $66;
      $67 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
      $68 = ((($67)) + 8|0);
      $69 = HEAP8[$68>>0]|0;
      $70 = $69 | 1;
      HEAP8[$68>>0] = $70;
      label = 20;
     }
    } else {
     $71 = $56;
    }
   }
   if ((label|0) == 20) {
    $$pr = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $71 = $$pr;
   }
   $72 = ($71|0)==(9);
   if ($72) {
    $73 = ((($26)) + 4|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ((($74)) + 8|0);
    $76 = HEAP8[$75>>0]|0;
    $77 = $76 & 3;
    $78 = ((($25)) + 8|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = $79 & -4;
    $81 = $80 | $77;
    HEAP8[$78>>0] = $81;
   } else {
    $82 = ((($25)) + 8|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83 & -4;
    HEAP8[$82>>0] = $84;
   }
   $85 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $86 = ((($85)) + 21|0);
   $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   $88 = ((($87)) + 8|0);
   $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
   $90 = HEAP32[$3>>2]|0;
   $91 = ((($90)) + 4|0);
   $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   __ht_set_or_insert($89,$93,$90);
   $94 = ((($2)) + 20|0);
   $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
   __ht_set_or_insert($95,$1,$0);
   $96 = ((($2)) + 16|0);
   $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
   $98 = ((($97)) + 37|0);
   $$0701 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
   $99 = ($$0701|0)==(0|0);
   L30: do {
    if (!($99)) {
     $100 = ((($97)) + 41|0);
     $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
     $102 = ((($101)) + 8|0);
     $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
     $104 = ($$0701|0)==($103|0);
     if (!($104)) {
      $$07025 = $$0701;
      while(1) {
       $105 = HEAPU8[$$07025>>0]|(HEAPU8[$$07025+1>>0]<<8)|(HEAPU8[$$07025+2>>0]<<16)|(HEAPU8[$$07025+3>>0]<<24);
       $106 = ($105|0)==(0|0);
       if (!($106)) {
        $107 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
        $cond = ($107|0)==(9);
        if ($cond) {
         $108 = ((($105)) + 4|0);
         $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
         $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
         $111 = HEAP32[$3>>2]|0;
         $112 = ((($111)) + 4|0);
         $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
         $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
         $115 = (_strcmp($110,$114)|0);
         $116 = ($115|0)==(0);
         if ($116) {
          $117 = ((($109)) + 8|0);
          $118 = HEAP8[$117>>0]|0;
          $119 = $118 | 3;
          HEAP8[$117>>0] = $119;
         }
        }
       }
       $120 = ((($$07025)) + 8|0);
       $$070 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
       $121 = ($$070|0)==(0|0);
       if ($121) {
        break L30;
       }
       $$pre = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
       $122 = ((($$pre)) + 41|0);
       $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
       $124 = ((($123)) + 8|0);
       $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
       $126 = ($$070|0)==($125|0);
       if ($126) {
        break;
       } else {
        $$07025 = $$070;
       }
      }
     }
    }
   } while(0);
  }
 }
 STACKTOP = sp;return;
}
function __remove_filled_upvalue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ht_remove_existing($0,$1);
 return;
}
function __get_root_ref_scope($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$056 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$lcssa = 0;
 } else {
  $$056 = $0;
  while(1) {
   $2 = ((($$056)) + 17|0);
   $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $4 = ($3|0)==(0|0);
   if ($4) {
    $$0$lcssa = $$056;
    break;
   } else {
    $$056 = $3;
   }
  }
 }
 return ($$0$lcssa|0);
}
function __search_identifier_in_scope_chain($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$05156 = 0, $$5 = 0, $$cast = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 4|0;
 $7 = sp;
 HEAP32[$6>>2] = 0;
 HEAP32[$7>>2] = 0;
 $8 = ($0|0)!=(0|0);
 $9 = ($2|0)!=(0|0);
 $or$cond = $8 & $9;
 if (!($or$cond)) {
  ___assert_fail((2096|0),(1578|0),9505,(5238|0));
  // unreachable;
 }
 $10 = ($3|0)==(0);
 if ($10) {
  label = 5;
 } else {
  $11 = ($3|0)==(2);
  $12 = $11&1;
  $13 = (__search_identifier_accessor($0,$1,$2,$6,$7,$12)|0);
  $14 = ($13|0)==(0|0);
  if ($14) {
   label = 5;
  } else {
   $$5 = $13;
  }
 }
 L6: do {
  if ((label|0) == 5) {
   $15 = ((($0)) + 98|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)==(0|0);
   if (!($17)) {
    $18 = ((($16)) + 53|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     HEAP8[$18>>0]=0&255;HEAP8[$18+1>>0]=(0>>8)&255;HEAP8[$18+2>>0]=(0>>16)&255;HEAP8[$18+3>>0]=0>>24;
     $21 = (__search_identifier_in_class($0,$19,$2,$6,$7)|0);
     $22 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $23 = ((($22)) + 53|0);
     HEAP8[$23>>0]=$19&255;HEAP8[$23+1>>0]=($19>>8)&255;HEAP8[$23+2>>0]=($19>>16)&255;HEAP8[$23+3>>0]=$19>>24;
     $24 = ($21|0)==(0|0);
     if (!($24)) {
      $$5 = $21;
      break;
     }
    }
   }
   $25 = ($1|0)==(0|0);
   if ($25) {
    $26 = ((($0)) + 75|0);
    $$sink = $26;
    label = 10;
   } else {
    $$05156 = $1;
   }
   while(1) {
    if ((label|0) == 10) {
     label = 0;
     $27 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
     $28 = ($27|0)==(0|0);
     if ($28) {
      $$5 = 0;
      break;
     } else {
      $$05156 = $27;
     }
    }
    $29 = ((($$05156)) + 8|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = ($30|0)==(0|0);
    if (!($31)) {
     $32 = (__ht_find($30,$2)|0);
     $33 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     HEAP32[$6>>2] = $33;
     HEAP32[$7>>2] = $$05156;
     $34 = ($32|0)==(0|0);
     if (!($34)) {
      $$5 = $32;
      break L6;
     }
     $35 = ((($$05156)) + 4|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ($36|0)==(2);
     if ($37) {
      $38 = ((($$05156)) + 12|0);
      $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $40 = ((($39)) + 8|0);
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = (__ht_find($41,$2)|0);
      $43 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $44 = ((($43)) + 8|0);
      $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
      HEAP32[$6>>2] = $45;
      $$cast = $43;
      HEAP32[$7>>2] = $$cast;
      $46 = ($42|0)==(0|0);
      if (!($46)) {
       $$5 = $42;
       break L6;
      }
     }
    }
    $$sink = $$05156;
    label = 10;
   }
  }
 } while(0);
 $47 = ($4|0)==(0|0);
 if (!($47)) {
  $48 = HEAP32[$6>>2]|0;
  HEAP32[$4>>2] = $48;
 }
 $49 = ($5|0)==(0|0);
 if (!($49)) {
  $50 = HEAP32[$7>>2]|0;
  HEAP32[$5>>2] = $50;
 }
 STACKTOP = sp;return ($$5|0);
}
function __clone_object($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$in = 0, $$0$in9 = 0, $$010 = 0, $$011 = 0, $$015613 = 0, $$0157 = 0, $$0157$in = 0, $$0157$in6 = 0, $$01577 = 0, $$01578 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre16 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $5 = ($1|0)!=(0|0);
 $6 = ($2|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((3871|0),(1578|0),9725,(3882|0));
  // unreachable;
 }
 dest=$2; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $7 = (__is_internal_object($1)|0);
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $9 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  HEAP8[$2>>0]=$9&255;HEAP8[$2+1>>0]=($9>>8)&255;HEAP8[$2+2>>0]=($9>>16)&255;HEAP8[$2+3>>0]=$9>>24;
  $10 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  L6: do {
   switch ($10|0) {
   case 9:  {
    $11 = ((($1)) + 4|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    $13 = ((($12)) + 4|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    __clone_object($0,$14,$2,$3,$4);
    break;
   }
   case 4:  {
    $15 = ((($1)) + 4|0);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = (_mb_strdup($16,0)|0);
    $18 = ((($2)) + 4|0);
    HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
    break;
   }
   case 7:  {
    $19 = ((($1)) + 4|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    __clone_usertype_ref($20,$2);
    break;
   }
   case 8:  {
    $21 = ((($1)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = (_strlen($23)|0);
    $25 = (($24) + 1)|0;
    $26 = (_mb_strdup($23,$25)|0);
    $27 = ((($2)) + 4|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    HEAP8[$28>>0]=$26&255;HEAP8[$28+1>>0]=($26>>8)&255;HEAP8[$28+2>>0]=($26>>16)&255;HEAP8[$28+3>>0]=$26>>24;
    $29 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $30 = ((($29)) + 4|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $33 = ((($32)) + 4|0);
    HEAP8[$33>>0]=$31&255;HEAP8[$33+1>>0]=($31>>8)&255;HEAP8[$33+2>>0]=($31>>16)&255;HEAP8[$33+3>>0]=$31>>24;
    break;
   }
   case 10:  {
    $34 = ($4<<24>>24)==(0);
    $35 = ((($1)) + 4|0);
    if ($34) {
     $39 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $40 = ((($2)) + 4|0);
     HEAP8[$40>>0]=$39&255;HEAP8[$40+1>>0]=($39>>8)&255;HEAP8[$40+2>>0]=($39>>16)&255;HEAP8[$40+3>>0]=$39>>24;
     $41 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     __ref($41,$41);
     break L6;
    } else {
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = (__clone_array($0,$36)|0);
     $38 = ((($2)) + 4|0);
     HEAP8[$38>>0]=$37&255;HEAP8[$38+1>>0]=($37>>8)&255;HEAP8[$38+2>>0]=($37>>16)&255;HEAP8[$38+3>>0]=$37>>24;
     break L6;
    }
    break;
   }
   case 11:  {
    $42 = ($4<<24>>24)==(0);
    $43 = ((($1)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    if ($42) {
     $57 = ((($2)) + 4|0);
     HEAP8[$57>>0]=$44&255;HEAP8[$57+1>>0]=($44>>8)&255;HEAP8[$57+2>>0]=($44>>16)&255;HEAP8[$57+3>>0]=$44>>24;
     $58 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     __ref($58,$58);
     break L6;
    }
    $45 = ((($44)) + 13|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = (__create_list($46)|0);
    $48 = ((($2)) + 4|0);
    HEAP8[$48>>0]=$47&255;HEAP8[$48+1>>0]=($47>>8)&255;HEAP8[$48+2>>0]=($47>>16)&255;HEAP8[$48+3>>0]=$47>>24;
    __ref($47,$47);
    $49 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $50 = ((($49)) + 19|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = ($51|0)==(0|0);
    if ($52) {
     ___assert_fail((3188|0),(1578|0),9767,(3882|0));
     // unreachable;
    }
    $$0157$in6 = ((($51)) + 8|0);
    $$01577 = HEAPU8[$$0157$in6>>0]|(HEAPU8[$$0157$in6+1>>0]<<8)|(HEAPU8[$$0157$in6+2>>0]<<16)|(HEAPU8[$$0157$in6+3>>0]<<24);
    $53 = ($$01577|0)==(0|0);
    if (!($53)) {
     $$01578 = $$01577;
     while(1) {
      $54 = HEAPU8[$$01578>>0]|(HEAPU8[$$01578+1>>0]<<8)|(HEAPU8[$$01578+2>>0]<<16)|(HEAPU8[$$01578+3>>0]<<24);
      $55 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      __clone_to_list($54,$55);
      $$0157$in = ((($$01578)) + 8|0);
      $$0157 = HEAPU8[$$0157$in>>0]|(HEAPU8[$$0157$in+1>>0]<<8)|(HEAPU8[$$0157$in+2>>0]<<16)|(HEAPU8[$$0157$in+3>>0]<<24);
      $56 = ($$0157|0)==(0|0);
      if ($56) {
       break;
      } else {
       $$01578 = $$0157;
      }
     }
    }
    break;
   }
   case 12:  {
    $59 = ((($1)) + 4|0);
    $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
    $61 = ((($60)) + 17|0);
    $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
    $63 = (__create_list_it($62,1)|0);
    $64 = ((($2)) + 4|0);
    HEAP8[$64>>0]=$63&255;HEAP8[$64+1>>0]=($63>>8)&255;HEAP8[$64+2>>0]=($63>>16)&255;HEAP8[$64+3>>0]=$63>>24;
    break;
   }
   case 13:  {
    $65 = ($4<<24>>24)==(0);
    $66 = ((($1)) + 4|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    if ($65) {
     $98 = ((($2)) + 4|0);
     HEAP8[$98>>0]=$67&255;HEAP8[$98+1>>0]=($67>>8)&255;HEAP8[$98+2>>0]=($67>>16)&255;HEAP8[$98+3>>0]=$67>>24;
     $99 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     __ref($99,$99);
     break L6;
    }
    $68 = ((($67)) + 13|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = (__create_dict($69)|0);
    $71 = ((($2)) + 4|0);
    HEAP8[$71>>0]=$70&255;HEAP8[$71+1>>0]=($70>>8)&255;HEAP8[$71+2>>0]=($70>>16)&255;HEAP8[$71+3>>0]=$70>>24;
    __ref($70,$70);
    $72 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $73 = ((($72)) + 19|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ((($74)) + 20|0);
    $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
    $77 = ($76|0)==(0|0);
    if (!($77)) {
     $78 = ((($74)) + 12|0);
     $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
     $80 = ($79|0)==(0);
     if (!($80)) {
      $$015613 = 0;$164 = $72;$82 = $76;
      while(1) {
       $81 = (($82) + ($$015613<<2)|0);
       $83 = HEAP32[$81>>2]|0;
       $84 = ($83|0)==(0|0);
       if ($84) {
        $93 = $164;
       } else {
        $$0$in9 = ((($83)) + 8|0);
        $$010 = HEAPU8[$$0$in9>>0]|(HEAPU8[$$0$in9+1>>0]<<8)|(HEAPU8[$$0$in9+2>>0]<<16)|(HEAPU8[$$0$in9+3>>0]<<24);
        $85 = ($$010|0)==(0|0);
        if ($85) {
         $93 = $164;
        } else {
         $$011 = $$010;
         while(1) {
          $86 = HEAPU8[$$011>>0]|(HEAPU8[$$011+1>>0]<<8)|(HEAPU8[$$011+2>>0]<<16)|(HEAPU8[$$011+3>>0]<<24);
          $87 = ((($$011)) + 12|0);
          $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
          $89 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
          __clone_to_dict($86,$88,$89);
          $$0$in = ((($$011)) + 8|0);
          $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
          $90 = ($$0|0)==(0|0);
          if ($90) {
           break;
          } else {
           $$011 = $$0;
          }
         }
         $$pre16 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
         $93 = $$pre16;
        }
       }
       $91 = (($$015613) + 1)|0;
       $92 = ((($93)) + 19|0);
       $94 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       $95 = ((($94)) + 12|0);
       $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
       $97 = ($91>>>0)<($96>>>0);
       if (!($97)) {
        break L6;
       }
       $$phi$trans$insert = ((($94)) + 20|0);
       $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
       $$015613 = $91;$164 = $93;$82 = $$pre;
      }
     }
    }
    break;
   }
   case 14:  {
    $100 = ((($1)) + 4|0);
    $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
    $102 = ((($101)) + 17|0);
    $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
    $104 = (__create_dict_it($103,1)|0);
    $105 = ((($2)) + 4|0);
    HEAP8[$105>>0]=$104&255;HEAP8[$105+1>>0]=($104>>8)&255;HEAP8[$105+2>>0]=($104>>16)&255;HEAP8[$105+3>>0]=$104>>24;
    break;
   }
   case 15:  {
    $106 = ((($1)) + 4|0);
    $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    $109 = (_mb_strdup($108,0)|0);
    $110 = ((($2)) + 4|0);
    $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    HEAP8[$111>>0]=$109&255;HEAP8[$111+1>>0]=($109>>8)&255;HEAP8[$111+2>>0]=($109>>16)&255;HEAP8[$111+3>>0]=$109>>24;
    $112 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
    $113 = ((($112)) + 4|0);
    $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
    $115 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    $116 = ((($115)) + 4|0);
    HEAP8[$116>>0]=$114&255;HEAP8[$116+1>>0]=($114>>8)&255;HEAP8[$116+2>>0]=($114>>16)&255;HEAP8[$116+3>>0]=$114>>24;
    break;
   }
   case 16:  {
    $117 = ($4<<24>>24)==(0);
    if ($117) {
     $143 = ((($1)) + 4|0);
     $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
     $145 = ((($2)) + 4|0);
     HEAP8[$145>>0]=$144&255;HEAP8[$145+1>>0]=($144>>8)&255;HEAP8[$145+2>>0]=($144>>16)&255;HEAP8[$145+3>>0]=$144>>24;
     $146 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
     __ref($146,$146);
     break L6;
    }
    $118 = (_mb_malloc(45)|0);
    $119 = ((($2)) + 4|0);
    HEAP8[$119>>0]=$118&255;HEAP8[$119+1>>0]=($118>>8)&255;HEAP8[$119+2>>0]=($118>>16)&255;HEAP8[$119+3>>0]=$118>>24;
    $120 = ((($1)) + 4|0);
    $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
    $122 = ((($121)) + 17|0);
    $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
    $124 = (_mb_strdup($123,0)|0);
    __init_class($0,$118,$124);
    $125 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
    $126 = ((($125)) + 21|0);
    $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
    $128 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    $129 = ((($128)) + 21|0);
    HEAP8[$129>>0]=$127&255;HEAP8[$129+1>>0]=($127>>8)&255;HEAP8[$129+2>>0]=($127>>16)&255;HEAP8[$129+3>>0]=$127>>24;
    $130 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    $131 = ((($130)) + 29|0);
    $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
    __push_scope_by_class($0,$132);
    $133 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
    $134 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    (__traverse_class($133,139,140,-1,0,$134,0)|0);
    $135 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    $136 = (__search_class_hash_and_compare_functions($0,$135)|0);
    $137 = ($136|0)==(0);
    if ($137) {
     $138 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $139 = ((($138)) + 41|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     $141 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
     $142 = ((($141)) + 41|0);
     HEAP8[$142>>0]=$140&255;HEAP8[$142+1>>0]=($140>>8)&255;HEAP8[$142+2>>0]=($140>>16)&255;HEAP8[$142+3>>0]=$140>>24;
     __pop_scope($0,0);
     break L6;
    } else {
     ___assert_fail((3896|0),(1578|0),9808,(3882|0));
     // unreachable;
    }
    break;
   }
   case 17:  {
    $147 = ((($1)) + 4|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $149 = ((($148)) + 53|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    $151 = (__clone_routine($148,$150,$3)|0);
    $152 = ((($2)) + 4|0);
    HEAP8[$152>>0]=$151&255;HEAP8[$152+1>>0]=($151>>8)&255;HEAP8[$152+2>>0]=($151>>16)&255;HEAP8[$152+3>>0]=$151>>24;
    break;
   }
   case 6: case 22: case 19: case 5: case 3: case 2: case 1: case 0:  {
    $153 = ((($1)) + 4|0);
    $154 = ((($2)) + 4|0);
    $155 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
    HEAP8[$154>>0]=$155&255;HEAP8[$154+1>>0]=($155>>8)&255;HEAP8[$154+2>>0]=($155>>16)&255;HEAP8[$154+3>>0]=$155>>24;
    break;
   }
   default: {
    ___assert_fail((2733|0),(1578|0),9843,(3882|0));
    // unreachable;
   }
   }
  } while(0);
  $156 = ((($2)) + 8|0);
  $157 = HEAP8[$156>>0]|0;
  $158 = $157 & -2;
  HEAP8[$156>>0] = $158;
  $159 = ((($2)) + 9|0);
  $160 = $159;
  $161 = $160;
  HEAP8[$161>>0]=0&255;HEAP8[$161+1>>0]=(0>>8)&255;HEAP8[$161+2>>0]=(0>>16)&255;HEAP8[$161+3>>0]=0>>24;
  $162 = (($160) + 4)|0;
  $163 = $162;
  HEAP8[$163>>0]=0&255;HEAP8[$163+1>>0]=(0>>8)&255;HEAP8[$163+2>>0]=(0>>16)&255;HEAP8[$163+3>>0]=0>>24;
 }
 return;
}
function __clone_usertype_ref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((5144|0),(1578|0),7029,(5155|0));
  // unreachable;
 }
 $4 = ((($0)) + 25|0);
 dest=$1; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $7 = ((($0)) + 13|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($0)) + 17|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = (FUNCTION_TABLE_iii[$5 & 255]($8,$10)|0);
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   HEAP8[$1>>0]=7&255;HEAP8[$1+1>>0]=(7>>8)&255;HEAP8[$1+2>>0]=(7>>16)&255;HEAP8[$1+3>>0]=7>>24;
   $13 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $14 = ((($0)) + 21|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $17 = ((($0)) + 29|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($0)) + 33|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = ((($0)) + 37|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = (__create_usertype_ref($13,$11,$15,$16,$18,$20,$22)|0);
   $24 = ((($1)) + 4|0);
   HEAP8[$24>>0]=$23&255;HEAP8[$24+1>>0]=($23>>8)&255;HEAP8[$24+2>>0]=($23>>16)&255;HEAP8[$24+3>>0]=$23>>24;
   $25 = ((($0)) + 41|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = ((($23)) + 41|0);
   HEAP8[$27>>0]=$26&255;HEAP8[$27+1>>0]=($26>>8)&255;HEAP8[$27+2>>0]=($26>>16)&255;HEAP8[$27+3>>0]=$26>>24;
   $28 = ((($0)) + 45|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ($29|0)==(0|0);
   if (!($30)) {
    $31 = (_mb_malloc(24)|0);
    $32 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $33 = ((($32)) + 45|0);
    HEAP8[$33>>0]=$31&255;HEAP8[$33+1>>0]=($31>>8)&255;HEAP8[$33+2>>0]=($31>>16)&255;HEAP8[$33+3>>0]=$31>>24;
    $34 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $35 = ((($34)) + 45|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $37 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    dest=$36; src=$37; stop=dest+24|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   }
   $38 = ((($0)) + 49|0);
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $41 = ((($40)) + 49|0);
   HEAP8[$41>>0]=$39&255;HEAP8[$41+1>>0]=($39>>8)&255;HEAP8[$41+2>>0]=($39>>16)&255;HEAP8[$41+3>>0]=$39>>24;
   $42 = ((($0)) + 53|0);
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   $44 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $45 = ((($44)) + 53|0);
   HEAP8[$45>>0]=$43&255;HEAP8[$45+1>>0]=($43>>8)&255;HEAP8[$45+2>>0]=($43>>16)&255;HEAP8[$45+3>>0]=$43>>24;
   $46 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   __ref($46,$46);
  }
 }
 return;
}
function __clone_array($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$027 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((4902|0),(1578|0),7169,(4911|0));
  // unreachable;
 }
 $6 = ((($1)) + 17|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (_mb_strdup($7,0)|0);
 $9 = ((($1)) + 21|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = (__create_array($0,$8,$10)|0);
 $12 = ((($1)) + 29|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ((($11)) + 29|0);
 HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
 $15 = ((($1)) + 33|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ((($11)) + 33|0);
 HEAP8[$17>>0] = $16;
 $18 = ((($11)) + 34|0);
 $19 = ((($1)) + 34|0);
 dest=$18; src=$19; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 __init_array($11);
 $20 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $21 = ($20|0)==(0);
 if (!($21)) {
  $$027 = 0;
  while(1) {
   __get_array_elem($0,$1,$$027,$2,$3);
   (__set_array_elem($0,0,$11,$$027,$2,$3)|0);
   $22 = (($$027) + 1)|0;
   $23 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $24 = ($22>>>0)<($23>>>0);
   if ($24) {
    $$027 = $22;
   } else {
    break;
   }
  }
 }
 STACKTOP = sp;return ($11|0);
}
function __create_list($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),7472,(4863|0));
  // unreachable;
 } else {
  $2 = (_mb_malloc(39)|0);
  dest=$2; stop=dest+39|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $3 = (__ls_create()|0);
  $4 = ((($2)) + 19|0);
  HEAP8[$4>>0]=$3&255;HEAP8[$4+1>>0]=($3>>8)&255;HEAP8[$4+2>>0]=($3>>16)&255;HEAP8[$4+3>>0]=$3>>24;
  __create_ref($2,141,11,$0);
  return ($2|0);
 }
 return (0)|0;
}
function __clone_to_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((4766|0),(1578|0),8162,(4779|0));
  // unreachable;
 }
 __fill_ranged($1);
 $4 = (__create_object()|0);
 $5 = ((($1)) + 13|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 __clone_object($6,$0,$4,0,0);
 (__push_list($1,0,$4)|0);
 $7 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 switch ($7|0) {
 case 7:  {
  $8 = ((($4)) + 4|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  __ref($9,$9);
  break;
 }
 case 10:  {
  $10 = ((($4)) + 8|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $14 = ((($4)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   __ref($15,$15);
  }
  break;
 }
 case 11:  {
  $16 = ((($4)) + 4|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  __ref($17,$17);
  break;
 }
 case 13:  {
  $18 = ((($4)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  __ref($19,$19);
  break;
 }
 case 16:  {
  $20 = ((($4)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  __ref($21,$21);
  break;
 }
 case 17:  {
  $22 = ((($4)) + 8|0);
  $23 = HEAP8[$22>>0]|0;
  $24 = $23 & 1;
  $25 = ($24<<24>>24)==(0);
  if ($25) {
   $26 = ((($4)) + 4|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ((($27)) + 58|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ($29|0)==(2);
   if ($30) {
    __ref($27,$27);
   }
  }
  break;
 }
 default: {
 }
 }
 return;
}
function __create_list_it($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4391|0),(1578|0),7521,(4750|0));
  // unreachable;
 }
 $3 = (_mb_malloc(26)|0);
 dest=$3; stop=dest+26|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $4 = ((($3)) + 17|0);
 HEAP8[$4>>0]=$0&255;HEAP8[$4+1>>0]=($0>>8)&255;HEAP8[$4+2>>0]=($0>>16)&255;HEAP8[$4+3>>0]=$0>>24;
 $5 = ((($3)) + 21|0);
 $6 = $1 & 1;
 HEAP8[$5>>0] = $6;
 $7 = ((($0)) + 35|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $18 = ((($0)) + 19|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $$sink = $19;
 } else {
  $10 = HEAP32[$8>>2]|0;
  $11 = ((($0)) + 31|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ($12|0)==(0);
  $14 = ($12|0)>(0);
  $15 = $14 ? 1 : -1;
  $16 = $13 ? 0 : $15;
  $17 = (($10) - ($16))|0;
  $$sink = $17;
 }
 $20 = ((($3)) + 22|0);
 HEAP8[$20>>0]=$$sink&255;HEAP8[$20+1>>0]=($$sink>>8)&255;HEAP8[$20+2>>0]=($$sink>>16)&255;HEAP8[$20+3>>0]=$$sink>>24;
 $21 = ($1<<24>>24)==(0);
 if ($21) {
  $$pre$phiZ2D = $0;
 } else {
  $22 = ((($0)) + 17|0);
  __lock_ref_object($22,$0,$0);
  $$pre$phiZ2D = $0;
 }
 __weak_ref($$pre$phiZ2D,$3);
 return ($3|0);
}
function __create_dict($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),7497,(4668|0));
  // unreachable;
 } else {
  $2 = (_mb_malloc(23)|0);
  dest=$2; stop=dest+23|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $3 = (__ht_create(142,143,144)|0);
  $4 = ((($2)) + 19|0);
  HEAP8[$4>>0]=$3&255;HEAP8[$4+1>>0]=($3>>8)&255;HEAP8[$4+2>>0]=($3>>16)&255;HEAP8[$4+3>>0]=$3>>24;
  __create_ref($2,145,13,$0);
  return ($2|0);
 }
 return (0)|0;
}
function __clone_to_dict($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if (!($or$cond5)) {
  ___assert_fail((4519|0),(1578|0),8182,(4541|0));
  // unreachable;
 }
 $6 = (__create_object()|0);
 $7 = ((($2)) + 13|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 __clone_object($8,$1,$6,0,0);
 $9 = (__create_object()|0);
 $10 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 __clone_object($10,$0,$9,0,0);
 (__set_dict($2,0,0,$6,$9)|0);
 $11 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 switch ($11|0) {
 case 7:  {
  $12 = ((($6)) + 4|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  __ref($13,$13);
  break;
 }
 case 10:  {
  $14 = ((($6)) + 8|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15 & 1;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $18 = ((($6)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   __ref($19,$19);
  }
  break;
 }
 case 11:  {
  $20 = ((($6)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  __ref($21,$21);
  break;
 }
 case 13:  {
  $22 = ((($6)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  __ref($23,$23);
  break;
 }
 case 16:  {
  $24 = ((($6)) + 4|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  __ref($25,$25);
  break;
 }
 case 17:  {
  $26 = ((($6)) + 8|0);
  $27 = HEAP8[$26>>0]|0;
  $28 = $27 & 1;
  $29 = ($28<<24>>24)==(0);
  if ($29) {
   $30 = ((($6)) + 4|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ((($31)) + 58|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ($33|0)==(2);
   if ($34) {
    __ref($31,$31);
   }
  }
  break;
 }
 default: {
 }
 }
 $35 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 switch ($35|0) {
 case 7:  {
  $36 = ((($9)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  __ref($37,$37);
  break;
 }
 case 10:  {
  $38 = ((($9)) + 8|0);
  $39 = HEAP8[$38>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $42 = ((($9)) + 4|0);
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   __ref($43,$43);
  }
  break;
 }
 case 11:  {
  $44 = ((($9)) + 4|0);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  __ref($45,$45);
  break;
 }
 case 13:  {
  $46 = ((($9)) + 4|0);
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  __ref($47,$47);
  break;
 }
 case 16:  {
  $48 = ((($9)) + 4|0);
  $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
  __ref($49,$49);
  break;
 }
 case 17:  {
  $50 = ((($9)) + 8|0);
  $51 = HEAP8[$50>>0]|0;
  $52 = $51 & 1;
  $53 = ($52<<24>>24)==(0);
  if ($53) {
   $54 = ((($9)) + 4|0);
   $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
   $56 = ((($55)) + 58|0);
   $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
   $58 = ($57|0)==(2);
   if ($58) {
    __ref($55,$55);
   }
  }
  break;
 }
 default: {
 }
 }
 return;
}
function __create_dict_it($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4391|0),(1578|0),7591,(4396|0));
  // unreachable;
 }
 $3 = (_mb_malloc(30)|0);
 dest=$3; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $4 = ((($3)) + 17|0);
 HEAP8[$4>>0]=$0&255;HEAP8[$4+1>>0]=($0>>8)&255;HEAP8[$4+2>>0]=($0>>16)&255;HEAP8[$4+3>>0]=$0>>24;
 $5 = ((($3)) + 21|0);
 $6 = $1 & 1;
 HEAP8[$5>>0] = $6;
 $7 = ((($3)) + 22|0);
 HEAP8[$7>>0]=0&255;HEAP8[$7+1>>0]=(0>>8)&255;HEAP8[$7+2>>0]=(0>>16)&255;HEAP8[$7+3>>0]=0>>24;
 $8 = ((($3)) + 26|0);
 HEAP8[$8>>0]=(-1)&255;HEAP8[$8+1>>0]=((-1)>>8)&255;HEAP8[$8+2>>0]=((-1)>>16)&255;HEAP8[$8+3>>0]=(-1)>>24;
 $9 = ($1<<24>>24)==(0);
 if ($9) {
  $$pre$phiZ2D = $0;
 } else {
  $10 = ((($0)) + 17|0);
  __lock_ref_object($10,$0,$0);
  $$pre$phiZ2D = $0;
 }
 __weak_ref($$pre$phiZ2D,$3);
 return ($3|0);
}
function __init_class($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 $6 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $6;
 if ($or$cond5) {
  dest=$1; stop=dest+45|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  __create_ref($1,146,16,$0);
  __ref($1,$1);
  $7 = ((($1)) + 17|0);
  HEAP8[$7>>0]=$2&255;HEAP8[$7+1>>0]=($2>>8)&255;HEAP8[$7+2>>0]=($2>>16)&255;HEAP8[$7+3>>0]=$2>>24;
  $8 = (__ls_create()|0);
  $9 = ((($1)) + 25|0);
  HEAP8[$9>>0]=$8&255;HEAP8[$9+1>>0]=($8>>8)&255;HEAP8[$9+2>>0]=($8>>16)&255;HEAP8[$9+3>>0]=$8>>24;
  $10 = (__create_running_context(1)|0);
  $11 = ((($1)) + 29|0);
  HEAP8[$11>>0]=$10&255;HEAP8[$11+1>>0]=($10>>8)&255;HEAP8[$11+2>>0]=($10>>16)&255;HEAP8[$11+3>>0]=$10>>24;
  $12 = ((($1)) + 21|0);
  HEAP8[$12>>0]=$1&255;HEAP8[$12+1>>0]=($1>>8)&255;HEAP8[$12+2>>0]=($1>>16)&255;HEAP8[$12+3>>0]=$1>>24;
  $13 = (__create_var($3,4267,3)|0);
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  HEAP8[$15>>0]=16&255;HEAP8[$15+1>>0]=(16>>8)&255;HEAP8[$15+2>>0]=(16>>16)&255;HEAP8[$15+3>>0]=16>>24;
  $16 = ((($15)) + 4|0);
  HEAP8[$16>>0]=$1&255;HEAP8[$16+1>>0]=($1>>8)&255;HEAP8[$16+2>>0]=($1>>16)&255;HEAP8[$16+3>>0]=$1>>24;
  $17 = ((($13)) + 8|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = $18 & -8;
  $20 = $19 | 5;
  HEAP8[$17>>0] = $20;
  $21 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $22 = ((($21)) + 8|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $25 = HEAP32[$3>>2]|0;
  __ht_set_or_insert($23,$24,$25);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4236|0),(1578|0),8244,(4255|0));
  // unreachable;
 }
}
function __push_scope_by_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),9259,(4170|0));
  // unreachable;
 }
 $3 = (__find_scope($0,$1)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = $1;
 } else {
  $5 = (__reference_scope_by_class($0,$1)|0);
  $$0 = $5;
 }
 $6 = ((($0)) + 75|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 HEAP8[$$0>>0]=$7&255;HEAP8[$$0+1>>0]=($7>>8)&255;HEAP8[$$0+2>>0]=($7>>16)&255;HEAP8[$$0+3>>0]=$7>>24;
 HEAP8[$6>>0]=$$0&255;HEAP8[$6+1>>0]=($$0>>8)&255;HEAP8[$6+2>>0]=($$0>>16)&255;HEAP8[$6+3>>0]=$$0>>24;
 return;
}
function __clone_clsss_field($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($2|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((4112|0),(1578|0),8420,(4122|0));
  // unreachable;
 }
 $5 = (__is_internal_object($0)|0);
 $6 = ($5<<24>>24)==(0);
 L4: do {
  if ($6) {
   $7 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   switch ($7|0) {
   case 9:  {
    $8 = ((($0)) + 4|0);
    $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $10 = ((($9)) + 8|0);
    $11 = HEAP8[$10>>0]|0;
    $12 = $11 & 4;
    $13 = ($12<<24>>24)==(0);
    if (!($13)) {
     break L4;
    }
    $14 = ((($2)) + 29|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $16 = ((($15)) + 8|0);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $18 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $19 = (__ht_find($17,$18)|0);
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     break L4;
    }
    $21 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $22 = (__duplicate_parameter($9,$21)|0);
    $23 = ((($2)) + 13|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ((($22)) + 4|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = ((($26)) + 4|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ((($9)) + 4|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ($31|0)!=(16);
    $33 = $32&1;
    __clone_object($24,$0,$28,0,$33);
    $34 = ((($22)) + 9|0);
    $35 = $34;
    $36 = $35;
    HEAP8[$36>>0]=-1&255;HEAP8[$36+1>>0]=(-1>>8)&255;HEAP8[$36+2>>0]=(-1>>16)&255;HEAP8[$36+3>>0]=-1>>24;
    $37 = (($35) + 4)|0;
    $38 = $37;
    HEAP8[$38>>0]=-1&255;HEAP8[$38+1>>0]=(-1>>8)&255;HEAP8[$38+2>>0]=(-1>>16)&255;HEAP8[$38+3>>0]=-1>>24;
    break L4;
    break;
   }
   case 10:  {
    $39 = ((($0)) + 4|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = ((($2)) + 29|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ((($42)) + 8|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = ((($40)) + 17|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = (__ht_find($44,$46)|0);
    $48 = ($47|0)==(0|0);
    if (!($48)) {
     break L4;
    }
    $49 = (__create_object()|0);
    HEAP8[$49>>0]=10&255;HEAP8[$49+1>>0]=(10>>8)&255;HEAP8[$49+2>>0]=(10>>16)&255;HEAP8[$49+3>>0]=10>>24;
    $50 = ((($49)) + 8|0);
    $51 = HEAP8[$50>>0]|0;
    $52 = $51 & -2;
    HEAP8[$50>>0] = $52;
    $53 = ((($2)) + 13|0);
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    __clone_object($54,$0,$49,0,0);
    $55 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $56 = ((($55)) + 8|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ((($49)) + 4|0);
    $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
    $60 = ((($59)) + 17|0);
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    __ht_set_or_insert($57,$61,$49);
    break L4;
    break;
   }
   case 17:  {
    $62 = ((($0)) + 4|0);
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $64 = ((($2)) + 29|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ((($65)) + 8|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = ((($63)) + 45|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = (__ht_find($67,$69)|0);
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     break L4;
    }
    $72 = (__clone_routine($63,$2,0)|0);
    $73 = (__create_object()|0);
    HEAP8[$73>>0]=17&255;HEAP8[$73+1>>0]=(17>>8)&255;HEAP8[$73+2>>0]=(17>>16)&255;HEAP8[$73+3>>0]=17>>24;
    $74 = ((($73)) + 4|0);
    HEAP8[$74>>0]=$72&255;HEAP8[$74+1>>0]=($72>>8)&255;HEAP8[$74+2>>0]=($72>>16)&255;HEAP8[$74+3>>0]=$72>>24;
    $75 = ((($73)) + 8|0);
    $76 = HEAP8[$75>>0]|0;
    $77 = $76 & -2;
    HEAP8[$75>>0] = $77;
    $78 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $79 = ((($78)) + 8|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $82 = ((($81)) + 45|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    __ht_set_or_insert($80,$83,$73);
    break L4;
    break;
   }
   default: {
    break L4;
   }
   }
  }
 } while(0);
 return 0;
}
function __clone_class_meta_link($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if ($or$cond) {
  $5 = ((($1)) + 13|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  __link_meta_class($6,$1,$0);
  return 1;
 } else {
  ___assert_fail((4041|0),(1578|0),8481,(4051|0));
  // unreachable;
 }
 return (0)|0;
}
function __search_class_hash_and_compare_functions($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((3945|0),(1578|0),8510,(3959|0));
  // unreachable;
 }
 $4 = ((($1)) + 33|0);
 __search_class_meta_function($0,$1,4000,$4);
 $5 = ((($1)) + 37|0);
 __search_class_meta_function($0,$1,4005,$5);
 $6 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 $8 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $9 = ($8|0)==(0|0);
 if ($7) {
  if ($9) {
   $$0 = 0;
  } else {
   label = 6;
  }
 } else {
  if ($9) {
   label = 6;
  } else {
   $$0 = 0;
  }
 }
 if ((label|0) == 6) {
  HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
  HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
  $$0 = 2;
 }
 return ($$0|0);
}
function __pop_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),9375,(3934|0));
  // unreachable;
 }
 $3 = ((($0)) + 75|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 HEAP8[$3>>0]=$5&255;HEAP8[$3+1>>0]=($5>>8)&255;HEAP8[$3+2>>0]=($5>>16)&255;HEAP8[$3+3>>0]=$5>>24;
 HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
 $6 = ((($4)) + 4|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(2);
 if ($8) {
  __destroy_scope($4);
 } else {
  $9 = ($1<<24>>24)==(0);
  if (!($9)) {
   __out_of_scope($0,$4,0,1);
  }
 }
 return;
}
function __clone_routine($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((3915|0),(1578|0),8832,(3919|0));
  // unreachable;
 }
 $4 = ($2<<24>>24)==(0);
 if ($4) {
  $5 = ((($0)) + 58|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(2);
  if ($7) {
   $$1 = $0;
  } else {
   $8 = (_mb_malloc(62)|0);
   dest=$8; stop=dest+62|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   $9 = ((($0)) + 45|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ((($8)) + 45|0);
   HEAP8[$11>>0]=$10&255;HEAP8[$11+1>>0]=($10>>8)&255;HEAP8[$11+2>>0]=($10>>16)&255;HEAP8[$11+3>>0]=$10>>24;
   $12 = ((($0)) + 49|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ((($8)) + 49|0);
   HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
   $15 = ((($8)) + 53|0);
   HEAP8[$15>>0]=$1&255;HEAP8[$15+1>>0]=($1>>8)&255;HEAP8[$15+2>>0]=($1>>16)&255;HEAP8[$15+3>>0]=$1>>24;
   $16 = ((($8)) + 57|0);
   HEAP8[$16>>0] = 1;
   $17 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $18 = ((($8)) + 58|0);
   HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
   dest=$8; src=$0; stop=dest+45|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $$1 = $8;
  }
 } else {
  $$1 = $0;
 }
 return ($$1|0);
}
function __search_class_meta_function($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$not2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 if ($4) {
  ___assert_fail((1649|0),(1578|0),8492,(4013|0));
  // unreachable;
 }
 $5 = (__search_identifier_in_class($0,$1,$2,0,0)|0);
 $6 = ($3|0)!=(0|0);
 if ($6) {
  HEAP32[$3>>2] = 0;
 }
 $7 = ($5|0)==(0|0);
 if (!($7)) {
  $8 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $11 = ($10|0)!=(17);
   $$not2 = $6 ^ 1;
   $brmerge = $11 | $$not2;
   if (!($brmerge)) {
    $12 = ((($8)) + 4|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    HEAP32[$3>>2] = $13;
   }
  }
 }
 return;
}
function __link_meta_class($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $$sink4 = 0, $$sink9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if (!($or$cond5)) {
  ___assert_fail((4074|0),(1578|0),8374,(4095|0));
  // unreachable;
 }
 $6 = ((($1)) + 25|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__ls_find($7,$2,126,0)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $52 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  (__ls_pushback($52,$2)|0);
  __ref($2,$2);
 } else {
  $10 = ((($0)) + 67|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  (__set_current_error($0,54,$11)|0);
  $12 = ((($0)) + 159|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = ($13|0)==(0|0);
  if (!($14)) {
   $15 = ((($0)) + 134|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $19 = $16 | 1;
    HEAP8[$15>>0] = $19;
    $20 = ((($0)) + 135|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (_mb_get_error_desc($21)|0);
    $23 = ((($0)) + 139|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ((($0)) + 71|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = ($26|0)==(0|0);
    if ($27) {
     $28 = ((($0)) + 143|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = ((($0)) + 147|0);
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
     $53 = $31;$54 = $29;
     label = 10;
    } else {
     $32 = ((($0)) + 79|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = ($33|0)==(0);
     $35 = ((($0)) + 143|0);
     $36 = ((($26)) + 164|0);
     $$sink = $34 ? $36 : $35;
     $37 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
     $38 = ((($0)) + 79|0);
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $40 = ($39|0)==(0);
     $41 = ((($0)) + 147|0);
     $42 = ((($26)) + 168|0);
     $$sink4 = $40 ? $42 : $41;
     $43 = HEAPU8[$$sink4>>0]|(HEAPU8[$$sink4+1>>0]<<8);
     $44 = ((($0)) + 79|0);
     $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
     $46 = ($45|0)==(0);
     if ($46) {
      $47 = ((($26)) + 170|0);
      $$sink9 = $47;$50 = $37;$51 = $43;
     } else {
      $53 = $43;$54 = $37;
      label = 10;
     }
    }
    if ((label|0) == 10) {
     $48 = ((($0)) + 149|0);
     $$sink9 = $48;$50 = $54;$51 = $53;
    }
    $49 = HEAPU8[$$sink9>>0]|(HEAPU8[$$sink9+1>>0]<<8);
    FUNCTION_TABLE_viiiiiiii[$13 & 127]($0,$21,$22,$24,$50,$51,$49,3);
   }
  }
 }
 return;
}
function __duplicate_parameter($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($1|0)==(0|0);
 if ($3) {
  ___assert_fail((4141|0),(1578|0),8809,(4149|0));
  // unreachable;
 }
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$0 = 0;
 } else {
  $5 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  $6 = (__create_var($2,$5,0)|0);
  $7 = ((($1)) + 8|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $10 = HEAP32[$2>>2]|0;
  __ht_set_or_insert($8,$9,$10);
  $11 = HEAP32[$2>>2]|0;
  $$0 = $11;
 }
 STACKTOP = sp;return ($$0|0);
}
function __find_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $$014 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),9428,(4224|0));
  // unreachable;
 }
 $3 = ((($0)) + 75|0);
 $$012 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $4 = ($$012|0)==(0|0);
 $5 = ($$012|0)==($1|0);
 $or$cond13 = $4 | $5;
 L4: do {
  if ($or$cond13) {
   $$011 = $$012;
  } else {
   $$014 = $$012;
   while(1) {
    $6 = ((($$014)) + 12|0);
    $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
    $8 = ($7|0)==($1|0);
    if ($8) {
     $$011 = $1;
     break L4;
    }
    $$0 = HEAPU8[$$014>>0]|(HEAPU8[$$014+1>>0]<<8)|(HEAPU8[$$014+2>>0]<<16)|(HEAPU8[$$014+3>>0]<<24);
    $9 = ($$0|0)==(0|0);
    $10 = ($$0|0)==($1|0);
    $or$cond = $9 | $10;
    if ($or$cond) {
     $$011 = $$0;
     break;
    } else {
     $$014 = $$0;
    }
   }
  }
 } while(0);
 return ($$011|0);
}
function __reference_scope_by_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((4191|0),(1578|0),9245,(4198|0));
  // unreachable;
 }
 $4 = ((($1)) + 4|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(2);
 if ($6) {
  $7 = ((($1)) + 12|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $$0 = $8;
 } else {
  $$0 = $1;
 }
 $9 = (__create_running_context(0)|0);
 $10 = ((($9)) + 4|0);
 HEAP8[$10>>0]=2&255;HEAP8[$10+1>>0]=(2>>8)&255;HEAP8[$10+2>>0]=(2>>16)&255;HEAP8[$10+3>>0]=2>>24;
 $11 = ((($9)) + 12|0);
 HEAP8[$11>>0]=$$0&255;HEAP8[$11+1>>0]=($$0>>8)&255;HEAP8[$11+2>>0]=($$0>>16)&255;HEAP8[$11+3>>0]=$$0>>24;
 return ($9|0);
}
function __unref_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),8297,(4274|0));
  // unreachable;
 }
 $3 = ((($0)) + 13|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ((($4)) + 12|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if (!($8)) {
  $9 = ((($1)) + 29|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  __out_of_scope($4,$10,$1,0);
 }
 $11 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(1);
 if ($13) {
  __destroy_class($1);
 }
 return;
}
function __create_ref($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_mb_get_forked_from($3,$4)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   while(1) {
    $9 = HEAP32[$4>>2]|0;
    $10 = (_mb_get_forked_from($9,$4)|0);
    $11 = ($10|0)==(0);
    if (!($11)) {
     $$0$lcssa = $9;
     break;
    }
   }
  } else {
   $$0$lcssa = $3;
  }
  $12 = (_mb_malloc(4)|0);
  HEAP8[$0>>0]=$12&255;HEAP8[$0+1>>0]=($12>>8)&255;HEAP8[$0+2>>0]=($12>>16)&255;HEAP8[$0+3>>0]=$12>>24;
  HEAP32[$12>>2] = 1;
  $13 = (_mb_malloc(4)|0);
  $14 = ((($0)) + 4|0);
  HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
  HEAP32[$13>>2] = 1;
  $15 = ((($0)) + 8|0);
  HEAP8[$15>>0]=$1&255;HEAP8[$15+1>>0]=($1>>8)&255;HEAP8[$15+2>>0]=($1>>16)&255;HEAP8[$15+3>>0]=$1>>24;
  $16 = ((($0)) + 12|0);
  $17 = $2&255;
  HEAP8[$16>>0] = $17;
  $18 = ((($0)) + 13|0);
  HEAP8[$18>>0]=$$0$lcssa&255;HEAP8[$18+1>>0]=($$0$lcssa>>8)&255;HEAP8[$18+2>>0]=($$0$lcssa>>16)&255;HEAP8[$18+3>>0]=$$0$lcssa>>24;
 }
 STACKTOP = sp;return;
}
function __destroy_class($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((3239|0),(1578|0),8308,(4287|0));
  // unreachable;
 }
 $2 = ((($0)) + 25|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($0)) + 13|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  __unlink_meta_class($6,$0);
  $7 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  __ls_destroy($7);
 }
 $8 = ((($0)) + 29|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($9)) + 8|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)==(0|0);
 if ($12) {
  $17 = $9;
 } else {
  __ht_foreach($11,135);
  $13 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $14 = ((($13)) + 8|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  __ht_destroy($15);
  $$pre = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $17 = $$pre;
 }
 $16 = ((($17)) + 32|0);
 $18 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $19 = ($18|0)==(0|0);
 if ($19) {
  $22 = $17;
 } else {
  __ls_destroy($18);
  $20 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $21 = ((($20)) + 32|0);
  HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
  $22 = $20;
 }
 $23 = ($22|0)==(0|0);
 if ($23) {
  ___assert_fail((1713|0),(1578|0),8324,(4287|0));
  // unreachable;
 }
 _mb_free($22);
 HEAP8[$8>>0]=0&255;HEAP8[$8+1>>0]=(0>>8)&255;HEAP8[$8+2>>0]=(0>>16)&255;HEAP8[$8+3>>0]=0>>24;
 __destroy_ref($0);
 $24 = ((($0)) + 17|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)==(0|0);
 if ($26) {
  ___assert_fail((1713|0),(1578|0),8326,(4287|0));
  // unreachable;
 } else {
  _mb_free($25);
  HEAP8[$24>>0]=0&255;HEAP8[$24+1>>0]=(0>>8)&255;HEAP8[$24+2>>0]=(0>>16)&255;HEAP8[$24+3>>0]=0>>24;
  _mb_free($0);
  return;
 }
}
function __unlink_meta_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$0$in32 = 0, $$033 = 0, $$034 = 0, $$pre = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((4302|0),(1578|0),8390,(4315|0));
  // unreachable;
 }
 $4 = ((($1)) + 25|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 if ($6) {
  ___assert_fail((4334|0),(1578|0),8392,(4315|0));
  // unreachable;
 }
 $$0$in32 = ((($5)) + 8|0);
 $$033 = HEAPU8[$$0$in32>>0]|(HEAPU8[$$0$in32+1>>0]<<8)|(HEAPU8[$$0$in32+2>>0]<<16)|(HEAPU8[$$0$in32+3>>0]<<24);
 $7 = ($$033|0)==(0|0);
 if ($7) {
  $10 = $5;
 } else {
  $$034 = $$033;
  while(1) {
   $8 = HEAPU8[$$034>>0]|(HEAPU8[$$034+1>>0]<<8)|(HEAPU8[$$034+2>>0]<<16)|(HEAPU8[$$034+3>>0]<<24);
   __unlink_meta_instance($8,$1);
   $$0$in = ((($$034)) + 8|0);
   $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
   $9 = ($$0|0)==(0|0);
   if ($9) {
    break;
   } else {
    $$034 = $$0;
   }
  }
  $$pre = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $10 = $$pre;
 }
 __ls_clear($10);
 return;
}
function __unlink_meta_instance($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  __unref($0,$0);
  return;
 } else {
  ___assert_fail((4353|0),(1578|0),8401,(4369|0));
  // unreachable;
 }
}
function __lock_ref_object($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((2871|0),(1578|0),6230,(4502|0));
  // unreachable;
 } else {
  __ref($1,$2);
  $4 = HEAP16[$0>>1]|0;
  $5 = ($4<<16>>16) >> 15;
  $6 = $5 | 1;
  $7 = (($6) + ($4))<<16>>16;
  HEAP16[$0>>1] = $7;
  return;
 }
}
function __weak_ref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 $6 = ($4|0)==(-1);
 if ($6) {
  ___assert_fail((4412|0),(1578|0),6358,(4492|0));
  // unreachable;
 } else {
  dest=$1; src=$0; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  return;
 }
}
function __set_dict($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 4|0;
 $6 = sp;
 HEAP32[$5>>2] = $3;
 HEAP32[$6>>2] = $4;
 $7 = ($0|0)==(0|0);
 if (!($7)) {
  $8 = ($1|0)!=(0|0);
  $9 = ($3|0)!=(0|0);
  $or$cond3 = $8 | $9;
  if ($or$cond3) {
   $10 = ($2|0)!=(0|0);
   $11 = ($4|0)!=(0|0);
   $or$cond5 = $10 | $11;
   if ($or$cond5) {
    $12 = ((($0)) + 13|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $14 = (__try_purge_it($13,$1,$3)|0);
    $15 = ($14<<24>>24)==(0);
    if ($15) {
     $16 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $17 = (__try_purge_it($16,$2,$4)|0);
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $19 = ($1|0)==(0|0);
      $or$cond7 = $19 | $9;
      if ($or$cond7) {
       $21 = $4;
      } else {
       __create_internal_object_from_public_value($1,$5);
       $$pre = HEAP32[$6>>2]|0;
       $21 = $$pre;
      }
      $20 = ($2|0)==(0|0);
      $22 = ($21|0)!=(0|0);
      $or$cond9 = $20 | $22;
      if (!($or$cond9)) {
       __create_internal_object_from_public_value($2,$6);
      }
      $23 = ((($0)) + 19|0);
      $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
      $25 = HEAP32[$5>>2]|0;
      $26 = (__ht_find($24,$25)|0);
      $27 = ($26|0)==(0|0);
      if (!($27)) {
       $28 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $29 = HEAP32[$5>>2]|0;
       (__ht_remove($28,$29,147)|0);
      }
      $30 = HEAP32[$5>>2]|0;
      $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
      $32 = ($31|0)==(17);
      if ($32) {
       $33 = ((($30)) + 4|0);
       $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
       $35 = ((($34)) + 58|0);
       $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
       $37 = ($36|0)==(2);
       if (!($37)) {
        $38 = ((($30)) + 8|0);
        $39 = HEAP8[$38>>0]|0;
        $40 = $39 | 1;
        HEAP8[$38>>0] = $40;
       }
      }
      $41 = HEAP32[$6>>2]|0;
      $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
      $43 = ($42|0)==(17);
      if ($43) {
       $44 = ((($41)) + 4|0);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $46 = ((($45)) + 58|0);
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       $48 = ($47|0)==(2);
       if (!($48)) {
        $49 = ((($41)) + 8|0);
        $50 = HEAP8[$49>>0]|0;
        $51 = $50 | 1;
        HEAP8[$49>>0] = $51;
       }
      }
      $52 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
      __ht_set_or_insert($52,$30,$41);
      $53 = ((($0)) + 17|0);
      __write_on_ref_object($53);
      $$0 = 1;
     } else {
      $$0 = 0;
     }
    } else {
     $$0 = 0;
    }
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 ___assert_fail((4556|0),(1578|0),7973,(4595|0));
 // unreachable;
 return (0)|0;
}
function __create_internal_object_from_public_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((3336|0),(1578|0),10444,(4626|0));
  // unreachable;
 }
 $4 = (__create_object()|0);
 HEAP32[$1>>2] = $4;
 (__public_value_to_internal_object($0,$4)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)==(4);
 if ($7) {
  $8 = ((($5)) + 8|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = $9 & -2;
  HEAP8[$8>>0] = $10;
  $11 = HEAP32[$1>>2]|0;
  $12 = ((($11)) + 4|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = (_strlen($13)|0);
  $15 = (($14) + 1)|0;
  $16 = (_mb_strdup($13,$15)|0);
  $17 = HEAP32[$1>>2]|0;
  $18 = ((($17)) + 4|0);
  HEAP8[$18>>0]=$16&255;HEAP8[$18+1>>0]=($16>>8)&255;HEAP8[$18+2>>0]=($16>>16)&255;HEAP8[$18+3>>0]=$16>>24;
 }
 return;
}
function __ls_cmp_extra_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = (__ht_cmp_object($3,$1)|0);
 return ($4|0);
}
function __write_on_ref_object($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2871|0),(1578|0),6264,(4605|0));
  // unreachable;
 }
 $2 = HEAP16[$0>>1]|0;
 $3 = ($2<<16>>16)>(0);
 if ($3) {
  $4 = $2&65535;
  $5 = (0 - ($4))|0;
  $6 = $5&65535;
  HEAP16[$0>>1] = $6;
 }
 return;
}
function __ht_cmp_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$07581 = 0, $$07680 = 0, $$07784 = 0, $$1 = 0, $$79 = 0, $$v = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 12|0;
 $3 = sp + 32|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $7 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $8 = ($6|0)<($7|0);
 L1: do {
  if ($8) {
   $$1 = -1;
  } else {
   $9 = ($6|0)>($7|0);
   if ($9) {
    $$1 = 1;
   } else {
    L4: do {
     switch ($6|0) {
     case 4:  {
      $12 = ((($0)) + 4|0);
      $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
      $14 = ((($1)) + 4|0);
      $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
      $16 = (__ht_cmp_string($13,$15)|0);
      $$1 = $16;
      break L1;
      break;
     }
     case 16:  {
      $17 = ((($0)) + 4|0);
      $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
      $19 = ((($18)) + 37|0);
      $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
      $21 = ($20|0)==(0|0);
      if ($21) {
       $22 = ((($1)) + 4|0);
       $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
       $24 = ((($23)) + 37|0);
       $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
       $26 = ($25|0)==(0|0);
       $$79 = $26&1;
       if ($26) {
        break L4;
       } else {
        $$07581 = $$79;$$07680 = $25;
       }
      } else {
       $$07581 = 1;$$07680 = $20;
      }
      $27 = ((($18)) + 13|0);
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      HEAP32[$4>>2] = $3;
      $29 = ((($5)) + 4|0);
      HEAP32[$29>>2] = 0;
      HEAP32[$5>>2] = 0;
      $30 = ($$07581|0)!=(0);
      $$v = $30 ? $1 : $0;
      (__internal_object_to_public_value($$v,$5)|0);
      dest=$3; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $31 = (__eval_routine($28,$4,$5,1,$$07680,148,149)|0);
      $32 = ($31|0)==(0);
      if (!($32)) {
       break L4;
      }
      $33 = ((($28)) + 75|0);
      ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP8[$2+16>>0]=0|0;
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
      $35 = ((($34)) + 20|0);
      (__public_value_to_internal_object($35,$2)|0);
      $36 = HEAP32[$2>>2]|0;
      $37 = ($36|0)==(2);
      if ($37) {
       $48 = ((($2)) + 4|0);
       $49 = HEAP32[$48>>2]|0;
       $50 = (0 - ($49))|0;
       $51 = $30 ? $49 : $50;
       $$1 = $51;
       break L1;
      }
      $38 = ((($28)) + 67|0);
      $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $40 = (__set_current_error($28,15,$39)|0);
      $41 = ($40<<24>>24)==(0);
      if (!($41)) {
       $42 = ((($0)) + 9|0);
       $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
       $44 = ((($0)) + 13|0);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8);
       $46 = ((($0)) + 15|0);
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8);
       __set_error_pos($28,$43,$45,$47);
      }
      $$1 = 0;
      break L1;
      break;
     }
     case 7:  {
      $52 = ((($0)) + 4|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = ((($53)) + 33|0);
      $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
      $56 = ($55|0)==(0|0);
      if (!($56)) {
       $57 = ((($53)) + 13|0);
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = ((($53)) + 17|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
       $61 = ((($1)) + 4|0);
       $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
       $63 = ((($62)) + 17|0);
       $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
       $65 = (FUNCTION_TABLE_iiii[$55 & 255]($58,$60,$64)|0);
       $$1 = $65;
       break L1;
      }
      $66 = ((($1)) + 4|0);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = ((($67)) + 33|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $70 = ($69|0)==(0|0);
      if (!($70)) {
       $71 = ((($53)) + 13|0);
       $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
       $73 = ((($53)) + 17|0);
       $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $75 = ((($67)) + 17|0);
       $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
       $77 = (FUNCTION_TABLE_iiii[$69 & 255]($72,$74,$76)|0);
       $$1 = $77;
       break L1;
      }
      break;
     }
     default: {
     }
     }
    } while(0);
    $10 = ((($1)) + 4|0);
    $11 = ((($0)) + 4|0);
    $$07784 = 3;
    while(1) {
     $80 = (($11) + ($$07784)|0);
     $81 = HEAP8[$80>>0]|0;
     $82 = (($10) + ($$07784)|0);
     $83 = HEAP8[$82>>0]|0;
     $84 = ($81&255)<($83&255);
     if ($84) {
      $$1 = -1;
      break L1;
     }
     $85 = ($81&255)>($83&255);
     if ($85) {
      $$1 = 1;
      break L1;
     }
     $78 = (($$07784) + -1)|0;
     $79 = ($$07784|0)>(0);
     if ($79) {
      $$07784 = $78;
     } else {
      $$1 = 0;
      break;
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __has_routine_fun_arg($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$4>>2]|0;
 $7 = ($6>>>0)<($3>>>0);
 $8 = $7&1;
 return ($8|0);
}
function __pop_routine_fun_arg($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = HEAP32[$4>>2]|0;
 $8 = (($2) + ($7<<3)|0);
 $9 = $8;
 $10 = $9;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = $6;
 $16 = $15;
 HEAP8[$16>>0]=$11&255;HEAP8[$16+1>>0]=($11>>8)&255;HEAP8[$16+2>>0]=($11>>16)&255;HEAP8[$16+3>>0]=$11>>24;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP8[$18>>0]=$14&255;HEAP8[$18+1>>0]=($14>>8)&255;HEAP8[$18+2>>0]=($14>>16)&255;HEAP8[$18+3>>0]=$14>>24;
 $19 = HEAP32[$4>>2]|0;
 $20 = (($19) + 1)|0;
 HEAP32[$4>>2] = $20;
 return 0;
}
function __ht_hash_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$056 = 0, $$05763 = 0, $$05862 = 0, $$160$ph = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 12|0;
 $3 = sp + 32|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($0|0)==(0|0);
 if ($6) {
  ___assert_fail((2281|0),(1578|0),2750,(4734|0));
  // unreachable;
 }
 $7 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 L4: do {
  switch ($7|0) {
  case 4:  {
   $8 = ((($1)) + 4|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = (__ht_hash_string($0,$9)|0);
   $11 = ((($0)) + 12|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ($12|0)==(1);
   if ($13) {
    $$056 = 0;
   } else {
    $14 = (($10) + 20)|0;
    $15 = (($14>>>0) % ($12>>>0))&-1;
    $$056 = $15;
   }
   break;
  }
  case 16:  {
   $16 = ((($1)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ((($17)) + 33|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ($19|0)==(0|0);
   if ($20) {
    $$2 = $1;
    label = 16;
   } else {
    $21 = ((($17)) + 13|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    HEAP32[$4>>2] = $3;
    $23 = ((($5)) + 4|0);
    HEAP32[$23>>2] = 0;
    HEAP32[$5>>2] = 0;
    dest=$3; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $24 = (__eval_routine($22,$4,$5,1,$19,148,149)|0);
    $25 = ($24|0)==(0);
    if ($25) {
     $26 = ((($22)) + 75|0);
     ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP8[$2+16>>0]=0|0;
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($27)) + 20|0);
     (__public_value_to_internal_object($28,$2)|0);
     $29 = HEAP32[$2>>2]|0;
     $30 = ($29|0)==(2);
     if ($30) {
      $$160$ph = $2;
     } else {
      $31 = ((($22)) + 67|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
      $33 = (__set_current_error($22,15,$32)|0);
      $34 = ($33<<24>>24)==(0);
      if (!($34)) {
       $35 = ((($1)) + 9|0);
       $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
       $37 = ((($1)) + 13|0);
       $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
       $39 = ((($1)) + 15|0);
       $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
       __set_error_pos($22,$36,$38,$40);
      }
      $$056 = 0;
      break L4;
     }
    } else {
     $$160$ph = $1;
    }
    $$2 = $$160$ph;
    label = 16;
   }
   break;
  }
  case 7:  {
   $41 = ((($1)) + 4|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = ((($42)) + 29|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ($44|0)==(0|0);
   if ($45) {
    $$2 = $1;
    label = 16;
   } else {
    $46 = ((($0)) + 12|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ($47|0)==(1);
    if ($48) {
     $$056 = 0;
    } else {
     $49 = ((($42)) + 13|0);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     $51 = ((($42)) + 17|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = (FUNCTION_TABLE_iii[$44 & 255]($50,$52)|0);
     $54 = (($53) + 35)|0;
     $55 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $56 = (($54>>>0) % ($55>>>0))&-1;
     $$056 = $56;
    }
   }
   break;
  }
  default: {
   $$2 = $1;
   label = 16;
  }
  }
 } while(0);
 if ((label|0) == 16) {
  $57 = ((($0)) + 12|0);
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  $59 = ($58|0)==(1);
  if ($59) {
   $$056 = 0;
  } else {
   $60 = ((($$2)) + 4|0);
   $$05763 = $7;$$05862 = 0;
   while(1) {
    $61 = ($$05763*5)|0;
    $62 = (($60) + ($$05862)|0);
    $63 = HEAP8[$62>>0]|0;
    $64 = $63&255;
    $65 = (($61) + ($64))|0;
    $66 = (($$05862) + 1)|0;
    $exitcond = ($66|0)==(4);
    if ($exitcond) {
     break;
    } else {
     $$05763 = $65;$$05862 = $66;
    }
   }
   $67 = (($65>>>0) % ($58>>>0))&-1;
   $$056 = $67;
  }
 }
 STACKTOP = sp;return ($$056|0);
}
function __destroy_object_with_extra($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),9980,(4707|0));
  // unreachable;
 }
 $3 = (__dispose_object($0)|0);
 $4 = ($3|0)==(0);
 do {
  if (!($4)) {
   _mb_free($0);
   $5 = (__dispose_object($1)|0);
   $6 = ($5|0)==(0);
   if (!($6)) {
    $7 = ($1|0)==(0|0);
    if ($7) {
     ___assert_fail((1713|0),(1578|0),9989,(4707|0));
     // unreachable;
    } else {
     _mb_free($1);
     break;
    }
   }
  }
 } while(0);
 return -1;
}
function __unref_dict($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),7664,(4681|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 if ($5) {
  __destroy_dict($1);
 }
 return;
}
function __destroy_dict($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((3239|0),(1578|0),7509,(4693|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 19|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  __ht_foreach($3,144);
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  __ht_destroy($4);
  __destroy_ref($0);
  _mb_free($0);
  return;
 }
}
function __fill_ranged($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 HEAP32[$1>>2] = 0;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((4391|0),(1578|0),7947,(4850|0));
  // unreachable;
 }
 $4 = ((($0)) + 35|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 do {
  if (!($6)) {
   $7 = HEAP32[$5>>2]|0;
   $8 = ((($0)) + 31|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = (($9) + ($7))|0;
   $11 = ($9|0)==(0);
   $12 = ($9|0)>(0);
   $13 = $12 ? 1 : -1;
   $14 = $11 ? 0 : $13;
   $15 = ((($2)) + 4|0);
   $16 = ((($0)) + 19|0);
   $$0 = $7;
   while(1) {
    HEAP32[$15>>2] = $$0;
    HEAP32[$2>>2] = 2;
    __create_internal_object_from_public_value($2,$1);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $18 = HEAP32[$1>>2]|0;
    (__ls_pushback($17,$18)|0);
    $19 = (($$0) + ($14))|0;
    $20 = ($19|0)==($10|0);
    if ($20) {
     break;
    } else {
     $$0 = $19;
    }
   }
   $21 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $22 = ($21|0)==(0|0);
   if ($22) {
    ___assert_fail((1713|0),(1578|0),7962,(4850|0));
    // unreachable;
   } else {
    _mb_free($21);
    HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
    $23 = ((($0)) + 17|0);
    __write_on_ref_object($23);
    __invalidate_list_cache($0);
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __push_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$in = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $2;
 $4 = ($0|0)==(0|0);
 if (!($4)) {
  $5 = ($1|0)!=(0|0);
  $6 = ($2|0)!=(0|0);
  $or$cond = $5 | $6;
  if ($or$cond) {
   $7 = ((($0)) + 13|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = (__try_purge_it($8,$1,$2)|0);
   $10 = ($9<<24>>24)==(0);
   if ($10) {
    __fill_ranged($0);
    $11 = ($1|0)==(0|0);
    $or$cond3 = $11 | $6;
    if ($or$cond3) {
     $$in = $2;
    } else {
     __create_internal_object_from_public_value($1,$3);
     $$pre = HEAP32[$3>>2]|0;
     $$in = $$pre;
    }
    $12 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8)|(HEAPU8[$$in+2>>0]<<16)|(HEAPU8[$$in+3>>0]<<24);
    $13 = ($12|0)==(17);
    if ($13) {
     $14 = ((($$in)) + 4|0);
     $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
     $16 = ((($15)) + 58|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     $18 = ($17|0)==(2);
     if (!($18)) {
      $19 = ((($$in)) + 8|0);
      $20 = HEAP8[$19>>0]|0;
      $21 = $20 | 1;
      HEAP8[$19>>0] = $21;
     }
    }
    $22 = ((($0)) + 19|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    (__ls_pushback($23,$$in)|0);
    $24 = ((($0)) + 31|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = (($25) + 1)|0;
    HEAP8[$24>>0]=$26&255;HEAP8[$24+1>>0]=($26>>8)&255;HEAP8[$24+2>>0]=($26>>16)&255;HEAP8[$24+3>>0]=$26>>24;
    $27 = ((($0)) + 17|0);
    __write_on_ref_object($27);
    __invalidate_list_cache($0);
    $$0 = 1;
   } else {
    $$0 = 0;
   }
   STACKTOP = sp;return ($$0|0);
  }
 }
 ___assert_fail((4794|0),(1578|0),7672,(4816|0));
 // unreachable;
 return (0)|0;
}
function __invalidate_list_cache($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((4391|0),(1578|0),7937,(4827|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 23|0);
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
  $3 = ((($0)) + 27|0);
  HEAP8[$3>>0]=0&255;HEAP8[$3+1>>0]=(0>>8)&255;HEAP8[$3+2>>0]=(0>>16)&255;HEAP8[$3+3>>0]=0>>24;
  return;
 }
}
function __unref_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),7656,(4876|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 if ($5) {
  __destroy_list($1);
 }
 return;
}
function __destroy_list($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((3239|0),(1578|0),7484,(4888|0));
  // unreachable;
 }
 $2 = ((($0)) + 35|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  _mb_free($3);
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 }
 $5 = ((($0)) + 19|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 (__ls_foreach($6,135)|0);
 $7 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 __ls_destroy($7);
 __destroy_ref($0);
 _mb_free($0);
 return;
}
function __create_array($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1649|0),(1578|0),7101,(5089|0));
  // unreachable;
 } else {
  $4 = (_mb_malloc(50)|0);
  dest=$4; stop=dest+50|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $5 = ((($4)) + 21|0);
  HEAP8[$5>>0]=$2&255;HEAP8[$5+1>>0]=($2>>8)&255;HEAP8[$5+2>>0]=($2>>16)&255;HEAP8[$5+3>>0]=$2>>24;
  $6 = ((($4)) + 17|0);
  HEAP8[$6>>0]=$1&255;HEAP8[$6+1>>0]=($1>>8)&255;HEAP8[$6+2>>0]=($1>>16)&255;HEAP8[$6+3>>0]=$1>>24;
  __create_ref($4,150,10,$0);
  __ref($4,$4);
  return ($4|0);
 }
 return (0)|0;
}
function __init_array($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((5048|0),(1578|0),7140,(5052|0));
  // unreachable;
 }
 $2 = ((($0)) + 21|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 __get_size_of($3);
 $4 = ((($0)) + 29|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0);
 if ($6) {
  ___assert_fail((5064|0),(1578|0),7147,(5052|0));
  // unreachable;
 }
 $7 = ((($0)) + 25|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  ___assert_fail((5079|0),(1578|0),7148,(5052|0));
  // unreachable;
 }
 $10 = $5 << 2;
 $11 = (_mb_malloc($10)|0);
 HEAP8[$7>>0]=$11&255;HEAP8[$7+1>>0]=($11>>8)&255;HEAP8[$7+2>>0]=($11>>16)&255;HEAP8[$7+3>>0]=$11>>24;
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $14 = $13 << 2;
  _memset(($11|0),0,($14|0))|0;
 }
 return;
}
function __get_array_elem($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond9 = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 $7 = ($3|0)!=(0|0);
 $or$cond3 = $or$cond & $7;
 $8 = ($4|0)!=(0|0);
 $or$cond9 = $or$cond3 & $8;
 if (!($or$cond9)) {
  ___assert_fail((5008|0),(1578|0),7308,(5032|0));
  // unreachable;
 }
 $9 = ((($1)) + 29|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10>>>0)>($2>>>0);
 if (!($11)) {
  ___assert_fail((4956|0),(1578|0),7309,(5032|0));
  // unreachable;
 }
 $12 = ((($1)) + 21|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 __get_size_of($13);
 $14 = $2 << 2;
 $15 = ((($1)) + 25|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = (($16) + ($14))|0;
 $18 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 switch ($18|0) {
 case 3:  {
  $storemerge = 3;
  break;
 }
 case 4:  {
  $storemerge = 4;
  break;
 }
 default: {
  ___assert_fail((4975|0),(1578|0),7326,(5032|0));
  // unreachable;
 }
 }
 $19 = $17;
 $20 = HEAP32[$19>>2]|0;
 HEAP8[$3>>0]=$20&255;HEAP8[$3+1>>0]=($20>>8)&255;HEAP8[$3+2>>0]=($20>>16)&255;HEAP8[$3+3>>0]=$20>>24;
 HEAP32[$4>>2] = $storemerge;
 return;
}
function __set_array_elem($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$059 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($0|0)!=(0|0);
 $7 = ($2|0)!=(0|0);
 $or$cond = $6 & $7;
 $8 = ($4|0)!=(0|0);
 $or$cond5 = $or$cond & $8;
 if (!($or$cond5)) {
  ___assert_fail((4924|0),(1578|0),7340,(4940|0));
  // unreachable;
 }
 $9 = ((($2)) + 29|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10>>>0)>($3>>>0);
 if (!($11)) {
  ___assert_fail((4956|0),(1578|0),7341,(4940|0));
  // unreachable;
 }
 $12 = ((($2)) + 21|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 __get_size_of($13);
 $14 = $3 << 2;
 $15 = ((($2)) + 25|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = (($16) + ($14))|0;
 $18 = HEAP32[$5>>2]|0;
 L7: do {
  switch ($18|0) {
  case 2:  {
   $19 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $20 = (+($19|0));
   $21 = $17;
   HEAPF32[$21>>2] = $20;
   $$059 = 0;
   break;
  }
  case 3:  {
   $22 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $23 = $17;
   HEAP32[$23>>2] = $22;
   $$059 = 0;
   break;
  }
  case 4:  {
   $24 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $25 = ($24|0)==(4);
   if ($25) {
    $44 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    $45 = (_strlen($44)|0);
    $46 = (($45) + 1)|0;
    $47 = (_mb_malloc($46)|0);
    $48 = $17;
    HEAP32[$48>>2] = $47;
    $49 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    _memcpy(($47|0),($49|0),($46|0))|0;
    $$059 = 0;
    break L7;
   }
   $26 = ($1|0)==(0|0);
   if (!($26)) {
    $27 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
    $28 = ($27|0)==(0|0);
    if (!($28)) {
     $29 = ((($0)) + 67|0);
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = (__set_current_error($0,17,$30)|0);
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$059 = 0;
      break L7;
     }
     $33 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
     $34 = ((($33)) + 9|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ((($33)) + 13|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
     $38 = ((($33)) + 15|0);
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
     __set_error_pos($0,$35,$37,$39);
     $$059 = 3;
     break L7;
    }
   }
   $40 = ((($0)) + 67|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = (__set_current_error($0,17,$41)|0);
   $43 = ($42<<24>>24)==(0);
   if ($43) {
    $$059 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$059 = 3;
   }
   break;
  }
  default: {
   $$059 = 3;
  }
  }
 } while(0);
 return ($$059|0);
}
function __get_size_of($0) {
 $0 = $0|0;
 var $$off = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$off = (($0) + -2)|0;
 $switch = ($$off>>>0)<(3);
 if ($switch) {
  return;
 } else {
  ___assert_fail((4975|0),(1578|0),6080,(4995|0));
  // unreachable;
 }
}
function __unref_array($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),7460,(5103|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 if ($5) {
  __destroy_array($1);
 }
 return;
}
function __destroy_array($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((5048|0),(1578|0),7119,(5116|0));
  // unreachable;
 }
 __clear_array($0);
 $2 = ((($0)) + 17|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  _mb_free($3);
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 }
 __destroy_ref($0);
 _mb_free($0);
 return;
}
function __clear_array($0) {
 $0 = $0|0;
 var $$027 = 0, $$pre = 0, $$pre28 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((5048|0),(1578|0),7405,(5131|0));
  // unreachable;
 }
 $2 = ((($0)) + 25|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($0)) + 21|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(4);
  if ($7) {
   $8 = ((($0)) + 29|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)==(0);
   if ($10) {
    $22 = $3;
   } else {
    $$027 = 0;$11 = 4;
    while(1) {
     __get_size_of($11);
     $12 = $$027 << 2;
     $13 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
     $14 = (($13) + ($12))|0;
     $15 = $14;
     $16 = HEAP32[$15>>2]|0;
     $17 = ($16|0)==(0|0);
     if (!($17)) {
      _mb_free($16);
     }
     $18 = (($$027) + 1)|0;
     $19 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $20 = ($18>>>0)<($19>>>0);
     if (!($20)) {
      break;
     }
     $$pre = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
     $$027 = $18;$11 = $$pre;
    }
    $$pre28 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $21 = ($$pre28|0)==(0|0);
    if ($21) {
     ___assert_fail((1713|0),(1578|0),7439,(5131|0));
     // unreachable;
    } else {
     $22 = $$pre28;
    }
   }
  } else {
   $22 = $3;
  }
  _mb_free($22);
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 }
 return;
}
function __create_usertype_ref($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $7 = ($0|0)==(0|0);
 if ($7) {
  ___assert_fail((1649|0),(1578|0),6989,(5175|0));
  // unreachable;
 } else {
  $8 = (_mb_malloc(57)|0);
  dest=$8; stop=dest+57|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $9 = ((($8)) + 17|0);
  HEAP8[$9>>0]=$1&255;HEAP8[$9+1>>0]=($1>>8)&255;HEAP8[$9+2>>0]=($1>>16)&255;HEAP8[$9+3>>0]=$1>>24;
  $10 = ((($8)) + 21|0);
  HEAP8[$10>>0]=$2&255;HEAP8[$10+1>>0]=($2>>8)&255;HEAP8[$10+2>>0]=($2>>16)&255;HEAP8[$10+3>>0]=$2>>24;
  $11 = ((($8)) + 25|0);
  HEAP8[$11>>0]=$3&255;HEAP8[$11+1>>0]=($3>>8)&255;HEAP8[$11+2>>0]=($3>>16)&255;HEAP8[$11+3>>0]=$3>>24;
  $12 = ((($8)) + 29|0);
  HEAP8[$12>>0]=$4&255;HEAP8[$12+1>>0]=($4>>8)&255;HEAP8[$12+2>>0]=($4>>16)&255;HEAP8[$12+3>>0]=$4>>24;
  $13 = ((($8)) + 33|0);
  HEAP8[$13>>0]=$5&255;HEAP8[$13+1>>0]=($5>>8)&255;HEAP8[$13+2>>0]=($5>>16)&255;HEAP8[$13+3>>0]=$5>>24;
  $14 = ((($8)) + 37|0);
  HEAP8[$14>>0]=$6&255;HEAP8[$14+1>>0]=($6>>8)&255;HEAP8[$14+2>>0]=($6>>16)&255;HEAP8[$14+3>>0]=$6>>24;
  __create_ref($8,151,7,$0);
  return ($8|0);
 }
 return (0)|0;
}
function __unref_usertype_ref($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),7019,(5196|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 if ($5) {
  __destroy_usertype_ref($1);
 }
 return;
}
function __destroy_usertype_ref($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((3239|0),(1578|0),7006,(5216|0));
  // unreachable;
 }
 $2 = ((($0)) + 21|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($0)) + 13|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ((($0)) + 17|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  FUNCTION_TABLE_vii[$3 & 255]($6,$8);
 }
 $9 = ((($0)) + 45|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _mb_free($10);
  HEAP8[$9>>0]=0&255;HEAP8[$9+1>>0]=(0>>8)&255;HEAP8[$9+2>>0]=(0>>16)&255;HEAP8[$9+3>>0]=0>>24;
 }
 __destroy_ref($0);
 _mb_free($0);
 return;
}
function __search_identifier_accessor($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0$ph = 0, $$054$ph = 0, $$055 = 0, $$056 = 0, $$056$ph = 0, $$057$ph = 0, $$059 = 0, $$1 = 0, $$158 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond60 = 0, $or$cond61 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $6 = sp;
 $7 = ($0|0)!=(0|0);
 $8 = ($2|0)!=(0|0);
 $or$cond = $7 & $8;
 if (!($or$cond)) {
  ___assert_fail((2096|0),(1578|0),9614,(5272|0));
  // unreachable;
 }
 $9 = ($5<<24>>24)==(0);
 $$0$ph = 0;$$054$ph = 0;$$056$ph = 0;$$057$ph = 0;
 L4: while(1) {
  $$055 = 0;$$056 = $$056$ph;
  while(1) {
   $10 = ($$056|0)==(0);
   if (!($10)) {
    $11 = ($$056|0)>(0);
    if (!($11)) {
     $$059 = $$057$ph;
     label = 22;
     break L4;
    }
    $12 = (($$056) + -1)|0;
    $13 = (($2) + ($12)|0);
    $14 = HEAP8[$13>>0]|0;
    $15 = ($14<<24>>24)==(0);
    if ($15) {
     $$059 = $$057$ph;
     label = 22;
     break L4;
    }
   }
   $16 = (($2) + ($$056)|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = (($6) + ($$055)|0);
   HEAP8[$18>>0] = $17;
   $19 = (__is_accessor_char($17)|0);
   $20 = ($19<<24>>24)!=(0);
   $21 = ($17<<24>>24)==(0);
   $or$cond61 = $21 | $20;
   if ($or$cond61) {
    break;
   }
   $42 = (($$055) + 1)|0;
   $43 = (($$056) + 1)|0;
   $$055 = $42;$$056 = $43;
  }
  HEAP8[$18>>0] = 0;
  $22 = (($$054$ph) + 1)|0;
  $23 = ($$0$ph|0)==(0|0);
  if ($23) {
   $26 = ($$054$ph|0)>(0);
   if ($26) {
    $$059 = 0;
    label = 22;
    break;
   }
   $27 = (__search_identifier_in_scope_chain($0,$1,$6,0,$3,$4)|0);
   $$158 = $27;
  } else {
   $24 = (__search_identifier_in_class($0,$$0$ph,$6,$3,$4)|0);
   $25 = ($24|0)!=(0|0);
   $or$cond60 = $9 | $25;
   if ($or$cond60) {
    $$158 = $24;
   } else {
    $$059 = 5300;
    label = 22;
    break;
   }
  }
  $28 = ($$158|0)==(0|0);
  if ($28) {
   $$059 = 0;
   label = 22;
   break;
  }
  $29 = HEAPU8[$$158>>0]|(HEAPU8[$$158+1>>0]<<8)|(HEAPU8[$$158+2>>0]<<16)|(HEAPU8[$$158+3>>0]<<24);
  $30 = ($29|0)==(0|0);
  if ($30) {
   $$059 = 0;
   label = 22;
   break;
  }
  $31 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  L21: do {
   switch ($31|0) {
   case 9:  {
    $32 = ((($29)) + 4|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 4|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    switch ($36|0) {
    case 7:  {
     $$059 = $$158;
     label = 22;
     break L4;
     break;
    }
    case 16:  {
     break;
    }
    default: {
     $$1 = $$0$ph;
     break L21;
    }
    }
    $37 = ((($35)) + 4|0);
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $$1 = $38;
    break;
   }
   case 16:  {
    $39 = ((($29)) + 4|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $$1 = $40;
    break;
   }
   case 17: case 10:  {
    $$1 = $$0$ph;
    break;
   }
   default: {
    label = 18;
    break L4;
   }
   }
  } while(0);
  $41 = (($$056) + 1)|0;
  $$0$ph = $$1;$$054$ph = $22;$$056$ph = $41;$$057$ph = $$158;
 }
 if ((label|0) == 18) {
  ___assert_fail((4975|0),(1578|0),9667,(5272|0));
  // unreachable;
 }
 else if ((label|0) == 22) {
  STACKTOP = sp;return ($$059|0);
 }
 return (0)|0;
}
function __is_accessor_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0<<24>>24)==(46);
 $2 = $1&1;
 return ($2|0);
}
function __unref_outer_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),9000,(5369|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 if ($5) {
  __destroy_outer_scope($1);
 }
 return;
}
function __destroy_outer_scope($0) {
 $0 = $0|0;
 var $$in18 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1787|0),(1578|0),9008,(5388|0));
  // unreachable;
 }
 $2 = ((($0)) + 17|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ((($0)) + 21|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 __destroy_scope($5);
 __destroy_ref($0);
 _mb_free($0);
 $6 = ($3|0)==(0|0);
 if (!($6)) {
  $$in18 = $3;
  while(1) {
   $7 = ((($$in18)) + 17|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   __unref($$in18,$$in18);
   $9 = ($8|0)==(0|0);
   if ($9) {
    break;
   } else {
    $$in18 = $8;
   }
  }
 }
 return;
}
function __is_binary($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $narrow = 0, $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0;
 var $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond25 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(16|0);
 $2 = ($0|0)==(17|0);
 $or$cond = $1 | $2;
 $3 = ($0|0)==(18|0);
 $or$cond3 = $3 | $or$cond;
 $4 = ($0|0)==(19|0);
 $or$cond5 = $4 | $or$cond3;
 $5 = ($0|0)==(20|0);
 $or$cond7 = $5 | $or$cond5;
 $6 = ($0|0)==(21|0);
 $or$cond9 = $6 | $or$cond7;
 $7 = ($0|0)==(29|0);
 $or$cond11 = $7 | $or$cond9;
 $8 = ($0|0)==(26|0);
 $or$cond13 = $8 | $or$cond11;
 $9 = ($0|0)==(25|0);
 $or$cond15 = $9 | $or$cond13;
 $10 = ($0|0)==(28|0);
 $or$cond17 = $10 | $or$cond15;
 $11 = ($0|0)==(27|0);
 $or$cond19 = $11 | $or$cond17;
 $12 = ($0|0)==(30|0);
 $or$cond21 = $12 | $or$cond19;
 $13 = ($0|0)==(31|0);
 $or$cond23 = $13 | $or$cond21;
 $14 = ($0|0)==(32|0);
 $or$cond25 = $14 | $or$cond23;
 $15 = ($0|0)==(35|0);
 $narrow = $15 | $or$cond25;
 $16 = $narrow&1;
 return ($16|0);
}
function __is_flow($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $narrow = 0;
 var $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond25 = 0, $or$cond27 = 0, $or$cond29 = 0, $or$cond3 = 0, $or$cond31 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(67|0);
 $2 = ($0|0)==(68|0);
 $or$cond = $1 | $2;
 $3 = ($0|0)==(69|0);
 $or$cond3 = $3 | $or$cond;
 $4 = ($0|0)==(70|0);
 $or$cond5 = $4 | $or$cond3;
 $5 = ($0|0)==(71|0);
 $or$cond7 = $5 | $or$cond5;
 $6 = ($0|0)==(72|0);
 $or$cond9 = $6 | $or$cond7;
 $7 = ($0|0)==(74|0);
 $or$cond11 = $7 | $or$cond9;
 $8 = ($0|0)==(75|0);
 $or$cond13 = $8 | $or$cond11;
 $9 = ($0|0)==(76|0);
 $or$cond15 = $9 | $or$cond13;
 $10 = ($0|0)==(77|0);
 $or$cond17 = $10 | $or$cond15;
 $11 = ($0|0)==(78|0);
 $or$cond19 = $11 | $or$cond17;
 $12 = ($0|0)==(79|0);
 $or$cond21 = $12 | $or$cond19;
 $13 = ($0|0)==(80|0);
 $or$cond23 = $13 | $or$cond21;
 $14 = ($0|0)==(81|0);
 $or$cond25 = $14 | $or$cond23;
 $15 = ($0|0)==(82|0);
 $or$cond27 = $15 | $or$cond25;
 $16 = ($0|0)==(83|0);
 $or$cond29 = $16 | $or$cond27;
 $17 = ($0|0)==(84|0);
 $or$cond31 = $17 | $or$cond29;
 $18 = ($0|0)==(98|0);
 $narrow = $18 | $or$cond31;
 $19 = $narrow&1;
 return ($19|0);
}
function __mark_dangling_intermediate_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre16 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $switch$split12D = 0;
 var $switch$split2D = 0, $switch$split42D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((8372|0),(1578|0),10822,(8385|0));
  // unreachable;
 }
 $5 = ((($1)) + 20|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $switch$split2D = ($6|0)<(1024);
 L4: do {
  if ($switch$split2D) {
   switch ($6|0) {
   case 512: case 256: case 64:  {
    break;
   }
   default: {
    label = 27;
   }
   }
  } else {
   $switch$split12D = ($6|0)<(2048);
   if ($switch$split12D) {
    switch ($6|0) {
    case 1024:  {
     break L4;
     break;
    }
    default: {
     label = 27;
     break L4;
    }
    }
   }
   $switch$split42D = ($6|0)<(8192);
   if ($switch$split42D) {
    switch ($6|0) {
    case 2048:  {
     break L4;
     break;
    }
    default: {
     label = 27;
     break L4;
    }
    }
   } else {
    switch ($6|0) {
    case 8192:  {
     break L4;
     break;
    }
    default: {
     label = 27;
     break L4;
    }
    }
   }
  }
 } while(0);
 if ((label|0) == 27) {
  STACKTOP = sp;return;
 }
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP8[$2+16>>0]=0|0;
 (__public_value_to_internal_object($5,$2)|0);
 $7 = HEAP32[$2>>2]|0;
 switch ($7|0) {
 case 12:  {
  $8 = ((($2)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 21|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 6;
  }
  break;
 }
 case 14:  {
  $14 = ((($2)) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 21|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17 & 1;
  $19 = ($18<<24>>24)==(0);
  if ($19) {
   $$pre$phiZ2D = $14;$20 = $15;
   label = 9;
  }
  break;
 }
 default: {
  label = 6;
 }
 }
 if ((label|0) == 6) {
  $$phi$trans$insert = ((($2)) + 4|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre$phiZ2D = $$phi$trans$insert;$20 = $$pre;
  label = 9;
 }
 L22: do {
  if ((label|0) == 9) {
   $21 = ($20|0)==(0|0);
   if ($21) {
    $26 = $7;
   } else {
    $22 = ((($0)) + 29|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = (__ht_find($23,$20)|0);
    $25 = ($24|0)==(0|0);
    if (!($25)) {
     break;
    }
    $$pre16 = HEAP32[$2>>2]|0;
    $26 = $$pre16;
   }
   switch ($26|0) {
   case 7:  {
    $27 = HEAP32[$$pre$phiZ2D>>2]|0;
    $28 = ((($0)) + 21|0);
    __gc_add($27,$27,$28);
    break L22;
    break;
   }
   case 10:  {
    $29 = ((($2)) + 8|0);
    $30 = HEAP8[$29>>0]|0;
    $31 = $30 & 1;
    $32 = ($31<<24>>24)==(0);
    if (!($32)) {
     break L22;
    }
    $33 = HEAP32[$$pre$phiZ2D>>2]|0;
    $34 = ((($0)) + 21|0);
    __gc_add($33,$33,$34);
    break L22;
    break;
   }
   case 11:  {
    $35 = HEAP32[$$pre$phiZ2D>>2]|0;
    $36 = ((($0)) + 21|0);
    __gc_add($35,$35,$36);
    break L22;
    break;
   }
   case 13:  {
    $37 = HEAP32[$$pre$phiZ2D>>2]|0;
    $38 = ((($0)) + 21|0);
    __gc_add($37,$37,$38);
    break L22;
    break;
   }
   case 12:  {
    $39 = HEAP32[$$pre$phiZ2D>>2]|0;
    __destroy_list_it($39);
    break L22;
    break;
   }
   case 14:  {
    $40 = HEAP32[$$pre$phiZ2D>>2]|0;
    __destroy_dict_it($40);
    break L22;
    break;
   }
   case 16:  {
    $41 = ((($2)) + 8|0);
    $42 = HEAP8[$41>>0]|0;
    $43 = $42 & 1;
    $44 = ($43<<24>>24)==(0);
    if (!($44)) {
     break L22;
    }
    $45 = HEAP32[$$pre$phiZ2D>>2]|0;
    $46 = ((($0)) + 21|0);
    __gc_add($45,$45,$46);
    break L22;
    break;
   }
   case 17:  {
    $47 = ((($2)) + 8|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 & 1;
    $50 = ($49<<24>>24)==(0);
    if (!($50)) {
     break L22;
    }
    $51 = HEAP32[$$pre$phiZ2D>>2]|0;
    $52 = ((($51)) + 58|0);
    $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
    $54 = ($53|0)==(2);
    if (!($54)) {
     break L22;
    }
    $55 = ((($0)) + 21|0);
    __gc_add($51,$51,$55);
    break L22;
    break;
   }
   case 4:  {
    (__dispose_object($2)|0);
    break L22;
    break;
   }
   default: {
    break L22;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __core_open_bracket($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8353)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8353)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_let($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$ = 0, $$0249 = 0, $$0256 = 0, $$0257 = 0, $$0258 = 0, $$0264 = 0, $$1250 = 0, $$1259 = 0, $$1259$ph = 0, $$1259$ph289 = 0, $$1261 = 0, $$1265 = 0, $$1265$phi = 0, $$2262 = 0, $$3246$ph = 0, $$3263 = 0, $$4247$ph = 0, $$4247$ph290 = 0, $$5248 = 0, $$6 = 0;
 var $$not = 0, $$ph = 0, $$phi$trans$insert = 0, $$pr288 = 0, $$pre = 0, $$pre304 = 0, $$pre305 = 0, $$pre306 = 0, $$sink11 = 0, $$sink12 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $or$cond = 0, $or$cond14 = 0, $or$cond273 = 0, $or$cond313 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 32|0;
 $3 = sp + 28|0;
 $4 = sp + 24|0;
 $5 = sp + 36|0;
 $6 = sp + 20|0;
 $7 = sp + 16|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $10 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 HEAP8[$5>>0] = 0;
 HEAP32[$6>>2] = 0;
 HEAP32[$7>>2] = 0;
 $11 = ($0|0)!=(0|0);
 $12 = ($1|0)!=(0|0);
 $or$cond = $11 & $12;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15374,(7205|0));
  // unreachable;
 }
 $13 = HEAP32[$1>>2]|0;
 HEAP32[$2>>2] = $13;
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==(8);
 if ($16) {
  $17 = ((($13)) + 8|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  HEAP32[$2>>2] = $18;
  $19 = $18;
  $20 = $18;
  $21 = $19;$31 = $20;
 } else {
  $21 = $13;$31 = $13;
 }
 $cond = ($21|0)==(0|0);
 L7: do {
  if ($cond) {
   label = 10;
  } else {
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ($22|0)==(0|0);
   if ($23) {
    $24 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $25 = ($24|0)==(0|0);
    if ($25) {
     label = 10;
     break;
    }
    $26 = ((($0)) + 67|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = (__set_current_error($0,10,$27)|0);
    $29 = ($28<<24>>24)==(0);
    if ($29) {
     $$5248 = 0;
     label = 147;
     break;
    }
    $30 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $32 = ((($30)) + 9|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($30)) + 13|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8);
    $36 = ((($30)) + 15|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
    __set_error_pos($0,$33,$35,$37);
    $$5248 = 3;
    label = 147;
    break;
   }
   $42 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $43 = ($42|0)==(9);
   if ($43) {
    HEAP32[$9>>2] = 0;
    $44 = ((($22)) + 4|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $46 = (__is_valid_class_accessor_following_routine($0,$45,$21,$9)|0);
    $47 = ($46<<24>>24)!=(0);
    $48 = HEAP32[$9>>2]|0;
    $49 = ($48|0)!=(0|0);
    $or$cond14 = $47 & $49;
    if ($or$cond14) {
     $50 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $$0249 = $50;
    } else {
     $$0249 = $22;
    }
    $$1250 = $$0249;
   } else {
    $$1250 = $22;
   }
   $51 = HEAPU8[$$1250>>0]|(HEAPU8[$$1250+1>>0]<<8)|(HEAPU8[$$1250+2>>0]<<16)|(HEAPU8[$$1250+3>>0]<<24);
   L20: do {
    switch ($51|0) {
    case 10:  {
     HEAP32[$3>>2] = $$1250;
     $52 = ((($$1250)) + 4|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = (__search_array_in_scope_chain($0,$53,$3)|0);
     $55 = (__get_array_index($0,$2,0,$4,$5)|0);
     $56 = ($55|0)==(0);
     if ($56) {
      $$0257 = $54;$$0264 = 0;$$2262 = 0;
     } else {
      $$5248 = $55;
      label = 147;
      break L7;
     }
     break;
    }
    case 9:  {
     $57 = ((($$1250)) + 4|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $59 = ((($58)) + 4|0);
     $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = ($61|0)==(10);
     if ($62) {
      HEAP32[$3>>2] = $60;
      $63 = ((($60)) + 4|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
      $65 = (__search_array_in_scope_chain($0,$64,$3)|0);
      $66 = (__get_array_index($0,$2,0,$4,$5)|0);
      $67 = ($66|0)==(0);
      if ($67) {
       $$0257 = $65;$$0264 = 0;$$2262 = 0;
       break L20;
      } else {
       $$5248 = $66;
       label = 147;
       break L7;
      }
     }
     $68 = ((($58)) + 8|0);
     $69 = HEAP8[$68>>0]|0;
     $70 = $69 & 4;
     $71 = ($70<<24>>24)==(0);
     if (!($71)) {
      $72 = HEAP32[$2>>2]|0;
      $73 = ($72|0)==(0|0);
      if (!($73)) {
       $74 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
       $75 = ($74|0)==(0|0);
       if (!($75)) {
        $76 = ((($0)) + 67|0);
        $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
        $78 = (__set_current_error($0,23,$77)|0);
        $79 = ($78<<24>>24)==(0);
        if ($79) {
         $$5248 = 0;
         label = 147;
         break L7;
        }
        $80 = HEAP32[$2>>2]|0;
        $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
        $82 = ((($81)) + 9|0);
        $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
        $84 = ((($81)) + 13|0);
        $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8);
        $86 = ((($81)) + 15|0);
        $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8);
        __set_error_pos($0,$83,$85,$87);
        $$5248 = 3;
        label = 147;
        break L7;
       }
      }
      $88 = ((($0)) + 67|0);
      $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
      $90 = (__set_current_error($0,23,$89)|0);
      $91 = ($90<<24>>24)==(0);
      if ($91) {
       $$5248 = 0;
       label = 147;
       break L7;
      }
      __set_error_pos($0,0,0,0);
      $$5248 = 3;
      label = 147;
      break L7;
     }
     $92 = (__search_var_in_scope_chain($0,$58,0)|0);
     $93 = ($92|0)==($58|0);
     if ($93) {
      $$1261 = 0;
     } else {
      $94 = HEAP8[$68>>0]|0;
      $95 = $94 & 3;
      $96 = ($95<<24>>24)==(3);
      $$$ = $96 ? 0 : $58;
      $$1261 = $$$;
     }
     $97 = HEAP32[3904]|0;
     $98 = ((($97)) + 4|0);
     $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
     $100 = ($92|0)==($99|0);
     if (!($100)) {
      $101 = HEAP32[3905]|0;
      $102 = ((($101)) + 4|0);
      $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
      $104 = ($92|0)==($103|0);
      if (!($104)) {
       $$0257 = 0;$$0264 = $92;$$2262 = $$1261;
       break L20;
      }
     }
     $105 = HEAP32[$2>>2]|0;
     $106 = ($105|0)==(0|0);
     if (!($106)) {
      $107 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
      $108 = ($107|0)==(0|0);
      if (!($108)) {
       $109 = ((($0)) + 67|0);
       $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
       $111 = (__set_current_error($0,23,$110)|0);
       $112 = ($111<<24>>24)==(0);
       if ($112) {
        $$5248 = 0;
        label = 147;
        break L7;
       }
       $113 = HEAP32[$2>>2]|0;
       $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
       $115 = ((($114)) + 9|0);
       $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
       $117 = ((($114)) + 13|0);
       $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8);
       $119 = ((($114)) + 15|0);
       $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8);
       __set_error_pos($0,$116,$118,$120);
       $$5248 = 3;
       label = 147;
       break L7;
      }
     }
     $121 = ((($0)) + 67|0);
     $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
     $123 = (__set_current_error($0,23,$122)|0);
     $124 = ($123<<24>>24)==(0);
     if ($124) {
      $$5248 = 0;
      label = 147;
      break L7;
     }
     __set_error_pos($0,0,0,0);
     $$5248 = 3;
     label = 147;
     break L7;
     break;
    }
    default: {
     $125 = HEAP32[$2>>2]|0;
     $126 = ($125|0)==(0|0);
     if (!($126)) {
      $127 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $128 = ($127|0)==(0|0);
      if (!($128)) {
       $129 = ((($0)) + 67|0);
       $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
       $131 = (__set_current_error($0,23,$130)|0);
       $132 = ($131<<24>>24)==(0);
       if ($132) {
        $$5248 = 0;
        label = 147;
        break L7;
       }
       $133 = HEAP32[$2>>2]|0;
       $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
       $135 = ((($134)) + 9|0);
       $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
       $137 = ((($134)) + 13|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8);
       $139 = ((($134)) + 15|0);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8);
       __set_error_pos($0,$136,$138,$140);
       $$5248 = 3;
       label = 147;
       break L7;
      }
     }
     $141 = ((($0)) + 67|0);
     $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $143 = (__set_current_error($0,23,$142)|0);
     $144 = ($143<<24>>24)==(0);
     if ($144) {
      $$5248 = 0;
      label = 147;
      break L7;
     }
     __set_error_pos($0,0,0,0);
     $$5248 = 3;
     label = 147;
     break L7;
    }
    }
   } while(0);
   $145 = HEAP32[$2>>2]|0;
   $146 = ((($145)) + 8|0);
   $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
   HEAP32[$2>>2] = $147;
   $148 = ($147|0)==(0|0);
   if (!($148)) {
    $149 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $155 = ($$0264|0)!=(0|0);
     L58: do {
      if ($155) {
       $156 = ((($$0264)) + 4|0);
       $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
       $158 = ($157|0)==(0|0);
       if ($158) {
        $$0256 = 0;$181 = $149;$188 = $147;
       } else {
        $159 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
        switch ($159|0) {
        case 13: case 11:  {
         break;
        }
        default: {
         $$0256 = 0;$181 = $149;$188 = $147;
         break L58;
        }
        }
        $160 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
        $161 = ($160|0)==(8);
        if ($161) {
         $162 = ((($149)) + 4|0);
         $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
         $164 = ((($163)) + 4|0);
         $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
         $166 = ($165|0)==(22|0);
         if ($166) {
          $167 = (_mb_attempt_open_bracket($0,$1)|0);
          $168 = ($167|0)==(0);
          if (!($168)) {
           $$6 = $167;
           break L7;
          }
          $169 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
          $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
          switch ($170|0) {
          case 11:  {
           $171 = (_mb_pop_int($0,$1,$7)|0);
           $172 = ($171|0)==(0);
           if (!($172)) {
            $$6 = $171;
            break L7;
           }
           break;
          }
          case 13:  {
           $173 = ((($8)) + 4|0);
           HEAP32[$173>>2] = 0;
           HEAP32[$8>>2] = 0;
           $174 = (_mb_pop_value($0,$1,$8)|0);
           $175 = ($174|0)==(0);
           if (!($175)) {
            $$6 = $174;
            break L7;
           }
           break;
          }
          default: {
          }
          }
          $176 = (_mb_attempt_close_bracket($0,$1)|0);
          $177 = ($176|0)==(0);
          if (!($177)) {
           $$6 = $176;
           break L7;
          }
          $178 = HEAP32[$1>>2]|0;
          HEAP32[$2>>2] = $178;
          $179 = $178;
          $$phi$trans$insert = $178;
          $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
          $$0256 = 1;$181 = $$pre;$188 = $179;
         } else {
          $$0256 = 0;$181 = $149;$188 = $147;
         }
        } else {
         $$0256 = 0;$181 = $149;$188 = $147;
        }
       }
      } else {
       $$0256 = 0;$181 = $149;$188 = $147;
      }
     } while(0);
     $180 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
     $182 = ($180|0)==(8);
     if ($182) {
      $183 = ((($181)) + 4|0);
      $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
      $185 = ((($184)) + 4|0);
      $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
      $187 = ($186|0)==(29|0);
      if ($187) {
       $203 = ((($188)) + 8|0);
       $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
       HEAP32[$2>>2] = $204;
       $205 = (__create_object()|0);
       HEAP32[$6>>2] = $205;
       $206 = (__calc_expression($0,$2,$6)|0);
       L74: do {
        if ($155) {
         $207 = ($$0256<<24>>24)==(0);
         if ($207) {
          $$0258 = 1;$$1265 = $$0264;$$3263 = $$2262;
          while(1) {
           $265 = ((($$1265)) + 4|0);
           $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
           (__dispose_object($266)|0);
           $267 = HEAP32[$6>>2]|0;
           $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
           $269 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
           HEAP8[$269>>0]=$268&255;HEAP8[$269+1>>0]=($268>>8)&255;HEAP8[$269+2>>0]=($268>>16)&255;HEAP8[$269+3>>0]=$268>>24;
           $270 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
           switch ($270|0) {
           case 14: case 12:  {
            __assign_with_it($269,$267);
            $$pre306 = HEAP32[$6>>2]|0;
            $275 = $$pre306;
            break;
           }
           default: {
            $271 = ((($267)) + 4|0);
            $272 = ((($269)) + 4|0);
            $273 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
            HEAP8[$272>>0]=$273&255;HEAP8[$272+1>>0]=($273>>8)&255;HEAP8[$272+2>>0]=($273>>16)&255;HEAP8[$272+3>>0]=$273>>24;
            $275 = $267;
           }
           }
           $274 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
           $276 = ($274|0)==(17);
           if ($276) {
            $277 = ((($275)) + 4|0);
            $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
            $279 = ((($278)) + 58|0);
            $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
            $281 = ($280|0)==(2);
            if ($281) {
             label = 91;
            } else {
             $$sink11 = 1;
            }
           } else {
            label = 91;
           }
           if ((label|0) == 91) {
            label = 0;
            $282 = ((($275)) + 8|0);
            $283 = HEAP8[$282>>0]|0;
            $284 = $283 & 1;
            $$sink11 = $284;
           }
           $285 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
           $286 = ((($285)) + 8|0);
           $$sink12 = HEAP8[$286>>0]|0;
           $287 = $$sink12 & -2;
           $288 = $287 | $$sink11;
           HEAP8[$286>>0] = $288;
           $289 = ($$3263|0)==(0|0);
           if ($289) {
            $$1259$ph = $$0258;$$4247$ph = $206;
            label = 131;
            break L74;
           }
           $290 = ((($$3263)) + 8|0);
           $291 = HEAP8[$290>>0]|0;
           $292 = $291 & 3;
           $293 = ($292<<24>>24)==(0);
           if ($293) {
            $$1259$ph = $$0258;$$4247$ph = $206;
            label = 131;
            break L74;
           }
           $294 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
           $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
           $296 = ($295|0)==(4);
           if ($296) {
            $297 = ((($294)) + 4|0);
            $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
            $299 = (_strlen($298)|0);
            $300 = (($299) + 1)|0;
            $301 = (_mb_strdup($298,$300)|0);
            $302 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
            $303 = ((($302)) + 4|0);
            HEAP8[$303>>0]=$301&255;HEAP8[$303+1>>0]=($301>>8)&255;HEAP8[$303+2>>0]=($301>>16)&255;HEAP8[$303+3>>0]=$301>>24;
            $304 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
            $305 = ((($304)) + 8|0);
            $306 = HEAP8[$305>>0]|0;
            $307 = $306 & -2;
            HEAP8[$305>>0] = $307;
           }
           $308 = (($$0258) + 1)|0;
           $$1265$phi = $$3263;$$0258 = $308;$$3263 = 0;$$1265 = $$1265$phi;
          }
         }
         $208 = ((($$0264)) + 4|0);
         $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
         $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
         switch ($210|0) {
         case 11:  {
          $211 = ((($209)) + 4|0);
          $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
          $213 = HEAP32[$7>>2]|0;
          $214 = (__set_list($212,$213,0,$6)|0);
          $215 = ($214<<24>>24)==(0);
          if (!($215)) {
           $$5248 = $206;
           label = 147;
           break L7;
          }
          $216 = HEAP32[$6>>2]|0;
          $217 = ($216|0)==(0|0);
          if ($217) {
           ___assert_fail((1713|0),(1578|0),15471,(7205|0));
           // unreachable;
          }
          _mb_free($216);
          HEAP32[$6>>2] = 0;
          $218 = HEAP32[$1>>2]|0;
          $219 = ($218|0)==(0|0);
          do {
           if (!($219)) {
            $220 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
            $221 = ($220|0)==(0|0);
            if ($221) {
             break;
            }
            $222 = ((($0)) + 67|0);
            $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
            $224 = (__set_current_error($0,20,$223)|0);
            $225 = ($224<<24>>24)==(0);
            if ($225) {
             $$5248 = $206;
             label = 147;
             break L7;
            }
            $226 = HEAP32[$1>>2]|0;
            $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
            $228 = ((($227)) + 9|0);
            $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
            $230 = ((($227)) + 13|0);
            $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8);
            $232 = ((($227)) + 15|0);
            $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8);
            __set_error_pos($0,$229,$231,$233);
            $$5248 = 3;
            label = 147;
            break L7;
           }
          } while(0);
          $234 = ((($0)) + 67|0);
          $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
          $236 = (__set_current_error($0,20,$235)|0);
          $237 = ($236<<24>>24)==(0);
          if ($237) {
           $$5248 = $206;
           label = 147;
           break L7;
          }
          __set_error_pos($0,0,0,0);
          $$5248 = 3;
          label = 147;
          break L7;
          break;
         }
         case 13:  {
          $238 = ((($209)) + 4|0);
          $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
          $240 = HEAP32[$6>>2]|0;
          $241 = (__set_dict($239,$8,0,0,$240)|0);
          $242 = ($241<<24>>24)==(0);
          if (!($242)) {
           $$5248 = $206;
           label = 147;
           break L7;
          }
          $243 = HEAP32[$6>>2]|0;
          $244 = ($243|0)==(0|0);
          if ($244) {
           ___assert_fail((1713|0),(1578|0),15478,(7205|0));
           // unreachable;
          }
          _mb_free($243);
          HEAP32[$6>>2] = 0;
          $245 = HEAP32[$1>>2]|0;
          $246 = ($245|0)==(0|0);
          do {
           if (!($246)) {
            $247 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
            $248 = ($247|0)==(0|0);
            if ($248) {
             break;
            }
            $249 = ((($0)) + 67|0);
            $250 = HEAPU8[$249>>0]|(HEAPU8[$249+1>>0]<<8)|(HEAPU8[$249+2>>0]<<16)|(HEAPU8[$249+3>>0]<<24);
            $251 = (__set_current_error($0,46,$250)|0);
            $252 = ($251<<24>>24)==(0);
            if ($252) {
             $$5248 = $206;
             label = 147;
             break L7;
            }
            $253 = HEAP32[$1>>2]|0;
            $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
            $255 = ((($254)) + 9|0);
            $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
            $257 = ((($254)) + 13|0);
            $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8);
            $259 = ((($254)) + 15|0);
            $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8);
            __set_error_pos($0,$256,$258,$260);
            $$5248 = 3;
            label = 147;
            break L7;
           }
          } while(0);
          $261 = ((($0)) + 67|0);
          $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
          $263 = (__set_current_error($0,46,$262)|0);
          $264 = ($263<<24>>24)==(0);
          if ($264) {
           $$5248 = $206;
           label = 147;
           break L7;
          }
          __set_error_pos($0,0,0,0);
          $$5248 = 3;
          label = 147;
          break L7;
          break;
         }
         default: {
          $$5248 = $206;
          label = 147;
          break L7;
         }
         }
        } else {
         $309 = ($$0257|0)!=(0|0);
         $$not = $309 ^ 1;
         $310 = HEAP8[$5>>0]|0;
         $311 = ($310<<24>>24)==(0);
         $or$cond273 = $311 | $$not;
         if (!($or$cond273)) {
          $312 = HEAP32[$6>>2]|0;
          $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
          $314 = ($313|0)==(1);
          if ($314) {
           $$1259$ph289 = 1;$$4247$ph290 = $206;$$ph = $312;
           break;
          }
          $315 = ((($$0257)) + 17|0);
          $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
          $317 = ($316|0)==(0|0);
          if ($317) {
           $338 = HEAP32[$3>>2]|0;
           $339 = ((($338)) + 4|0);
           $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8)|(HEAPU8[$339+2>>0]<<16)|(HEAPU8[$339+3>>0]<<24);
           __unref($340,$340);
           $341 = HEAP32[$6>>2]|0;
           $342 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8)|(HEAPU8[$341+2>>0]<<16)|(HEAPU8[$341+3>>0]<<24);
           $343 = HEAP32[$3>>2]|0;
           HEAP8[$343>>0]=$342&255;HEAP8[$343+1>>0]=($342>>8)&255;HEAP8[$343+2>>0]=($342>>16)&255;HEAP8[$343+3>>0]=$342>>24;
           $344 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8)|(HEAPU8[$341+2>>0]<<16)|(HEAPU8[$341+3>>0]<<24);
           switch ($344|0) {
           case 14: case 12:  {
            __assign_with_it($343,$341);
            $$pre304 = HEAP32[$6>>2]|0;
            $$pre305 = HEAP32[$3>>2]|0;
            $349 = $$pre304;$353 = $$pre305;
            break;
           }
           default: {
            $345 = ((($341)) + 4|0);
            $346 = ((($343)) + 4|0);
            $347 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
            HEAP8[$346>>0]=$347&255;HEAP8[$346+1>>0]=($347>>8)&255;HEAP8[$346+2>>0]=($347>>16)&255;HEAP8[$346+3>>0]=$347>>24;
            $349 = $341;$353 = $343;
           }
           }
           $348 = ((($349)) + 8|0);
           $350 = HEAP8[$348>>0]|0;
           $351 = $350 & 1;
           $352 = ((($353)) + 8|0);
           $354 = HEAP8[$352>>0]|0;
           $355 = $354 & -2;
           $356 = $355 | $351;
           HEAP8[$352>>0] = $356;
           $$1259$ph = 1;$$4247$ph = $206;
           label = 131;
           break;
          }
          (__destroy_object($312,0)|0);
          $318 = HEAP32[$1>>2]|0;
          $319 = ($318|0)==(0|0);
          do {
           if (!($319)) {
            $320 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
            $321 = ($320|0)==(0|0);
            if ($321) {
             break;
            }
            $322 = ((($0)) + 67|0);
            $323 = HEAPU8[$322>>0]|(HEAPU8[$322+1>>0]<<8)|(HEAPU8[$322+2>>0]<<16)|(HEAPU8[$322+3>>0]<<24);
            $324 = (__set_current_error($0,23,$323)|0);
            $325 = ($324<<24>>24)==(0);
            if ($325) {
             $$5248 = $206;
             label = 147;
             break L7;
            }
            $326 = HEAP32[$1>>2]|0;
            $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
            $328 = ((($327)) + 9|0);
            $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
            $330 = ((($327)) + 13|0);
            $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8);
            $332 = ((($327)) + 15|0);
            $333 = HEAPU8[$332>>0]|(HEAPU8[$332+1>>0]<<8);
            __set_error_pos($0,$329,$331,$333);
            $$5248 = 3;
            label = 147;
            break L7;
           }
          } while(0);
          $334 = ((($0)) + 67|0);
          $335 = HEAPU8[$334>>0]|(HEAPU8[$334+1>>0]<<8)|(HEAPU8[$334+2>>0]<<16)|(HEAPU8[$334+3>>0]<<24);
          $336 = (__set_current_error($0,23,$335)|0);
          $337 = ($336<<24>>24)==(0);
          if ($337) {
           $$5248 = $206;
           label = 147;
           break L7;
          }
          __set_error_pos($0,0,0,0);
          $$5248 = 3;
          label = 147;
          break L7;
         }
         if ($309) {
          $357 = HEAP32[$6>>2]|0;
          $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8)|(HEAPU8[$357+2>>0]<<16)|(HEAPU8[$357+3>>0]<<24);
          switch ($358|0) {
          case 2:  {
           $359 = ((($$0257)) + 21|0);
           $360 = HEAPU8[$359>>0]|(HEAPU8[$359+1>>0]<<8)|(HEAPU8[$359+2>>0]<<16)|(HEAPU8[$359+3>>0]<<24);
           $361 = ($360|0)==(4);
           if ($361) {
            label = 115;
           } else {
            label = 123;
           }
           break;
          }
          case 3:  {
           $362 = ((($$0257)) + 21|0);
           $363 = HEAPU8[$362>>0]|(HEAPU8[$362+1>>0]<<8)|(HEAPU8[$362+2>>0]<<16)|(HEAPU8[$362+3>>0]<<24);
           $364 = ($363|0)==(4);
           if ($364) {
            label = 115;
           } else {
            label = 123;
           }
           break;
          }
          case 4:  {
           $365 = ((($$0257)) + 21|0);
           $366 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8)|(HEAPU8[$365+2>>0]<<16)|(HEAPU8[$365+3>>0]<<24);
           $367 = ($366|0)==(4);
           if ($367) {
            label = 123;
           } else {
            label = 115;
           }
           break;
          }
          default: {
           label = 115;
          }
          }
          L140: do {
           if ((label|0) == 115) {
            (__dispose_object($357)|0);
            $368 = HEAP32[$6>>2]|0;
            $369 = ($368|0)==(0|0);
            if ($369) {
             ___assert_fail((1713|0),(1578|0),15586,(7205|0));
             // unreachable;
            }
            _mb_free($368);
            HEAP32[$6>>2] = 0;
            $370 = HEAP32[$1>>2]|0;
            $371 = ($370|0)==(0|0);
            do {
             if (!($371)) {
              $372 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
              $373 = ($372|0)==(0|0);
              if ($373) {
               break;
              }
              $374 = ((($0)) + 67|0);
              $375 = HEAPU8[$374>>0]|(HEAPU8[$374+1>>0]<<8)|(HEAPU8[$374+2>>0]<<16)|(HEAPU8[$374+3>>0]<<24);
              $376 = (__set_current_error($0,3,$375)|0);
              $377 = ($376<<24>>24)==(0);
              if ($377) {
               $$3246$ph = $206;
               break L140;
              }
              $378 = HEAP32[$1>>2]|0;
              $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8)|(HEAPU8[$378+2>>0]<<16)|(HEAPU8[$378+3>>0]<<24);
              $380 = ((($379)) + 9|0);
              $381 = HEAPU8[$380>>0]|(HEAPU8[$380+1>>0]<<8)|(HEAPU8[$380+2>>0]<<16)|(HEAPU8[$380+3>>0]<<24);
              $382 = ((($379)) + 13|0);
              $383 = HEAPU8[$382>>0]|(HEAPU8[$382+1>>0]<<8);
              $384 = ((($379)) + 15|0);
              $385 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8);
              __set_error_pos($0,$381,$383,$385);
              $$3246$ph = 3;
              break L140;
             }
            } while(0);
            $386 = ((($0)) + 67|0);
            $387 = HEAPU8[$386>>0]|(HEAPU8[$386+1>>0]<<8)|(HEAPU8[$386+2>>0]<<16)|(HEAPU8[$386+3>>0]<<24);
            $388 = (__set_current_error($0,3,$387)|0);
            $389 = ($388<<24>>24)==(0);
            if ($389) {
             $$3246$ph = $206;
             break;
            }
            __set_error_pos($0,0,0,0);
            $$3246$ph = 3;
           }
           else if ((label|0) == 123) {
            $390 = ((($357)) + 4|0);
            $391 = HEAPU8[$390>>0]|(HEAPU8[$390+1>>0]<<8)|(HEAPU8[$390+2>>0]<<16)|(HEAPU8[$390+3>>0]<<24);
            HEAP32[$10>>2] = $391;
            $392 = HEAP32[$2>>2]|0;
            $393 = HEAP32[$4>>2]|0;
            $394 = (__set_array_elem($0,$392,$$0257,$393,$10,$357)|0);
            $395 = ($394|0)==(0);
            if ($395) {
             $396 = HEAP32[$6>>2]|0;
             $397 = HEAPU8[$396>>0]|(HEAPU8[$396+1>>0]<<8)|(HEAPU8[$396+2>>0]<<16)|(HEAPU8[$396+3>>0]<<24);
             $398 = ($397|0)==(4);
             do {
              if ($398) {
               $399 = ((($396)) + 8|0);
               $400 = HEAP8[$399>>0]|0;
               $401 = $400 & 1;
               $402 = ($401<<24>>24)==(0);
               if (!($402)) {
                break;
               }
               $403 = ((($396)) + 4|0);
               $404 = HEAPU8[$403>>0]|(HEAPU8[$403+1>>0]<<8)|(HEAPU8[$403+2>>0]<<16)|(HEAPU8[$403+3>>0]<<24);
               $405 = ($404|0)==(0|0);
               if ($405) {
                ___assert_fail((1713|0),(1578|0),15595,(7205|0));
                // unreachable;
               } else {
                _mb_free($404);
                $406 = HEAP32[$6>>2]|0;
                $407 = ((($406)) + 4|0);
                HEAP8[$407>>0]=0&255;HEAP8[$407+1>>0]=(0>>8)&255;HEAP8[$407+2>>0]=(0>>16)&255;HEAP8[$407+3>>0]=0>>24;
                break;
               }
              }
             } while(0);
             $$1259$ph = 1;$$4247$ph = 0;
             label = 131;
             break L74;
            } else {
             $$3246$ph = $394;
            }
           }
          } while(0);
          $$5248 = $$3246$ph;
          label = 147;
          break L7;
         } else {
          $$1259$ph = 1;$$4247$ph = $206;
          label = 131;
         }
        }
       } while(0);
       L161: while(1) {
        if ((label|0) == 131) {
         label = 0;
         $$pr288 = HEAP32[$6>>2]|0;
         $$1259$ph289 = $$1259$ph;$$4247$ph290 = $$4247$ph;$$ph = $$pr288;
        }
        $$1259 = $$1259$ph289;
        L165: while(1) {
         $408 = (($$1259) + -1)|0;
         $409 = ($$1259|0)==(0);
         if ($409) {
          break L161;
         }
         $410 = HEAPU8[$$ph>>0]|(HEAPU8[$$ph+1>>0]<<8)|(HEAPU8[$$ph+2>>0]<<16)|(HEAPU8[$$ph+3>>0]<<24);
         switch ($410|0) {
         case 7:  {
          label = 135;
          break L165;
          break;
         }
         case 10:  {
          label = 136;
          break L165;
          break;
         }
         case 11:  {
          label = 138;
          break L165;
          break;
         }
         case 13:  {
          label = 139;
          break L165;
          break;
         }
         case 16:  {
          label = 140;
          break L165;
          break;
         }
         case 17:  {
          label = 141;
          break L165;
          break;
         }
         default: {
          $$1259 = $408;
         }
         }
        }
        if ((label|0) == 135) {
         label = 0;
         $411 = ((($$ph)) + 4|0);
         $412 = HEAPU8[$411>>0]|(HEAPU8[$411+1>>0]<<8)|(HEAPU8[$411+2>>0]<<16)|(HEAPU8[$411+3>>0]<<24);
         __ref($412,$412);
         $$1259$ph = $408;$$4247$ph = $$4247$ph290;
         label = 131;
         continue;
        }
        else if ((label|0) == 136) {
         label = 0;
         $413 = ((($$ph)) + 8|0);
         $414 = HEAP8[$413>>0]|0;
         $415 = $414 & 1;
         $416 = ($415<<24>>24)==(0);
         if (!($416)) {
          $$1259$ph = $408;$$4247$ph = $$4247$ph290;
          label = 131;
          continue;
         }
         $417 = ((($$ph)) + 4|0);
         $418 = HEAPU8[$417>>0]|(HEAPU8[$417+1>>0]<<8)|(HEAPU8[$417+2>>0]<<16)|(HEAPU8[$417+3>>0]<<24);
         __ref($418,$418);
         $$1259$ph = $408;$$4247$ph = $$4247$ph290;
         label = 131;
         continue;
        }
        else if ((label|0) == 138) {
         label = 0;
         $419 = ((($$ph)) + 4|0);
         $420 = HEAPU8[$419>>0]|(HEAPU8[$419+1>>0]<<8)|(HEAPU8[$419+2>>0]<<16)|(HEAPU8[$419+3>>0]<<24);
         __ref($420,$420);
         $$1259$ph = $408;$$4247$ph = $$4247$ph290;
         label = 131;
         continue;
        }
        else if ((label|0) == 139) {
         label = 0;
         $421 = ((($$ph)) + 4|0);
         $422 = HEAPU8[$421>>0]|(HEAPU8[$421+1>>0]<<8)|(HEAPU8[$421+2>>0]<<16)|(HEAPU8[$421+3>>0]<<24);
         __ref($422,$422);
         $$1259$ph = $408;$$4247$ph = $$4247$ph290;
         label = 131;
         continue;
        }
        else if ((label|0) == 140) {
         label = 0;
         $423 = ((($$ph)) + 4|0);
         $424 = HEAPU8[$423>>0]|(HEAPU8[$423+1>>0]<<8)|(HEAPU8[$423+2>>0]<<16)|(HEAPU8[$423+3>>0]<<24);
         __ref($424,$424);
         $$1259$ph = $408;$$4247$ph = $$4247$ph290;
         label = 131;
         continue;
        }
        else if ((label|0) == 141) {
         label = 0;
         $425 = ((($$ph)) + 8|0);
         $426 = HEAP8[$425>>0]|0;
         $427 = $426 & 1;
         $428 = ($427<<24>>24)==(0);
         if (!($428)) {
          $$1259$ph = $408;$$4247$ph = $$4247$ph290;
          label = 131;
          continue;
         }
         $429 = ((($$ph)) + 4|0);
         $430 = HEAPU8[$429>>0]|(HEAPU8[$429+1>>0]<<8)|(HEAPU8[$429+2>>0]<<16)|(HEAPU8[$429+3>>0]<<24);
         $431 = ((($430)) + 58|0);
         $432 = HEAPU8[$431>>0]|(HEAPU8[$431+1>>0]<<8)|(HEAPU8[$431+2>>0]<<16)|(HEAPU8[$431+3>>0]<<24);
         $433 = ($432|0)==(2);
         if (!($433)) {
          $$1259$ph = $408;$$4247$ph = $$4247$ph290;
          label = 131;
          continue;
         }
         __ref($430,$430);
         $$1259$ph = $408;$$4247$ph = $$4247$ph290;
         label = 131;
         continue;
        }
       }
       $434 = ($$ph|0)==(0|0);
       if ($434) {
        ___assert_fail((1713|0),(1578|0),15601,(7205|0));
        // unreachable;
       } else {
        _mb_free($$ph);
        HEAP32[$6>>2] = 0;
        $$5248 = $$4247$ph290;
        label = 147;
        break;
       }
      }
     }
     $189 = ($188|0)==(0|0);
     $190 = ($181|0)==(0|0);
     $or$cond313 = $189 | $190;
     $191 = ((($0)) + 67|0);
     $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
     $193 = (__set_current_error($0,36,$192)|0);
     $194 = ($193<<24>>24)==(0);
     if ($or$cond313) {
      if ($194) {
       $$5248 = 0;
       label = 147;
       break;
      }
      __set_error_pos($0,0,0,0);
      $$5248 = 3;
      label = 147;
      break;
     } else {
      if ($194) {
       $$5248 = 0;
       label = 147;
       break;
      }
      $195 = HEAP32[$2>>2]|0;
      $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
      $197 = ((($196)) + 9|0);
      $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
      $199 = ((($196)) + 13|0);
      $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8);
      $201 = ((($196)) + 15|0);
      $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8);
      __set_error_pos($0,$198,$200,$202);
      $$5248 = 3;
      label = 147;
      break;
     }
    }
   }
   $151 = ((($0)) + 67|0);
   $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
   $153 = (__set_current_error($0,10,$152)|0);
   $154 = ($153<<24>>24)==(0);
   if ($154) {
    $$5248 = 0;
    label = 147;
   } else {
    __set_error_pos($0,0,0,0);
    $$5248 = 3;
    label = 147;
   }
  }
 } while(0);
 if ((label|0) == 10) {
  $38 = ((($0)) + 67|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = (__set_current_error($0,10,$39)|0);
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $$5248 = 0;
   label = 147;
  } else {
   __set_error_pos($0,0,0,0);
   $$5248 = 3;
   label = 147;
  }
 }
 if ((label|0) == 147) {
  $435 = HEAP32[$2>>2]|0;
  HEAP32[$1>>2] = $435;
  $$6 = $$5248;
 }
 STACKTOP = sp;return ($$6|0);
}
function __try_call_func_on_usertype_ref($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$035 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 $6 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 L1: do {
  if ($7) {
   $$1 = 0;
  } else {
   $8 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   $9 = ($8|0)==(9);
   if ($9) {
    $10 = ((($6)) + 4|0);
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $12 = ((($11)) + 4|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = ($14|0)==(7);
    if ($15) {
     HEAP8[$5>>0] = 0;
     $16 = ((($2)) + 4|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = (_strrchr($18,46)|0);
     $20 = ($19|0)==(0|0);
     do {
      if ($20) {
       $$0 = 0;
      } else {
       $21 = ((($19)) + 1|0);
       $22 = (__find_func($0,$21,$5)|0);
       $23 = ($22|0)==(0|0);
       if (!($23)) {
        $24 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $25 = ($24|0)==(0|0);
        if (!($25)) {
         $26 = HEAP8[$5>>0]|0;
         $27 = ($26<<24>>24)==(0);
         if ($27) {
          $$035 = $24;
         } else {
          $28 = ((($24)) + 4|0);
          $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
          $$035 = $29;
         }
         $30 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
         $31 = ((($30)) + 4|0);
         $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
         $33 = ((($0)) + 88|0);
         HEAP8[$33>>0]=$32&255;HEAP8[$33+1>>0]=($32>>8)&255;HEAP8[$33+2>>0]=($32>>16)&255;HEAP8[$33+3>>0]=$32>>24;
         $34 = ((($0)) + 126|0);
         $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
         (__ls_pushback($35,$21)|0);
         $36 = ($4|0)==(0|0);
         $37 = (FUNCTION_TABLE_iii[$$035 & 255]($0,$1)|0);
         if (!($36)) {
          HEAP32[$4>>2] = $37;
         }
         $38 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
         (__ls_popback($38)|0);
         $$0 = 1;
         break;
        }
       }
       $$1 = 0;
       break L1;
      }
     } while(0);
     $$1 = $$0;
    } else {
     $$1 = 0;
    }
   } else {
    $$1 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __core_call($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0130 = 0, $$0132 = 0, $$0132$ = 0, $$0140 = 0, $$0142 = 0, $$1133 = 0, $$1133148 = 0, $$1141 = 0, $$2134 = 0, $$3 = 0, $$3135$ = 0, $$3135165 = 0, $$4 = 0, $$byval_copy = 0, $$phi$trans$insert = 0, $$phi$trans$insert157 = 0, $$pr = 0, $$pre = 0, $$pre158 = 0, $$pre160 = 0;
 var $$pre162 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = sp + 25|0;
 $5 = sp + 24|0;
 HEAP32[$2>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16275,(7183|0));
  // unreachable;
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 HEAP32[$2>>2] = $10;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = $10;
 $$0132 = $11;
 L4: while(1) {
  $13 = HEAPU8[$$0132>>0]|(HEAPU8[$$0132+1>>0]<<8)|(HEAPU8[$$0132+2>>0]<<16)|(HEAPU8[$$0132+3>>0]<<24);
  switch ($13|0) {
  case 8:  {
   label = 5;
   break L4;
   break;
  }
  case 17:  {
   $$4 = $$0132;
   label = 29;
   break L4;
   break;
  }
  case 9:  {
   break;
  }
  default: {
   $$0130 = 0;$173 = $12;
   label = 50;
   break L4;
  }
  }
  $69 = ((($$0132)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ((($70)) + 4|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
  $74 = ($73|0)==(17);
  if (!($74)) {
   $$3135165 = $$0132;$94 = $70;
   label = 27;
   break;
  }
  $75 = ((($72)) + 4|0);
  $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
  $77 = ((($76)) + 58|0);
  $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
  $79 = ($78|0)==(2);
  if (!($79)) {
   $$0132 = $72;
   continue;
  }
  $80 = ((($70)) + 8|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = $81 & 3;
  $83 = ($82<<24>>24)!=(0);
  $84 = $83&1;
  $85 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
  $86 = (__search_identifier_in_scope_chain($0,0,$85,$84,0,0)|0);
  $87 = ($86|0)==(0|0);
  if ($87) {
   $$2134 = $$0132;
  } else {
   $88 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   $89 = ($88|0)==(0|0);
   $$0132$ = $89 ? $$0132 : $88;
   $$2134 = $$0132$;
  }
  $90 = HEAPU8[$$2134>>0]|(HEAPU8[$$2134+1>>0]<<8)|(HEAPU8[$$2134+2>>0]<<16)|(HEAPU8[$$2134+3>>0]<<24);
  $91 = ($90|0)==(9);
  if (!($91)) {
   $$0132 = $$2134;
   continue;
  }
  $$phi$trans$insert = ((($$2134)) + 4|0);
  $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
  $$phi$trans$insert157 = ((($$pre)) + 4|0);
  $$pre158 = HEAPU8[$$phi$trans$insert157>>0]|(HEAPU8[$$phi$trans$insert157+1>>0]<<8)|(HEAPU8[$$phi$trans$insert157+2>>0]<<16)|(HEAPU8[$$phi$trans$insert157+3>>0]<<24);
  $$pre160 = HEAPU8[$$pre158>>0]|(HEAPU8[$$pre158+1>>0]<<8)|(HEAPU8[$$pre158+2>>0]<<16)|(HEAPU8[$$pre158+3>>0]<<24);
  $92 = ($$pre160|0)==(17);
  if ($92) {
   $$0132 = $$pre158;
  } else {
   $$3135165 = $$2134;$94 = $$pre;
   label = 27;
   break;
  }
 }
 do {
  if ((label|0) == 5) {
   $14 = ((($$0132)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ((($15)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ($17|0)==(22|0);
   if ($18) {
    $19 = (_mb_attempt_open_bracket($0,$1)|0);
    $20 = ($19|0)==(0);
    if ($20) {
     $21 = ((($10)) + 8|0);
     $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
     HEAP32[$2>>2] = $22;
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
     $25 = ($24|0)==(9);
     if ($25) {
      $26 = ((($23)) + 4|0);
      $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      $29 = ((($27)) + 8|0);
      $30 = HEAP8[$29>>0]|0;
      $31 = $30 & 3;
      $32 = ($31<<24>>24)!=(0);
      $33 = $32&1;
      $34 = (__search_identifier_in_scope_chain($0,0,$28,$33,0,0)|0);
      $35 = ($34|0)==(0|0);
      if ($35) {
       $$1133148 = $23;
       label = 11;
      } else {
       $36 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
       $37 = ($36|0)==(0|0);
       if ($37) {
        $$1133148 = $23;
        label = 11;
       } else {
        $$1133 = $36;
        label = 10;
       }
      }
     } else {
      $$1133 = $23;
      label = 10;
     }
     if ((label|0) == 10) {
      $38 = ($$1133|0)==(0|0);
      if (!($38)) {
       $$1133148 = $$1133;
       label = 11;
      }
     }
     if ((label|0) == 11) {
      $39 = HEAPU8[$$1133148>>0]|(HEAPU8[$$1133148+1>>0]<<8)|(HEAPU8[$$1133148+2>>0]<<16)|(HEAPU8[$$1133148+3>>0]<<24);
      $40 = ($39|0)==(17);
      if ($40) {
       HEAP32[$3>>2] = 8192;
       $59 = ((($$1133148)) + 4|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
       $61 = ((($3)) + 4|0);
       HEAP32[$61>>2] = $60;
       $62 = ((($22)) + 8|0);
       $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
       HEAP32[$2>>2] = $63;
       HEAP32[$1>>2] = $63;
       $64 = (_mb_attempt_close_bracket($0,$1)|0);
       $65 = ($64|0)==(0);
       if (!($65)) {
        $$3 = $64;
        break;
       }
       ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
       $66 = (_mb_push_value($0,$1,$$byval_copy)|0);
       $67 = ($66|0)==(0);
       if (!($67)) {
        $$3 = $66;
        break;
       }
       $68 = HEAP32[$1>>2]|0;
       HEAP32[$2>>2] = $68;
       $$0130 = 0;$173 = $68;
       label = 50;
       break;
      }
     }
     $41 = ($22|0)==(0|0);
     if (!($41)) {
      $42 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      $43 = ($42|0)==(0|0);
      if (!($43)) {
       $44 = ((($0)) + 67|0);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $46 = (__set_current_error($0,52,$45)|0);
       $47 = ($46<<24>>24)==(0);
       if ($47) {
        $$3 = 0;
        break;
       }
       $48 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
       $49 = ((($48)) + 9|0);
       $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
       $51 = ((($48)) + 13|0);
       $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8);
       $53 = ((($48)) + 15|0);
       $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
       __set_error_pos($0,$50,$52,$54);
       $$3 = 3;
       break;
      }
     }
     $55 = ((($0)) + 67|0);
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     $57 = (__set_current_error($0,52,$56)|0);
     $58 = ($57<<24>>24)==(0);
     if ($58) {
      $$3 = 0;
     } else {
      __set_error_pos($0,0,0,0);
      $$3 = 3;
     }
    } else {
     $$3 = $19;
    }
   } else {
    $$0130 = 0;$173 = $12;
    label = 50;
   }
  }
  else if ((label|0) == 27) {
   $93 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
   $95 = ((($94)) + 8|0);
   $96 = HEAP8[$95>>0]|0;
   $97 = $96 & 3;
   $98 = ($97<<24>>24)!=(0);
   $99 = $98&1;
   $100 = (__search_identifier_in_scope_chain($0,0,$93,$99,0,0)|0);
   $101 = ($100|0)==(0|0);
   if ($101) {
    $$4 = $$3135165;
    label = 29;
   } else {
    $102 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
    $103 = ($102|0)==(0|0);
    $$3135$ = $103 ? $$3135165 : $102;
    $$4 = $$3135$;
    label = 29;
   }
  }
 } while(0);
 if ((label|0) == 29) {
  $104 = HEAPU8[$$4>>0]|(HEAPU8[$$4+1>>0]<<8)|(HEAPU8[$$4+2>>0]<<16)|(HEAPU8[$$4+3>>0]<<24);
  $105 = ($104|0)==(17);
  if ($105) {
   $111 = $$4;
  } else {
   $106 = ((($$4)) + 4|0);
   $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
   $108 = ((($107)) + 4|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $111 = $109;
  }
  $110 = ((($111)) + 4|0);
  $112 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
  $113 = ((($112)) + 58|0);
  $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
  $115 = ($114|0)==(2);
  if ($115) {
   $$1141 = $112;
  } else {
   HEAP8[$4>>0] = 0;
   HEAP8[$5>>0] = 0;
   $116 = ((($0)) + 93|0);
   $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
   $118 = ($117|0)==(0|0);
   $$pre162 = ((($112)) + 53|0);
   if ($118) {
    label = 35;
   } else {
    $119 = HEAPU8[$$pre162>>0]|(HEAPU8[$$pre162+1>>0]<<8)|(HEAPU8[$$pre162+2>>0]<<16)|(HEAPU8[$$pre162+3>>0]<<24);
    $120 = ($119|0)==(0|0);
    if ($120) {
     label = 41;
    } else {
     $121 = ((($117)) + 21|0);
     $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
     $123 = ((($119)) + 21|0);
     $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
     (__traverse_class($122,0,152,-1,1,$124,$4)|0);
     $125 = HEAPU8[$$pre162>>0]|(HEAPU8[$$pre162+1>>0]<<8)|(HEAPU8[$$pre162+2>>0]<<16)|(HEAPU8[$$pre162+3>>0]<<24);
     $126 = ((($125)) + 21|0);
     $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
     $128 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
     $129 = ((($128)) + 21|0);
     $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
     (__traverse_class($127,0,152,-1,1,$130,$5)|0);
     label = 35;
    }
   }
   do {
    if ((label|0) == 35) {
     $$pr = HEAPU8[$$pre162>>0]|(HEAPU8[$$pre162+1>>0]<<8)|(HEAPU8[$$pre162+2>>0]<<16)|(HEAPU8[$$pre162+3>>0]<<24);
     $131 = ($$pr|0)==(0|0);
     if ($131) {
      label = 41;
     } else {
      $132 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
      $133 = ($132|0)==(0|0);
      if (!($133)) {
       $134 = HEAP8[$4>>0]|0;
       $135 = HEAP8[$5>>0]|0;
       $136 = $135 | $134;
       $137 = ($136<<24>>24)==(0);
       if (!($137)) {
        label = 41;
        break;
       }
       $138 = ((($132)) + 21|0);
       $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
       $140 = ($139|0)==($$pr|0);
       if ($140) {
        label = 41;
        break;
       }
       $141 = ((($$pr)) + 21|0);
       $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
       $143 = ($142|0)==($132|0);
       if ($143) {
        label = 41;
        break;
       }
      }
      $144 = ((($112)) + 45|0);
      $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
      $146 = (__search_identifier_in_class($0,$$pr,$145,0,0)|0);
      $$0142 = $146;
     }
    }
   } while(0);
   if ((label|0) == 41) {
    $147 = ((($112)) + 45|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $149 = (__search_identifier_in_scope_chain($0,0,$148,0,0,0)|0);
    $$0142 = $149;
   }
   $150 = ($$0142|0)==(0|0);
   if ($150) {
    $$0140 = $112;
   } else {
    $151 = HEAPU8[$$0142>>0]|(HEAPU8[$$0142+1>>0]<<8)|(HEAPU8[$$0142+2>>0]<<16)|(HEAPU8[$$0142+3>>0]<<24);
    $152 = ($151|0)==(0|0);
    if ($152) {
     $$0140 = $112;
    } else {
     $153 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
     $154 = ($153|0)==(17);
     if ($154) {
      $160 = $151;
     } else {
      $155 = ((($151)) + 4|0);
      $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
      $157 = ((($156)) + 4|0);
      $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
      $160 = $158;
     }
     $159 = ((($160)) + 4|0);
     $161 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
     $$0140 = $161;
    }
   }
   $$1141 = $$0140;
  }
  $162 = ((($0)) + 97|0);
  $163 = HEAP8[$162>>0]|0;
  $164 = $163 | 1;
  HEAP8[$162>>0] = $164;
  $165 = (__eval_routine($0,$2,0,0,$$1141,131,132)|0);
  $166 = HEAP8[$162>>0]|0;
  $167 = $166 & -2;
  HEAP8[$162>>0] = $167;
  $168 = HEAP32[$2>>2]|0;
  $169 = ($168|0)==(0|0);
  $170 = $168;
  if ($169) {
   $$0130 = $165;$173 = $170;
   label = 50;
  } else {
   $171 = ((($168)) + 4|0);
   $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
   HEAP32[$2>>2] = $172;
   $$0130 = $165;$173 = $172;
   label = 50;
  }
 }
 if ((label|0) == 50) {
  HEAP32[$1>>2] = $173;
  $$3 = $$0130;
 }
 STACKTOP = sp;return ($$3|0);
}
function _mb_suspend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$0 = 3;
  } else {
   $6 = ((($0)) + 106|0);
   HEAP8[$6>>0]=$4&255;HEAP8[$6+1>>0]=($4>>8)&255;HEAP8[$6+2>>0]=($4>>16)&255;HEAP8[$6+3>>0]=$4>>24;
   $$0 = 0;
  }
 } else {
  $$0 = 3;
 }
 return ($$0|0);
}
function __is_valid_class_accessor_following_routine($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 $6 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $6;
 if (!($or$cond5)) {
  ___assert_fail((7124|0),(1578|0),8672,(7140|0));
  // unreachable;
 }
 $7 = ((($0)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($3|0)!=(0|0);
 if ($9) {
  HEAP32[$3>>2] = 0;
 }
 $10 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $11 = HEAP8[$10>>0]|0;
 $12 = (__is_accessor_char($11)|0);
 $13 = ($12<<24>>24)==(0);
 if ($13) {
  $$0 = 0;
 } else {
  $14 = ((($2)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(0|0);
  if ($16) {
   $$0 = 0;
  } else {
   $17 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ($18|0)==(8);
   if ($19) {
    $20 = ((($17)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ((($21)) + 4|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = ($23|0)==(23|0);
    if ($24) {
     $25 = ((($8)) + 20|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ($26|0)==(4096);
     if ($27) {
      $28 = ((($8)) + 24|0);
      $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
      $30 = ((($10)) + 1|0);
      $31 = (__search_identifier_in_class($0,$29,$30,0,0)|0);
      $32 = ($31|0)!=(0|0);
      $or$cond9 = $9 & $32;
      if ($or$cond9) {
       HEAP32[$3>>2] = $31;
       $$0 = 1;
      } else {
       $$0 = 1;
      }
     } else {
      $$0 = 0;
     }
    } else {
     $$0 = 0;
    }
   } else {
    $$0 = 0;
   }
  }
 }
 return ($$0|0);
}
function __core_enddef($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16476,(7111|0));
  // unreachable;
 }
 $4 = ((($0)) + 102|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = (__ls_popback($5)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  $8 = ((($0)) + 67|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = (__set_current_error($0,27,$9)|0);
  $11 = ($10<<24>>24)==(0);
  if ($11) {
   $$0 = 103;
  } else {
   __set_error_pos($0,0,0,0);
   $$0 = 3;
  }
 } else {
  HEAP32[$1>>2] = $6;
  $$0 = 103;
 }
 return ($$0|0);
}
function __is_operator($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $narrow = 0;
 var $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond25 = 0, $or$cond27 = 0, $or$cond29 = 0, $or$cond3 = 0, $or$cond31 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(24|0);
 $2 = ($0|0)==(16|0);
 $or$cond = $1 | $2;
 $3 = ($0|0)==(17|0);
 $or$cond3 = $3 | $or$cond;
 $4 = ($0|0)==(18|0);
 $or$cond5 = $4 | $or$cond3;
 $5 = ($0|0)==(19|0);
 $or$cond7 = $5 | $or$cond5;
 $6 = ($0|0)==(20|0);
 $or$cond9 = $6 | $or$cond7;
 $7 = ($0|0)==(21|0);
 $or$cond11 = $7 | $or$cond9;
 $8 = ($0|0)==(22|0);
 $or$cond13 = $8 | $or$cond11;
 $9 = ($0|0)==(23|0);
 $or$cond15 = $9 | $or$cond13;
 $10 = ($0|0)==(29|0);
 $or$cond17 = $10 | $or$cond15;
 $11 = ($0|0)==(26|0);
 $or$cond19 = $11 | $or$cond17;
 $12 = ($0|0)==(25|0);
 $or$cond21 = $12 | $or$cond19;
 $13 = ($0|0)==(28|0);
 $or$cond23 = $13 | $or$cond21;
 $14 = ($0|0)==(27|0);
 $or$cond25 = $14 | $or$cond23;
 $15 = ($0|0)==(30|0);
 $or$cond27 = $15 | $or$cond25;
 $16 = ($0|0)==(31|0);
 $or$cond29 = $16 | $or$cond27;
 $17 = ($0|0)==(32|0);
 $or$cond31 = $17 | $or$cond29;
 $18 = ($0|0)==(35|0);
 $narrow = $18 | $or$cond31;
 $19 = $narrow&1;
 return ($19|0);
}
function __skip_to($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $$039 = 0, $$in = 0, $$lcssa = 0, $$old = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),11495,(6845|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = ($6|0)==(0|0);
 L4: do {
  if ($7) {
   $$0$lcssa = 0;$$lcssa = 0;
   label = 4;
  } else {
   $$in = $6;
   while(1) {
    $26 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8)|(HEAPU8[$$in+2>>0]<<16)|(HEAPU8[$$in+3>>0]<<24);
    HEAP32[$1>>2] = $$in;
    $27 = ((($$in)) + 8|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $30 = ($29|0)==(8);
    if ($30) {
     $31 = ((($26)) + 4|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = ((($32)) + 4|0);
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ($34|0)==($2|0);
     $36 = ($29|0)==($3|0);
     $or$cond47 = $35 | $36;
     if ($or$cond47) {
      $$039 = 0;
      break L4;
     }
    } else {
     $$old = ($29|0)==($3|0);
     if ($$old) {
      $$039 = 0;
      break L4;
     }
    }
    $37 = ($28|0)==(0|0);
    if ($37) {
     $$0$lcssa = $$in;$$lcssa = $$in;
     label = 4;
     break;
    } else {
     $$in = $28;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 4) {
   $8 = ($$0$lcssa|0)==(0|0);
   if (!($8)) {
    $9 = HEAPU8[$$lcssa>>0]|(HEAPU8[$$lcssa+1>>0]<<8)|(HEAPU8[$$lcssa+2>>0]<<16)|(HEAPU8[$$lcssa+3>>0]<<24);
    $10 = ($9|0)==(0|0);
    if (!($10)) {
     $11 = ((($0)) + 67|0);
     $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
     $13 = (__set_current_error($0,10,$12)|0);
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$039 = 0;
      break;
     }
     $15 = HEAPU8[$$0$lcssa>>0]|(HEAPU8[$$0$lcssa+1>>0]<<8)|(HEAPU8[$$0$lcssa+2>>0]<<16)|(HEAPU8[$$0$lcssa+3>>0]<<24);
     $16 = ((($15)) + 9|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     $18 = ((($15)) + 13|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
     $20 = ((($15)) + 15|0);
     $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
     __set_error_pos($0,$17,$19,$21);
     $$039 = 3;
     break;
    }
   }
   $22 = ((($0)) + 67|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = (__set_current_error($0,10,$23)|0);
   $25 = ($24<<24>>24)==(0);
   if ($25) {
    $$039 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$039 = 3;
   }
  }
 } while(0);
 return ($$039|0);
}
function __destroy_lazy_objects($0) {
 $0 = $0|0;
 var $$029 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),10603,(6769|0));
  // unreachable;
 }
 $2 = ((($0)) + 43|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if ($4) {
  ___assert_fail((6791|0),(1578|0),10605,(6769|0));
  // unreachable;
 }
 $5 = ((($3)) + 8|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 if ($7) {
  $23 = $3;
 } else {
  $$029 = $6;
  while(1) {
   $8 = HEAPU8[$$029>>0]|(HEAPU8[$$029+1>>0]<<8)|(HEAPU8[$$029+2>>0]<<16)|(HEAPU8[$$029+3>>0]<<24);
   $9 = ((($$029)) + 12|0);
   __try_clear_intermediate_value($8,$0);
   $10 = HEAPU8[$$029>>0]|(HEAPU8[$$029+1>>0]<<8)|(HEAPU8[$$029+2>>0]<<16)|(HEAPU8[$$029+3>>0]<<24);
   $11 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   (__destroy_object($10,$11)|0);
   $12 = ((($$029)) + 8|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ((($$029)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ((($15)) + 8|0);
   HEAP8[$16>>0]=$13&255;HEAP8[$16+1>>0]=($13>>8)&255;HEAP8[$16+2>>0]=($13>>16)&255;HEAP8[$16+3>>0]=$13>>24;
   $17 = ($13|0)==(0|0);
   if (!($17)) {
    $18 = $15;
    $19 = ((($13)) + 4|0);
    HEAP8[$19>>0]=$18&255;HEAP8[$19+1>>0]=($18>>8)&255;HEAP8[$19+2>>0]=($18>>16)&255;HEAP8[$19+3>>0]=$18>>24;
   }
   _mb_free($$029);
   $20 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ((($21)) + -1|0);
   HEAP8[$20>>0]=$22&255;HEAP8[$20+1>>0]=($22>>8)&255;HEAP8[$20+2>>0]=($22>>16)&255;HEAP8[$20+3>>0]=$22>>24;
   if ($17) {
    $23 = $20;
    break;
   } else {
    $$029 = $13;
   }
  }
 }
 __ls_clear($23);
 return;
}
function __stepped($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $1;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1649|0),(1578|0),10898,(6760|0));
  // unreachable;
 }
 $4 = ((($0)) + 155|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $$0 = 0;
  } else {
   $7 = ($1|0)==(0|0);
   if (!($7)) {
    $8 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
    $9 = ($8|0)==(0|0);
    if (!($9)) {
     $10 = ((($0)) + 67|0);
     $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
     $12 = ((($8)) + 9|0);
     $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $14 = ((($8)) + 13|0);
     $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8);
     $16 = ((($8)) + 15|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8);
     $18 = (FUNCTION_TABLE_iiiiiii[$5 & 255]($0,$2,$11,$13,$15,$17)|0);
     $$0 = $18;
     break;
    }
   }
   $19 = ((($0)) + 67|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = (FUNCTION_TABLE_iiiiiii[$5 & 255]($0,$2,$20,-1,0,0)|0);
   $$0 = $21;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __try_clear_intermediate_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),10545,(6815|0));
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = ((($1)) + 75|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = ((($5)) + 20|0);
  $7 = (__compare_public_value_and_internal_object($6,$0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = ((($5)) + 24|0);
   HEAP8[$9>>0]=0&255;HEAP8[$9+1>>0]=(0>>8)&255;HEAP8[$9+2>>0]=(0>>16)&255;HEAP8[$9+3>>0]=0>>24;
   HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
  }
 }
 return;
}
function __compare_public_value_and_internal_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 HEAP32[$2>>2] = 0;
 (__internal_object_to_public_value($1,$2)|0);
 $4 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $5 = HEAP32[$2>>2]|0;
 $6 = ($4|0)==($5|0);
 L1: do {
  if ($6) {
   do {
    switch ($4|0) {
    case 0:  {
     $$0 = 0;
     break L1;
     break;
    }
    case 2:  {
     $8 = ((($0)) + 4|0);
     $9 = (_mb_memcmp($8,$3)|0);
     $$0 = $9;
     break L1;
     break;
    }
    case 4:  {
     $10 = ((($0)) + 4|0);
     $11 = (_mb_memcmp($10,$3)|0);
     $$0 = $11;
     break L1;
     break;
    }
    case 8:  {
     $12 = ((($0)) + 4|0);
     $13 = (_mb_memcmp($12,$3)|0);
     $$0 = $13;
     break L1;
     break;
    }
    case 16:  {
     $14 = ((($0)) + 4|0);
     $15 = (_mb_memcmp($14,$3)|0);
     $$0 = $15;
     break L1;
     break;
    }
    case 32:  {
     $16 = ((($0)) + 4|0);
     $17 = (_mb_memcmp($16,$3)|0);
     $$0 = $17;
     break L1;
     break;
    }
    case 64:  {
     $18 = ((($0)) + 4|0);
     $19 = (_mb_memcmp($18,$3)|0);
     $$0 = $19;
     break L1;
     break;
    }
    case 128:  {
     $20 = ((($0)) + 4|0);
     $21 = (_mb_memcmp($20,$3)|0);
     $$0 = $21;
     break L1;
     break;
    }
    case 256:  {
     $22 = ((($0)) + 4|0);
     $23 = (_mb_memcmp($22,$3)|0);
     $$0 = $23;
     break L1;
     break;
    }
    case 512:  {
     $24 = ((($0)) + 4|0);
     $25 = (_mb_memcmp($24,$3)|0);
     $$0 = $25;
     break L1;
     break;
    }
    case 1024:  {
     $26 = ((($0)) + 4|0);
     $27 = (_mb_memcmp($26,$3)|0);
     $$0 = $27;
     break L1;
     break;
    }
    case 2048:  {
     $28 = ((($0)) + 4|0);
     $29 = (_mb_memcmp($28,$3)|0);
     $$0 = $29;
     break L1;
     break;
    }
    case 4096:  {
     $30 = ((($0)) + 4|0);
     $31 = (_mb_memcmp($30,$3)|0);
     $$0 = $31;
     break L1;
     break;
    }
    case 8192:  {
     $32 = ((($0)) + 4|0);
     $33 = (_mb_memcmp($32,$3)|0);
     $$0 = $33;
     break L1;
     break;
    }
    default: {
     $34 = ((($0)) + 4|0);
     $35 = (_mb_memcmp($34,$3)|0);
     $$0 = $35;
     break L1;
    }
    }
   } while(0);
  } else {
   $7 = (($4) - ($5))|0;
   $$0 = $7;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _mb_memcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$01 = 0, $$029 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = 3;
 while(1) {
  $4 = (($0) + ($$01)|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = (($1) + ($$01)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = ($5&255)<($7&255);
  if ($8) {
   $$029 = -1;
   break;
  }
  $9 = ($5&255)>($7&255);
  if ($9) {
   $$029 = 1;
   break;
  }
  $2 = (($$01) + -1)|0;
  $3 = ($$01|0)>(0);
  if ($3) {
   $$01 = $2;
  } else {
   $$029 = 0;
   break;
  }
 }
 return ($$029|0);
}
function __core_add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$0 = 0, $$0159 = 0, $$0160 = 0, $$0161 = 0, $$pn = 0, $$pn164 = 0, $$pre$phi$phZ2D = 0, $$sink = 0.0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in172 = 0, $$sroa$5$0173 = 0, $$sroa$5$0177 = 0, $$sroa$546$0 = 0, $$sroa$546$0$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0, $154 = 0.0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0.0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14828,(7101|0));
  // unreachable;
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($7)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ((($7)) + 8|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $14 = ($13|0)==(9);
 if ($14) {
  $15 = ((($8)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($16)) + 4|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $$0160 = $18;
 } else {
  $$0160 = $8;
 }
 $19 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $20 = ($19|0)==(9);
 if ($20) {
  $21 = ((($10)) + 4|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ((($22)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $$0161 = $24;
 } else {
  $$0161 = $10;
 }
 $25 = ((($2)) + 4|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$2>>2] = 0;
 $26 = ((($3)) + 4|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$3>>2] = 0;
 $27 = ((($4)) + 4|0);
 HEAP32[$27>>2] = 0;
 HEAP32[$4>>2] = 0;
 $28 = HEAPU8[$$0160>>0]|(HEAPU8[$$0160+1>>0]<<8)|(HEAPU8[$$0160+2>>0]<<16)|(HEAPU8[$$0160+3>>0]<<24);
 $29 = ($28|0)==(7);
 if ($29) {
  $30 = ((($$0160)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $32 = ((($31)) + 45|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ($33|0)==(0|0);
  if ($34) {
   label = 11;
  } else {
   $35 = ((($33)) + 4|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = ($36|0)==(0|0);
   if ($37) {
    label = 11;
   } else {
    (__internal_object_to_public_value($$0160,$2)|0);
    (__internal_object_to_public_value($$0161,$3)|0);
    $38 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $39 = ((($38)) + 45|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = ((($40)) + 4|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = (FUNCTION_TABLE_iiiiii[$42 & 0]($0,$1,$2,$3,$4)|0);
    (__public_value_to_internal_object($4,$12)|0);
    $$0159 = $43;
    label = 15;
   }
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $44 = HEAPU8[$$0161>>0]|(HEAPU8[$$0161+1>>0]<<8)|(HEAPU8[$$0161+2>>0]<<16)|(HEAPU8[$$0161+3>>0]<<24);
   $45 = ($44|0)==(7);
   if ($45) {
    $46 = ((($$0161)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ((($47)) + 45|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     $51 = ((($49)) + 4|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ($52|0)==(0|0);
     if (!($53)) {
      (__internal_object_to_public_value($$0160,$2)|0);
      (__internal_object_to_public_value($$0161,$3)|0);
      $54 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $55 = ((($54)) + 45|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 4|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $59 = (FUNCTION_TABLE_iiiiii[$58 & 0]($0,$1,$2,$3,$4)|0);
      (__public_value_to_internal_object($4,$12)|0);
      $$0159 = $59;
      label = 15;
      break;
     }
    }
   }
   $60 = HEAP32[$1>>2]|0;
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = (__is_string($61)|0);
   $63 = ($62<<24>>24)==(0);
   if ($63) {
    $64 = HEAP32[$1>>2]|0;
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = (__is_string($66)|0);
    $68 = ($67<<24>>24)==(0);
    if ($68) {
     $120 = HEAP32[$1>>2]|0;
     $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $122 = ((($120)) + 4|0);
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $124 = ((($120)) + 8|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
     switch ($126|0) {
     case 2:  {
      $$pn = $121;$141 = 1;
      break;
     }
     case 9:  {
      $127 = ((($121)) + 4|0);
      $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
      $129 = ((($128)) + 4|0);
      $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
      $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
      $132 = ($131|0)==(2);
      $$pn = $130;$141 = $132;
      break;
     }
     default: {
      $$pn = $121;$141 = 0;
     }
     }
     $$sroa$546$0$in = ((($$pn)) + 4|0);
     $$sroa$546$0 = HEAPU8[$$sroa$546$0$in>>0]|(HEAPU8[$$sroa$546$0$in+1>>0]<<8)|(HEAPU8[$$sroa$546$0$in+2>>0]<<16)|(HEAPU8[$$sroa$546$0$in+3>>0]<<24);
     $133 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
     switch ($133|0) {
     case 2:  {
      $$pn164 = $123;$140 = 1;
      label = 35;
      break;
     }
     case 9:  {
      $134 = ((($123)) + 4|0);
      $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
      $136 = ((($135)) + 4|0);
      $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
      $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
      $139 = ($138|0)==(2);
      $$pn164 = $137;$140 = $139;
      label = 35;
      break;
     }
     default: {
      $$sroa$5$0$in172 = ((($123)) + 4|0);
      $$sroa$5$0173 = HEAPU8[$$sroa$5$0$in172>>0]|(HEAPU8[$$sroa$5$0$in172+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in172+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in172+3>>0]<<24);
      $$sroa$5$0177 = $$sroa$5$0173;$153 = 0;
      label = 38;
     }
     }
     do {
      if ((label|0) == 35) {
       $$sroa$5$0$in = ((($$pn164)) + 4|0);
       $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
       $brmerge$demorgan = $141 & $140;
       if ($brmerge$demorgan) {
        $142 = (($$sroa$5$0) + ($$sroa$546$0))|0;
        $143 = (+($142|0));
        $144 = (+($$sroa$546$0|0));
        $145 = (+($$sroa$5$0|0));
        $146 = $144 + $145;
        $147 = $146 == $143;
        if ($147) {
         HEAP8[$125>>0]=2&255;HEAP8[$125+1>>0]=(2>>8)&255;HEAP8[$125+2>>0]=(2>>16)&255;HEAP8[$125+3>>0]=2>>24;
         $155 = ((($125)) + 4|0);
         HEAP8[$155>>0]=$142&255;HEAP8[$155+1>>0]=($142>>8)&255;HEAP8[$155+2>>0]=($142>>16)&255;HEAP8[$155+3>>0]=$142>>24;
         $$0 = 0;
         break L14;
        } else {
         HEAP8[$125>>0]=3&255;HEAP8[$125+1>>0]=(3>>8)&255;HEAP8[$125+2>>0]=(3>>16)&255;HEAP8[$125+3>>0]=3>>24;
         $$pre$phi$phZ2D = $125;$$sink = $146;
         break;
        }
       } else {
        $$sroa$5$0177 = $$sroa$5$0;$153 = $140;
        label = 38;
       }
      }
     } while(0);
     if ((label|0) == 38) {
      HEAP8[$125>>0]=3&255;HEAP8[$125+1>>0]=(3>>8)&255;HEAP8[$125+2>>0]=(3>>16)&255;HEAP8[$125+3>>0]=3>>24;
      $148 = (+($$sroa$546$0|0));
      $149 = (HEAP32[tempDoublePtr>>2]=$$sroa$546$0,+HEAPF32[tempDoublePtr>>2]);
      $150 = $141 ? $148 : $149;
      $151 = (+($$sroa$5$0177|0));
      $152 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0177,+HEAPF32[tempDoublePtr>>2]);
      $$ = $153 ? $151 : $152;
      $154 = $150 + $$;
      $$pre$phi$phZ2D = $125;$$sink = $154;
     }
     $156 = ((($125)) + 4|0);
     HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$156>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$156+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$156+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$156+3>>0]=HEAP8[tempDoublePtr+3>>0];
     $157 = (~~(($$sink)));
     $158 = (+($157|0));
     $159 = $$sink == $158;
     if (!($159)) {
      $$0 = 0;
      break;
     }
     HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
     $160 = (~~(($$sink)));
     $161 = ((($125)) + 4|0);
     HEAP8[$161>>0]=$160&255;HEAP8[$161+1>>0]=($160>>8)&255;HEAP8[$161+2>>0]=($160>>16)&255;HEAP8[$161+3>>0]=$160>>24;
     $$0 = 0;
     break;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   $71 = (__is_string($70)|0);
   $72 = ($71<<24>>24)==(0);
   if (!($72)) {
    $73 = HEAP32[$1>>2]|0;
    $74 = ((($73)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = (__is_string($75)|0);
    $77 = ($76<<24>>24)==(0);
    if (!($77)) {
     $78 = HEAP32[$1>>2]|0;
     $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
     $80 = ((($78)) + 4|0);
     $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
     $82 = ((($78)) + 8|0);
     $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
     HEAP8[$83>>0]=4&255;HEAP8[$83+1>>0]=(4>>8)&255;HEAP8[$83+2>>0]=(4>>16)&255;HEAP8[$83+3>>0]=4>>24;
     $84 = ((($83)) + 4|0);
     $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     $86 = ($85|0)==(0|0);
     if (!($86)) {
      _mb_free($85);
      HEAP8[$84>>0]=0&255;HEAP8[$84+1>>0]=(0>>8)&255;HEAP8[$84+2>>0]=(0>>16)&255;HEAP8[$84+3>>0]=0>>24;
     }
     $87 = (__extract_string($79)|0);
     $88 = (__extract_string($81)|0);
     $89 = (_strlen($87)|0);
     $90 = (_strlen($88)|0);
     $91 = (($89) + 1)|0;
     $92 = (($91) + ($90))|0;
     $93 = (_mb_malloc($92)|0);
     HEAP8[$84>>0]=$93&255;HEAP8[$84+1>>0]=($93>>8)&255;HEAP8[$84+2>>0]=($93>>16)&255;HEAP8[$84+3>>0]=$93>>24;
     $94 = (_strlen($87)|0);
     $95 = (_strlen($88)|0);
     $96 = (($94) + 1)|0;
     $97 = (($96) + ($95))|0;
     _memset(($93|0),0,($97|0))|0;
     $98 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     (_strcat($98,$87)|0);
     $99 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     (_strcat($99,$88)|0);
     $$0 = 0;
     break;
    }
   }
   $100 = HEAP32[$1>>2]|0;
   $101 = ($100|0)==(0|0);
   if (!($101)) {
    $102 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
    $103 = ($102|0)==(0|0);
    if (!($103)) {
     $104 = ((($0)) + 67|0);
     $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
     $106 = (__set_current_error($0,17,$105)|0);
     $107 = ($106<<24>>24)==(0);
     if ($107) {
      $$0 = 0;
      break;
     }
     $108 = HEAP32[$1>>2]|0;
     $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
     $110 = ((($109)) + 9|0);
     $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
     $112 = ((($109)) + 13|0);
     $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
     $114 = ((($109)) + 15|0);
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8);
     __set_error_pos($0,$111,$113,$115);
     $$0 = 3;
     break;
    }
   }
   $116 = ((($0)) + 67|0);
   $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
   $118 = (__set_current_error($0,17,$117)|0);
   $119 = ($118<<24>>24)==(0);
   if ($119) {
    $$0 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$0 = 3;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $$0 = $$0159;
 }
 STACKTOP = sp;return ($$0|0);
}
function __core_min($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$0104 = 0, $$0104123 = 0, $$0105 = 0, $$0106 = 0, $$pn = 0, $$pn108 = 0, $$pre$phi$phZ2D = 0, $$sink = 0.0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in116 = 0, $$sroa$5$0117 = 0, $$sroa$5$0121 = 0, $$sroa$546$0 = 0, $$sroa$546$0$in = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0;
 var $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14850,(7091|0));
  // unreachable;
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($7)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ((($7)) + 8|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $14 = ($13|0)==(9);
 if ($14) {
  $15 = ((($8)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($16)) + 4|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $$0105 = $18;
 } else {
  $$0105 = $8;
 }
 $19 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $20 = ($19|0)==(9);
 if ($20) {
  $21 = ((($10)) + 4|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ((($22)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $$0106 = $24;
 } else {
  $$0106 = $10;
 }
 $25 = ((($2)) + 4|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$2>>2] = 0;
 $26 = ((($3)) + 4|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$3>>2] = 0;
 $27 = ((($4)) + 4|0);
 HEAP32[$27>>2] = 0;
 HEAP32[$4>>2] = 0;
 $28 = HEAPU8[$$0105>>0]|(HEAPU8[$$0105+1>>0]<<8)|(HEAPU8[$$0105+2>>0]<<16)|(HEAPU8[$$0105+3>>0]<<24);
 $29 = ($28|0)==(7);
 if ($29) {
  $30 = ((($$0105)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $32 = ((($31)) + 45|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ($33|0)==(0|0);
  if ($34) {
   label = 11;
  } else {
   $35 = ((($33)) + 8|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = ($36|0)==(0|0);
   if ($37) {
    label = 11;
   } else {
    (__internal_object_to_public_value($$0105,$2)|0);
    (__internal_object_to_public_value($$0106,$3)|0);
    $38 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $39 = ((($38)) + 45|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = ((($40)) + 8|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = (FUNCTION_TABLE_iiiiii[$42 & 0]($0,$1,$2,$3,$4)|0);
    (__public_value_to_internal_object($4,$12)|0);
    $$0104 = $43;
    label = 15;
   }
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $44 = HEAPU8[$$0106>>0]|(HEAPU8[$$0106+1>>0]<<8)|(HEAPU8[$$0106+2>>0]<<16)|(HEAPU8[$$0106+3>>0]<<24);
   $45 = ($44|0)==(7);
   if ($45) {
    $46 = ((($$0106)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ((($47)) + 45|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     $51 = ((($49)) + 8|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ($52|0)==(0|0);
     if (!($53)) {
      (__internal_object_to_public_value($$0105,$2)|0);
      (__internal_object_to_public_value($$0106,$3)|0);
      $54 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $55 = ((($54)) + 45|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 8|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $59 = (FUNCTION_TABLE_iiiiii[$58 & 0]($0,$1,$2,$3,$4)|0);
      (__public_value_to_internal_object($4,$12)|0);
      $$0104 = $59;
      label = 15;
      break;
     }
    }
   }
   $60 = HEAP32[$1>>2]|0;
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = ((($60)) + 4|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = ((($60)) + 8|0);
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   $66 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   switch ($66|0) {
   case 2:  {
    $$pn = $61;$81 = 1;
    break;
   }
   case 9:  {
    $67 = ((($61)) + 4|0);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = ((($68)) + 4|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = ($71|0)==(2);
    $$pn = $70;$81 = $72;
    break;
   }
   default: {
    $$pn = $61;$81 = 0;
   }
   }
   $$sroa$546$0$in = ((($$pn)) + 4|0);
   $$sroa$546$0 = HEAPU8[$$sroa$546$0$in>>0]|(HEAPU8[$$sroa$546$0$in+1>>0]<<8)|(HEAPU8[$$sroa$546$0$in+2>>0]<<16)|(HEAPU8[$$sroa$546$0$in+3>>0]<<24);
   $73 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   switch ($73|0) {
   case 2:  {
    $$pn108 = $63;$80 = 1;
    label = 22;
    break;
   }
   case 9:  {
    $74 = ((($63)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ((($75)) + 4|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ($78|0)==(2);
    $$pn108 = $77;$80 = $79;
    label = 22;
    break;
   }
   default: {
    $$sroa$5$0$in116 = ((($63)) + 4|0);
    $$sroa$5$0117 = HEAPU8[$$sroa$5$0$in116>>0]|(HEAPU8[$$sroa$5$0$in116+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in116+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in116+3>>0]<<24);
    $$sroa$5$0121 = $$sroa$5$0117;$93 = 0;
    label = 25;
   }
   }
   do {
    if ((label|0) == 22) {
     $$sroa$5$0$in = ((($$pn108)) + 4|0);
     $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
     $brmerge$demorgan = $81 & $80;
     if ($brmerge$demorgan) {
      $82 = (($$sroa$546$0) - ($$sroa$5$0))|0;
      $83 = (+($82|0));
      $84 = (+($$sroa$546$0|0));
      $85 = (+($$sroa$5$0|0));
      $86 = $84 - $85;
      $87 = $86 == $83;
      if ($87) {
       HEAP8[$65>>0]=2&255;HEAP8[$65+1>>0]=(2>>8)&255;HEAP8[$65+2>>0]=(2>>16)&255;HEAP8[$65+3>>0]=2>>24;
       $95 = ((($65)) + 4|0);
       HEAP8[$95>>0]=$82&255;HEAP8[$95+1>>0]=($82>>8)&255;HEAP8[$95+2>>0]=($82>>16)&255;HEAP8[$95+3>>0]=$82>>24;
       $$0104123 = 0;
       break L14;
      } else {
       HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
       $$pre$phi$phZ2D = $65;$$sink = $86;
       break;
      }
     } else {
      $$sroa$5$0121 = $$sroa$5$0;$93 = $80;
      label = 25;
     }
    }
   } while(0);
   if ((label|0) == 25) {
    HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
    $88 = (+($$sroa$546$0|0));
    $89 = (HEAP32[tempDoublePtr>>2]=$$sroa$546$0,+HEAPF32[tempDoublePtr>>2]);
    $90 = $81 ? $88 : $89;
    $91 = (+($$sroa$5$0121|0));
    $92 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0121,+HEAPF32[tempDoublePtr>>2]);
    $$ = $93 ? $91 : $92;
    $94 = $90 - $$;
    $$pre$phi$phZ2D = $65;$$sink = $94;
   }
   $96 = ((($65)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$96>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$96+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$96+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$96+3>>0]=HEAP8[tempDoublePtr+3>>0];
   $97 = (~~(($$sink)));
   $98 = (+($97|0));
   $99 = $$sink == $98;
   if ($99) {
    HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
    $100 = (~~(($$sink)));
    $101 = ((($65)) + 4|0);
    HEAP8[$101>>0]=$100&255;HEAP8[$101+1>>0]=($100>>8)&255;HEAP8[$101+2>>0]=($100>>16)&255;HEAP8[$101+3>>0]=$100>>24;
    $$0104123 = 0;
   } else {
    $$0104123 = 0;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $$0104123 = $$0104;
 }
 STACKTOP = sp;return ($$0104123|0);
}
function __core_mul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$0104 = 0, $$0104123 = 0, $$0105 = 0, $$0106 = 0, $$pn = 0, $$pn108 = 0, $$pre$phi$phZ2D = 0, $$sink = 0.0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in116 = 0, $$sroa$5$0117 = 0, $$sroa$5$0121 = 0, $$sroa$546$0 = 0, $$sroa$546$0$in = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0;
 var $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14866,(7081|0));
  // unreachable;
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($7)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ((($7)) + 8|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $14 = ($13|0)==(9);
 if ($14) {
  $15 = ((($8)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($16)) + 4|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $$0105 = $18;
 } else {
  $$0105 = $8;
 }
 $19 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $20 = ($19|0)==(9);
 if ($20) {
  $21 = ((($10)) + 4|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ((($22)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $$0106 = $24;
 } else {
  $$0106 = $10;
 }
 $25 = ((($2)) + 4|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$2>>2] = 0;
 $26 = ((($3)) + 4|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$3>>2] = 0;
 $27 = ((($4)) + 4|0);
 HEAP32[$27>>2] = 0;
 HEAP32[$4>>2] = 0;
 $28 = HEAPU8[$$0105>>0]|(HEAPU8[$$0105+1>>0]<<8)|(HEAPU8[$$0105+2>>0]<<16)|(HEAPU8[$$0105+3>>0]<<24);
 $29 = ($28|0)==(7);
 if ($29) {
  $30 = ((($$0105)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $32 = ((($31)) + 45|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ($33|0)==(0|0);
  if ($34) {
   label = 11;
  } else {
   $35 = ((($33)) + 12|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = ($36|0)==(0|0);
   if ($37) {
    label = 11;
   } else {
    (__internal_object_to_public_value($$0105,$2)|0);
    (__internal_object_to_public_value($$0106,$3)|0);
    $38 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $39 = ((($38)) + 45|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = ((($40)) + 12|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = (FUNCTION_TABLE_iiiiii[$42 & 0]($0,$1,$2,$3,$4)|0);
    (__public_value_to_internal_object($4,$12)|0);
    $$0104 = $43;
    label = 15;
   }
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $44 = HEAPU8[$$0106>>0]|(HEAPU8[$$0106+1>>0]<<8)|(HEAPU8[$$0106+2>>0]<<16)|(HEAPU8[$$0106+3>>0]<<24);
   $45 = ($44|0)==(7);
   if ($45) {
    $46 = ((($$0106)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ((($47)) + 45|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     $51 = ((($49)) + 12|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ($52|0)==(0|0);
     if (!($53)) {
      (__internal_object_to_public_value($$0105,$2)|0);
      (__internal_object_to_public_value($$0106,$3)|0);
      $54 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $55 = ((($54)) + 45|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 12|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $59 = (FUNCTION_TABLE_iiiiii[$58 & 0]($0,$1,$2,$3,$4)|0);
      (__public_value_to_internal_object($4,$12)|0);
      $$0104 = $59;
      label = 15;
      break;
     }
    }
   }
   $60 = HEAP32[$1>>2]|0;
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = ((($60)) + 4|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = ((($60)) + 8|0);
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   $66 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   switch ($66|0) {
   case 2:  {
    $$pn = $61;$81 = 1;
    break;
   }
   case 9:  {
    $67 = ((($61)) + 4|0);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = ((($68)) + 4|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = ($71|0)==(2);
    $$pn = $70;$81 = $72;
    break;
   }
   default: {
    $$pn = $61;$81 = 0;
   }
   }
   $$sroa$546$0$in = ((($$pn)) + 4|0);
   $$sroa$546$0 = HEAPU8[$$sroa$546$0$in>>0]|(HEAPU8[$$sroa$546$0$in+1>>0]<<8)|(HEAPU8[$$sroa$546$0$in+2>>0]<<16)|(HEAPU8[$$sroa$546$0$in+3>>0]<<24);
   $73 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   switch ($73|0) {
   case 2:  {
    $$pn108 = $63;$80 = 1;
    label = 22;
    break;
   }
   case 9:  {
    $74 = ((($63)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ((($75)) + 4|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ($78|0)==(2);
    $$pn108 = $77;$80 = $79;
    label = 22;
    break;
   }
   default: {
    $$sroa$5$0$in116 = ((($63)) + 4|0);
    $$sroa$5$0117 = HEAPU8[$$sroa$5$0$in116>>0]|(HEAPU8[$$sroa$5$0$in116+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in116+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in116+3>>0]<<24);
    $$sroa$5$0121 = $$sroa$5$0117;$93 = 0;
    label = 25;
   }
   }
   do {
    if ((label|0) == 22) {
     $$sroa$5$0$in = ((($$pn108)) + 4|0);
     $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
     $brmerge$demorgan = $81 & $80;
     if ($brmerge$demorgan) {
      $82 = Math_imul($$sroa$5$0, $$sroa$546$0)|0;
      $83 = (+($82|0));
      $84 = (+($$sroa$546$0|0));
      $85 = (+($$sroa$5$0|0));
      $86 = $84 * $85;
      $87 = $86 == $83;
      if ($87) {
       HEAP8[$65>>0]=2&255;HEAP8[$65+1>>0]=(2>>8)&255;HEAP8[$65+2>>0]=(2>>16)&255;HEAP8[$65+3>>0]=2>>24;
       $95 = ((($65)) + 4|0);
       HEAP8[$95>>0]=$82&255;HEAP8[$95+1>>0]=($82>>8)&255;HEAP8[$95+2>>0]=($82>>16)&255;HEAP8[$95+3>>0]=$82>>24;
       $$0104123 = 0;
       break L14;
      } else {
       HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
       $$pre$phi$phZ2D = $65;$$sink = $86;
       break;
      }
     } else {
      $$sroa$5$0121 = $$sroa$5$0;$93 = $80;
      label = 25;
     }
    }
   } while(0);
   if ((label|0) == 25) {
    HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
    $88 = (+($$sroa$546$0|0));
    $89 = (HEAP32[tempDoublePtr>>2]=$$sroa$546$0,+HEAPF32[tempDoublePtr>>2]);
    $90 = $81 ? $88 : $89;
    $91 = (+($$sroa$5$0121|0));
    $92 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0121,+HEAPF32[tempDoublePtr>>2]);
    $$ = $93 ? $91 : $92;
    $94 = $90 * $$;
    $$pre$phi$phZ2D = $65;$$sink = $94;
   }
   $96 = ((($65)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$96>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$96+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$96+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$96+3>>0]=HEAP8[tempDoublePtr+3>>0];
   $97 = (~~(($$sink)));
   $98 = (+($97|0));
   $99 = $$sink == $98;
   if ($99) {
    HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
    $100 = (~~(($$sink)));
    $101 = ((($65)) + 4|0);
    HEAP8[$101>>0]=$100&255;HEAP8[$101+1>>0]=($100>>8)&255;HEAP8[$101+2>>0]=($100>>16)&255;HEAP8[$101+3>>0]=$100>>24;
    $$0104123 = 0;
   } else {
    $$0104123 = 0;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $$0104123 = $$0104;
 }
 STACKTOP = sp;return ($$0104123|0);
}
function __core_div($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$0$$sroa_idx60 = 0, $$0174 = 0, $$0174223 = 0, $$0175 = 0, $$0176 = 0, $$not = 0, $$not187 = 0, $$pn = 0, $$pn179 = 0, $$pn180 = 0, $$pn181 = 0, $$pre$phi$phZ2D = 0, $$sink = 0, $$sink228 = 0.0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in216 = 0, $$sroa$5$0217 = 0, $$sroa$5$0221 = 0;
 var $$sroa$5100$0 = 0, $$sroa$5100$0$in = 0, $$sroa$546$0 = 0, $$sroa$546$0$in = 0, $$sroa$591$0 = 0, $$sroa$591$0$in = 0, $$sroa$591$0$in212 = 0, $$sroa$591$0213 = 0, $$sroa$591$0215 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0;
 var $128 = 0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, $or$cond183 = 0, $or$cond185 = 0, $or$cond186 = 0, $or$cond189 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14882,(7071|0));
  // unreachable;
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($7)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ((($7)) + 8|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $14 = ($13|0)==(9);
 if ($14) {
  $15 = ((($8)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($16)) + 4|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $$0175 = $18;
 } else {
  $$0175 = $8;
 }
 $19 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $20 = ($19|0)==(9);
 if ($20) {
  $21 = ((($10)) + 4|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ((($22)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $$0176 = $24;
 } else {
  $$0176 = $10;
 }
 $25 = ((($2)) + 4|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$2>>2] = 0;
 $26 = ((($3)) + 4|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$3>>2] = 0;
 $27 = ((($4)) + 4|0);
 HEAP32[$27>>2] = 0;
 HEAP32[$4>>2] = 0;
 $28 = HEAPU8[$$0175>>0]|(HEAPU8[$$0175+1>>0]<<8)|(HEAPU8[$$0175+2>>0]<<16)|(HEAPU8[$$0175+3>>0]<<24);
 $29 = ($28|0)==(7);
 if ($29) {
  $30 = ((($$0175)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $32 = ((($31)) + 45|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ($33|0)==(0|0);
  if ($34) {
   label = 11;
  } else {
   $35 = ((($33)) + 16|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = ($36|0)==(0|0);
   if ($37) {
    label = 11;
   } else {
    (__internal_object_to_public_value($$0175,$2)|0);
    (__internal_object_to_public_value($$0176,$3)|0);
    $38 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $39 = ((($38)) + 45|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = ((($40)) + 16|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = (FUNCTION_TABLE_iiiiii[$42 & 0]($0,$1,$2,$3,$4)|0);
    (__public_value_to_internal_object($4,$12)|0);
    $$0174 = $43;
    label = 15;
   }
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $44 = HEAPU8[$$0176>>0]|(HEAPU8[$$0176+1>>0]<<8)|(HEAPU8[$$0176+2>>0]<<16)|(HEAPU8[$$0176+3>>0]<<24);
   $45 = ($44|0)==(7);
   if ($45) {
    $46 = ((($$0176)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ((($47)) + 45|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     $51 = ((($49)) + 16|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ($52|0)==(0|0);
     if (!($53)) {
      (__internal_object_to_public_value($$0175,$2)|0);
      (__internal_object_to_public_value($$0176,$3)|0);
      $54 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $55 = ((($54)) + 45|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 16|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $59 = (FUNCTION_TABLE_iiiiii[$58 & 0]($0,$1,$2,$3,$4)|0);
      (__public_value_to_internal_object($4,$12)|0);
      $$0174 = $59;
      label = 15;
      break;
     }
    }
   }
   $60 = HEAP32[$1>>2]|0;
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = ((($60)) + 4|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = ((($60)) + 8|0);
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   $66 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   switch ($66|0) {
   case 2:  {
    $$pn = $61;$86 = 1;
    break;
   }
   case 9:  {
    $67 = ((($61)) + 4|0);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = ((($68)) + 4|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = ($71|0)==(2);
    $$pn = $70;$86 = $72;
    break;
   }
   default: {
    $$pn = $61;$86 = 0;
   }
   }
   $$sroa$5100$0$in = ((($$pn)) + 4|0);
   $$sroa$5100$0 = HEAPU8[$$sroa$5100$0$in>>0]|(HEAPU8[$$sroa$5100$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5100$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5100$0$in+3>>0]<<24);
   $73 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   switch ($73|0) {
   case 2:  {
    $$pn179 = $63;$81 = 1;
    label = 22;
    break;
   }
   case 9:  {
    $74 = ((($63)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ((($75)) + 4|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ($78|0)==(2);
    $$pn179 = $77;$81 = $79;
    label = 22;
    break;
   }
   default: {
    $$sroa$591$0$in212 = ((($63)) + 4|0);
    $$sroa$591$0213 = HEAPU8[$$sroa$591$0$in212>>0]|(HEAPU8[$$sroa$591$0$in212+1>>0]<<8)|(HEAPU8[$$sroa$591$0$in212+2>>0]<<16)|(HEAPU8[$$sroa$591$0$in212+3>>0]<<24);
    $$sroa$591$0215 = $$sroa$591$0213;$82 = 0;
    label = 23;
   }
   }
   if ((label|0) == 22) {
    $$sroa$591$0$in = ((($$pn179)) + 4|0);
    $$sroa$591$0 = HEAPU8[$$sroa$591$0$in>>0]|(HEAPU8[$$sroa$591$0$in+1>>0]<<8)|(HEAPU8[$$sroa$591$0$in+2>>0]<<16)|(HEAPU8[$$sroa$591$0$in+3>>0]<<24);
    $80 = ($$sroa$591$0|0)==(0);
    $or$cond183 = $81 & $80;
    if (!($or$cond183)) {
     $$sroa$591$0215 = $$sroa$591$0;$82 = $81;
     label = 23;
    }
   }
   if ((label|0) == 23) {
    $$not = $82 ^ 1;
    $83 = (HEAP32[tempDoublePtr>>2]=$$sroa$591$0215,+HEAPF32[tempDoublePtr>>2]);
    $84 = $83 == 0.0;
    $or$cond185 = $84 & $$not;
    if (!($or$cond185)) {
     switch ($66|0) {
     case 2:  {
      $$pn180 = $61;$122 = 1;
      break;
     }
     case 9:  {
      $109 = ((($61)) + 4|0);
      $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
      $111 = ((($110)) + 4|0);
      $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
      $114 = ($113|0)==(2);
      $$pn180 = $112;$122 = $114;
      break;
     }
     default: {
      $$pn180 = $61;$122 = 0;
     }
     }
     $$sroa$546$0$in = ((($$pn180)) + 4|0);
     $$sroa$546$0 = HEAPU8[$$sroa$546$0$in>>0]|(HEAPU8[$$sroa$546$0$in+1>>0]<<8)|(HEAPU8[$$sroa$546$0$in+2>>0]<<16)|(HEAPU8[$$sroa$546$0$in+3>>0]<<24);
     switch ($73|0) {
     case 2:  {
      $$pn181 = $63;$121 = 1;
      label = 39;
      break;
     }
     case 9:  {
      $115 = ((($63)) + 4|0);
      $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
      $117 = ((($116)) + 4|0);
      $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = ($119|0)==(2);
      $$pn181 = $118;$121 = $120;
      label = 39;
      break;
     }
     default: {
      $$sroa$5$0$in216 = ((($63)) + 4|0);
      $$sroa$5$0217 = HEAPU8[$$sroa$5$0$in216>>0]|(HEAPU8[$$sroa$5$0$in216+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in216+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in216+3>>0]<<24);
      $$sroa$5$0221 = $$sroa$5$0217;$134 = 0;
      label = 42;
     }
     }
     do {
      if ((label|0) == 39) {
       $$sroa$5$0$in = ((($$pn181)) + 4|0);
       $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
       $brmerge$demorgan = $122 & $121;
       if ($brmerge$demorgan) {
        $123 = (($$sroa$546$0|0) / ($$sroa$5$0|0))&-1;
        $124 = (+($123|0));
        $125 = (+($$sroa$546$0|0));
        $126 = (+($$sroa$5$0|0));
        $127 = $125 / $126;
        $128 = $127 == $124;
        if ($128) {
         HEAP8[$65>>0]=2&255;HEAP8[$65+1>>0]=(2>>8)&255;HEAP8[$65+2>>0]=(2>>16)&255;HEAP8[$65+3>>0]=2>>24;
         $136 = ((($65)) + 4|0);
         HEAP8[$136>>0]=$123&255;HEAP8[$136+1>>0]=($123>>8)&255;HEAP8[$136+2>>0]=($123>>16)&255;HEAP8[$136+3>>0]=$123>>24;
         $$0174223 = 0;
         break L14;
        } else {
         HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
         $$pre$phi$phZ2D = $65;$$sink228 = $127;
         break;
        }
       } else {
        $$sroa$5$0221 = $$sroa$5$0;$134 = $121;
        label = 42;
       }
      }
     } while(0);
     if ((label|0) == 42) {
      HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
      $129 = (+($$sroa$546$0|0));
      $130 = (HEAP32[tempDoublePtr>>2]=$$sroa$546$0,+HEAPF32[tempDoublePtr>>2]);
      $131 = $122 ? $129 : $130;
      $132 = (+($$sroa$5$0221|0));
      $133 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0221,+HEAPF32[tempDoublePtr>>2]);
      $$ = $134 ? $132 : $133;
      $135 = $131 / $$;
      $$pre$phi$phZ2D = $65;$$sink228 = $135;
     }
     $137 = ((($65)) + 4|0);
     HEAPF32[tempDoublePtr>>2]=$$sink228;HEAP8[$137>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$137+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$137+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$137+3>>0]=HEAP8[tempDoublePtr+3>>0];
     $138 = (~~(($$sink228)));
     $139 = (+($138|0));
     $140 = $$sink228 == $139;
     if (!($140)) {
      $$0174223 = 0;
      break;
     }
     HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
     $141 = (~~(($$sink228)));
     $142 = ((($65)) + 4|0);
     HEAP8[$142>>0]=$141&255;HEAP8[$142+1>>0]=($141>>8)&255;HEAP8[$142+2>>0]=($141>>16)&255;HEAP8[$142+3>>0]=$141>>24;
     $$0174223 = 0;
     break;
    }
   }
   $85 = ($$sroa$5100$0|0)==(0);
   $or$cond186 = $86 & $85;
   if ($or$cond186) {
    label = 26;
   } else {
    $$not187 = $86 ^ 1;
    $87 = (HEAP32[tempDoublePtr>>2]=$$sroa$5100$0,+HEAPF32[tempDoublePtr>>2]);
    $88 = $87 == 0.0;
    $or$cond189 = $88 & $$not187;
    if ($or$cond189) {
     label = 26;
    } else {
     $$sink = 2139095040;
    }
   }
   if ((label|0) == 26) {
    $$sink = 2143289344;
   }
   HEAP8[$65>>0]=3&255;HEAP8[$65+1>>0]=(3>>8)&255;HEAP8[$65+2>>0]=(3>>16)&255;HEAP8[$65+3>>0]=3>>24;
   $$0$$sroa_idx60 = ((($65)) + 4|0);
   HEAP8[$$0$$sroa_idx60>>0]=$$sink&255;HEAP8[$$0$$sroa_idx60+1>>0]=($$sink>>8)&255;HEAP8[$$0$$sroa_idx60+2>>0]=($$sink>>16)&255;HEAP8[$$0$$sroa_idx60+3>>0]=$$sink>>24;
   $89 = HEAP32[$1>>2]|0;
   $90 = ($89|0)==(0|0);
   if (!($90)) {
    $91 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $92 = ($91|0)==(0|0);
    if (!($92)) {
     $93 = ((($0)) + 67|0);
     $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
     $95 = (__set_current_error($0,47,$94)|0);
     $96 = ($95<<24>>24)==(0);
     if ($96) {
      $$0174223 = 0;
      break;
     }
     $97 = HEAP32[$1>>2]|0;
     $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
     $99 = ((($98)) + 9|0);
     $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
     $101 = ((($98)) + 13|0);
     $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8);
     $103 = ((($98)) + 15|0);
     $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8);
     __set_error_pos($0,$100,$102,$104);
     $$0174223 = 0;
     break;
    }
   }
   $105 = ((($0)) + 67|0);
   $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
   $107 = (__set_current_error($0,47,$106)|0);
   $108 = ($107<<24>>24)==(0);
   if ($108) {
    $$0174223 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$0174223 = 0;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $$0174223 = $$0174;
 }
 STACKTOP = sp;return ($$0174223|0);
}
function __core_mod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$$sroa_idx50 = 0, $$not = 0, $$pn = 0, $$pn127 = 0, $$pn128 = 0, $$pn129 = 0, $$sink = 0, $$sink135 = 0, $$sroa$5$0 = 0, $$sroa$5$0$ = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in162 = 0, $$sroa$5$0163167 = 0.0, $$sroa$539$0 = 0, $$sroa$539$0$in = 0, $$sroa$581$0 = 0, $$sroa$581$0$in = 0, $$sroa$581$0$in156 = 0, $$sroa$581$0157 = 0, $$sroa$581$0159161 = 0;
 var $$sroa$590$0 = 0, $$sroa$590$0$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $9 = 0, $brmerge$demorgan = 0, $or$cond = 0, $or$cond131 = 0, $or$cond132 = 0, $or$cond134 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14897,(7061|0));
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($4)) + 4|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($4)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 switch ($10|0) {
 case 2:  {
  $$pn = $5;$30 = 1;
  break;
 }
 case 9:  {
  $11 = ((($5)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 4|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(2);
  $$pn = $14;$30 = $16;
  break;
 }
 default: {
  $$pn = $5;$30 = 0;
 }
 }
 $$sroa$590$0$in = ((($$pn)) + 4|0);
 $$sroa$590$0 = HEAPU8[$$sroa$590$0$in>>0]|(HEAPU8[$$sroa$590$0$in+1>>0]<<8)|(HEAPU8[$$sroa$590$0$in+2>>0]<<16)|(HEAPU8[$$sroa$590$0$in+3>>0]<<24);
 $17 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 switch ($17|0) {
 case 2:  {
  $$pn127 = $7;$25 = 1;
  label = 9;
  break;
 }
 case 9:  {
  $18 = ((($7)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ($22|0)==(2);
  $$pn127 = $21;$25 = $23;
  label = 9;
  break;
 }
 default: {
  $$sroa$581$0$in156 = ((($7)) + 4|0);
  $$sroa$581$0157 = HEAPU8[$$sroa$581$0$in156>>0]|(HEAPU8[$$sroa$581$0$in156+1>>0]<<8)|(HEAPU8[$$sroa$581$0$in156+2>>0]<<16)|(HEAPU8[$$sroa$581$0$in156+3>>0]<<24);
  $$sroa$581$0159161 = $$sroa$581$0157;
  label = 11;
 }
 }
 if ((label|0) == 9) {
  $$sroa$581$0$in = ((($$pn127)) + 4|0);
  $$sroa$581$0 = HEAPU8[$$sroa$581$0$in>>0]|(HEAPU8[$$sroa$581$0$in+1>>0]<<8)|(HEAPU8[$$sroa$581$0$in+2>>0]<<16)|(HEAPU8[$$sroa$581$0$in+3>>0]<<24);
  $24 = ($$sroa$581$0|0)==(0);
  $or$cond131 = $25 & $24;
  if ($or$cond131) {
   label = 12;
  } else {
   if ($25) {
    label = 21;
   } else {
    $$sroa$581$0159161 = $$sroa$581$0;
    label = 11;
   }
  }
 }
 if ((label|0) == 11) {
  $26 = (HEAP32[tempDoublePtr>>2]=$$sroa$581$0159161,+HEAPF32[tempDoublePtr>>2]);
  $27 = (~~(($26)));
  $28 = ($27|0)==(0);
  if ($28) {
   label = 12;
  } else {
   label = 21;
  }
 }
 do {
  if ((label|0) == 12) {
   $29 = ($$sroa$590$0|0)==(0);
   $or$cond132 = $30 & $29;
   if ($or$cond132) {
    label = 14;
   } else {
    $$not = $30 ^ 1;
    $31 = (HEAP32[tempDoublePtr>>2]=$$sroa$590$0,+HEAPF32[tempDoublePtr>>2]);
    $32 = $31 == 0.0;
    $or$cond134 = $32 & $$not;
    if ($or$cond134) {
     label = 14;
    } else {
     $$sink135 = 2139095040;
    }
   }
   if ((label|0) == 14) {
    $$sink135 = 2143289344;
   }
   HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
   $$0$$sroa_idx50 = ((($9)) + 4|0);
   HEAP8[$$0$$sroa_idx50>>0]=$$sink135&255;HEAP8[$$0$$sroa_idx50+1>>0]=($$sink135>>8)&255;HEAP8[$$0$$sroa_idx50+2>>0]=($$sink135>>16)&255;HEAP8[$$0$$sroa_idx50+3>>0]=$$sink135>>24;
   $33 = HEAP32[$1>>2]|0;
   $34 = ($33|0)==(0|0);
   if (!($34)) {
    $35 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $37 = ((($0)) + 67|0);
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = (__set_current_error($0,47,$38)|0);
     $40 = ($39<<24>>24)==(0);
     if ($40) {
      break;
     }
     $41 = HEAP32[$1>>2]|0;
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $43 = ((($42)) + 9|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $45 = ((($42)) + 13|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8);
     $47 = ((($42)) + 15|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8);
     __set_error_pos($0,$44,$46,$48);
     break;
    }
   }
   $49 = ((($0)) + 67|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = (__set_current_error($0,47,$50)|0);
   $52 = ($51<<24>>24)==(0);
   if (!($52)) {
    __set_error_pos($0,0,0,0);
   }
  }
  else if ((label|0) == 21) {
   switch ($10|0) {
   case 2:  {
    $$pn128 = $5;$61 = 1;
    break;
   }
   case 9:  {
    $53 = ((($5)) + 4|0);
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    $55 = ((($54)) + 4|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ($57|0)==(2);
    $$pn128 = $56;$61 = $58;
    break;
   }
   default: {
    $$pn128 = $5;$61 = 0;
   }
   }
   $$sroa$539$0$in = ((($$pn128)) + 4|0);
   $$sroa$539$0 = HEAPU8[$$sroa$539$0$in>>0]|(HEAPU8[$$sroa$539$0$in+1>>0]<<8)|(HEAPU8[$$sroa$539$0$in+2>>0]<<16)|(HEAPU8[$$sroa$539$0$in+3>>0]<<24);
   switch ($17|0) {
   case 2:  {
    $$pn129 = $7;$70 = 1;
    label = 27;
    break;
   }
   case 9:  {
    $64 = ((($7)) + 4|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ((($65)) + 4|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = ($68|0)==(2);
    $$pn129 = $67;$70 = $69;
    label = 27;
    break;
   }
   default: {
    $$sroa$5$0$in162 = ((($7)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$in162>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$in162+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$in162+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$in162+3>>0];$$sroa$5$0163167 = +HEAPF32[tempDoublePtr>>2];
    HEAP8[$9>>0]=2&255;HEAP8[$9+1>>0]=(2>>8)&255;HEAP8[$9+2>>0]=(2>>16)&255;HEAP8[$9+3>>0]=2>>24;
    $59 = (HEAP32[tempDoublePtr>>2]=$$sroa$539$0,+HEAPF32[tempDoublePtr>>2]);
    $60 = (~~(($59)));
    $62 = $61 ? $$sroa$539$0 : $60;
    $63 = (~~(($$sroa$5$0163167)));
    $78 = $63;$79 = $62;
    label = 30;
   }
   }
   do {
    if ((label|0) == 27) {
     $$sroa$5$0$in = ((($$pn129)) + 4|0);
     $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
     $brmerge$demorgan = $61 & $70;
     HEAP8[$9>>0]=2&255;HEAP8[$9+1>>0]=(2>>8)&255;HEAP8[$9+2>>0]=(2>>16)&255;HEAP8[$9+3>>0]=2>>24;
     if ($brmerge$demorgan) {
      $71 = (($$sroa$539$0|0) % ($$sroa$5$0|0))&-1;
      $$sink = $71;
      break;
     } else {
      $72 = (HEAP32[tempDoublePtr>>2]=$$sroa$539$0,+HEAPF32[tempDoublePtr>>2]);
      $73 = (~~(($72)));
      $74 = $61 ? $$sroa$539$0 : $73;
      $75 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0,+HEAPF32[tempDoublePtr>>2]);
      $76 = (~~(($75)));
      $$sroa$5$0$ = $70 ? $$sroa$5$0 : $76;
      $78 = $$sroa$5$0$;$79 = $74;
      label = 30;
      break;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    $77 = (($79|0) % ($78|0))&-1;
    $$sink = $77;
   }
   $80 = ((($9)) + 4|0);
   HEAP8[$80>>0]=$$sink&255;HEAP8[$80+1>>0]=($$sink>>8)&255;HEAP8[$80+2>>0]=($$sink>>16)&255;HEAP8[$80+3>>0]=$$sink>>24;
  }
 } while(0);
 return 0;
}
function __core_pow($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$pn = 0, $$pn60 = 0, $$sink = 0.0, $$sink63 = 0.0, $$sink63$in = 0.0, $$sink65 = 0.0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in70 = 0, $$sroa$5$07175 = 0.0, $$sroa$545$0 = 0, $$sroa$545$0$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0;
 var $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14910,(7051|0));
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($4)) + 4|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($4)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 switch ($10|0) {
 case 2:  {
  $$pn = $5;$20 = 1;
  break;
 }
 case 9:  {
  $11 = ((($5)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 4|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(2);
  $$pn = $14;$20 = $16;
  break;
 }
 default: {
  $$pn = $5;$20 = 0;
 }
 }
 $$sroa$545$0$in = ((($$pn)) + 4|0);
 $$sroa$545$0 = HEAPU8[$$sroa$545$0$in>>0]|(HEAPU8[$$sroa$545$0$in+1>>0]<<8)|(HEAPU8[$$sroa$545$0$in+2>>0]<<16)|(HEAPU8[$$sroa$545$0$in+3>>0]<<24);
 $17 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 switch ($17|0) {
 case 2:  {
  $$pn60 = $7;$28 = 1;
  label = 9;
  break;
 }
 case 9:  {
  $22 = ((($7)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = ((($23)) + 4|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ($26|0)==(2);
  $$pn60 = $25;$28 = $27;
  label = 9;
  break;
 }
 default: {
  $$sroa$5$0$in70 = ((($7)) + 4|0);
  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$in70>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$in70+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$in70+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$in70+3>>0];$$sroa$5$07175 = +HEAPF32[tempDoublePtr>>2];
  HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
  $18 = (+($$sroa$545$0|0));
  $19 = (HEAP32[tempDoublePtr>>2]=$$sroa$545$0,+HEAPF32[tempDoublePtr>>2]);
  $21 = $20 ? $18 : $19;
  $$sink63$in = $21;$$sink65 = $$sroa$5$07175;$41 = $9;
 }
 }
 do {
  if ((label|0) == 9) {
   $$sroa$5$0$in = ((($$pn60)) + 4|0);
   $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
   $brmerge$demorgan = $20 & $28;
   HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
   $29 = (+($$sroa$545$0|0));
   if ($brmerge$demorgan) {
    $30 = (+($$sroa$5$0|0));
    $$sink63$in = $29;$$sink65 = $30;$41 = $9;
    break;
   } else {
    $31 = (HEAP32[tempDoublePtr>>2]=$$sroa$545$0,+HEAPF32[tempDoublePtr>>2]);
    $32 = $20 ? $29 : $31;
    $33 = (+($$sroa$5$0|0));
    $34 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0,+HEAPF32[tempDoublePtr>>2]);
    $$ = $28 ? $33 : $34;
    $$sink63$in = $32;$$sink65 = $$;$41 = $9;
    break;
   }
  }
 } while(0);
 $$sink63 = $$sink63$in;
 $35 = $$sink65;
 $36 = (+Math_pow((+$$sink63),(+$35)));
 $$sink = $36;
 $37 = ((($9)) + 4|0);
 HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$37>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$37+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$37+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$37+3>>0]=HEAP8[tempDoublePtr+3>>0];
 $38 = (~~(($$sink)));
 $39 = (+($38|0));
 $40 = $39 == $$sink;
 if ($40) {
  HEAP8[$41>>0]=2&255;HEAP8[$41+1>>0]=(2>>8)&255;HEAP8[$41+2>>0]=(2>>16)&255;HEAP8[$41+3>>0]=2>>24;
  HEAP8[$37>>0]=$38&255;HEAP8[$37+1>>0]=($38>>8)&255;HEAP8[$37+2>>0]=($38>>16)&255;HEAP8[$37+3>>0]=$38>>24;
 }
 return 0;
}
function __core_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$pn = 0, $$pn155 = 0, $$pn183 = 0, $$pn184 = 0, $$pre = 0, $$pre$phi$ph$sinkZ2D = 0, $$pre$phi$phZ2D = 0, $$pre177 = 0, $$sink = 0, $$sink160 = 0, $$sink163 = 0, $$sink195 = 0, $$sink195$in = 0, $$sink197 = 0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in170 = 0, $$sroa$5$0171 = 0, $$sroa$5$0175 = 0;
 var $$sroa$573$0 = 0, $$sroa$573$0$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0;
 var $116 = 0.0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15034,(7039|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__is_string($7)|0);
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = (__is_string($12)|0);
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $73 = HEAP32[$1>>2]|0;
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = (__is_number($74)|0);
    $76 = ($75<<24>>24)==(0);
    if (!($76)) {
     $77 = HEAP32[$1>>2]|0;
     $78 = ((($77)) + 4|0);
     $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
     $80 = (__is_number($79)|0);
     $81 = ($80<<24>>24)==(0);
     if (!($81)) {
      $82 = HEAP32[$1>>2]|0;
      $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
      $84 = ((($82)) + 4|0);
      $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
      $86 = ((($82)) + 8|0);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
      $88 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
      switch ($88|0) {
      case 2:  {
       $$pn = $83;$103 = 1;
       break;
      }
      case 9:  {
       $89 = ((($83)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = ((($90)) + 4|0);
       $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       $94 = ($93|0)==(2);
       $$pn = $92;$103 = $94;
       break;
      }
      default: {
       $$pn = $83;$103 = 0;
      }
      }
      $$sroa$573$0$in = ((($$pn)) + 4|0);
      $$sroa$573$0 = HEAPU8[$$sroa$573$0$in>>0]|(HEAPU8[$$sroa$573$0$in+1>>0]<<8)|(HEAPU8[$$sroa$573$0$in+2>>0]<<16)|(HEAPU8[$$sroa$573$0$in+3>>0]<<24);
      $95 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
      switch ($95|0) {
      case 2:  {
       $$pn155 = $85;$102 = 1;
       label = 25;
       break;
      }
      case 9:  {
       $96 = ((($85)) + 4|0);
       $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
       $98 = ((($97)) + 4|0);
       $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
       $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
       $101 = ($100|0)==(2);
       $$pn155 = $99;$102 = $101;
       label = 25;
       break;
      }
      default: {
       $$sroa$5$0$in170 = ((($85)) + 4|0);
       $$sroa$5$0171 = HEAPU8[$$sroa$5$0$in170>>0]|(HEAPU8[$$sroa$5$0$in170+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in170+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in170+3>>0]<<24);
       $$sroa$5$0175 = $$sroa$5$0171;$117 = 0;
       label = 28;
      }
      }
      if ((label|0) == 25) {
       $$sroa$5$0$in = ((($$pn155)) + 4|0);
       $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
       $brmerge$demorgan = $103 & $102;
       if ($brmerge$demorgan) {
        $104 = ($$sroa$573$0|0)==($$sroa$5$0|0);
        $105 = (+($104&1));
        $106 = (+($$sroa$573$0|0));
        $107 = $105 == $106;
        $108 = (+($107&1));
        $109 = (+($$sroa$5$0|0));
        $110 = $108 == $109;
        if ($110) {
         $$pre$phi$ph$sinkZ2D = $87;$$sink195$in = $104;
         label = 30;
        } else {
         HEAP8[$87>>0]=3&255;HEAP8[$87+1>>0]=(3>>8)&255;HEAP8[$87+2>>0]=(3>>16)&255;HEAP8[$87+3>>0]=3>>24;
         $111 = $106 == $109;
         $$pre$phi$phZ2D = $87;$$sink197 = $111;
         label = 29;
        }
       } else {
        $$sroa$5$0175 = $$sroa$5$0;$117 = $102;
        label = 28;
       }
      }
      if ((label|0) == 28) {
       HEAP8[$87>>0]=3&255;HEAP8[$87+1>>0]=(3>>8)&255;HEAP8[$87+2>>0]=(3>>16)&255;HEAP8[$87+3>>0]=3>>24;
       $112 = (+($$sroa$573$0|0));
       $113 = (HEAP32[tempDoublePtr>>2]=$$sroa$573$0,+HEAPF32[tempDoublePtr>>2]);
       $114 = $103 ? $112 : $113;
       $115 = (+($$sroa$5$0175|0));
       $116 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0175,+HEAPF32[tempDoublePtr>>2]);
       $$ = $117 ? $115 : $116;
       $118 = $114 == $$;
       $$pre$phi$phZ2D = $87;$$sink197 = $118;
       label = 29;
      }
      if ((label|0) == 29) {
       $119 = (+($$sink197&1));
       $120 = ((($87)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$119;HEAP8[$120>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$120+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$120+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$120+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $121 = (+($$sink197&1));
       $122 = $119 == $121;
       if ($122) {
        $$pre$phi$ph$sinkZ2D = $$pre$phi$phZ2D;$$sink195$in = $$sink197;
        label = 30;
       }
      }
      if ((label|0) == 30) {
       HEAP8[$$pre$phi$ph$sinkZ2D>>0]=2&255;HEAP8[$$pre$phi$ph$sinkZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$ph$sinkZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$ph$sinkZ2D+3>>0]=2>>24;
       $$sink195 = $$sink195$in&1;
       $123 = ((($87)) + 4|0);
       HEAP8[$123>>0]=$$sink195&255;HEAP8[$123+1>>0]=($$sink195>>8)&255;HEAP8[$123+2>>0]=($$sink195>>16)&255;HEAP8[$123+3>>0]=$$sink195>>24;
      }
      $124 = HEAP32[$1>>2]|0;
      $125 = ((($124)) + 8|0);
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
      $128 = ($127|0)==(2);
      if ($128) {
       break;
      }
      HEAP8[$126>>0]=2&255;HEAP8[$126+1>>0]=(2>>8)&255;HEAP8[$126+2>>0]=(2>>16)&255;HEAP8[$126+3>>0]=2>>24;
      $129 = ((($126)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$129>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$129+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$129+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$129+3>>0];$130 = +HEAPF32[tempDoublePtr>>2];
      $131 = $130 != 0.0;
      $132 = $131&1;
      HEAP8[$129>>0]=$132&255;HEAP8[$129+1>>0]=($132>>8)&255;HEAP8[$129+2>>0]=($132>>16)&255;HEAP8[$129+3>>0]=$132>>24;
      break;
     }
    }
    $133 = HEAP32[$1>>2]|0;
    $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
    $135 = ((($133)) + 4|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = ((($133)) + 8|0);
    $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
    $139 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
    $140 = ($139|0)==(9);
    if ($140) {
     $141 = ((($134)) + 4|0);
     $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $143 = ((($142)) + 4|0);
     $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
     $$pre = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     HEAP32[$2>>2] = $$pre;
     $145 = ((($2)) + 4|0);
     $146 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $147 = ((($146)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $$pn183 = $148;$165 = $$pre;$168 = $145;
    } else {
     HEAP32[$2>>2] = $139;
     $149 = ((($2)) + 4|0);
     $$pn183 = $134;$165 = $139;$168 = $149;
    }
    $$sink160 = ((($$pn183)) + 4|0);
    $150 = ((($2)) + 4|0);
    $151 = HEAPU8[$$sink160>>0]|(HEAPU8[$$sink160+1>>0]<<8)|(HEAPU8[$$sink160+2>>0]<<16)|(HEAPU8[$$sink160+3>>0]<<24);
    HEAP32[$150>>2] = $151;
    $152 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
    $153 = ($152|0)==(9);
    if ($153) {
     $154 = ((($136)) + 4|0);
     $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
     $156 = ((($155)) + 4|0);
     $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
     $$pre177 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
     HEAP32[$3>>2] = $$pre177;
     $158 = ((($3)) + 4|0);
     $159 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
     $160 = ((($159)) + 4|0);
     $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
     $$pn184 = $161;$167 = $$pre177;$169 = $158;
    } else {
     HEAP32[$3>>2] = $152;
     $162 = ((($3)) + 4|0);
     $$pn184 = $136;$167 = $152;$169 = $162;
    }
    $$sink163 = ((($$pn184)) + 4|0);
    $163 = ((($3)) + 4|0);
    $164 = HEAPU8[$$sink163>>0]|(HEAPU8[$$sink163+1>>0]<<8)|(HEAPU8[$$sink163+2>>0]<<16)|(HEAPU8[$$sink163+3>>0]<<24);
    HEAP32[$163>>2] = $164;
    HEAP8[$138>>0]=2&255;HEAP8[$138+1>>0]=(2>>8)&255;HEAP8[$138+2>>0]=(2>>16)&255;HEAP8[$138+3>>0]=2>>24;
    $166 = ($165|0)==($167|0);
    if ($166) {
     $170 = (_mb_memcmp($168,$169)|0);
     $171 = ($170|0)==(0);
     $172 = $171&1;
     $$sink = $172;
    } else {
     $$sink = 0;
    }
    $173 = ((($138)) + 4|0);
    HEAP8[$173>>0]=$$sink&255;HEAP8[$173+1>>0]=($$sink>>8)&255;HEAP8[$173+2>>0]=($$sink>>16)&255;HEAP8[$173+3>>0]=$$sink>>24;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $15 = HEAP32[$1>>2]|0;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__is_string($16)|0);
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (__is_string($21)|0);
    $23 = ($22<<24>>24)==(0);
    if (!($23)) {
     $24 = HEAP32[$1>>2]|0;
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($24)) + 8|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=2&255;HEAP8[$29+1>>0]=(2>>8)&255;HEAP8[$29+2>>0]=(2>>16)&255;HEAP8[$29+3>>0]=2>>24;
     $30 = (__extract_string($25)|0);
     $31 = (__extract_string($27)|0);
     $32 = (_strcmp($30,$31)|0);
     $33 = ($32|0)==(0);
     $34 = $33&1;
     $35 = ((($29)) + 4|0);
     HEAP8[$35>>0]=$34&255;HEAP8[$35+1>>0]=($34>>8)&255;HEAP8[$35+2>>0]=($34>>16)&255;HEAP8[$35+3>>0]=$34>>24;
     break;
    }
   }
   $36 = HEAP32[$1>>2]|0;
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = (__is_nil($37)|0);
   $39 = ($38<<24>>24)==(0);
   if ($39) {
    $40 = HEAP32[$1>>2]|0;
    $41 = ((($40)) + 4|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = (__is_nil($42)|0);
    $44 = ($43<<24>>24)==(0);
    if ($44) {
     $49 = HEAP32[$1>>2]|0;
     $50 = ((($49)) + 8|0);
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     HEAP8[$51>>0]=2&255;HEAP8[$51+1>>0]=(2>>8)&255;HEAP8[$51+2>>0]=(2>>16)&255;HEAP8[$51+3>>0]=2>>24;
     $52 = ((($51)) + 4|0);
     HEAP8[$52>>0]=0&255;HEAP8[$52+1>>0]=(0>>8)&255;HEAP8[$52+2>>0]=(0>>16)&255;HEAP8[$52+3>>0]=0>>24;
     $53 = HEAP32[$1>>2]|0;
     $54 = ($53|0)==(0|0);
     if (!($54)) {
      $55 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $56 = ($55|0)==(0|0);
      if (!($56)) {
       $57 = ((($0)) + 67|0);
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = (__set_current_error($0,17,$58)|0);
       $60 = ($59<<24>>24)==(0);
       if ($60) {
        break;
       }
       $61 = HEAP32[$1>>2]|0;
       $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
       $63 = ((($62)) + 9|0);
       $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
       $65 = ((($62)) + 13|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8);
       $67 = ((($62)) + 15|0);
       $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8);
       __set_error_pos($0,$64,$66,$68);
       break;
      }
     }
     $69 = ((($0)) + 67|0);
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = (__set_current_error($0,17,$70)|0);
     $72 = ($71<<24>>24)==(0);
     if ($72) {
      break;
     }
     __set_error_pos($0,0,0,0);
     break;
    }
   }
   $45 = HEAP32[$1>>2]|0;
   $46 = ((($45)) + 8|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   HEAP8[$47>>0]=2&255;HEAP8[$47+1>>0]=(2>>8)&255;HEAP8[$47+2>>0]=(2>>16)&255;HEAP8[$47+3>>0]=2>>24;
   $48 = ((($47)) + 4|0);
   HEAP8[$48>>0]=0&255;HEAP8[$48+1>>0]=(0>>8)&255;HEAP8[$48+2>>0]=(0>>16)&255;HEAP8[$48+3>>0]=0>>24;
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __core_less($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$lobit = 0, $$pn = 0, $$pn156 = 0, $$pn185 = 0, $$pn186 = 0, $$pre = 0, $$pre$phi$phZ2D = 0, $$pre179 = 0, $$sink = 0, $$sink$in = 0, $$sink157 = 0, $$sink162 = 0, $$sink165 = 0, $$sink194 = 0.0, $$sink197 = 0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in172 = 0, $$sroa$5$0173 = 0;
 var $$sroa$5$0177 = 0, $$sroa$573$0 = 0, $$sroa$573$0$in = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0.0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15067,(7028|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__is_string($7)|0);
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = (__is_string($12)|0);
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $62 = HEAP32[$1>>2]|0;
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $64 = (__is_number($63)|0);
    $65 = ($64<<24>>24)==(0);
    if (!($65)) {
     $66 = HEAP32[$1>>2]|0;
     $67 = ((($66)) + 4|0);
     $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
     $69 = (__is_number($68)|0);
     $70 = ($69<<24>>24)==(0);
     if (!($70)) {
      $71 = HEAP32[$1>>2]|0;
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
      $73 = ((($71)) + 4|0);
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $75 = ((($71)) + 8|0);
      $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
      $77 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
      switch ($77|0) {
      case 2:  {
       $$pn = $72;$92 = 1;
       break;
      }
      case 9:  {
       $78 = ((($72)) + 4|0);
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = ((($79)) + 4|0);
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
       $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
       $83 = ($82|0)==(2);
       $$pn = $81;$92 = $83;
       break;
      }
      default: {
       $$pn = $72;$92 = 0;
      }
      }
      $$sroa$573$0$in = ((($$pn)) + 4|0);
      $$sroa$573$0 = HEAPU8[$$sroa$573$0$in>>0]|(HEAPU8[$$sroa$573$0$in+1>>0]<<8)|(HEAPU8[$$sroa$573$0$in+2>>0]<<16)|(HEAPU8[$$sroa$573$0$in+3>>0]<<24);
      $84 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      switch ($84|0) {
      case 2:  {
       $$pn156 = $74;$91 = 1;
       label = 22;
       break;
      }
      case 9:  {
       $85 = ((($74)) + 4|0);
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = ((($86)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
       $90 = ($89|0)==(2);
       $$pn156 = $88;$91 = $90;
       label = 22;
       break;
      }
      default: {
       $$sroa$5$0$in172 = ((($74)) + 4|0);
       $$sroa$5$0173 = HEAPU8[$$sroa$5$0$in172>>0]|(HEAPU8[$$sroa$5$0$in172+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in172+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in172+3>>0]<<24);
       $$sroa$5$0177 = $$sroa$5$0173;$105 = 0;
       label = 25;
      }
      }
      do {
       if ((label|0) == 22) {
        $$sroa$5$0$in = ((($$pn156)) + 4|0);
        $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
        $brmerge$demorgan = $92 & $91;
        if ($brmerge$demorgan) {
         $93 = ($$sroa$573$0|0)<($$sroa$5$0|0);
         $94 = (+($93&1));
         $95 = (+($$sroa$573$0|0));
         $96 = (+($$sroa$5$0|0));
         $97 = $95 < $96;
         $98 = (+($97&1));
         $99 = $94 == $98;
         if ($99) {
          $108 = $93&1;
          HEAP8[$76>>0]=2&255;HEAP8[$76+1>>0]=(2>>8)&255;HEAP8[$76+2>>0]=(2>>16)&255;HEAP8[$76+3>>0]=2>>24;
          $$sink197 = $108;
          label = 29;
          break;
         } else {
          HEAP8[$76>>0]=3&255;HEAP8[$76+1>>0]=(3>>8)&255;HEAP8[$76+2>>0]=(3>>16)&255;HEAP8[$76+3>>0]=3>>24;
          $$pre$phi$phZ2D = $76;$$sink194 = $98;
          label = 27;
          break;
         }
        } else {
         $$sroa$5$0177 = $$sroa$5$0;$105 = $91;
         label = 25;
        }
       }
      } while(0);
      if ((label|0) == 25) {
       HEAP8[$76>>0]=3&255;HEAP8[$76+1>>0]=(3>>8)&255;HEAP8[$76+2>>0]=(3>>16)&255;HEAP8[$76+3>>0]=3>>24;
       $100 = (+($$sroa$573$0|0));
       $101 = (HEAP32[tempDoublePtr>>2]=$$sroa$573$0,+HEAPF32[tempDoublePtr>>2]);
       $102 = $92 ? $100 : $101;
       $103 = (+($$sroa$5$0177|0));
       $104 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0177,+HEAPF32[tempDoublePtr>>2]);
       $$ = $105 ? $103 : $104;
       $106 = $102 < $$;
       $107 = (+($106&1));
       $$pre$phi$phZ2D = $76;$$sink194 = $107;
       label = 27;
      }
      if ((label|0) == 27) {
       $109 = ((($76)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$$sink194;HEAP8[$109>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$109+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$109+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$109+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $110 = (~~(($$sink194)));
       $111 = (+($110|0));
       $112 = $$sink194 == $111;
       if ($112) {
        HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
        $113 = (~~(($$sink194)));
        $$sink197 = $113;
        label = 29;
       }
      }
      if ((label|0) == 29) {
       $114 = ((($76)) + 4|0);
       HEAP8[$114>>0]=$$sink197&255;HEAP8[$114+1>>0]=($$sink197>>8)&255;HEAP8[$114+2>>0]=($$sink197>>16)&255;HEAP8[$114+3>>0]=$$sink197>>24;
      }
      $115 = HEAP32[$1>>2]|0;
      $116 = ((($115)) + 8|0);
      $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
      $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
      $119 = ($118|0)==(2);
      if ($119) {
       break;
      }
      HEAP8[$117>>0]=2&255;HEAP8[$117+1>>0]=(2>>8)&255;HEAP8[$117+2>>0]=(2>>16)&255;HEAP8[$117+3>>0]=2>>24;
      $120 = ((($117)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$120>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$120+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$120+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$120+3>>0];$121 = +HEAPF32[tempDoublePtr>>2];
      $122 = $121 != 0.0;
      $123 = $122&1;
      HEAP8[$120>>0]=$123&255;HEAP8[$120+1>>0]=($123>>8)&255;HEAP8[$120+2>>0]=($123>>16)&255;HEAP8[$120+3>>0]=$123>>24;
      break;
     }
    }
    $124 = HEAP32[$1>>2]|0;
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
    $126 = ((($124)) + 4|0);
    $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
    $128 = ((($124)) + 8|0);
    $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
    $130 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
    $131 = ($130|0)==(9);
    if ($131) {
     $132 = ((($125)) + 4|0);
     $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $134 = ((($133)) + 4|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $$pre = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
     HEAP32[$2>>2] = $$pre;
     $136 = ((($2)) + 4|0);
     $137 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $138 = ((($137)) + 4|0);
     $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
     $$pn185 = $139;$156 = $$pre;$159 = $136;
    } else {
     HEAP32[$2>>2] = $130;
     $140 = ((($2)) + 4|0);
     $$pn185 = $125;$156 = $130;$159 = $140;
    }
    $$sink162 = ((($$pn185)) + 4|0);
    $141 = ((($2)) + 4|0);
    $142 = HEAPU8[$$sink162>>0]|(HEAPU8[$$sink162+1>>0]<<8)|(HEAPU8[$$sink162+2>>0]<<16)|(HEAPU8[$$sink162+3>>0]<<24);
    HEAP32[$141>>2] = $142;
    $143 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $144 = ($143|0)==(9);
    if ($144) {
     $145 = ((($127)) + 4|0);
     $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $147 = ((($146)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $$pre179 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
     HEAP32[$3>>2] = $$pre179;
     $149 = ((($3)) + 4|0);
     $150 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $151 = ((($150)) + 4|0);
     $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
     $$pn186 = $152;$158 = $$pre179;$160 = $149;
    } else {
     HEAP32[$3>>2] = $143;
     $153 = ((($3)) + 4|0);
     $$pn186 = $127;$158 = $143;$160 = $153;
    }
    $$sink165 = ((($$pn186)) + 4|0);
    $154 = ((($3)) + 4|0);
    $155 = HEAPU8[$$sink165>>0]|(HEAPU8[$$sink165+1>>0]<<8)|(HEAPU8[$$sink165+2>>0]<<16)|(HEAPU8[$$sink165+3>>0]<<24);
    HEAP32[$154>>2] = $155;
    HEAP8[$129>>0]=2&255;HEAP8[$129+1>>0]=(2>>8)&255;HEAP8[$129+2>>0]=(2>>16)&255;HEAP8[$129+3>>0]=2>>24;
    $157 = ($156|0)==($158|0);
    if ($157) {
     $161 = (_mb_memcmp($159,$160)|0);
     $162 = ($161|0)<(0);
     $$sink$in = $162;
    } else {
     $163 = ($156|0)<($158|0);
     $$sink$in = $163;
    }
    $$sink = $$sink$in&1;
    $164 = ((($129)) + 4|0);
    HEAP8[$164>>0]=$$sink&255;HEAP8[$164+1>>0]=($$sink>>8)&255;HEAP8[$164+2>>0]=($$sink>>16)&255;HEAP8[$164+3>>0]=$$sink>>24;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $15 = HEAP32[$1>>2]|0;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__is_string($16)|0);
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (__is_string($21)|0);
    $23 = ($22<<24>>24)==(0);
    if (!($23)) {
     $24 = HEAP32[$1>>2]|0;
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($24)) + 8|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=2&255;HEAP8[$29+1>>0]=(2>>8)&255;HEAP8[$29+2>>0]=(2>>16)&255;HEAP8[$29+3>>0]=2>>24;
     $30 = (__extract_string($25)|0);
     $31 = (__extract_string($27)|0);
     $32 = (_strcmp($30,$31)|0);
     $$lobit = $32 >>> 31;
     $33 = ((($29)) + 4|0);
     HEAP8[$33>>0]=$$lobit&255;HEAP8[$33+1>>0]=($$lobit>>8)&255;HEAP8[$33+2>>0]=($$lobit>>16)&255;HEAP8[$33+3>>0]=$$lobit>>24;
     break;
    }
   }
   $34 = HEAP32[$1>>2]|0;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = (__is_string($35)|0);
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$1>>2]|0;
   $39 = ((($38)) + 8|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   HEAP8[$40>>0]=2&255;HEAP8[$40+1>>0]=(2>>8)&255;HEAP8[$40+2>>0]=(2>>16)&255;HEAP8[$40+3>>0]=2>>24;
   $41 = ((($40)) + 4|0);
   $$sink157 = $37&1;
   HEAP8[$41>>0]=$$sink157&255;HEAP8[$41+1>>0]=($$sink157>>8)&255;HEAP8[$41+2>>0]=($$sink157>>16)&255;HEAP8[$41+3>>0]=$$sink157>>24;
   $42 = HEAP32[$1>>2]|0;
   $43 = ($42|0)==(0|0);
   if (!($43)) {
    $44 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $45 = ($44|0)==(0|0);
    if (!($45)) {
     $46 = ((($0)) + 67|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $48 = (__set_current_error($0,17,$47)|0);
     $49 = ($48<<24>>24)==(0);
     if ($49) {
      break;
     }
     $50 = HEAP32[$1>>2]|0;
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     $52 = ((($51)) + 9|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = ((($51)) + 13|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
     $56 = ((($51)) + 15|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
     __set_error_pos($0,$53,$55,$57);
     break;
    }
   }
   $58 = ((($0)) + 67|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = (__set_current_error($0,17,$59)|0);
   $61 = ($60<<24>>24)==(0);
   if (!($61)) {
    __set_error_pos($0,0,0,0);
   }
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __core_greater($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$pn = 0, $$pn156 = 0, $$pn185 = 0, $$pn186 = 0, $$pre = 0, $$pre$phi$phZ2D = 0, $$pre179 = 0, $$sink = 0, $$sink$in = 0, $$sink157 = 0, $$sink162 = 0, $$sink165 = 0, $$sink194 = 0.0, $$sink197 = 0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in172 = 0, $$sroa$5$0173 = 0, $$sroa$5$0177 = 0;
 var $$sroa$573$0 = 0, $$sroa$573$0$in = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15100,(7014|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__is_string($7)|0);
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = (__is_string($12)|0);
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $64 = HEAP32[$1>>2]|0;
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = (__is_number($65)|0);
    $67 = ($66<<24>>24)==(0);
    if (!($67)) {
     $68 = HEAP32[$1>>2]|0;
     $69 = ((($68)) + 4|0);
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = (__is_number($70)|0);
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      $73 = HEAP32[$1>>2]|0;
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $75 = ((($73)) + 4|0);
      $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
      $77 = ((($73)) + 8|0);
      $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $79 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      switch ($79|0) {
      case 2:  {
       $$pn = $74;$94 = 1;
       break;
      }
      case 9:  {
       $80 = ((($74)) + 4|0);
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
       $82 = ((($81)) + 4|0);
       $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
       $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
       $85 = ($84|0)==(2);
       $$pn = $83;$94 = $85;
       break;
      }
      default: {
       $$pn = $74;$94 = 0;
      }
      }
      $$sroa$573$0$in = ((($$pn)) + 4|0);
      $$sroa$573$0 = HEAPU8[$$sroa$573$0$in>>0]|(HEAPU8[$$sroa$573$0$in+1>>0]<<8)|(HEAPU8[$$sroa$573$0$in+2>>0]<<16)|(HEAPU8[$$sroa$573$0$in+3>>0]<<24);
      $86 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
      switch ($86|0) {
      case 2:  {
       $$pn156 = $76;$93 = 1;
       label = 22;
       break;
      }
      case 9:  {
       $87 = ((($76)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = ((($88)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = ($91|0)==(2);
       $$pn156 = $90;$93 = $92;
       label = 22;
       break;
      }
      default: {
       $$sroa$5$0$in172 = ((($76)) + 4|0);
       $$sroa$5$0173 = HEAPU8[$$sroa$5$0$in172>>0]|(HEAPU8[$$sroa$5$0$in172+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in172+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in172+3>>0]<<24);
       $$sroa$5$0177 = $$sroa$5$0173;$107 = 0;
       label = 25;
      }
      }
      do {
       if ((label|0) == 22) {
        $$sroa$5$0$in = ((($$pn156)) + 4|0);
        $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
        $brmerge$demorgan = $94 & $93;
        if ($brmerge$demorgan) {
         $95 = ($$sroa$573$0|0)>($$sroa$5$0|0);
         $96 = (+($95&1));
         $97 = (+($$sroa$573$0|0));
         $98 = (+($$sroa$5$0|0));
         $99 = $97 > $98;
         $100 = (+($99&1));
         $101 = $96 == $100;
         if ($101) {
          $110 = $95&1;
          HEAP8[$78>>0]=2&255;HEAP8[$78+1>>0]=(2>>8)&255;HEAP8[$78+2>>0]=(2>>16)&255;HEAP8[$78+3>>0]=2>>24;
          $$sink197 = $110;
          label = 29;
          break;
         } else {
          HEAP8[$78>>0]=3&255;HEAP8[$78+1>>0]=(3>>8)&255;HEAP8[$78+2>>0]=(3>>16)&255;HEAP8[$78+3>>0]=3>>24;
          $$pre$phi$phZ2D = $78;$$sink194 = $100;
          label = 27;
          break;
         }
        } else {
         $$sroa$5$0177 = $$sroa$5$0;$107 = $93;
         label = 25;
        }
       }
      } while(0);
      if ((label|0) == 25) {
       HEAP8[$78>>0]=3&255;HEAP8[$78+1>>0]=(3>>8)&255;HEAP8[$78+2>>0]=(3>>16)&255;HEAP8[$78+3>>0]=3>>24;
       $102 = (+($$sroa$573$0|0));
       $103 = (HEAP32[tempDoublePtr>>2]=$$sroa$573$0,+HEAPF32[tempDoublePtr>>2]);
       $104 = $94 ? $102 : $103;
       $105 = (+($$sroa$5$0177|0));
       $106 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0177,+HEAPF32[tempDoublePtr>>2]);
       $$ = $107 ? $105 : $106;
       $108 = $104 > $$;
       $109 = (+($108&1));
       $$pre$phi$phZ2D = $78;$$sink194 = $109;
       label = 27;
      }
      if ((label|0) == 27) {
       $111 = ((($78)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$$sink194;HEAP8[$111>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$111+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$111+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$111+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $112 = (~~(($$sink194)));
       $113 = (+($112|0));
       $114 = $$sink194 == $113;
       if ($114) {
        HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
        $115 = (~~(($$sink194)));
        $$sink197 = $115;
        label = 29;
       }
      }
      if ((label|0) == 29) {
       $116 = ((($78)) + 4|0);
       HEAP8[$116>>0]=$$sink197&255;HEAP8[$116+1>>0]=($$sink197>>8)&255;HEAP8[$116+2>>0]=($$sink197>>16)&255;HEAP8[$116+3>>0]=$$sink197>>24;
      }
      $117 = HEAP32[$1>>2]|0;
      $118 = ((($117)) + 8|0);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
      $121 = ($120|0)==(2);
      if ($121) {
       break;
      }
      HEAP8[$119>>0]=2&255;HEAP8[$119+1>>0]=(2>>8)&255;HEAP8[$119+2>>0]=(2>>16)&255;HEAP8[$119+3>>0]=2>>24;
      $122 = ((($119)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$122>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$122+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$122+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$122+3>>0];$123 = +HEAPF32[tempDoublePtr>>2];
      $124 = $123 != 0.0;
      $125 = $124&1;
      HEAP8[$122>>0]=$125&255;HEAP8[$122+1>>0]=($125>>8)&255;HEAP8[$122+2>>0]=($125>>16)&255;HEAP8[$122+3>>0]=$125>>24;
      break;
     }
    }
    $126 = HEAP32[$1>>2]|0;
    $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
    $128 = ((($126)) + 4|0);
    $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
    $130 = ((($126)) + 8|0);
    $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
    $132 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $133 = ($132|0)==(9);
    if ($133) {
     $134 = ((($127)) + 4|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $136 = ((($135)) + 4|0);
     $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
     $$pre = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
     HEAP32[$2>>2] = $$pre;
     $138 = ((($2)) + 4|0);
     $139 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $140 = ((($139)) + 4|0);
     $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
     $$pn185 = $141;$158 = $$pre;$161 = $138;
    } else {
     HEAP32[$2>>2] = $132;
     $142 = ((($2)) + 4|0);
     $$pn185 = $127;$158 = $132;$161 = $142;
    }
    $$sink162 = ((($$pn185)) + 4|0);
    $143 = ((($2)) + 4|0);
    $144 = HEAPU8[$$sink162>>0]|(HEAPU8[$$sink162+1>>0]<<8)|(HEAPU8[$$sink162+2>>0]<<16)|(HEAPU8[$$sink162+3>>0]<<24);
    HEAP32[$143>>2] = $144;
    $145 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $146 = ($145|0)==(9);
    if ($146) {
     $147 = ((($129)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $149 = ((($148)) + 4|0);
     $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
     $$pre179 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     HEAP32[$3>>2] = $$pre179;
     $151 = ((($3)) + 4|0);
     $152 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $153 = ((($152)) + 4|0);
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     $$pn186 = $154;$160 = $$pre179;$162 = $151;
    } else {
     HEAP32[$3>>2] = $145;
     $155 = ((($3)) + 4|0);
     $$pn186 = $129;$160 = $145;$162 = $155;
    }
    $$sink165 = ((($$pn186)) + 4|0);
    $156 = ((($3)) + 4|0);
    $157 = HEAPU8[$$sink165>>0]|(HEAPU8[$$sink165+1>>0]<<8)|(HEAPU8[$$sink165+2>>0]<<16)|(HEAPU8[$$sink165+3>>0]<<24);
    HEAP32[$156>>2] = $157;
    HEAP8[$131>>0]=2&255;HEAP8[$131+1>>0]=(2>>8)&255;HEAP8[$131+2>>0]=(2>>16)&255;HEAP8[$131+3>>0]=2>>24;
    $159 = ($158|0)==($160|0);
    if ($159) {
     $163 = (_mb_memcmp($161,$162)|0);
     $164 = ($163|0)>(0);
     $$sink$in = $164;
    } else {
     $165 = ($158|0)>($160|0);
     $$sink$in = $165;
    }
    $$sink = $$sink$in&1;
    $166 = ((($131)) + 4|0);
    HEAP8[$166>>0]=$$sink&255;HEAP8[$166+1>>0]=($$sink>>8)&255;HEAP8[$166+2>>0]=($$sink>>16)&255;HEAP8[$166+3>>0]=$$sink>>24;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $15 = HEAP32[$1>>2]|0;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__is_string($16)|0);
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (__is_string($21)|0);
    $23 = ($22<<24>>24)==(0);
    if (!($23)) {
     $24 = HEAP32[$1>>2]|0;
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($24)) + 8|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=2&255;HEAP8[$29+1>>0]=(2>>8)&255;HEAP8[$29+2>>0]=(2>>16)&255;HEAP8[$29+3>>0]=2>>24;
     $30 = (__extract_string($25)|0);
     $31 = (__extract_string($27)|0);
     $32 = (_strcmp($30,$31)|0);
     $33 = ($32|0)>(0);
     $34 = $33&1;
     $35 = ((($29)) + 4|0);
     HEAP8[$35>>0]=$34&255;HEAP8[$35+1>>0]=($34>>8)&255;HEAP8[$35+2>>0]=($34>>16)&255;HEAP8[$35+3>>0]=$34>>24;
     break;
    }
   }
   $36 = HEAP32[$1>>2]|0;
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = (__is_string($37)|0);
   $39 = ($38<<24>>24)!=(0);
   $40 = HEAP32[$1>>2]|0;
   $41 = ((($40)) + 8|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = ((($42)) + 4|0);
   $$sink157 = $39&1;
   HEAP8[$43>>0]=$$sink157&255;HEAP8[$43+1>>0]=($$sink157>>8)&255;HEAP8[$43+2>>0]=($$sink157>>16)&255;HEAP8[$43+3>>0]=$$sink157>>24;
   $44 = HEAP32[$1>>2]|0;
   $45 = ($44|0)==(0|0);
   if (!($45)) {
    $46 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $47 = ($46|0)==(0|0);
    if (!($47)) {
     $48 = ((($0)) + 67|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = (__set_current_error($0,17,$49)|0);
     $51 = ($50<<24>>24)==(0);
     if ($51) {
      break;
     }
     $52 = HEAP32[$1>>2]|0;
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = ((($53)) + 9|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
     $56 = ((($53)) + 13|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
     $58 = ((($53)) + 15|0);
     $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
     __set_error_pos($0,$55,$57,$59);
     break;
    }
   }
   $60 = ((($0)) + 67|0);
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = (__set_current_error($0,17,$61)|0);
   $63 = ($62<<24>>24)==(0);
   if (!($63)) {
    __set_error_pos($0,0,0,0);
   }
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __core_less_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$pn = 0, $$pn156 = 0, $$pn185 = 0, $$pn186 = 0, $$pre = 0, $$pre$phi$phZ2D = 0, $$pre179 = 0, $$sink = 0, $$sink$in = 0, $$sink157 = 0, $$sink162 = 0, $$sink165 = 0, $$sink194 = 0.0, $$sink197 = 0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in172 = 0, $$sroa$5$0173 = 0, $$sroa$5$0177 = 0;
 var $$sroa$573$0 = 0, $$sroa$573$0$in = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15133,(6997|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__is_string($7)|0);
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = (__is_string($12)|0);
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $64 = HEAP32[$1>>2]|0;
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = (__is_number($65)|0);
    $67 = ($66<<24>>24)==(0);
    if (!($67)) {
     $68 = HEAP32[$1>>2]|0;
     $69 = ((($68)) + 4|0);
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = (__is_number($70)|0);
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      $73 = HEAP32[$1>>2]|0;
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $75 = ((($73)) + 4|0);
      $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
      $77 = ((($73)) + 8|0);
      $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $79 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      switch ($79|0) {
      case 2:  {
       $$pn = $74;$94 = 1;
       break;
      }
      case 9:  {
       $80 = ((($74)) + 4|0);
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
       $82 = ((($81)) + 4|0);
       $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
       $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
       $85 = ($84|0)==(2);
       $$pn = $83;$94 = $85;
       break;
      }
      default: {
       $$pn = $74;$94 = 0;
      }
      }
      $$sroa$573$0$in = ((($$pn)) + 4|0);
      $$sroa$573$0 = HEAPU8[$$sroa$573$0$in>>0]|(HEAPU8[$$sroa$573$0$in+1>>0]<<8)|(HEAPU8[$$sroa$573$0$in+2>>0]<<16)|(HEAPU8[$$sroa$573$0$in+3>>0]<<24);
      $86 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
      switch ($86|0) {
      case 2:  {
       $$pn156 = $76;$93 = 1;
       label = 22;
       break;
      }
      case 9:  {
       $87 = ((($76)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = ((($88)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = ($91|0)==(2);
       $$pn156 = $90;$93 = $92;
       label = 22;
       break;
      }
      default: {
       $$sroa$5$0$in172 = ((($76)) + 4|0);
       $$sroa$5$0173 = HEAPU8[$$sroa$5$0$in172>>0]|(HEAPU8[$$sroa$5$0$in172+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in172+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in172+3>>0]<<24);
       $$sroa$5$0177 = $$sroa$5$0173;$107 = 0;
       label = 25;
      }
      }
      do {
       if ((label|0) == 22) {
        $$sroa$5$0$in = ((($$pn156)) + 4|0);
        $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
        $brmerge$demorgan = $94 & $93;
        if ($brmerge$demorgan) {
         $95 = ($$sroa$573$0|0)<=($$sroa$5$0|0);
         $96 = (+($95&1));
         $97 = (+($$sroa$573$0|0));
         $98 = (+($$sroa$5$0|0));
         $99 = $97 <= $98;
         $100 = (+($99&1));
         $101 = $96 == $100;
         if ($101) {
          $110 = $95&1;
          HEAP8[$78>>0]=2&255;HEAP8[$78+1>>0]=(2>>8)&255;HEAP8[$78+2>>0]=(2>>16)&255;HEAP8[$78+3>>0]=2>>24;
          $$sink197 = $110;
          label = 29;
          break;
         } else {
          HEAP8[$78>>0]=3&255;HEAP8[$78+1>>0]=(3>>8)&255;HEAP8[$78+2>>0]=(3>>16)&255;HEAP8[$78+3>>0]=3>>24;
          $$pre$phi$phZ2D = $78;$$sink194 = $100;
          label = 27;
          break;
         }
        } else {
         $$sroa$5$0177 = $$sroa$5$0;$107 = $93;
         label = 25;
        }
       }
      } while(0);
      if ((label|0) == 25) {
       HEAP8[$78>>0]=3&255;HEAP8[$78+1>>0]=(3>>8)&255;HEAP8[$78+2>>0]=(3>>16)&255;HEAP8[$78+3>>0]=3>>24;
       $102 = (+($$sroa$573$0|0));
       $103 = (HEAP32[tempDoublePtr>>2]=$$sroa$573$0,+HEAPF32[tempDoublePtr>>2]);
       $104 = $94 ? $102 : $103;
       $105 = (+($$sroa$5$0177|0));
       $106 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0177,+HEAPF32[tempDoublePtr>>2]);
       $$ = $107 ? $105 : $106;
       $108 = $104 <= $$;
       $109 = (+($108&1));
       $$pre$phi$phZ2D = $78;$$sink194 = $109;
       label = 27;
      }
      if ((label|0) == 27) {
       $111 = ((($78)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$$sink194;HEAP8[$111>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$111+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$111+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$111+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $112 = (~~(($$sink194)));
       $113 = (+($112|0));
       $114 = $$sink194 == $113;
       if ($114) {
        HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
        $115 = (~~(($$sink194)));
        $$sink197 = $115;
        label = 29;
       }
      }
      if ((label|0) == 29) {
       $116 = ((($78)) + 4|0);
       HEAP8[$116>>0]=$$sink197&255;HEAP8[$116+1>>0]=($$sink197>>8)&255;HEAP8[$116+2>>0]=($$sink197>>16)&255;HEAP8[$116+3>>0]=$$sink197>>24;
      }
      $117 = HEAP32[$1>>2]|0;
      $118 = ((($117)) + 8|0);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
      $121 = ($120|0)==(2);
      if ($121) {
       break;
      }
      HEAP8[$119>>0]=2&255;HEAP8[$119+1>>0]=(2>>8)&255;HEAP8[$119+2>>0]=(2>>16)&255;HEAP8[$119+3>>0]=2>>24;
      $122 = ((($119)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$122>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$122+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$122+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$122+3>>0];$123 = +HEAPF32[tempDoublePtr>>2];
      $124 = $123 != 0.0;
      $125 = $124&1;
      HEAP8[$122>>0]=$125&255;HEAP8[$122+1>>0]=($125>>8)&255;HEAP8[$122+2>>0]=($125>>16)&255;HEAP8[$122+3>>0]=$125>>24;
      break;
     }
    }
    $126 = HEAP32[$1>>2]|0;
    $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
    $128 = ((($126)) + 4|0);
    $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
    $130 = ((($126)) + 8|0);
    $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
    $132 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $133 = ($132|0)==(9);
    if ($133) {
     $134 = ((($127)) + 4|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $136 = ((($135)) + 4|0);
     $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
     $$pre = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
     HEAP32[$2>>2] = $$pre;
     $138 = ((($2)) + 4|0);
     $139 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $140 = ((($139)) + 4|0);
     $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
     $$pn185 = $141;$158 = $$pre;$161 = $138;
    } else {
     HEAP32[$2>>2] = $132;
     $142 = ((($2)) + 4|0);
     $$pn185 = $127;$158 = $132;$161 = $142;
    }
    $$sink162 = ((($$pn185)) + 4|0);
    $143 = ((($2)) + 4|0);
    $144 = HEAPU8[$$sink162>>0]|(HEAPU8[$$sink162+1>>0]<<8)|(HEAPU8[$$sink162+2>>0]<<16)|(HEAPU8[$$sink162+3>>0]<<24);
    HEAP32[$143>>2] = $144;
    $145 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $146 = ($145|0)==(9);
    if ($146) {
     $147 = ((($129)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $149 = ((($148)) + 4|0);
     $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
     $$pre179 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     HEAP32[$3>>2] = $$pre179;
     $151 = ((($3)) + 4|0);
     $152 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $153 = ((($152)) + 4|0);
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     $$pn186 = $154;$160 = $$pre179;$162 = $151;
    } else {
     HEAP32[$3>>2] = $145;
     $155 = ((($3)) + 4|0);
     $$pn186 = $129;$160 = $145;$162 = $155;
    }
    $$sink165 = ((($$pn186)) + 4|0);
    $156 = ((($3)) + 4|0);
    $157 = HEAPU8[$$sink165>>0]|(HEAPU8[$$sink165+1>>0]<<8)|(HEAPU8[$$sink165+2>>0]<<16)|(HEAPU8[$$sink165+3>>0]<<24);
    HEAP32[$156>>2] = $157;
    HEAP8[$131>>0]=2&255;HEAP8[$131+1>>0]=(2>>8)&255;HEAP8[$131+2>>0]=(2>>16)&255;HEAP8[$131+3>>0]=2>>24;
    $159 = ($158|0)==($160|0);
    if ($159) {
     $163 = (_mb_memcmp($161,$162)|0);
     $164 = ($163|0)<(1);
     $$sink$in = $164;
    } else {
     $165 = ($158|0)<=($160|0);
     $$sink$in = $165;
    }
    $$sink = $$sink$in&1;
    $166 = ((($131)) + 4|0);
    HEAP8[$166>>0]=$$sink&255;HEAP8[$166+1>>0]=($$sink>>8)&255;HEAP8[$166+2>>0]=($$sink>>16)&255;HEAP8[$166+3>>0]=$$sink>>24;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $15 = HEAP32[$1>>2]|0;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__is_string($16)|0);
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (__is_string($21)|0);
    $23 = ($22<<24>>24)==(0);
    if (!($23)) {
     $24 = HEAP32[$1>>2]|0;
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($24)) + 8|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=2&255;HEAP8[$29+1>>0]=(2>>8)&255;HEAP8[$29+2>>0]=(2>>16)&255;HEAP8[$29+3>>0]=2>>24;
     $30 = (__extract_string($25)|0);
     $31 = (__extract_string($27)|0);
     $32 = (_strcmp($30,$31)|0);
     $33 = ($32|0)<(1);
     $34 = $33&1;
     $35 = ((($29)) + 4|0);
     HEAP8[$35>>0]=$34&255;HEAP8[$35+1>>0]=($34>>8)&255;HEAP8[$35+2>>0]=($34>>16)&255;HEAP8[$35+3>>0]=$34>>24;
     break;
    }
   }
   $36 = HEAP32[$1>>2]|0;
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = (__is_string($37)|0);
   $39 = ($38<<24>>24)==(0);
   $40 = HEAP32[$1>>2]|0;
   $41 = ((($40)) + 8|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = ((($42)) + 4|0);
   $$sink157 = $39&1;
   HEAP8[$43>>0]=$$sink157&255;HEAP8[$43+1>>0]=($$sink157>>8)&255;HEAP8[$43+2>>0]=($$sink157>>16)&255;HEAP8[$43+3>>0]=$$sink157>>24;
   $44 = HEAP32[$1>>2]|0;
   $45 = ($44|0)==(0|0);
   if (!($45)) {
    $46 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $47 = ($46|0)==(0|0);
    if (!($47)) {
     $48 = ((($0)) + 67|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = (__set_current_error($0,17,$49)|0);
     $51 = ($50<<24>>24)==(0);
     if ($51) {
      break;
     }
     $52 = HEAP32[$1>>2]|0;
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = ((($53)) + 9|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
     $56 = ((($53)) + 13|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
     $58 = ((($53)) + 15|0);
     $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
     __set_error_pos($0,$55,$57,$59);
     break;
    }
   }
   $60 = ((($0)) + 67|0);
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = (__set_current_error($0,17,$61)|0);
   $63 = ($62<<24>>24)==(0);
   if (!($63)) {
    __set_error_pos($0,0,0,0);
   }
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __core_greater_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$lobit = 0, $$lobit$not = 0, $$pn = 0, $$pn156 = 0, $$pn185 = 0, $$pn186 = 0, $$pre = 0, $$pre$phi$phZ2D = 0, $$pre179 = 0, $$sink = 0, $$sink$in = 0, $$sink157 = 0, $$sink162 = 0, $$sink165 = 0, $$sink194 = 0.0, $$sink197 = 0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in172 = 0;
 var $$sroa$5$0173 = 0, $$sroa$5$0177 = 0, $$sroa$573$0 = 0, $$sroa$573$0$in = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0.0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15166,(6977|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__is_string($7)|0);
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = (__is_string($12)|0);
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $62 = HEAP32[$1>>2]|0;
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $64 = (__is_number($63)|0);
    $65 = ($64<<24>>24)==(0);
    if (!($65)) {
     $66 = HEAP32[$1>>2]|0;
     $67 = ((($66)) + 4|0);
     $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
     $69 = (__is_number($68)|0);
     $70 = ($69<<24>>24)==(0);
     if (!($70)) {
      $71 = HEAP32[$1>>2]|0;
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
      $73 = ((($71)) + 4|0);
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $75 = ((($71)) + 8|0);
      $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
      $77 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
      switch ($77|0) {
      case 2:  {
       $$pn = $72;$92 = 1;
       break;
      }
      case 9:  {
       $78 = ((($72)) + 4|0);
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = ((($79)) + 4|0);
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
       $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
       $83 = ($82|0)==(2);
       $$pn = $81;$92 = $83;
       break;
      }
      default: {
       $$pn = $72;$92 = 0;
      }
      }
      $$sroa$573$0$in = ((($$pn)) + 4|0);
      $$sroa$573$0 = HEAPU8[$$sroa$573$0$in>>0]|(HEAPU8[$$sroa$573$0$in+1>>0]<<8)|(HEAPU8[$$sroa$573$0$in+2>>0]<<16)|(HEAPU8[$$sroa$573$0$in+3>>0]<<24);
      $84 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      switch ($84|0) {
      case 2:  {
       $$pn156 = $74;$91 = 1;
       label = 22;
       break;
      }
      case 9:  {
       $85 = ((($74)) + 4|0);
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = ((($86)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
       $90 = ($89|0)==(2);
       $$pn156 = $88;$91 = $90;
       label = 22;
       break;
      }
      default: {
       $$sroa$5$0$in172 = ((($74)) + 4|0);
       $$sroa$5$0173 = HEAPU8[$$sroa$5$0$in172>>0]|(HEAPU8[$$sroa$5$0$in172+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in172+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in172+3>>0]<<24);
       $$sroa$5$0177 = $$sroa$5$0173;$105 = 0;
       label = 25;
      }
      }
      do {
       if ((label|0) == 22) {
        $$sroa$5$0$in = ((($$pn156)) + 4|0);
        $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
        $brmerge$demorgan = $92 & $91;
        if ($brmerge$demorgan) {
         $93 = ($$sroa$573$0|0)>=($$sroa$5$0|0);
         $94 = (+($93&1));
         $95 = (+($$sroa$573$0|0));
         $96 = (+($$sroa$5$0|0));
         $97 = $95 >= $96;
         $98 = (+($97&1));
         $99 = $94 == $98;
         if ($99) {
          $108 = $93&1;
          HEAP8[$76>>0]=2&255;HEAP8[$76+1>>0]=(2>>8)&255;HEAP8[$76+2>>0]=(2>>16)&255;HEAP8[$76+3>>0]=2>>24;
          $$sink197 = $108;
          label = 29;
          break;
         } else {
          HEAP8[$76>>0]=3&255;HEAP8[$76+1>>0]=(3>>8)&255;HEAP8[$76+2>>0]=(3>>16)&255;HEAP8[$76+3>>0]=3>>24;
          $$pre$phi$phZ2D = $76;$$sink194 = $98;
          label = 27;
          break;
         }
        } else {
         $$sroa$5$0177 = $$sroa$5$0;$105 = $91;
         label = 25;
        }
       }
      } while(0);
      if ((label|0) == 25) {
       HEAP8[$76>>0]=3&255;HEAP8[$76+1>>0]=(3>>8)&255;HEAP8[$76+2>>0]=(3>>16)&255;HEAP8[$76+3>>0]=3>>24;
       $100 = (+($$sroa$573$0|0));
       $101 = (HEAP32[tempDoublePtr>>2]=$$sroa$573$0,+HEAPF32[tempDoublePtr>>2]);
       $102 = $92 ? $100 : $101;
       $103 = (+($$sroa$5$0177|0));
       $104 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0177,+HEAPF32[tempDoublePtr>>2]);
       $$ = $105 ? $103 : $104;
       $106 = $102 >= $$;
       $107 = (+($106&1));
       $$pre$phi$phZ2D = $76;$$sink194 = $107;
       label = 27;
      }
      if ((label|0) == 27) {
       $109 = ((($76)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$$sink194;HEAP8[$109>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$109+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$109+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$109+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $110 = (~~(($$sink194)));
       $111 = (+($110|0));
       $112 = $$sink194 == $111;
       if ($112) {
        HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
        $113 = (~~(($$sink194)));
        $$sink197 = $113;
        label = 29;
       }
      }
      if ((label|0) == 29) {
       $114 = ((($76)) + 4|0);
       HEAP8[$114>>0]=$$sink197&255;HEAP8[$114+1>>0]=($$sink197>>8)&255;HEAP8[$114+2>>0]=($$sink197>>16)&255;HEAP8[$114+3>>0]=$$sink197>>24;
      }
      $115 = HEAP32[$1>>2]|0;
      $116 = ((($115)) + 8|0);
      $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
      $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
      $119 = ($118|0)==(2);
      if ($119) {
       break;
      }
      HEAP8[$117>>0]=2&255;HEAP8[$117+1>>0]=(2>>8)&255;HEAP8[$117+2>>0]=(2>>16)&255;HEAP8[$117+3>>0]=2>>24;
      $120 = ((($117)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$120>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$120+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$120+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$120+3>>0];$121 = +HEAPF32[tempDoublePtr>>2];
      $122 = $121 != 0.0;
      $123 = $122&1;
      HEAP8[$120>>0]=$123&255;HEAP8[$120+1>>0]=($123>>8)&255;HEAP8[$120+2>>0]=($123>>16)&255;HEAP8[$120+3>>0]=$123>>24;
      break;
     }
    }
    $124 = HEAP32[$1>>2]|0;
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
    $126 = ((($124)) + 4|0);
    $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
    $128 = ((($124)) + 8|0);
    $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
    $130 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
    $131 = ($130|0)==(9);
    if ($131) {
     $132 = ((($125)) + 4|0);
     $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $134 = ((($133)) + 4|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $$pre = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
     HEAP32[$2>>2] = $$pre;
     $136 = ((($2)) + 4|0);
     $137 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $138 = ((($137)) + 4|0);
     $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
     $$pn185 = $139;$156 = $$pre;$159 = $136;
    } else {
     HEAP32[$2>>2] = $130;
     $140 = ((($2)) + 4|0);
     $$pn185 = $125;$156 = $130;$159 = $140;
    }
    $$sink162 = ((($$pn185)) + 4|0);
    $141 = ((($2)) + 4|0);
    $142 = HEAPU8[$$sink162>>0]|(HEAPU8[$$sink162+1>>0]<<8)|(HEAPU8[$$sink162+2>>0]<<16)|(HEAPU8[$$sink162+3>>0]<<24);
    HEAP32[$141>>2] = $142;
    $143 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $144 = ($143|0)==(9);
    if ($144) {
     $145 = ((($127)) + 4|0);
     $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $147 = ((($146)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $$pre179 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
     HEAP32[$3>>2] = $$pre179;
     $149 = ((($3)) + 4|0);
     $150 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $151 = ((($150)) + 4|0);
     $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
     $$pn186 = $152;$158 = $$pre179;$160 = $149;
    } else {
     HEAP32[$3>>2] = $143;
     $153 = ((($3)) + 4|0);
     $$pn186 = $127;$158 = $143;$160 = $153;
    }
    $$sink165 = ((($$pn186)) + 4|0);
    $154 = ((($3)) + 4|0);
    $155 = HEAPU8[$$sink165>>0]|(HEAPU8[$$sink165+1>>0]<<8)|(HEAPU8[$$sink165+2>>0]<<16)|(HEAPU8[$$sink165+3>>0]<<24);
    HEAP32[$154>>2] = $155;
    HEAP8[$129>>0]=2&255;HEAP8[$129+1>>0]=(2>>8)&255;HEAP8[$129+2>>0]=(2>>16)&255;HEAP8[$129+3>>0]=2>>24;
    $157 = ($156|0)==($158|0);
    if ($157) {
     $161 = (_mb_memcmp($159,$160)|0);
     $162 = ($161|0)>(-1);
     $$sink$in = $162;
    } else {
     $163 = ($156|0)>=($158|0);
     $$sink$in = $163;
    }
    $$sink = $$sink$in&1;
    $164 = ((($129)) + 4|0);
    HEAP8[$164>>0]=$$sink&255;HEAP8[$164+1>>0]=($$sink>>8)&255;HEAP8[$164+2>>0]=($$sink>>16)&255;HEAP8[$164+3>>0]=$$sink>>24;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $15 = HEAP32[$1>>2]|0;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__is_string($16)|0);
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (__is_string($21)|0);
    $23 = ($22<<24>>24)==(0);
    if (!($23)) {
     $24 = HEAP32[$1>>2]|0;
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($24)) + 8|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=2&255;HEAP8[$29+1>>0]=(2>>8)&255;HEAP8[$29+2>>0]=(2>>16)&255;HEAP8[$29+3>>0]=2>>24;
     $30 = (__extract_string($25)|0);
     $31 = (__extract_string($27)|0);
     $32 = (_strcmp($30,$31)|0);
     $$lobit = $32 >>> 31;
     $$lobit$not = $$lobit ^ 1;
     $33 = ((($29)) + 4|0);
     HEAP8[$33>>0]=$$lobit$not&255;HEAP8[$33+1>>0]=($$lobit$not>>8)&255;HEAP8[$33+2>>0]=($$lobit$not>>16)&255;HEAP8[$33+3>>0]=$$lobit$not>>24;
     break;
    }
   }
   $34 = HEAP32[$1>>2]|0;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = (__is_string($35)|0);
   $37 = ($36<<24>>24)!=(0);
   $38 = HEAP32[$1>>2]|0;
   $39 = ((($38)) + 8|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   HEAP8[$40>>0]=2&255;HEAP8[$40+1>>0]=(2>>8)&255;HEAP8[$40+2>>0]=(2>>16)&255;HEAP8[$40+3>>0]=2>>24;
   $41 = ((($40)) + 4|0);
   $$sink157 = $37&1;
   HEAP8[$41>>0]=$$sink157&255;HEAP8[$41+1>>0]=($$sink157>>8)&255;HEAP8[$41+2>>0]=($$sink157>>16)&255;HEAP8[$41+3>>0]=$$sink157>>24;
   $42 = HEAP32[$1>>2]|0;
   $43 = ($42|0)==(0|0);
   if (!($43)) {
    $44 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $45 = ($44|0)==(0|0);
    if (!($45)) {
     $46 = ((($0)) + 67|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $48 = (__set_current_error($0,17,$47)|0);
     $49 = ($48<<24>>24)==(0);
     if ($49) {
      break;
     }
     $50 = HEAP32[$1>>2]|0;
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     $52 = ((($51)) + 9|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = ((($51)) + 13|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
     $56 = ((($51)) + 15|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
     __set_error_pos($0,$53,$55,$57);
     break;
    }
   }
   $58 = ((($0)) + 67|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = (__set_current_error($0,17,$59)|0);
   $61 = ($60<<24>>24)==(0);
   if (!($61)) {
    __set_error_pos($0,0,0,0);
   }
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __core_not_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $$pn = 0, $$pn155 = 0, $$pn183 = 0, $$pn184 = 0, $$pre = 0, $$pre$phi$ph$sinkZ2D = 0, $$pre$phi$phZ2D = 0, $$pre177 = 0, $$sink$in = 0, $$sink160 = 0, $$sink163 = 0, $$sink194 = 0, $$sink194$in = 0, $$sink196 = 0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in170 = 0, $$sroa$5$0171 = 0, $$sroa$5$0175 = 0;
 var $$sroa$573$0 = 0, $$sroa$573$0$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0;
 var $116 = 0.0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15199,(6918|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__is_string($7)|0);
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ((($10)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = (__is_string($12)|0);
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $73 = HEAP32[$1>>2]|0;
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = (__is_number($74)|0);
    $76 = ($75<<24>>24)==(0);
    if (!($76)) {
     $77 = HEAP32[$1>>2]|0;
     $78 = ((($77)) + 4|0);
     $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
     $80 = (__is_number($79)|0);
     $81 = ($80<<24>>24)==(0);
     if (!($81)) {
      $82 = HEAP32[$1>>2]|0;
      $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
      $84 = ((($82)) + 4|0);
      $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
      $86 = ((($82)) + 8|0);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
      $88 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
      switch ($88|0) {
      case 2:  {
       $$pn = $83;$103 = 1;
       break;
      }
      case 9:  {
       $89 = ((($83)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = ((($90)) + 4|0);
       $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       $94 = ($93|0)==(2);
       $$pn = $92;$103 = $94;
       break;
      }
      default: {
       $$pn = $83;$103 = 0;
      }
      }
      $$sroa$573$0$in = ((($$pn)) + 4|0);
      $$sroa$573$0 = HEAPU8[$$sroa$573$0$in>>0]|(HEAPU8[$$sroa$573$0$in+1>>0]<<8)|(HEAPU8[$$sroa$573$0$in+2>>0]<<16)|(HEAPU8[$$sroa$573$0$in+3>>0]<<24);
      $95 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
      switch ($95|0) {
      case 2:  {
       $$pn155 = $85;$102 = 1;
       label = 25;
       break;
      }
      case 9:  {
       $96 = ((($85)) + 4|0);
       $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
       $98 = ((($97)) + 4|0);
       $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
       $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
       $101 = ($100|0)==(2);
       $$pn155 = $99;$102 = $101;
       label = 25;
       break;
      }
      default: {
       $$sroa$5$0$in170 = ((($85)) + 4|0);
       $$sroa$5$0171 = HEAPU8[$$sroa$5$0$in170>>0]|(HEAPU8[$$sroa$5$0$in170+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in170+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in170+3>>0]<<24);
       $$sroa$5$0175 = $$sroa$5$0171;$117 = 0;
       label = 28;
      }
      }
      if ((label|0) == 25) {
       $$sroa$5$0$in = ((($$pn155)) + 4|0);
       $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
       $brmerge$demorgan = $103 & $102;
       if ($brmerge$demorgan) {
        $104 = ($$sroa$573$0|0)!=($$sroa$5$0|0);
        $105 = (+($104&1));
        $106 = (+($$sroa$573$0|0));
        $107 = $105 == $106;
        $108 = (+($107&1));
        $109 = (+($$sroa$5$0|0));
        $110 = $108 != $109;
        if ($110) {
         $$pre$phi$ph$sinkZ2D = $87;$$sink194$in = $104;
         label = 30;
        } else {
         HEAP8[$87>>0]=3&255;HEAP8[$87+1>>0]=(3>>8)&255;HEAP8[$87+2>>0]=(3>>16)&255;HEAP8[$87+3>>0]=3>>24;
         $111 = $106 != $109;
         $$pre$phi$phZ2D = $87;$$sink196 = $111;
         label = 29;
        }
       } else {
        $$sroa$5$0175 = $$sroa$5$0;$117 = $102;
        label = 28;
       }
      }
      if ((label|0) == 28) {
       HEAP8[$87>>0]=3&255;HEAP8[$87+1>>0]=(3>>8)&255;HEAP8[$87+2>>0]=(3>>16)&255;HEAP8[$87+3>>0]=3>>24;
       $112 = (+($$sroa$573$0|0));
       $113 = (HEAP32[tempDoublePtr>>2]=$$sroa$573$0,+HEAPF32[tempDoublePtr>>2]);
       $114 = $103 ? $112 : $113;
       $115 = (+($$sroa$5$0175|0));
       $116 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0175,+HEAPF32[tempDoublePtr>>2]);
       $$ = $117 ? $115 : $116;
       $118 = $114 != $$;
       $$pre$phi$phZ2D = $87;$$sink196 = $118;
       label = 29;
      }
      if ((label|0) == 29) {
       $119 = (+($$sink196&1));
       $120 = ((($87)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$119;HEAP8[$120>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$120+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$120+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$120+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $121 = (+($$sink196&1));
       $122 = $119 == $121;
       if ($122) {
        $$pre$phi$ph$sinkZ2D = $$pre$phi$phZ2D;$$sink194$in = $$sink196;
        label = 30;
       }
      }
      if ((label|0) == 30) {
       HEAP8[$$pre$phi$ph$sinkZ2D>>0]=2&255;HEAP8[$$pre$phi$ph$sinkZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$ph$sinkZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$ph$sinkZ2D+3>>0]=2>>24;
       $$sink194 = $$sink194$in&1;
       $123 = ((($87)) + 4|0);
       HEAP8[$123>>0]=$$sink194&255;HEAP8[$123+1>>0]=($$sink194>>8)&255;HEAP8[$123+2>>0]=($$sink194>>16)&255;HEAP8[$123+3>>0]=$$sink194>>24;
      }
      $124 = HEAP32[$1>>2]|0;
      $125 = ((($124)) + 8|0);
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
      $128 = ($127|0)==(2);
      if ($128) {
       break;
      }
      HEAP8[$126>>0]=2&255;HEAP8[$126+1>>0]=(2>>8)&255;HEAP8[$126+2>>0]=(2>>16)&255;HEAP8[$126+3>>0]=2>>24;
      $129 = ((($126)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$129>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$129+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$129+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$129+3>>0];$130 = +HEAPF32[tempDoublePtr>>2];
      $131 = $130 != 0.0;
      $132 = $131&1;
      HEAP8[$129>>0]=$132&255;HEAP8[$129+1>>0]=($132>>8)&255;HEAP8[$129+2>>0]=($132>>16)&255;HEAP8[$129+3>>0]=$132>>24;
      break;
     }
    }
    $133 = HEAP32[$1>>2]|0;
    $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
    $135 = ((($133)) + 4|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = ((($133)) + 8|0);
    $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
    $139 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
    $140 = ($139|0)==(9);
    if ($140) {
     $141 = ((($134)) + 4|0);
     $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $143 = ((($142)) + 4|0);
     $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
     $$pre = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     HEAP32[$2>>2] = $$pre;
     $145 = ((($2)) + 4|0);
     $146 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $147 = ((($146)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $$pn183 = $148;$165 = $$pre;$168 = $145;
    } else {
     HEAP32[$2>>2] = $139;
     $149 = ((($2)) + 4|0);
     $$pn183 = $134;$165 = $139;$168 = $149;
    }
    $$sink160 = ((($$pn183)) + 4|0);
    $150 = ((($2)) + 4|0);
    $151 = HEAPU8[$$sink160>>0]|(HEAPU8[$$sink160+1>>0]<<8)|(HEAPU8[$$sink160+2>>0]<<16)|(HEAPU8[$$sink160+3>>0]<<24);
    HEAP32[$150>>2] = $151;
    $152 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
    $153 = ($152|0)==(9);
    if ($153) {
     $154 = ((($136)) + 4|0);
     $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
     $156 = ((($155)) + 4|0);
     $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
     $$pre177 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
     HEAP32[$3>>2] = $$pre177;
     $158 = ((($3)) + 4|0);
     $159 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
     $160 = ((($159)) + 4|0);
     $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
     $$pn184 = $161;$167 = $$pre177;$169 = $158;
    } else {
     HEAP32[$3>>2] = $152;
     $162 = ((($3)) + 4|0);
     $$pn184 = $136;$167 = $152;$169 = $162;
    }
    $$sink163 = ((($$pn184)) + 4|0);
    $163 = ((($3)) + 4|0);
    $164 = HEAPU8[$$sink163>>0]|(HEAPU8[$$sink163+1>>0]<<8)|(HEAPU8[$$sink163+2>>0]<<16)|(HEAPU8[$$sink163+3>>0]<<24);
    HEAP32[$163>>2] = $164;
    HEAP8[$138>>0]=2&255;HEAP8[$138+1>>0]=(2>>8)&255;HEAP8[$138+2>>0]=(2>>16)&255;HEAP8[$138+3>>0]=2>>24;
    $166 = ($165|0)==($167|0);
    if ($166) {
     $170 = (_mb_memcmp($168,$169)|0);
     $171 = ($170|0)!=(0);
     $phitmp = $171&1;
     $$sink$in = $phitmp;
    } else {
     $$sink$in = 1;
    }
    $172 = ((($138)) + 4|0);
    HEAP8[$172>>0]=$$sink$in&255;HEAP8[$172+1>>0]=($$sink$in>>8)&255;HEAP8[$172+2>>0]=($$sink$in>>16)&255;HEAP8[$172+3>>0]=$$sink$in>>24;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $15 = HEAP32[$1>>2]|0;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__is_string($16)|0);
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    $19 = HEAP32[$1>>2]|0;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (__is_string($21)|0);
    $23 = ($22<<24>>24)==(0);
    if (!($23)) {
     $24 = HEAP32[$1>>2]|0;
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ((($24)) + 8|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=2&255;HEAP8[$29+1>>0]=(2>>8)&255;HEAP8[$29+2>>0]=(2>>16)&255;HEAP8[$29+3>>0]=2>>24;
     $30 = (__extract_string($25)|0);
     $31 = (__extract_string($27)|0);
     $32 = (_strcmp($30,$31)|0);
     $33 = ($32|0)!=(0);
     $34 = $33&1;
     $35 = ((($29)) + 4|0);
     HEAP8[$35>>0]=$34&255;HEAP8[$35+1>>0]=($34>>8)&255;HEAP8[$35+2>>0]=($34>>16)&255;HEAP8[$35+3>>0]=$34>>24;
     break;
    }
   }
   $36 = HEAP32[$1>>2]|0;
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = (__is_nil($37)|0);
   $39 = ($38<<24>>24)==(0);
   if ($39) {
    $40 = HEAP32[$1>>2]|0;
    $41 = ((($40)) + 4|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = (__is_nil($42)|0);
    $44 = ($43<<24>>24)==(0);
    if ($44) {
     $49 = HEAP32[$1>>2]|0;
     $50 = ((($49)) + 8|0);
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     HEAP8[$51>>0]=2&255;HEAP8[$51+1>>0]=(2>>8)&255;HEAP8[$51+2>>0]=(2>>16)&255;HEAP8[$51+3>>0]=2>>24;
     $52 = ((($51)) + 4|0);
     HEAP8[$52>>0]=1&255;HEAP8[$52+1>>0]=(1>>8)&255;HEAP8[$52+2>>0]=(1>>16)&255;HEAP8[$52+3>>0]=1>>24;
     $53 = HEAP32[$1>>2]|0;
     $54 = ($53|0)==(0|0);
     if (!($54)) {
      $55 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $56 = ($55|0)==(0|0);
      if (!($56)) {
       $57 = ((($0)) + 67|0);
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = (__set_current_error($0,17,$58)|0);
       $60 = ($59<<24>>24)==(0);
       if ($60) {
        break;
       }
       $61 = HEAP32[$1>>2]|0;
       $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
       $63 = ((($62)) + 9|0);
       $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
       $65 = ((($62)) + 13|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8);
       $67 = ((($62)) + 15|0);
       $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8);
       __set_error_pos($0,$64,$66,$68);
       break;
      }
     }
     $69 = ((($0)) + 67|0);
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = (__set_current_error($0,17,$70)|0);
     $72 = ($71<<24>>24)==(0);
     if ($72) {
      break;
     }
     __set_error_pos($0,0,0,0);
     break;
    }
   }
   $45 = HEAP32[$1>>2]|0;
   $46 = ((($45)) + 8|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   HEAP8[$47>>0]=2&255;HEAP8[$47+1>>0]=(2>>8)&255;HEAP8[$47+2>>0]=(2>>16)&255;HEAP8[$47+3>>0]=2>>24;
   $48 = ((($47)) + 4|0);
   HEAP8[$48>>0]=1&255;HEAP8[$48+1>>0]=(1>>8)&255;HEAP8[$48+2>>0]=(1>>16)&255;HEAP8[$48+3>>0]=1>>24;
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __core_and($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pn = 0, $$pn74 = 0, $$pre$phi$phZ2D = 0, $$sink = 0.0, $$sink92 = 0, $$sroa$10$0 = 0, $$sroa$10$0$in = 0, $$sroa$10$0$in83 = 0, $$sroa$10$084 = 0, $$sroa$10$086 = 0, $$sroa$1053$0 = 0, $$sroa$1053$0$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0;
 var $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond77 = 0, $or$cond78 = 0, $phitmp72 = 0.0, $phitmp73 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15231,(6908|0));
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($4)) + 4|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($4)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 switch ($10|0) {
 case 2:  {
  $$pn = $5;$25 = 1;
  break;
 }
 case 9:  {
  $11 = ((($5)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 4|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(2);
  $$pn = $14;$25 = $16;
  break;
 }
 default: {
  $$pn = $5;$25 = 0;
 }
 }
 $$sroa$1053$0$in = ((($$pn)) + 4|0);
 $$sroa$1053$0 = HEAPU8[$$sroa$1053$0$in>>0]|(HEAPU8[$$sroa$1053$0$in+1>>0]<<8)|(HEAPU8[$$sroa$1053$0$in+2>>0]<<16)|(HEAPU8[$$sroa$1053$0$in+3>>0]<<24);
 $17 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 switch ($17|0) {
 case 2:  {
  $$pn74 = $7;$24 = 1;
  label = 9;
  break;
 }
 case 9:  {
  $18 = ((($7)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ($22|0)==(2);
  $$pn74 = $21;$24 = $23;
  label = 9;
  break;
 }
 default: {
  $$sroa$10$0$in83 = ((($7)) + 4|0);
  $$sroa$10$084 = HEAPU8[$$sroa$10$0$in83>>0]|(HEAPU8[$$sroa$10$0$in83+1>>0]<<8)|(HEAPU8[$$sroa$10$0$in83+2>>0]<<16)|(HEAPU8[$$sroa$10$0$in83+3>>0]<<24);
  $$sroa$10$086 = $$sroa$10$084;$40 = 0;
  label = 12;
 }
 }
 do {
  if ((label|0) == 9) {
   $$sroa$10$0$in = ((($$pn74)) + 4|0);
   $$sroa$10$0 = HEAPU8[$$sroa$10$0$in>>0]|(HEAPU8[$$sroa$10$0$in+1>>0]<<8)|(HEAPU8[$$sroa$10$0$in+2>>0]<<16)|(HEAPU8[$$sroa$10$0$in+3>>0]<<24);
   $or$cond77 = $25 & $24;
   if ($or$cond77) {
    $26 = ($$sroa$1053$0|0)!=(0);
    $27 = ($$sroa$10$0|0)!=(0);
    $28 = $26 & $27;
    $29 = (+($28&1));
    $30 = (+($$sroa$1053$0|0));
    $31 = $29 != $30;
    $32 = ($$sroa$10$0|0)==(0);
    $or$cond78 = $32 | $31;
    if ($or$cond78) {
     HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
     $33 = ($$sroa$1053$0|0)==(0);
     $phitmp73 = (+($27&1));
     $34 = $33 ? 0.0 : $phitmp73;
     $$pre$phi$phZ2D = $9;$$sink = $34;
     label = 17;
     break;
    } else {
     $43 = $28&1;
     HEAP8[$9>>0]=2&255;HEAP8[$9+1>>0]=(2>>8)&255;HEAP8[$9+2>>0]=(2>>16)&255;HEAP8[$9+3>>0]=2>>24;
     $$sink92 = $43;
     label = 19;
     break;
    }
   } else {
    $$sroa$10$086 = $$sroa$10$0;$40 = $24;
    label = 12;
   }
  }
 } while(0);
 do {
  if ((label|0) == 12) {
   HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
   if ($25) {
    $35 = ($$sroa$1053$0|0)==(0);
    if ($35) {
     $$pre$phi$phZ2D = $9;$$sink = 0.0;
     label = 17;
     break;
    }
   } else {
    $36 = (HEAP32[tempDoublePtr>>2]=$$sroa$1053$0,+HEAPF32[tempDoublePtr>>2]);
    $37 = $36 != 0.0;
    if (!($37)) {
     $$pre$phi$phZ2D = $9;$$sink = 0.0;
     label = 17;
     break;
    }
   }
   $38 = (+($$sroa$10$086|0));
   $39 = (HEAP32[tempDoublePtr>>2]=$$sroa$10$086,+HEAPF32[tempDoublePtr>>2]);
   $41 = $40 ? $38 : $39;
   $42 = $41 != 0.0;
   $phitmp72 = (+($42&1));
   $$pre$phi$phZ2D = $9;$$sink = $phitmp72;
   label = 17;
  }
 } while(0);
 if ((label|0) == 17) {
  $44 = ((($9)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$44>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$44+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$44+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$44+3>>0]=HEAP8[tempDoublePtr+3>>0];
  $45 = (~~(($$sink)));
  $46 = (+($45|0));
  $47 = $$sink == $46;
  if ($47) {
   HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
   $48 = (~~(($$sink)));
   $$sink92 = $48;
   label = 19;
  }
 }
 if ((label|0) == 19) {
  $49 = ((($9)) + 4|0);
  HEAP8[$49>>0]=$$sink92&255;HEAP8[$49+1>>0]=($$sink92>>8)&255;HEAP8[$49+2>>0]=($$sink92>>16)&255;HEAP8[$49+3>>0]=$$sink92>>24;
 }
 return 0;
}
function __core_or($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$78 = 0.0, $$pn = 0, $$pn73 = 0, $$pre$phi$phZ2D = 0, $$sink = 0.0, $$sink92 = 0, $$sroa$10$0 = 0, $$sroa$10$0$in = 0, $$sroa$10$0$in83 = 0, $$sroa$10$084 = 0, $$sroa$10$086 = 0, $$sroa$1053$0 = 0, $$sroa$1053$0$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0;
 var $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond76 = 0, $or$cond77 = 0, $phitmp72 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15242,(6899|0));
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($4)) + 4|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($4)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 switch ($10|0) {
 case 2:  {
  $$pn = $5;$25 = 1;
  break;
 }
 case 9:  {
  $11 = ((($5)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 4|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(2);
  $$pn = $14;$25 = $16;
  break;
 }
 default: {
  $$pn = $5;$25 = 0;
 }
 }
 $$sroa$1053$0$in = ((($$pn)) + 4|0);
 $$sroa$1053$0 = HEAPU8[$$sroa$1053$0$in>>0]|(HEAPU8[$$sroa$1053$0$in+1>>0]<<8)|(HEAPU8[$$sroa$1053$0$in+2>>0]<<16)|(HEAPU8[$$sroa$1053$0$in+3>>0]<<24);
 $17 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 switch ($17|0) {
 case 2:  {
  $$pn73 = $7;$24 = 1;
  label = 9;
  break;
 }
 case 9:  {
  $18 = ((($7)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ($22|0)==(2);
  $$pn73 = $21;$24 = $23;
  label = 9;
  break;
 }
 default: {
  $$sroa$10$0$in83 = ((($7)) + 4|0);
  $$sroa$10$084 = HEAPU8[$$sroa$10$0$in83>>0]|(HEAPU8[$$sroa$10$0$in83+1>>0]<<8)|(HEAPU8[$$sroa$10$0$in83+2>>0]<<16)|(HEAPU8[$$sroa$10$0$in83+3>>0]<<24);
  $$sroa$10$086 = $$sroa$10$084;$38 = 0;
  label = 12;
 }
 }
 do {
  if ((label|0) == 9) {
   $$sroa$10$0$in = ((($$pn73)) + 4|0);
   $$sroa$10$0 = HEAPU8[$$sroa$10$0$in>>0]|(HEAPU8[$$sroa$10$0$in+1>>0]<<8)|(HEAPU8[$$sroa$10$0$in+2>>0]<<16)|(HEAPU8[$$sroa$10$0$in+3>>0]<<24);
   $or$cond76 = $25 & $24;
   if ($or$cond76) {
    $26 = $$sroa$10$0 | $$sroa$1053$0;
    $27 = ($26|0)!=(0);
    $28 = (+($27&1));
    $29 = (+($$sroa$1053$0|0));
    $30 = $28 != $29;
    $31 = ($$sroa$10$0|0)==(0);
    $or$cond77 = $31 & $30;
    if ($or$cond77) {
     HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
     $32 = ($$sroa$1053$0|0)==(0);
     $$78 = $32 ? 0.0 : 1.0;
     $$pre$phi$phZ2D = $9;$$sink = $$78;
     label = 17;
     break;
    } else {
     $41 = $27&1;
     HEAP8[$9>>0]=2&255;HEAP8[$9+1>>0]=(2>>8)&255;HEAP8[$9+2>>0]=(2>>16)&255;HEAP8[$9+3>>0]=2>>24;
     $$sink92 = $41;
     label = 19;
     break;
    }
   } else {
    $$sroa$10$086 = $$sroa$10$0;$38 = $24;
    label = 12;
   }
  }
 } while(0);
 do {
  if ((label|0) == 12) {
   HEAP8[$9>>0]=3&255;HEAP8[$9+1>>0]=(3>>8)&255;HEAP8[$9+2>>0]=(3>>16)&255;HEAP8[$9+3>>0]=3>>24;
   if ($25) {
    $33 = ($$sroa$1053$0|0)==(0);
    if (!($33)) {
     $$pre$phi$phZ2D = $9;$$sink = 1.0;
     label = 17;
     break;
    }
   } else {
    $34 = (HEAP32[tempDoublePtr>>2]=$$sroa$1053$0,+HEAPF32[tempDoublePtr>>2]);
    $35 = $34 != 0.0;
    if ($35) {
     $$pre$phi$phZ2D = $9;$$sink = 1.0;
     label = 17;
     break;
    }
   }
   $36 = (+($$sroa$10$086|0));
   $37 = (HEAP32[tempDoublePtr>>2]=$$sroa$10$086,+HEAPF32[tempDoublePtr>>2]);
   $39 = $38 ? $36 : $37;
   $40 = $39 != 0.0;
   $phitmp72 = (+($40&1));
   $$pre$phi$phZ2D = $9;$$sink = $phitmp72;
   label = 17;
  }
 } while(0);
 if ((label|0) == 17) {
  $42 = ((($9)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$42>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$42+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$42+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$42+3>>0]=HEAP8[tempDoublePtr+3>>0];
  $43 = (~~(($$sink)));
  $44 = (+($43|0));
  $45 = $$sink == $44;
  if ($45) {
   HEAP8[$$pre$phi$phZ2D>>0]=2&255;HEAP8[$$pre$phi$phZ2D+1>>0]=(2>>8)&255;HEAP8[$$pre$phi$phZ2D+2>>0]=(2>>16)&255;HEAP8[$$pre$phi$phZ2D+3>>0]=2>>24;
   $46 = (~~(($$sink)));
   $$sink92 = $46;
   label = 19;
  }
 }
 if ((label|0) == 19) {
  $47 = ((($9)) + 4|0);
  HEAP8[$47>>0]=$$sink92&255;HEAP8[$47+1>>0]=($$sink92>>8)&255;HEAP8[$47+2>>0]=($$sink92>>16)&255;HEAP8[$47+3>>0]=$$sink92>>24;
 }
 return 0;
}
function __core_is($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0116 = 0, $$0117 = 0, $$0118 = 0, $$0119 = 0, $$0121 = 0, $$0122 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge129 = 0, $or$cond = 0, $or$cond123 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 24|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 HEAP8[$2>>0] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15319,(6854|0));
  // unreachable;
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($8)) + 4|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ((($8)) + 8|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $15 = ($14|0)==(9);
 if ($15) {
  $16 = ((($9)) + 4|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = ((($17)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $$0118 = $19;
 } else {
  $$0118 = $9;
 }
 $20 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $21 = ($20|0)==(9);
 if ($21) {
  $22 = ((($11)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = ((($23)) + 4|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $$0117 = $25;
 } else {
  $$0117 = $11;
 }
 $26 = ((($3)) + 4|0);
 HEAP32[$26>>2] = 0;
 HEAP32[$3>>2] = 0;
 $27 = ((($4)) + 4|0);
 HEAP32[$27>>2] = 0;
 HEAP32[$4>>2] = 0;
 $28 = ((($5)) + 4|0);
 HEAP32[$28>>2] = 0;
 HEAP32[$5>>2] = 0;
 $29 = HEAPU8[$$0118>>0]|(HEAPU8[$$0118+1>>0]<<8)|(HEAPU8[$$0118+2>>0]<<16)|(HEAPU8[$$0118+3>>0]<<24);
 $30 = ($29|0)==(7);
 if ($30) {
  $31 = ((($$0118)) + 4|0);
  $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
  $33 = ((($32)) + 45|0);
  $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
  $35 = ($34|0)==(0|0);
  if ($35) {
   label = 11;
  } else {
   $36 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $37 = ($36|0)==(0|0);
   if ($37) {
    label = 11;
   } else {
    (__internal_object_to_public_value($$0118,$3)|0);
    (__internal_object_to_public_value($$0117,$4)|0);
    $38 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $39 = ((($38)) + 45|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = (FUNCTION_TABLE_iiiiii[$41 & 0]($0,$1,$3,$4,$5)|0);
    (__public_value_to_internal_object($5,$13)|0);
    $$0119 = $42;
    label = 15;
   }
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $43 = HEAPU8[$$0117>>0]|(HEAPU8[$$0117+1>>0]<<8)|(HEAPU8[$$0117+2>>0]<<16)|(HEAPU8[$$0117+3>>0]<<24);
   $44 = ($43|0)==(7);
   if ($44) {
    $45 = ((($$0117)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = ((($46)) + 45|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = ($48|0)==(0|0);
    if (!($49)) {
     $50 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $51 = ($50|0)==(0|0);
     if (!($51)) {
      (__internal_object_to_public_value($$0118,$3)|0);
      (__internal_object_to_public_value($$0117,$4)|0);
      $52 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
      $53 = ((($52)) + 45|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
      $56 = (FUNCTION_TABLE_iiiiii[$55 & 0]($0,$1,$3,$4,$5)|0);
      (__public_value_to_internal_object($5,$13)|0);
      $$0119 = $56;
      label = 15;
      break;
     }
    }
   }
   $57 = HEAP32[$1>>2]|0;
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = ((($57)) + 4|0);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = ((($57)) + 8|0);
   $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   $63 = ($58|0)==(0|0);
   if ($63) {
    $$0122 = 0;
   } else {
    $64 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
    $65 = ($64|0)==(9);
    if ($65) {
     $66 = ((($58)) + 4|0);
     $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     $68 = ((($67)) + 4|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $$0122 = $69;
    } else {
     $$0122 = $58;
    }
   }
   $70 = ($60|0)==(0|0);
   if (!($70)) {
    $71 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    $72 = ($71|0)==(9);
    if ($72) {
     $73 = ((($60)) + 4|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $75 = ((($74)) + 4|0);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $$0121 = $76;
    } else {
     $$0121 = $60;
    }
    $77 = ($$0122|0)!=(0|0);
    $78 = ($$0121|0)!=(0|0);
    $or$cond3 = $77 & $78;
    if ($or$cond3) {
     $92 = HEAPU8[$$0121>>0]|(HEAPU8[$$0121+1>>0]<<8)|(HEAPU8[$$0121+2>>0]<<16)|(HEAPU8[$$0121+3>>0]<<24);
     $93 = ($92|0)==(5);
     do {
      if ($93) {
       HEAP8[$62>>0]=2&255;HEAP8[$62+1>>0]=(2>>8)&255;HEAP8[$62+2>>0]=(2>>16)&255;HEAP8[$62+3>>0]=2>>24;
       $94 = HEAPU8[$$0122>>0]|(HEAPU8[$$0122+1>>0]<<8)|(HEAPU8[$$0122+2>>0]<<16)|(HEAPU8[$$0122+3>>0]<<24);
       $95 = (__internal_type_to_public_type($94)|0);
       $96 = ((($$0121)) + 4|0);
       $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
       $98 = $97 & $95;
       $99 = ($98|0)!=(0);
       $100 = $99&1;
       $$sink = $100;
      } else {
       $101 = HEAPU8[$$0122>>0]|(HEAPU8[$$0122+1>>0]<<8)|(HEAPU8[$$0122+2>>0]<<16)|(HEAPU8[$$0122+3>>0]<<24);
       $102 = ($101|0)==(16);
       $103 = ($92|0)==(16);
       $or$cond123 = $103 & $102;
       if ($or$cond123) {
        $117 = ((($$0122)) + 4|0);
        $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
        $119 = ((($$0121)) + 4|0);
        $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
        (__traverse_class($118,0,152,-1,1,$120,$2)|0);
        HEAP8[$62>>0]=2&255;HEAP8[$62+1>>0]=(2>>8)&255;HEAP8[$62+2>>0]=(2>>16)&255;HEAP8[$62+3>>0]=2>>24;
        $121 = HEAP8[$2>>0]|0;
        $122 = $121&255;
        $$sink = $122;
        break;
       }
       $104 = ($57|0)==(0|0);
       $brmerge129 = $104 | $63;
       $105 = ((($0)) + 67|0);
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = (__set_current_error($0,55,$106)|0);
       $108 = ($107<<24>>24)==(0);
       if ($brmerge129) {
        if ($108) {
         $$0116 = 0;
         break L14;
        }
        __set_error_pos($0,0,0,0);
        $$0116 = 3;
        break L14;
       } else {
        if ($108) {
         $$0116 = 0;
         break L14;
        }
        $109 = HEAP32[$1>>2]|0;
        $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
        $111 = ((($110)) + 9|0);
        $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
        $113 = ((($110)) + 13|0);
        $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8);
        $115 = ((($110)) + 15|0);
        $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8);
        __set_error_pos($0,$112,$114,$116);
        $$0116 = 3;
        break L14;
       }
      }
     } while(0);
     $123 = ((($62)) + 4|0);
     HEAP8[$123>>0]=$$sink&255;HEAP8[$123+1>>0]=($$sink>>8)&255;HEAP8[$123+2>>0]=($$sink>>16)&255;HEAP8[$123+3>>0]=$$sink>>24;
     $$0116 = 0;
     break;
    }
   }
   $79 = ($57|0)==(0|0);
   $brmerge = $79 | $63;
   $80 = ((($0)) + 67|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = (__set_current_error($0,10,$81)|0);
   $83 = ($82<<24>>24)==(0);
   if ($brmerge) {
    if ($83) {
     $$0116 = 0;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$0116 = 3;
    break;
   } else {
    if ($83) {
     $$0116 = 0;
     break;
    }
    $84 = HEAP32[$1>>2]|0;
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
    $86 = ((($85)) + 9|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($85)) + 13|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8);
    $90 = ((($85)) + 15|0);
    $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8);
    __set_error_pos($0,$87,$89,$91);
    $$0116 = 3;
    break;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $$0116 = $$0119;
 }
 STACKTOP = sp;return ($$0116|0);
}
function __internal_type_to_public_type($0) {
 $0 = $0|0;
 var $$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 do {
  switch ($0|0) {
  case 2: case 0:  {
   $$0 = $0;
   break;
  }
  case 3:  {
   $$0 = 4;
   break;
  }
  case 4:  {
   $$0 = 8;
   break;
  }
  case 5:  {
   $$0 = 16;
   break;
  }
  case 6:  {
   $$0 = 32;
   break;
  }
  case 7:  {
   $$0 = 64;
   break;
  }
  case 10:  {
   $$0 = 128;
   break;
  }
  case 11:  {
   $$0 = 256;
   break;
  }
  case 12:  {
   $$0 = 512;
   break;
  }
  case 13:  {
   $$0 = 1024;
   break;
  }
  case 14:  {
   $$0 = 2048;
   break;
  }
  case 16:  {
   $$0 = 4096;
   break;
  }
  case 17:  {
   $$0 = 8192;
   break;
  }
  default: {
   $$0 = 1;
  }
  }
 } while(0);
 return ($$0|0);
}
function __is_a_class($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$023 = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if ($or$cond5) {
  $$023 = $0;
 } else {
  ___assert_fail((6863|0),(1578|0),8533,(6887|0));
  // unreachable;
 }
 while(1) {
  $6 = ($$023|0)==($1|0);
  if ($6) {
   $$0 = 1;
   break;
  }
  $7 = ((($$023)) + 21|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($$023|0)==($8|0);
  if ($9) {
   $$0 = 0;
   break;
  } else {
   $$023 = $8;
  }
 }
 HEAP8[$2>>0] = $$0;
 $10 = $$0 ^ 1;
 return ($10|0);
}
function __extract_string($0) {
 $0 = $0|0;
 var $$$0 = 0, $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2686|0),(1578|0),6162,(6953|0));
  // unreachable;
 }
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 switch ($2|0) {
 case 4:  {
  $3 = ((($0)) + 4|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $$0 = $4;
  break;
 }
 case 9:  {
  $5 = ((($0)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ((($6)) + 4|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = ($9|0)==(4);
  if ($10) {
   $11 = ((($8)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $$0 = $12;
  } else {
   $$0 = 0;
  }
  break;
 }
 default: {
  $$0 = 0;
 }
 }
 $13 = ($$0|0)==(0|0);
 $$$0 = $13 ? 6969 : $$0;
 return ($$$0|0);
}
function __is_nil($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2686|0),(1578|0),6115,(6945|0));
  // unreachable;
 }
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 switch ($2|0) {
 case 0:  {
  $$0 = 1;
  break;
 }
 case 9:  {
  $3 = ((($0)) + 4|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $5 = ((($4)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)==(0);
  $9 = $8&1;
  $$0 = $9;
  break;
 }
 default: {
  $$0 = 0;
 }
 }
 return ($$0|0);
}
function __is_number($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((2686|0),(1578|0),6131,(6934|0));
  // unreachable;
 }
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 switch ($2|0) {
 case 3: case 2:  {
  $$0 = 1;
  break;
 }
 case 9:  {
  $3 = ((($0)) + 4|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $5 = ((($4)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = $7 | 1;
  $9 = ($8|0)==(3);
  $10 = $9&1;
  $$0 = $10;
  break;
 }
 default: {
  $$0 = 0;
 }
 }
 return ($$0|0);
}
function __find_func($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $$1$lcssa = 0, $$133 = 0, $$134 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2096|0),(1578|0),11857,(7194|0));
  // unreachable;
 }
 $5 = (_strlen($1)|0);
 $6 = (($5) + 1)|0;
 $7 = (_mb_strdup($1,$6)|0);
 (_mb_strupr($7)|0);
 $8 = ((($0)) + 47|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = (__ht_find($9,$7)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $12 = ((($0)) + 51|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = (__ht_find($13,$7)|0);
  $15 = ($14|0)==(0|0);
  if ($15) {
   $16 = ((($0)) + 55|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = (__ht_find($17,$7)|0);
   $19 = ($18|0)==(0|0);
   if ($19) {
    $$2 = 0;
   } else {
    $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $21 = ($20|0)==(0|0);
    if ($21) {
     $$2 = $18;
    } else {
     $22 = ((($20)) + 8|0);
     $$133 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $23 = ($$133|0)==(0|0);
     L9: do {
      if ($23) {
       $$1$lcssa = 0;
      } else {
       $24 = ((($0)) + 63|0);
       $$134 = $$133;
       while(1) {
        $25 = HEAPU8[$$134>>0]|(HEAPU8[$$134+1>>0]<<8)|(HEAPU8[$$134+2>>0]<<16)|(HEAPU8[$$134+3>>0]<<24);
        $26 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
        $28 = (__ls_find($26,$27,119,0)|0);
        $29 = ($28|0)==(0|0);
        if (!($29)) {
         $$1$lcssa = $$134;
         break L9;
        }
        $30 = ((($$134)) + 8|0);
        $$1 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
        $31 = ($$1|0)==(0|0);
        if ($31) {
         $$1$lcssa = 0;
         break;
        } else {
         $$134 = $$1;
        }
       }
      }
     } while(0);
     HEAP8[$2>>0] = 1;
     $$2 = $$1$lcssa;
    }
   }
  } else {
   $$2 = $14;
  }
 } else {
  $$2 = $10;
 }
 $32 = ($7|0)==(0|0);
 if ($32) {
  ___assert_fail((1713|0),(1578|0),11884,(7194|0));
  // unreachable;
 } else {
  _mb_free($7);
  return ($$2|0);
 }
 return (0)|0;
}
function __search_array_in_scope_chain($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((8231|0),(1578|0),9562,(8324|0));
  // unreachable;
 }
 $5 = ((($1)) + 17|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$0 = $1;
 } else {
  $8 = (__search_identifier_in_scope_chain($0,0,$6,0,0,0)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = $1;
  } else {
   $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $$0 = $1;
   } else {
    $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $13 = ($12|0)==(10);
    if ($13) {
     $14 = ((($10)) + 4|0);
     $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
     $16 = ($2|0)==(0|0);
     if ($16) {
      $$0 = $15;
     } else {
      HEAP32[$2>>2] = $10;
      $$0 = $15;
     }
    } else {
     $$0 = $1;
    }
   }
  }
 }
 return ($$0|0);
}
function __get_array_index($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$0100 = 0, $$0102 = 0, $$098 = 0, $$099 = 0, $$1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 28|0;
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp;
 HEAP32[$5>>2] = 0;
 HEAP32[$7>>2] = 0;
 $9 = ($0|0)!=(0|0);
 $10 = ($1|0)!=(0|0);
 $or$cond = $9 & $10;
 $11 = ($3|0)!=(0|0);
 $or$cond5 = $or$cond & $11;
 if (!($or$cond5)) {
  ___assert_fail((8265|0),(1578|0),7226,(8281|0));
  // unreachable;
 }
 HEAP32[$7>>2] = $6;
 $12 = ($4|0)!=(0|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;HEAP8[$6+16>>0]=0|0;
 if ($12) {
  HEAP8[$4>>0] = 0;
 }
 $13 = HEAP32[$1>>2]|0;
 HEAP32[$5>>2] = $13;
 $14 = ($2|0)==(0|0);
 $15 = ($13|0)!=(0|0);
 $or$cond7 = $14 & $15;
 if ($or$cond7) {
  $16 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $17 = (__is_array($16)|0);
  $18 = ($17<<24>>24)==(0);
  $$ = $18 ? 0 : $16;
  $$0102 = $$;
 } else {
  $$0102 = $2;
 }
 $19 = (__is_array($$0102)|0);
 $20 = ($19<<24>>24)==(0);
 L10: do {
  if ($20) {
   $21 = ($13|0)==(0|0);
   if (!($21)) {
    $22 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $23 = ($22|0)==(0|0);
    if (!($23)) {
     $24 = ((($0)) + 67|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = (__set_current_error($0,23,$25)|0);
     $27 = ($26<<24>>24)==(0);
     if ($27) {
      $$1 = 0;
      break;
     }
     $28 = HEAP32[$5>>2]|0;
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = ((($29)) + 9|0);
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = ((($29)) + 13|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
     $34 = ((($29)) + 15|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8);
     __set_error_pos($0,$31,$33,$35);
     $$1 = 3;
     break;
    }
   }
   $36 = ((($0)) + 67|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = (__set_current_error($0,23,$37)|0);
   $39 = ($38<<24>>24)==(0);
   if ($39) {
    $$1 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$1 = 3;
   }
  } else {
   $40 = HEAPU8[$$0102>>0]|(HEAPU8[$$0102+1>>0]<<8)|(HEAPU8[$$0102+2>>0]<<16)|(HEAPU8[$$0102+3>>0]<<24);
   $41 = ($40|0)==(10);
   if ($41) {
    $$0100 = $$0102;
   } else {
    $42 = ((($$0102)) + 4|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ((($43)) + 4|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $$0100 = $45;
   }
   $46 = ((($13)) + 8|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = ($47|0)==(0|0);
   if ($12) {
    if (!($48)) {
     $49 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     $51 = ($50|0)==(8);
     if ($51) {
      $52 = ((($49)) + 4|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = ((($53)) + 4|0);
      $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
      $56 = ($55|0)==(29|0);
      if ($56) {
       HEAP8[$4>>0] = 1;
       $$1 = 0;
       break;
      } else {
       label = 22;
      }
     } else {
      label = 22;
     }
    }
   } else {
    if (!($48)) {
     label = 22;
    }
   }
   if ((label|0) == 22) {
    $57 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ($58|0)==(8);
    if ($59) {
     $60 = ((($57)) + 4|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = ((($61)) + 4|0);
     $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
     $64 = ($63|0)==(22|0);
     if ($64) {
      HEAP32[$5>>2] = $47;
      $85 = ((($47)) + 8|0);
      $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
      $87 = ($86|0)==(0|0);
      if ($87) {
       $88 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $89 = ($88|0)==(0|0);
       $90 = ((($0)) + 67|0);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = (__set_current_error($0,23,$91)|0);
       $93 = ($92<<24>>24)==(0);
       if ($89) {
        if ($93) {
         $$1 = 0;
         break;
        }
        __set_error_pos($0,0,0,0);
        $$1 = 3;
        break;
       } else {
        if ($93) {
         $$1 = 0;
         break;
        }
        $94 = HEAP32[$5>>2]|0;
        $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
        $96 = ((($95)) + 9|0);
        $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
        $98 = ((($95)) + 13|0);
        $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
        $100 = ((($95)) + 15|0);
        $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8);
        __set_error_pos($0,$97,$99,$101);
        $$1 = 3;
        break;
       }
      }
      HEAP32[$5>>2] = $86;
      $102 = ((($$0100)) + 4|0);
      $$0 = 0;$$098 = 1;$$099 = 0;$104 = $86;$225 = $86;
      while(1) {
       $103 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
       $105 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
       $106 = ($105|0)==(8);
       if ($106) {
        $107 = ((($103)) + 4|0);
        $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
        $109 = ((($108)) + 4|0);
        $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
        $111 = ($110|0)==(23|0);
        if ($111) {
         label = 71;
         break;
        }
       }
       $112 = (__calc_expression($0,$5,$7)|0);
       $113 = ($112|0)==(0);
       if (!($113)) {
        $$1 = $112;
        break L10;
       }
       $114 = (__try_get_value($6,$8)|0);
       $115 = ($114<<24>>24)==(0);
       if ($115) {
        label = 40;
        break;
       }
       $136 = HEAP32[$8>>2]|0;
       $137 = ($136|0)<(0);
       if ($137) {
        label = 47;
        break;
       }
       $158 = (($$099) + 1)|0;
       $159 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
       $160 = ((($159)) + 33|0);
       $161 = HEAP8[$160>>0]|0;
       $162 = $161&255;
       $163 = ($$099|0)<($162|0);
       if (!($163)) {
        label = 54;
        break;
       }
       $184 = (((($159)) + 34|0) + ($$099<<2)|0);
       $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
       $186 = ($136>>>0)<($185>>>0);
       if (!($186)) {
        label = 61;
        break;
       }
       $207 = Math_imul($136, $$098)|0;
       $208 = (($207) + ($$0))|0;
       $209 = HEAP32[$5>>2]|0;
       $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
       $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
       $212 = ($211|0)==(19);
       do {
        if ($212) {
         $213 = ((($210)) + 4|0);
         $214 = HEAP8[$213>>0]|0;
         $215 = ($214<<24>>24)==(44);
         if (!($215)) {
          $246 = $209;$247 = $209;
          break;
         }
         $216 = ((($209)) + 8|0);
         $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
         HEAP32[$5>>2] = $217;
         $218 = $217;
         $219 = $217;
         $246 = $219;$247 = $218;
        } else {
         $246 = $209;$247 = $209;
        }
       } while(0);
       $220 = Math_imul($185, $$098)|0;
       $$0 = $208;$$098 = $220;$$099 = $158;$104 = $247;$225 = $246;
      }
      if ((label|0) == 40) {
       $116 = HEAP32[$5>>2]|0;
       $117 = ($116|0)==(0|0);
       if (!($117)) {
        $118 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
        $119 = ($118|0)==(0|0);
        if (!($119)) {
         $120 = ((($0)) + 67|0);
         $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
         $122 = (__set_current_error($0,13,$121)|0);
         $123 = ($122<<24>>24)==(0);
         if ($123) {
          $$1 = 0;
          break;
         }
         $124 = HEAP32[$5>>2]|0;
         $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
         $126 = ((($125)) + 9|0);
         $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
         $128 = ((($125)) + 13|0);
         $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8);
         $130 = ((($125)) + 15|0);
         $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8);
         __set_error_pos($0,$127,$129,$131);
         $$1 = 3;
         break;
        }
       }
       $132 = ((($0)) + 67|0);
       $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
       $134 = (__set_current_error($0,13,$133)|0);
       $135 = ($134<<24>>24)==(0);
       if ($135) {
        $$1 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$1 = 3;
       break;
      }
      else if ((label|0) == 47) {
       $138 = HEAP32[$5>>2]|0;
       $139 = ($138|0)==(0|0);
       if (!($139)) {
        $140 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
        $141 = ($140|0)==(0|0);
        if (!($141)) {
         $142 = ((($0)) + 67|0);
         $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
         $144 = (__set_current_error($0,19,$143)|0);
         $145 = ($144<<24>>24)==(0);
         if ($145) {
          $$1 = 0;
          break;
         }
         $146 = HEAP32[$5>>2]|0;
         $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
         $148 = ((($147)) + 9|0);
         $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
         $150 = ((($147)) + 13|0);
         $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8);
         $152 = ((($147)) + 15|0);
         $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8);
         __set_error_pos($0,$149,$151,$153);
         $$1 = 3;
         break;
        }
       }
       $154 = ((($0)) + 67|0);
       $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
       $156 = (__set_current_error($0,19,$155)|0);
       $157 = ($156<<24>>24)==(0);
       if ($157) {
        $$1 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$1 = 3;
       break;
      }
      else if ((label|0) == 54) {
       $164 = HEAP32[$5>>2]|0;
       $165 = ($164|0)==(0|0);
       if (!($165)) {
        $166 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
        $167 = ($166|0)==(0|0);
        if (!($167)) {
         $168 = ((($0)) + 67|0);
         $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
         $170 = (__set_current_error($0,21,$169)|0);
         $171 = ($170<<24>>24)==(0);
         if ($171) {
          $$1 = 0;
          break;
         }
         $172 = HEAP32[$5>>2]|0;
         $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
         $174 = ((($173)) + 9|0);
         $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
         $176 = ((($173)) + 13|0);
         $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8);
         $178 = ((($173)) + 15|0);
         $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8);
         __set_error_pos($0,$175,$177,$179);
         $$1 = 3;
         break;
        }
       }
       $180 = ((($0)) + 67|0);
       $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
       $182 = (__set_current_error($0,21,$181)|0);
       $183 = ($182<<24>>24)==(0);
       if ($183) {
        $$1 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$1 = 3;
       break;
      }
      else if ((label|0) == 61) {
       $187 = HEAP32[$5>>2]|0;
       $188 = ($187|0)==(0|0);
       if (!($188)) {
        $189 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
        $190 = ($189|0)==(0|0);
        if (!($190)) {
         $191 = ((($0)) + 67|0);
         $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
         $193 = (__set_current_error($0,19,$192)|0);
         $194 = ($193<<24>>24)==(0);
         if ($194) {
          $$1 = 0;
          break;
         }
         $195 = HEAP32[$5>>2]|0;
         $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
         $197 = ((($196)) + 9|0);
         $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
         $199 = ((($196)) + 13|0);
         $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8);
         $201 = ((($196)) + 15|0);
         $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8);
         __set_error_pos($0,$198,$200,$202);
         $$1 = 3;
         break;
        }
       }
       $203 = ((($0)) + 67|0);
       $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
       $205 = (__set_current_error($0,19,$204)|0);
       $206 = ($205<<24>>24)==(0);
       if ($206) {
        $$1 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$1 = 3;
       break;
      }
      else if ((label|0) == 71) {
       HEAP32[$3>>2] = $$0;
       $221 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
       $222 = ((($221)) + 25|0);
       $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
       $224 = ($223|0)==(0|0);
       if (!($224)) {
        $$1 = 0;
        break;
       }
       $226 = ($225|0)==(0|0);
       if (!($226)) {
        $227 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
        $228 = ($227|0)==(0|0);
        if (!($228)) {
         $229 = ((($0)) + 67|0);
         $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
         $231 = (__set_current_error($0,22,$230)|0);
         $232 = ($231<<24>>24)==(0);
         if ($232) {
          $$1 = 0;
          break;
         }
         $233 = HEAP32[$5>>2]|0;
         $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
         $235 = ((($234)) + 9|0);
         $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
         $237 = ((($234)) + 13|0);
         $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8);
         $239 = ((($234)) + 15|0);
         $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8);
         __set_error_pos($0,$236,$238,$240);
         $$1 = 3;
         break;
        }
       }
       $241 = ((($0)) + 67|0);
       $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
       $243 = (__set_current_error($0,22,$242)|0);
       $244 = ($243<<24>>24)==(0);
       if ($244) {
        $$1 = 0;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$1 = 3;
       break;
      }
     }
    }
    $65 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $66 = ($65|0)==(0|0);
    if (!($66)) {
     $67 = ((($0)) + 67|0);
     $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
     $69 = (__set_current_error($0,31,$68)|0);
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $$1 = 0;
      break;
     }
     $71 = HEAP32[$5>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $75 = ((($74)) + 9|0);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $77 = ((($74)) + 13|0);
     $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8);
     $79 = ((($74)) + 15|0);
     $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8);
     __set_error_pos($0,$76,$78,$80);
     $$1 = 3;
     break;
    }
   }
   $81 = ((($0)) + 67|0);
   $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
   $83 = (__set_current_error($0,31,$82)|0);
   $84 = ($83<<24>>24)==(0);
   if ($84) {
    $$1 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$1 = 3;
   }
  }
 } while(0);
 $245 = HEAP32[$5>>2]|0;
 HEAP32[$1>>2] = $245;
 STACKTOP = sp;return ($$1|0);
}
function __search_var_in_scope_chain($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((8231|0),(1578|0),9584,(8238|0));
  // unreachable;
 }
 $5 = ($2|0)!=(0|0);
 if ($5) {
  HEAP32[$2>>2] = 0;
 }
 $6 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $7 = (__search_identifier_in_scope_chain($0,0,$6,1,0,0)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = $1;
 } else {
  $9 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $10 = ($9|0)==(0|0);
  if ($10) {
   $$0 = $1;
  } else {
   $11 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $12 = ($11|0)==(9);
   if ($12) {
    if ($5) {
     HEAP32[$2>>2] = $9;
    }
    $13 = ((($9)) + 4|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $$0 = $14;
   } else {
    $$0 = $1;
   }
  }
 }
 return ($$0|0);
}
function _mb_pop_int($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($2|0)==(0|0);
 L1: do {
  if ($4) {
   $$1 = 3;
  } else {
   HEAP32[$2>>2] = 0;
   $5 = ($0|0)!=(0|0);
   $6 = ($1|0)!=(0|0);
   $or$cond = $5 & $6;
   if ($or$cond) {
    $7 = ((($3)) + 4|0);
    HEAP32[$7>>2] = 0;
    HEAP32[$3>>2] = 0;
    $8 = (_mb_pop_value($0,$1,$3)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     $10 = HEAP32[$3>>2]|0;
     switch ($10|0) {
     case 2:  {
      $11 = HEAP32[$7>>2]|0;
      HEAP32[$2>>2] = $11;
      $$1 = 0;
      break L1;
      break;
     }
     case 4:  {
      $12 = +HEAPF32[$7>>2];
      $13 = (~~(($12)));
      HEAP32[$2>>2] = $13;
      $$1 = 0;
      break L1;
      break;
     }
     default: {
      __assign_public_value($0,$3,0,0);
      $$1 = 3;
      break L1;
     }
     }
    } else {
     $$1 = $8;
    }
   } else {
    $$1 = 3;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __calc_expression($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0609 = 0, $$0609$in = 0, $$0609$in786 = 0, $$0609787 = 0, $$0609788 = 0, $$0611 = 0, $$0611$phi = 0, $$0612 = 0, $$0614 = 0, $$0616 = 0, $$0616$phi = 0, $$0640 = 0, $$0640$phi = 0, $$0641 = 0, $$0642 = 0, $$0645 = 0, $$0646 = 0, $$0646$phi = 0, $$0652 = 0;
 var $$0785$lcssa = 0, $$07851025 = 0, $$07851025$phi = 0, $$1 = 0, $$10 = 0, $$10626 = 0, $$11 = 0, $$14630 = 0, $$15 = 0, $$15631 = 0, $$16 = 0, $$1613 = 0, $$1613702 = 0, $$1613703 = 0, $$1615 = 0, $$1615700 = 0, $$1615701 = 0, $$1643$ph870 = 0, $$1643674 = 0, $$1653 = 0;
 var $$1653698 = 0, $$1653699 = 0, $$2 = 0, $$20 = 0, $$21 = 0, $$22 = 0, $$23 = 0, $$24 = 0, $$25 = 0, $$25704 = 0, $$2618 = 0, $$2644790 = 0, $$3$ph = 0, $$3619 = 0, $$3649 = 0, $$4 = 0, $$5621 = 0, $$5651 = 0, $$6 = 0, $$658 = 0;
 var $$6622 = 0, $$7 = 0, $$8 = 0, $$9$ph = 0, $$pr681873 = 0, $$pre = 0, $$pre859 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $741$phi = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0;
 var $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond659 = 0, $or$cond = 0, $or$cond10 = 0, $or$cond12 = 0, $or$cond8 = 0, $or$cond948 = 0, $or$cond949 = 0, $or$cond950 = 0;
 var $or$cond951 = 0, $or$cond952 = 0, $or$cond953 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $3 = sp + 88|0;
 $4 = sp + 84|0;
 $5 = sp + 64|0;
 $6 = sp + 56|0;
 $7 = sp + 48|0;
 $8 = sp + 44|0;
 $9 = sp + 40|0;
 $10 = sp + 36|0;
 $11 = sp + 32|0;
 $12 = sp + 28|0;
 $13 = sp + 24|0;
 $14 = sp + 20|0;
 $15 = sp + 16|0;
 $16 = sp + 8|0;
 $17 = sp;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $18 = ($0|0)!=(0|0);
 $19 = ($1|0)!=(0|0);
 $or$cond = $18 & $19;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),3752,(7288|0));
  // unreachable;
 }
 $20 = (_mb_get_gc_enabled($0)|0);
 (_mb_set_gc_enabled($0,0)|0);
 $21 = ((($0)) + 75|0);
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = HEAP32[$1>>2]|0;
 HEAP32[$4>>2] = $23;
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ((($24)) + 8|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $26 & 2;
 $28 = ($27<<24>>24)==(0);
 L4: do {
  if ($28) {
   $31 = (__ls_create()|0);
   $32 = (__ls_create()|0);
   $33 = (_mb_malloc(4)|0);
   HEAP32[$33>>2] = 0;
   $34 = ((($0)) + 122|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   (__ls_pushback($35,$33)|0);
   $36 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $37 = ($36|0)==(4);
   $38 = ((($23)) + 8|0);
   do {
    if ($37) {
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $40 = ($39|0)==(0|0);
     $41 = $39;
     if (!($40)) {
      $42 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      $44 = ($43|0)==(8);
      if ($44) {
       $45 = ((($42)) + 4|0);
       $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $47 = ((($46)) + 4|0);
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = ($48|0)==(16|0);
       $50 = ($48|0)==(29|0);
       $or$cond948 = $49 | $50;
       $51 = ($48|0)==(30|0);
       $or$cond949 = $or$cond948 | $51;
       $52 = ($48|0)==(31|0);
       $or$cond950 = $or$cond949 | $52;
       $53 = ($48|0)==(32|0);
       $or$cond951 = $or$cond950 | $53;
       $54 = ($48|0)==(35|0);
       $or$cond952 = $or$cond951 | $54;
       if ($or$cond952) {
        $64 = $41;
        break;
       }
      }
     }
     $55 = HEAP32[$2>>2]|0;
     HEAP8[$55>>0]=4&255;HEAP8[$55+1>>0]=(4>>8)&255;HEAP8[$55+2>>0]=(4>>16)&255;HEAP8[$55+3>>0]=4>>24;
     $56 = ((($24)) + 4|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     $58 = ((($55)) + 4|0);
     HEAP8[$58>>0]=$57&255;HEAP8[$58+1>>0]=($57>>8)&255;HEAP8[$58+2>>0]=($57>>16)&255;HEAP8[$58+3>>0]=$57>>24;
     $59 = HEAP32[$2>>2]|0;
     $60 = ((($59)) + 8|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 | 1;
     HEAP8[$60>>0] = $62;
     $63 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     HEAP32[$4>>2] = $63;
     $$1613703 = $31;$$1615701 = $32;$$1653699 = $33;
     break L4;
    } else {
     $$pre = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $64 = $$pre;
    }
   } while(0);
   HEAP32[$4>>2] = $64;
   $65 = HEAP32[3903]|0;
   (__ls_pushback($31,$65)|0);
   $66 = ((($22)) + 28|0);
   $67 = ((($0)) + 93|0);
   $68 = ((($0)) + 126|0);
   $69 = ((($22)) + 20|0);
   $70 = ((($22)) + 24|0);
   $71 = ((($0)) + 97|0);
   $72 = ((($17)) + 4|0);
   $73 = ((($0)) + 67|0);
   $74 = ((($16)) + 4|0);
   $75 = ((($5)) + 4|0);
   $76 = ((($6)) + 4|0);
   $77 = ((($5)) + 8|0);
   $$0611 = 0;$$0616 = $24;$$0640 = 0;$$0641 = 0;$$0642 = 0;$$0646 = 0;$741 = 0;
   L14: while(1) {
    $78 = HEAPU8[$$0616>>0]|(HEAPU8[$$0616+1>>0]<<8)|(HEAPU8[$$0616+2>>0]<<16)|(HEAPU8[$$0616+3>>0]<<24);
    $79 = ($78|0)==(8);
    if ($79) {
     $80 = ((($$0616)) + 4|0);
     $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
     $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
     $83 = (_strcmp($82,7305)|0);
     $84 = ($83|0)==(0);
     if ($84) {
      $85 = (__ls_back($31)|0);
      $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
      $88 = ($87|0)==(8);
      if ($88) {
       $89 = ((($86)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = (_strcmp($91,7305)|0);
       $93 = ($92|0)==(0);
       if ($93) {
        label = 253;
        break;
       }
      }
     }
    }
    $94 = ($$0641<<24>>24)==(0);
    do {
     if ($94) {
      if ($79) {
       $95 = ((($$0616)) + 4|0);
       $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
       $97 = ((($96)) + 4|0);
       $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
       $99 = ($98|0)==(22|0);
       if ($99) {
        $100 = (($$0642) + 1)|0;
        $$1643$ph870 = $100;
        label = 24;
        break;
       }
       $101 = ($98|0)==(23|0);
       if ($101) {
        $102 = (($$0642) + -1)|0;
        $103 = ($$0642|0)<(1);
        if ($103) {
         $104 = HEAP32[3903]|0;
         $105 = HEAP32[$4>>2]|0;
         $106 = ((($105)) + 4|0);
         $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
         HEAP32[$4>>2] = $107;
         $741$phi = $741;$$0646$phi = $$0646;$$0640$phi = $$0640;$$0611$phi = $$0611;$$0616 = $104;$$0641 = 0;$$0642 = $102;$741 = $741$phi;$$0646 = $$0646$phi;$$0640 = $$0640$phi;$$0611 = $$0611$phi;
         continue L14;
        } else {
         $$1643$ph870 = $102;
         label = 24;
        }
       } else {
        $$1643$ph870 = $$0642;
        label = 24;
       }
      } else {
       $$1643674 = $$0642;
      }
     } else {
      if ($79) {
       $$1643$ph870 = $$0642;
       label = 24;
      } else {
       $$1643674 = $$0642;
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     $108 = ((($$0616)) + 4|0);
     $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
     $110 = ((($109)) + 4|0);
     $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
     $112 = (__is_operator($111)|0);
     $113 = ($112<<24>>24)==(0);
     if ($113) {
      $$1643674 = $$1643$ph870;
     } else {
      $680 = (__ls_back($31)|0);
      $681 = HEAPU8[$680>>0]|(HEAPU8[$680+1>>0]<<8)|(HEAPU8[$680+2>>0]<<16)|(HEAPU8[$680+3>>0]<<24);
      $682 = ((($681)) + 4|0);
      $683 = HEAPU8[$682>>0]|(HEAPU8[$682+1>>0]<<8)|(HEAPU8[$682+2>>0]<<16)|(HEAPU8[$682+3>>0]<<24);
      $684 = ((($683)) + 4|0);
      $685 = HEAPU8[$684>>0]|(HEAPU8[$684+1>>0]<<8)|(HEAPU8[$684+2>>0]<<16)|(HEAPU8[$684+3>>0]<<24);
      $686 = (__get_priority($685,$111)|0);
      $687 = $686 << 24 >> 24;
      switch ($687|0) {
      case 32:  {
       label = 245;
       break L14;
       break;
      }
      case 60:  {
       (__ls_pushback($31,$$0616)|0);
       $688 = HEAP32[$4>>2]|0;
       $689 = HEAPU8[$688>>0]|(HEAPU8[$688+1>>0]<<8)|(HEAPU8[$688+2>>0]<<16)|(HEAPU8[$688+3>>0]<<24);
       $690 = ((($688)) + 8|0);
       $691 = HEAPU8[$690>>0]|(HEAPU8[$690+1>>0]<<8)|(HEAPU8[$690+2>>0]<<16)|(HEAPU8[$690+3>>0]<<24);
       HEAP32[$4>>2] = $691;
       $741$phi = $741;$$0640$phi = $$0640;$$0611$phi = $$0611;$$0616 = $689;$$0641 = 0;$$0642 = $$1643$ph870;$$0646 = 0;$741 = $741$phi;$$0640 = $$0640$phi;$$0611 = $$0611$phi;
       continue L14;
       break;
      }
      case 61:  {
       (__ls_popback($31)|0);
       $692 = HEAP32[$4>>2]|0;
       $693 = HEAPU8[$692>>0]|(HEAPU8[$692+1>>0]<<8)|(HEAPU8[$692+2>>0]<<16)|(HEAPU8[$692+3>>0]<<24);
       $694 = ((($692)) + 8|0);
       $695 = HEAPU8[$694>>0]|(HEAPU8[$694+1>>0]<<8)|(HEAPU8[$694+2>>0]<<16)|(HEAPU8[$694+3>>0]<<24);
       HEAP32[$4>>2] = $695;
       $741$phi = $741;$$0646$phi = $$0646;$$0640$phi = $$0640;$$0611$phi = $$0611;$$0616 = $693;$$0641 = 0;$$0642 = $$1643$ph870;$741 = $741$phi;$$0646 = $$0646$phi;$$0640 = $$0640$phi;$$0611 = $$0611$phi;
       continue L14;
       break;
      }
      case 62:  {
       $696 = (__ls_popback($31)|0);
       $697 = (__ls_popback($32)|0);
       $698 = (__ls_popback($32)|0);
       $699 = (__operate_operand($0,$696,$698,$697,$3)|0);
       $700 = ($699|0)==(0|0);
       if ($700) {
        label = 233;
        break L14;
       }
       (__ls_pushback($32,$699)|0);
       $722 = ($$0611|0)==(0|0);
       if ($722) {
        $723 = (__ls_create()|0);
        $$22 = $723;
       } else {
        $$22 = $$0611;
       }
       (__ls_pushback($$22,$699)|0);
       $724 = HEAPU8[$$0616>>0]|(HEAPU8[$$0616+1>>0]<<8)|(HEAPU8[$$0616+2>>0]<<16)|(HEAPU8[$$0616+3>>0]<<24);
       $725 = ($724|0)==(8);
       if (!($725)) {
        $741$phi = $741;$$0646$phi = $$0646;$$0640$phi = $$0640;$$0616$phi = $$0616;$$0611 = $$22;$$0641 = 0;$$0642 = $$1643$ph870;$741 = $741$phi;$$0646 = $$0646$phi;$$0640 = $$0640$phi;$$0616 = $$0616$phi;
        continue L14;
       }
       $726 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
       $727 = ((($726)) + 4|0);
       $728 = HEAPU8[$727>>0]|(HEAPU8[$727+1>>0]<<8)|(HEAPU8[$727+2>>0]<<16)|(HEAPU8[$727+3>>0]<<24);
       $729 = ($728|0)==(23|0);
       $$658 = $729&1;
       $741$phi = $741;$$0646$phi = $$0646;$$0640$phi = $$0640;$$0616$phi = $$0616;$$0611 = $$22;$$0641 = $$658;$$0642 = $$1643$ph870;$741 = $741$phi;$$0646 = $$0646$phi;$$0640 = $$0640$phi;$$0616 = $$0616$phi;
       continue L14;
       break;
      }
      default: {
       $741$phi = $741;$$0646$phi = $$0646;$$0640$phi = $$0640;$$0616$phi = $$0616;$$0611$phi = $$0611;$$0641 = 0;$$0642 = $$1643$ph870;$741 = $741$phi;$$0646 = $$0646$phi;$$0640 = $$0640$phi;$$0616 = $$0616$phi;$$0611 = $$0611$phi;
       continue L14;
      }
      }
     }
    }
    $114 = (__is_expression_terminal($0,$$0616)|0);
    $115 = ($114<<24>>24)==(0);
    if (!($115)) {
     $116 = HEAP32[3903]|0;
     $117 = HEAP32[$4>>2]|0;
     $118 = ($117|0)==(0|0);
     if (!($118)) {
      $119 = ((($117)) + 4|0);
      $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
      HEAP32[$4>>2] = $120;
     }
     $121 = ($$1643674|0)==(0);
     if ($121) {
      $741$phi = $741;$$0646$phi = $$0646;$$0640$phi = $$0640;$$0611$phi = $$0611;$$0616 = $116;$$0641 = 0;$$0642 = 0;$741 = $741$phi;$$0646 = $$0646$phi;$$0640 = $$0640$phi;$$0611 = $$0611$phi;
      continue;
     }
     ;HEAP32[$77>>2]=0|0;HEAP32[$77+4>>2]=0|0;HEAP8[$77+8>>0]=0|0;
     HEAP32[$5>>2] = 8;
     HEAP32[$75>>2] = $6;
     HEAP32[$6>>2] = 7307;
     HEAP32[$76>>2] = 23;
     $$2644790 = $$1643674;
     while(1) {
      (__ls_pushback($31,$5)|0);
      $122 = (($$2644790) + -1)|0;
      $123 = ($122|0)==(0);
      if ($123) {
       break;
      } else {
       $$2644790 = $122;
      }
     }
     $124 = HEAP32[$4>>2]|0;
     $$0611$phi = $$0611;$$0616 = $116;$$0640 = $124;$$0641 = 0;$$0642 = 0;$$0646 = 0;$741 = $124;$$0611 = $$0611$phi;
     continue;
    }
    $125 = HEAPU8[$$0616>>0]|(HEAPU8[$$0616+1>>0]<<8)|(HEAPU8[$$0616+2>>0]<<16)|(HEAPU8[$$0616+3>>0]<<24);
    L53: do {
     switch ($125|0) {
     case 10:  {
      $126 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $127 = ($126|0)==(0|0);
      if ($127) {
       $$1 = $$0611;$$2618 = $$0616;
       label = 37;
      } else {
       $128 = ((($$0616)) + 4|0);
       $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
       $130 = ((($129)) + 17|0);
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $132 = (__search_identifier_in_scope_chain($0,0,$131,1,0,0)|0);
       $133 = ($132|0)==(0|0);
       if ($133) {
        $$1 = $$0611;$$2618 = $$0616;
        label = 37;
       } else {
        $134 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
        $$1 = $$0611;$$2618 = $134;
        label = 37;
       }
      }
      break;
     }
     case 8:  {
      $201 = HEAP32[$4>>2]|0;
      $202 = ((($201)) + 4|0);
      $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
      HEAP32[$4>>2] = $203;
      $204 = ((($$0616)) + 4|0);
      $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
      $206 = ((($205)) + 4|0);
      $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
      $208 = (__is_unary($207)|0);
      $209 = ($208<<24>>24)==(0);
      if ($209) {
       $217 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
       HEAP8[$66>>0]=-1&255;HEAP8[$66+1>>0]=(-1>>8)&255;HEAP8[$66+2>>0]=(-1>>16)&255;HEAP8[$66+3>>0]=-1>>24;
       $218 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
       $219 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
       (__ls_pushback($218,$220)|0);
       $221 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $222 = ((($221)) + 4|0);
       $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
       $224 = (FUNCTION_TABLE_iii[$223 & 255]($0,$4)|0);
       HEAP32[$3>>2] = $224;
       $225 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
       (__ls_popback($225)|0);
       HEAP8[$66>>0]=$217&255;HEAP8[$66+1>>0]=($217>>8)&255;HEAP8[$66+2>>0]=($217>>16)&255;HEAP8[$66+3>>0]=$217>>24;
      } else {
       $210 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
       $211 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
       (__ls_pushback($210,$211)|0);
       $212 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $213 = ((($212)) + 4|0);
       $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
       $215 = (FUNCTION_TABLE_iii[$214 & 255]($0,$4)|0);
       HEAP32[$3>>2] = $215;
       $216 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
       (__ls_popback($216)|0);
      }
      $226 = HEAP32[$3>>2]|0;
      $227 = ($226|0)==(0);
      if (!($227)) {
       label = 63;
       break L14;
      }
      $246 = (__create_object()|0);
      $247 = ($$0611|0)==(0|0);
      if ($247) {
       $248 = (__ls_create()|0);
       $$4 = $248;
      } else {
       $$4 = $$0611;
      }
      (__ls_pushback($$4,$246)|0);
      $249 = (__public_value_to_internal_object($69,$246)|0);
      HEAP32[$3>>2] = $249;
      $250 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
      switch ($250|0) {
      case 17:  {
       $251 = ((($246)) + 4|0);
       $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
       $253 = ((($252)) + 58|0);
       $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
       $255 = ($254|0)==(1);
       if ($255) {
        HEAP8[$70>>0]=0&255;HEAP8[$70+1>>0]=(0>>8)&255;HEAP8[$70+2>>0]=(0>>16)&255;HEAP8[$70+3>>0]=0>>24;
        HEAP8[$69>>0]=0&255;HEAP8[$69+1>>0]=(0>>8)&255;HEAP8[$69+2>>0]=(0>>16)&255;HEAP8[$69+3>>0]=0>>24;
        label = 74;
       }
       break;
      }
      case 4:  {
       label = 74;
       break;
      }
      default: {
      }
      }
      if ((label|0) == 74) {
       label = 0;
       $256 = ((($246)) + 8|0);
       $257 = HEAP8[$256>>0]|0;
       $258 = $257 | 1;
       HEAP8[$256>>0] = $258;
      }
      $259 = ($249|0)==(0);
      if (!($259)) {
       $$24 = $$4;
       break L14;
      }
      $260 = ($$0646|0)==(0);
      if (!($260)) {
       label = 77;
       break L14;
      }
      $279 = (__is_array($246)|0);
      $280 = ($279<<24>>24)==(0);
      if ($280) {
       $281 = HEAP32[$4>>2]|0;
       $282 = ($281|0)==(0|0);
       if (!($282)) {
        $283 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
        $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
        $285 = ($284|0)==(8);
        if ($285) {
         $286 = ((($283)) + 4|0);
         $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
         $288 = ((($287)) + 4|0);
         $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
         $290 = ($289|0)==(22|0);
         if ($290) {
          label = 87;
          break L14;
         }
        }
       }
       (__ls_pushback($32,$246)|0);
       $$21 = $$4;$$5651 = 1;
      } else {
       $$1 = $$4;$$2618 = $246;
       label = 37;
      }
      break;
     }
     case 17:  {
      $$pre859 = HEAP32[$4>>2]|0;
      $$3619 = $$0616;$303 = $$pre859;
      label = 90;
      break;
     }
     case 9:  {
      $383 = ((($$0616)) + 4|0);
      $384 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
      $385 = ((($384)) + 4|0);
      $386 = HEAPU8[$385>>0]|(HEAPU8[$385+1>>0]<<8)|(HEAPU8[$385+2>>0]<<16)|(HEAPU8[$385+3>>0]<<24);
      $387 = HEAPU8[$386>>0]|(HEAPU8[$386+1>>0]<<8)|(HEAPU8[$386+2>>0]<<16)|(HEAPU8[$386+3>>0]<<24);
      $388 = ($387|0)==(10);
      if ($388) {
       HEAP32[$11>>2] = 0;
       $389 = HEAP32[$4>>2]|0;
       $390 = ($389|0)==(0|0);
       do {
        if ($390) {
         label = 126;
        } else {
         $391 = HEAPU8[$389>>0]|(HEAPU8[$389+1>>0]<<8)|(HEAPU8[$389+2>>0]<<16)|(HEAPU8[$389+3>>0]<<24);
         $392 = HEAPU8[$391>>0]|(HEAPU8[$391+1>>0]<<8)|(HEAPU8[$391+2>>0]<<16)|(HEAPU8[$391+3>>0]<<24);
         $393 = ($392|0)==(8);
         if ($393) {
          $394 = ((($391)) + 4|0);
          $395 = HEAPU8[$394>>0]|(HEAPU8[$394+1>>0]<<8)|(HEAPU8[$394+2>>0]<<16)|(HEAPU8[$394+3>>0]<<24);
          $396 = ((($395)) + 4|0);
          $397 = HEAPU8[$396>>0]|(HEAPU8[$396+1>>0]<<8)|(HEAPU8[$396+2>>0]<<16)|(HEAPU8[$396+3>>0]<<24);
          $398 = ($397|0)==(22|0);
          if ($398) {
           label = 126;
           break;
          }
         }
         (__ls_pushback($32,$386)|0);
         $$8 = $$0611;
        }
       } while(0);
       if ((label|0) == 126) {
        label = 0;
        $399 = ((($389)) + 4|0);
        $400 = HEAPU8[$399>>0]|(HEAPU8[$399+1>>0]<<8)|(HEAPU8[$399+2>>0]<<16)|(HEAPU8[$399+3>>0]<<24);
        HEAP32[$4>>2] = $400;
        $401 = (__get_array_index($0,$4,0,$11,0)|0);
        HEAP32[$3>>2] = $401;
        $402 = ($401|0)==(0);
        $403 = HEAP32[$4>>2]|0;
        if (!($402)) {
         label = 127;
         break L14;
        }
        $421 = ((($403)) + 8|0);
        $422 = HEAPU8[$421>>0]|(HEAPU8[$421+1>>0]<<8)|(HEAPU8[$421+2>>0]<<16)|(HEAPU8[$421+3>>0]<<24);
        HEAP32[$4>>2] = $422;
        $423 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
        $424 = ((($423)) + 4|0);
        $425 = HEAPU8[$424>>0]|(HEAPU8[$424+1>>0]<<8)|(HEAPU8[$424+2>>0]<<16)|(HEAPU8[$424+3>>0]<<24);
        $426 = ((($425)) + 4|0);
        $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
        $428 = HEAP32[$11>>2]|0;
        __get_array_elem($0,$427,$428,$12,$13);
        $429 = (__create_object()|0);
        $430 = ($$0611|0)==(0|0);
        if ($430) {
         $431 = (__ls_create()|0);
         $$7 = $431;
        } else {
         $$7 = $$0611;
        }
        (__ls_pushback($$7,$429)|0);
        $432 = HEAP32[$13>>2]|0;
        HEAP8[$429>>0]=$432&255;HEAP8[$429+1>>0]=($432>>8)&255;HEAP8[$429+2>>0]=($432>>16)&255;HEAP8[$429+3>>0]=$432>>24;
        $433 = ((($429)) + 8|0);
        $434 = HEAP8[$433>>0]|0;
        $435 = $434 | 1;
        HEAP8[$433>>0] = $435;
        $436 = HEAP32[$13>>2]|0;
        switch ($436|0) {
        case 6: case 4: case 3: case 2:  {
         break;
        }
        default: {
         label = 136;
         break L14;
        }
        }
        $437 = HEAP32[$12>>2]|0;
        $438 = ((($429)) + 4|0);
        HEAP8[$438>>0]=$437&255;HEAP8[$438+1>>0]=($437>>8)&255;HEAP8[$438+2>>0]=($437>>16)&255;HEAP8[$438+3>>0]=$437>>24;
        $439 = ($$0646|0)==(0);
        if (!($439)) {
         label = 138;
         break L14;
        }
        (__ls_pushback($32,$429)|0);
        $$8 = $$7;
       }
       $$3649 = (($$0646) + 1)|0;
       $$21 = $$8;$$5651 = $$3649;
       break L53;
      }
      $458 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8)|(HEAPU8[$384+2>>0]<<16)|(HEAPU8[$384+3>>0]<<24);
      $459 = ((($384)) + 8|0);
      $460 = HEAP8[$459>>0]|0;
      $461 = $460 & 3;
      $462 = ($461<<24>>24)!=(0);
      $463 = $462 ? 2 : 0;
      $464 = (__search_identifier_in_scope_chain($0,0,$458,$463,0,0)|0);
      $465 = ($464|0)==(0|0);
      if ($465) {
       $$10626 = $$0616;$$15 = $$0611;
       label = 172;
      } else {
       $466 = HEAP32[$4>>2]|0;
       HEAP32[$14>>2] = $466;
       $467 = ($466|0)==(0|0);
       if (!($467)) {
        $468 = ((($466)) + 4|0);
        $469 = HEAPU8[$468>>0]|(HEAPU8[$468+1>>0]<<8)|(HEAPU8[$468+2>>0]<<16)|(HEAPU8[$468+3>>0]<<24);
        HEAP32[$14>>2] = $469;
       }
       $470 = (__try_call_func_on_usertype_ref($0,$14,$$0616,$464,0)|0);
       $471 = ($470<<24>>24)==(0);
       L102: do {
        if ($471) {
         $500 = HEAPU8[$464>>0]|(HEAPU8[$464+1>>0]<<8)|(HEAPU8[$464+2>>0]<<16)|(HEAPU8[$464+3>>0]<<24);
         $501 = ($500|0)==(0|0);
         if ($501) {
          $$5621 = 0;
         } else {
          $502 = HEAPU8[$500>>0]|(HEAPU8[$500+1>>0]<<8)|(HEAPU8[$500+2>>0]<<16)|(HEAPU8[$500+3>>0]<<24);
          $503 = ($502|0)==(9);
          if ($503) {
           $504 = ((($500)) + 4|0);
           $505 = HEAPU8[$504>>0]|(HEAPU8[$504+1>>0]<<8)|(HEAPU8[$504+2>>0]<<16)|(HEAPU8[$504+3>>0]<<24);
           $506 = ((($505)) + 4|0);
           $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8)|(HEAPU8[$506+2>>0]<<16)|(HEAPU8[$506+3>>0]<<24);
           $508 = HEAPU8[$507>>0]|(HEAPU8[$507+1>>0]<<8)|(HEAPU8[$507+2>>0]<<16)|(HEAPU8[$507+3>>0]<<24);
           $509 = ($508|0)==(17);
           $$ = $509 ? $507 : $500;
           $$5621 = $$;
          } else {
           $$5621 = $500;
          }
         }
         $510 = HEAP32[$4>>2]|0;
         $511 = ($510|0)==(0|0);
         if ($511) {
          $$11 = $$0611;$$6622 = $$5621;
         } else {
          $512 = HEAPU8[$510>>0]|(HEAPU8[$510+1>>0]<<8)|(HEAPU8[$510+2>>0]<<16)|(HEAPU8[$510+3>>0]<<24);
          $513 = HEAPU8[$512>>0]|(HEAPU8[$512+1>>0]<<8)|(HEAPU8[$512+2>>0]<<16)|(HEAPU8[$512+3>>0]<<24);
          $514 = ($513|0)==(8);
          if ($514) {
           $515 = ((($512)) + 4|0);
           $516 = HEAPU8[$515>>0]|(HEAPU8[$515+1>>0]<<8)|(HEAPU8[$515+2>>0]<<16)|(HEAPU8[$515+3>>0]<<24);
           $517 = ((($516)) + 4|0);
           $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
           $519 = ($518|0)==(22|0);
           $520 = ($$5621|0)!=(0|0);
           $or$cond12 = $520 & $519;
           if ($or$cond12) {
            $521 = HEAPU8[$$5621>>0]|(HEAPU8[$$5621+1>>0]<<8)|(HEAPU8[$$5621+2>>0]<<16)|(HEAPU8[$$5621+3>>0]<<24);
            $522 = ($521|0)==(17);
            if ($522) {
             $$3619 = $$5621;$303 = $510;
             label = 90;
             break L53;
            } else {
             $$11 = $$0611;$$6622 = $$5621;
            }
           } else {
            $$11 = $$0611;$$6622 = $$5621;
           }
          } else {
           $$11 = $$0611;$$6622 = $$5621;
          }
         }
        } else {
         $472 = HEAP32[$14>>2]|0;
         HEAP32[$4>>2] = $472;
         $473 = (__create_object()|0);
         $474 = ($$0611|0)==(0|0);
         if ($474) {
          $475 = (__ls_create()|0);
          $$10 = $475;
         } else {
          $$10 = $$0611;
         }
         (__ls_pushback($$10,$473)|0);
         (__public_value_to_internal_object($69,$473)|0);
         $476 = HEAPU8[$473>>0]|(HEAPU8[$473+1>>0]<<8)|(HEAPU8[$473+2>>0]<<16)|(HEAPU8[$473+3>>0]<<24);
         switch ($476|0) {
         case 7:  {
          $477 = ((($473)) + 4|0);
          $478 = HEAPU8[$477>>0]|(HEAPU8[$477+1>>0]<<8)|(HEAPU8[$477+2>>0]<<16)|(HEAPU8[$477+3>>0]<<24);
          __ref($478,$478);
          $$11 = $$10;$$6622 = $473;
          break L102;
          break;
         }
         case 10:  {
          $479 = ((($473)) + 8|0);
          $480 = HEAP8[$479>>0]|0;
          $481 = $480 & 1;
          $482 = ($481<<24>>24)==(0);
          if (!($482)) {
           $$11 = $$10;$$6622 = $473;
           break L102;
          }
          $483 = ((($473)) + 4|0);
          $484 = HEAPU8[$483>>0]|(HEAPU8[$483+1>>0]<<8)|(HEAPU8[$483+2>>0]<<16)|(HEAPU8[$483+3>>0]<<24);
          __ref($484,$484);
          $$11 = $$10;$$6622 = $473;
          break L102;
          break;
         }
         case 11:  {
          $485 = ((($473)) + 4|0);
          $486 = HEAPU8[$485>>0]|(HEAPU8[$485+1>>0]<<8)|(HEAPU8[$485+2>>0]<<16)|(HEAPU8[$485+3>>0]<<24);
          __ref($486,$486);
          $$11 = $$10;$$6622 = $473;
          break L102;
          break;
         }
         case 13:  {
          $487 = ((($473)) + 4|0);
          $488 = HEAPU8[$487>>0]|(HEAPU8[$487+1>>0]<<8)|(HEAPU8[$487+2>>0]<<16)|(HEAPU8[$487+3>>0]<<24);
          __ref($488,$488);
          $$11 = $$10;$$6622 = $473;
          break L102;
          break;
         }
         case 16:  {
          $489 = ((($473)) + 4|0);
          $490 = HEAPU8[$489>>0]|(HEAPU8[$489+1>>0]<<8)|(HEAPU8[$489+2>>0]<<16)|(HEAPU8[$489+3>>0]<<24);
          __ref($490,$490);
          $$11 = $$10;$$6622 = $473;
          break L102;
          break;
         }
         case 17:  {
          $491 = ((($473)) + 8|0);
          $492 = HEAP8[$491>>0]|0;
          $493 = $492 & 1;
          $494 = ($493<<24>>24)==(0);
          if (!($494)) {
           $$11 = $$10;$$6622 = $473;
           break L102;
          }
          $495 = ((($473)) + 4|0);
          $496 = HEAPU8[$495>>0]|(HEAPU8[$495+1>>0]<<8)|(HEAPU8[$495+2>>0]<<16)|(HEAPU8[$495+3>>0]<<24);
          $497 = ((($496)) + 58|0);
          $498 = HEAPU8[$497>>0]|(HEAPU8[$497+1>>0]<<8)|(HEAPU8[$497+2>>0]<<16)|(HEAPU8[$497+3>>0]<<24);
          $499 = ($498|0)==(2);
          if (!($499)) {
           $$11 = $$10;$$6622 = $473;
           break L102;
          }
          __ref($496,$496);
          $$11 = $$10;$$6622 = $473;
          break L102;
          break;
         }
         default: {
          $$11 = $$10;$$6622 = $473;
          break L102;
         }
         }
        }
       } while(0);
       $$10626 = $$6622;$$15 = $$11;
       label = 172;
      }
      break;
     }
     default: {
      $$14630 = $$0616;$$20 = $$0611;
      label = 207;
     }
     }
    } while(0);
    L127: do {
     if ((label|0) == 37) {
      label = 0;
      $135 = HEAP32[$4>>2]|0;
      $136 = ($135|0)==(0|0);
      do {
       if (!($136)) {
        $137 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
        $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
        $139 = ($138|0)==(8);
        if ($139) {
         $140 = ((($137)) + 4|0);
         $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
         $142 = ((($141)) + 4|0);
         $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
         $144 = ($143|0)==(22|0);
         if ($144) {
          break;
         }
        }
        (__ls_pushback($32,$$2618)|0);
        $145 = (($$0646) + 1)|0;
        $$21 = $$1;$$5651 = $145;
        break L127;
       }
      } while(0);
      HEAP32[$7>>2] = 0;
      $146 = ((($135)) + 4|0);
      $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
      HEAP32[$4>>2] = $147;
      $148 = (__get_array_index($0,$4,$$2618,$7,0)|0);
      HEAP32[$3>>2] = $148;
      $149 = ($148|0)==(0);
      $150 = HEAP32[$4>>2]|0;
      if (!($149)) {
       label = 42;
       break L14;
      }
      $168 = ((($150)) + 8|0);
      $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
      HEAP32[$4>>2] = $169;
      $170 = ((($$2618)) + 4|0);
      $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
      $172 = HEAP32[$7>>2]|0;
      __get_array_elem($0,$171,$172,$8,$9);
      $173 = (__create_object()|0);
      $174 = ($$1|0)==(0|0);
      if ($174) {
       $175 = (__ls_create()|0);
       $$2 = $175;
      } else {
       $$2 = $$1;
      }
      (__ls_pushback($$2,$173)|0);
      $176 = HEAP32[$9>>2]|0;
      HEAP8[$173>>0]=$176&255;HEAP8[$173+1>>0]=($176>>8)&255;HEAP8[$173+2>>0]=($176>>16)&255;HEAP8[$173+3>>0]=$176>>24;
      $177 = ((($173)) + 8|0);
      $178 = HEAP8[$177>>0]|0;
      $179 = $178 | 1;
      HEAP8[$177>>0] = $179;
      $180 = ((($173)) + 4|0);
      $181 = HEAP32[$8>>2]|0;
      HEAP8[$180>>0]=$181&255;HEAP8[$180+1>>0]=($181>>8)&255;HEAP8[$180+2>>0]=($181>>16)&255;HEAP8[$180+3>>0]=$181>>24;
      $182 = ($$0646|0)==(0);
      if (!($182)) {
       label = 51;
       break L14;
      }
      (__ls_pushback($32,$173)|0);
      $$21 = $$2;$$5651 = 1;
     }
     else if ((label|0) == 90) {
      label = 0;
      HEAP32[$10>>2] = 0;
      $302 = ((($303)) + 4|0);
      $304 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
      HEAP32[$4>>2] = $304;
      $305 = HEAP8[$71>>0]|0;
      $306 = $305 & 1;
      $307 = $305 & -2;
      HEAP8[$71>>0] = $307;
      $308 = ((($$3619)) + 4|0);
      $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
      $310 = (__eval_routine($0,$4,0,0,$309,131,132)|0);
      HEAP32[$3>>2] = $310;
      $311 = HEAP8[$71>>0]|0;
      $312 = $311 & -2;
      $313 = $312 | $306;
      HEAP8[$71>>0] = $313;
      $314 = HEAP32[$4>>2]|0;
      $315 = ($314|0)==(0|0);
      do {
       if ($315) {
        $341 = 0;
       } else {
        $316 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
        $317 = ($316|0)==(0|0);
        if ($317) {
         label = 100;
        } else {
         $318 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
         $319 = ($318|0)==(9);
         if ($319) {
          $320 = ((($316)) + 4|0);
          $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24);
          $322 = (__is_valid_class_accessor_following_routine($0,$321,$314,$10)|0);
          $323 = ($322<<24>>24)!=(0);
          $324 = HEAP32[$10>>2]|0;
          $325 = ($324|0)!=(0|0);
          $or$cond10 = $323 & $325;
          $326 = HEAP32[$4>>2]|0;
          if ($or$cond10) {
           $327 = ($326|0)==(0|0);
           if ($327) {
            $885 = 0;
           } else {
            $328 = ((($326)) + 8|0);
            $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
            HEAP32[$4>>2] = $329;
            $330 = $329;
            $885 = $330;
           }
           $331 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
           $332 = ($331|0)==(0|0);
           if ($332) {
            $335 = $885;
           } else {
            $333 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8)|(HEAPU8[$331+2>>0]<<16)|(HEAPU8[$331+3>>0]<<24);
            $334 = ($333|0)==(9);
            if ($334) {
             $$10626 = $331;$$15 = $$0611;
             label = 172;
             break L127;
            } else {
             $335 = $885;
            }
           }
          } else {
           $335 = $326;
          }
          $336 = ($335|0)==(0|0);
          if ($336) {
           $341 = $335;
           break;
          } else {
           $$pr681873 = $335;
          }
         } else {
          label = 100;
         }
        }
        if ((label|0) == 100) {
         label = 0;
         $$pr681873 = $314;
        }
        $337 = ((($$pr681873)) + 4|0);
        $338 = HEAPU8[$337>>0]|(HEAPU8[$337+1>>0]<<8)|(HEAPU8[$337+2>>0]<<16)|(HEAPU8[$337+3>>0]<<24);
        HEAP32[$4>>2] = $338;
        $339 = $338;
        $341 = $339;
       }
      } while(0);
      $340 = HEAP32[$3>>2]|0;
      switch ($340|0) {
      case 6:  {
       $$24 = $$0611;
       break L14;
       break;
      }
      case 0:  {
       break;
      }
      default: {
       label = 104;
       break L14;
      }
      }
      $359 = (__create_object()|0);
      $360 = ($$0611|0)==(0|0);
      if ($360) {
       $361 = (__ls_create()|0);
       $$6 = $361;
      } else {
       $$6 = $$0611;
      }
      (__ls_pushback($$6,$359)|0);
      $362 = (__public_value_to_internal_object($69,$359)|0);
      HEAP32[$3>>2] = $362;
      $363 = ($362|0)==(0);
      if (!($363)) {
       $$24 = $$6;
       break L14;
      }
      $364 = ($$0646|0)==(0);
      if (!($364)) {
       label = 114;
       break L14;
      }
      (__ls_pushback($32,$359)|0);
      $$21 = $$6;$$5651 = 1;
     }
    } while(0);
    L165: do {
     if ((label|0) == 172) {
      label = 0;
      $523 = HEAP32[$4>>2]|0;
      $524 = ($523|0)==(0|0);
      if ($524) {
       $$14630 = $$10626;$$20 = $$15;
       label = 207;
      } else {
       $525 = HEAPU8[$523>>0]|(HEAPU8[$523+1>>0]<<8)|(HEAPU8[$523+2>>0]<<16)|(HEAPU8[$523+3>>0]<<24);
       $526 = ($$10626|0)==(0|0);
       do {
        if (!($526)) {
         $527 = HEAPU8[$$10626>>0]|(HEAPU8[$$10626+1>>0]<<8)|(HEAPU8[$$10626+2>>0]<<16)|(HEAPU8[$$10626+3>>0]<<24);
         $528 = ($527|0)==(9);
         if ($528) {
          $529 = ((($$10626)) + 4|0);
          $530 = HEAPU8[$529>>0]|(HEAPU8[$529+1>>0]<<8)|(HEAPU8[$529+2>>0]<<16)|(HEAPU8[$529+3>>0]<<24);
          $531 = ((($530)) + 4|0);
          $532 = HEAPU8[$531>>0]|(HEAPU8[$531+1>>0]<<8)|(HEAPU8[$531+2>>0]<<16)|(HEAPU8[$531+3>>0]<<24);
          $533 = ($532|0)==(0|0);
          if (!($533)) {
           $534 = HEAPU8[$532>>0]|(HEAPU8[$532+1>>0]<<8)|(HEAPU8[$532+2>>0]<<16)|(HEAPU8[$532+3>>0]<<24);
           $535 = ($534|0)==(11);
           if (!($535)) {
            $536 = HEAPU8[$532>>0]|(HEAPU8[$532+1>>0]<<8)|(HEAPU8[$532+2>>0]<<16)|(HEAPU8[$532+3>>0]<<24);
            $537 = ($536|0)==(13);
            if (!($537)) {
             break;
            }
           }
           $538 = HEAPU8[$525>>0]|(HEAPU8[$525+1>>0]<<8)|(HEAPU8[$525+2>>0]<<16)|(HEAPU8[$525+3>>0]<<24);
           $539 = ($538|0)==(8);
           if (!($539)) {
            $$14630 = $$10626;$$20 = $$15;
            label = 207;
            break L165;
           }
           $540 = ((($525)) + 4|0);
           $541 = HEAPU8[$540>>0]|(HEAPU8[$540+1>>0]<<8)|(HEAPU8[$540+2>>0]<<16)|(HEAPU8[$540+3>>0]<<24);
           $542 = ((($541)) + 4|0);
           $543 = HEAPU8[$542>>0]|(HEAPU8[$542+1>>0]<<8)|(HEAPU8[$542+2>>0]<<16)|(HEAPU8[$542+3>>0]<<24);
           $544 = ($543|0)==(22|0);
           if (!($544)) {
            $$14630 = $$10626;$$20 = $$15;
            label = 207;
            break L165;
           }
           HEAP32[$15>>2] = 0;
           HEAP32[$72>>2] = 0;
           HEAP32[$17>>2] = 0;
           $545 = ((($523)) + 4|0);
           $546 = HEAPU8[$545>>0]|(HEAPU8[$545+1>>0]<<8)|(HEAPU8[$545+2>>0]<<16)|(HEAPU8[$545+3>>0]<<24);
           HEAP32[$1>>2] = $546;
           $547 = (_mb_attempt_open_bracket($0,$1)|0);
           $548 = ($547|0)==(0);
           if (!($548)) {
            label = 201;
            break L14;
           }
           $549 = HEAPU8[$532>>0]|(HEAPU8[$532+1>>0]<<8)|(HEAPU8[$532+2>>0]<<16)|(HEAPU8[$532+3>>0]<<24);
           switch ($549|0) {
           case 11:  {
            $550 = (_mb_pop_int($0,$1,$15)|0);
            $551 = ($550|0)==(0);
            if (!($551)) {
             label = 201;
             break L14;
            }
            $552 = ((($532)) + 4|0);
            $553 = HEAPU8[$552>>0]|(HEAPU8[$552+1>>0]<<8)|(HEAPU8[$552+2>>0]<<16)|(HEAPU8[$552+3>>0]<<24);
            $554 = HEAP32[$15>>2]|0;
            $555 = (__at_list($553,$554,$17)|0);
            $556 = ($555<<24>>24)==(0);
            if ($556) {
             label = 184;
             break L14;
            }
            break;
           }
           case 13:  {
            HEAP32[$74>>2] = 0;
            HEAP32[$16>>2] = 0;
            $575 = (_mb_pop_value($0,$1,$16)|0);
            $576 = ($575|0)==(0);
            if (!($576)) {
             label = 201;
             break L14;
            }
            $577 = ((($532)) + 4|0);
            $578 = HEAPU8[$577>>0]|(HEAPU8[$577+1>>0]<<8)|(HEAPU8[$577+2>>0]<<16)|(HEAPU8[$577+3>>0]<<24);
            $579 = (__find_dict($578,$16,$17)|0);
            $580 = ($579<<24>>24)==(0);
            if ($580) {
             label = 192;
             break L14;
            }
            break;
           }
           default: {
           }
           }
           $599 = (_mb_attempt_close_bracket($0,$1)|0);
           $600 = ($599|0)==(0);
           if (!($600)) {
            label = 201;
            break L14;
           }
           $601 = (__create_object()|0);
           $602 = ($$15|0)==(0|0);
           if ($602) {
            $603 = (__ls_create()|0);
            $$16 = $603;
           } else {
            $$16 = $$15;
           }
           (__ls_pushback($$16,$601)|0);
           (__public_value_to_internal_object($17,$601)|0);
           $604 = HEAP32[$1>>2]|0;
           HEAP32[$4>>2] = $604;
           $$14630 = $601;$$20 = $$16;
           label = 207;
           break L165;
          }
         }
        }
       } while(0);
       $605 = HEAPU8[$525>>0]|(HEAPU8[$525+1>>0]<<8)|(HEAPU8[$525+2>>0]<<16)|(HEAPU8[$525+3>>0]<<24);
       $606 = ($605|0)==(8);
       if ($606) {
        $607 = ((($525)) + 4|0);
        $608 = HEAPU8[$607>>0]|(HEAPU8[$607+1>>0]<<8)|(HEAPU8[$607+2>>0]<<16)|(HEAPU8[$607+3>>0]<<24);
        $609 = ((($608)) + 4|0);
        $610 = HEAPU8[$609>>0]|(HEAPU8[$609+1>>0]<<8)|(HEAPU8[$609+2>>0]<<16)|(HEAPU8[$609+3>>0]<<24);
        $611 = ($610|0)==(22|0);
        if ($611) {
         label = 205;
         break L14;
        } else {
         $$14630 = $$10626;$$20 = $$15;
         label = 207;
        }
       } else {
        $$14630 = $$10626;$$20 = $$15;
        label = 207;
       }
      }
     }
    } while(0);
    if ((label|0) == 207) {
     label = 0;
     $623 = ($$0646|0)==(0);
     if (!($623)) {
      label = 208;
      break;
     }
     (__ls_pushback($32,$$14630)|0);
     $$21 = $$20;$$5651 = 1;
    }
    $642 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $643 = ($642|0)==(-1);
    if ($643) {
     $647 = -1;
    } else {
     $644 = (($642) + -1)|0;
     HEAP8[$66>>0]=$644&255;HEAP8[$66+1>>0]=($644>>8)&255;HEAP8[$66+2>>0]=($644>>16)&255;HEAP8[$66+3>>0]=$644>>24;
     $647 = $644;
    }
    $645 = HEAP32[$4>>2]|0;
    $646 = ($645|0)==(0|0);
    $cond659 = ($647|0)==(0);
    $or$cond953 = $646 | $cond659;
    if ($or$cond953) {
     $679 = HEAP32[3903]|0;
     $741$phi = $741;$$0640$phi = $$0640;$$0611 = $$21;$$0616 = $679;$$0641 = 0;$$0642 = $$1643674;$$0646 = $$5651;$741 = $741$phi;$$0640 = $$0640$phi;
     continue;
    }
    $648 = HEAPU8[$645>>0]|(HEAPU8[$645+1>>0]<<8)|(HEAPU8[$645+2>>0]<<16)|(HEAPU8[$645+3>>0]<<24);
    $649 = HEAPU8[$648>>0]|(HEAPU8[$648+1>>0]<<8)|(HEAPU8[$648+2>>0]<<16)|(HEAPU8[$648+3>>0]<<24);
    $650 = ($649|0)==(8);
    if ($650) {
     $651 = ((($648)) + 4|0);
     $652 = HEAPU8[$651>>0]|(HEAPU8[$651+1>>0]<<8)|(HEAPU8[$651+2>>0]<<16)|(HEAPU8[$651+3>>0]<<24);
     $653 = ((($652)) + 4|0);
     $654 = HEAPU8[$653>>0]|(HEAPU8[$653+1>>0]<<8)|(HEAPU8[$653+2>>0]<<16)|(HEAPU8[$653+3>>0]<<24);
     $655 = (__is_operator($654)|0);
     $656 = ($655<<24>>24)==(0);
     if ($656) {
      $657 = (__is_flow($654)|0);
      $658 = ($657<<24>>24)==(0);
      if ($658) {
       label = 221;
       break;
      }
     }
    }
    $677 = ((($645)) + 8|0);
    $678 = HEAPU8[$677>>0]|(HEAPU8[$677+1>>0]<<8)|(HEAPU8[$677+2>>0]<<16)|(HEAPU8[$677+3>>0]<<24);
    HEAP32[$4>>2] = $678;
    $741$phi = $741;$$0640$phi = $$0640;$$0611 = $$21;$$0616 = $648;$$0641 = 0;$$0642 = $$1643674;$$0646 = $$5651;$741 = $741$phi;$$0640 = $$0640$phi;
   }
   switch (label|0) {
    case 42: {
     $151 = ($150|0)==(0|0);
     if (!($151)) {
      $152 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $155 = (__set_current_error($0,45,$154)|0);
       $156 = ($155<<24>>24)==(0);
       if ($156) {
        $$3$ph = $$1;
        label = 57;
        break;
       }
       $157 = HEAP32[$4>>2]|0;
       $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
       $159 = ((($158)) + 9|0);
       $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
       $161 = ((($158)) + 13|0);
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8);
       $163 = ((($158)) + 15|0);
       $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8);
       __set_error_pos($0,$160,$162,$164);
       HEAP32[$3>>2] = 3;
       $$3$ph = $$1;
       label = 57;
       break;
      }
     }
     $165 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $166 = (__set_current_error($0,45,$165)|0);
     $167 = ($166<<24>>24)==(0);
     if ($167) {
      $$3$ph = $$1;
      label = 57;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$3$ph = $$1;
      label = 57;
     }
     break;
    }
    case 51: {
     $183 = HEAP32[$4>>2]|0;
     $184 = ($183|0)==(0|0);
     if (!($184)) {
      $185 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
      $186 = ($185|0)==(0|0);
      if (!($186)) {
       $187 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $188 = (__set_current_error($0,35,$187)|0);
       $189 = ($188<<24>>24)==(0);
       if ($189) {
        $$3$ph = $$2;
        label = 57;
        break;
       }
       $190 = HEAP32[$4>>2]|0;
       $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
       $192 = ((($191)) + 9|0);
       $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
       $194 = ((($191)) + 13|0);
       $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8);
       $196 = ((($191)) + 15|0);
       $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8);
       __set_error_pos($0,$193,$195,$197);
       HEAP32[$3>>2] = 3;
       $$3$ph = $$2;
       label = 57;
       break;
      }
     }
     $198 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $199 = (__set_current_error($0,35,$198)|0);
     $200 = ($199<<24>>24)==(0);
     if ($200) {
      $$3$ph = $$2;
      label = 57;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$3$ph = $$2;
      label = 57;
     }
     break;
    }
    case 63: {
     $228 = HEAP32[$4>>2]|0;
     $229 = ($228|0)==(0|0);
     if (!($229)) {
      $230 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
      $231 = ($230|0)==(0|0);
      if (!($231)) {
       $232 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $233 = (__set_current_error($0,45,$232)|0);
       $234 = ($233<<24>>24)==(0);
       if ($234) {
        $$24 = $$0611;
        break;
       }
       $235 = HEAP32[$4>>2]|0;
       $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
       $237 = ((($236)) + 9|0);
       $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
       $239 = ((($236)) + 13|0);
       $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8);
       $241 = ((($236)) + 15|0);
       $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8);
       __set_error_pos($0,$238,$240,$242);
       HEAP32[$3>>2] = 3;
       $$24 = $$0611;
       break;
      }
     }
     $243 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $244 = (__set_current_error($0,45,$243)|0);
     $245 = ($244<<24>>24)==(0);
     if ($245) {
      $$24 = $$0611;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
     }
     break;
    }
    case 77: {
     $261 = HEAP32[$4>>2]|0;
     $262 = ($261|0)==(0|0);
     if (!($262)) {
      $263 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
      $264 = ($263|0)==(0|0);
      if (!($264)) {
       $265 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $266 = (__set_current_error($0,35,$265)|0);
       $267 = ($266<<24>>24)==(0);
       if ($267) {
        $$24 = $$4;
        break;
       }
       $268 = HEAP32[$4>>2]|0;
       $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
       $270 = ((($269)) + 9|0);
       $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
       $272 = ((($269)) + 13|0);
       $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8);
       $274 = ((($269)) + 15|0);
       $275 = HEAPU8[$274>>0]|(HEAPU8[$274+1>>0]<<8);
       __set_error_pos($0,$271,$273,$275);
       HEAP32[$3>>2] = 3;
       $$24 = $$4;
       break;
      }
     }
     $276 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $277 = (__set_current_error($0,35,$276)|0);
     $278 = ($277<<24>>24)==(0);
     if ($278) {
      $$24 = $$4;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$4;
     }
     break;
    }
    case 87: {
     $291 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $292 = (__set_current_error($0,10,$291)|0);
     $293 = ($292<<24>>24)==(0);
     if ($293) {
      $$24 = $$4;
     } else {
      $294 = HEAP32[$4>>2]|0;
      $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
      $296 = ((($295)) + 9|0);
      $297 = HEAPU8[$296>>0]|(HEAPU8[$296+1>>0]<<8)|(HEAPU8[$296+2>>0]<<16)|(HEAPU8[$296+3>>0]<<24);
      $298 = ((($295)) + 13|0);
      $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8);
      $300 = ((($295)) + 15|0);
      $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8);
      __set_error_pos($0,$297,$299,$301);
      HEAP32[$3>>2] = 3;
      $$24 = $$4;
     }
     break;
    }
    case 104: {
     $342 = ($341|0)==(0|0);
     if (!($342)) {
      $343 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8)|(HEAPU8[$341+2>>0]<<16)|(HEAPU8[$341+3>>0]<<24);
      $344 = ($343|0)==(0|0);
      if (!($344)) {
       $345 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $346 = (__set_current_error($0,45,$345)|0);
       $347 = ($346<<24>>24)==(0);
       if ($347) {
        $$24 = $$0611;
        break;
       }
       $348 = HEAP32[$4>>2]|0;
       $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
       $350 = ((($349)) + 9|0);
       $351 = HEAPU8[$350>>0]|(HEAPU8[$350+1>>0]<<8)|(HEAPU8[$350+2>>0]<<16)|(HEAPU8[$350+3>>0]<<24);
       $352 = ((($349)) + 13|0);
       $353 = HEAPU8[$352>>0]|(HEAPU8[$352+1>>0]<<8);
       $354 = ((($349)) + 15|0);
       $355 = HEAPU8[$354>>0]|(HEAPU8[$354+1>>0]<<8);
       __set_error_pos($0,$351,$353,$355);
       HEAP32[$3>>2] = 3;
       $$24 = $$0611;
       break;
      }
     }
     $356 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $357 = (__set_current_error($0,45,$356)|0);
     $358 = ($357<<24>>24)==(0);
     if ($358) {
      $$24 = $$0611;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
     }
     break;
    }
    case 114: {
     $365 = HEAP32[$4>>2]|0;
     $366 = ($365|0)==(0|0);
     if (!($366)) {
      $367 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8)|(HEAPU8[$365+2>>0]<<16)|(HEAPU8[$365+3>>0]<<24);
      $368 = ($367|0)==(0|0);
      if (!($368)) {
       $369 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $370 = (__set_current_error($0,35,$369)|0);
       $371 = ($370<<24>>24)==(0);
       if ($371) {
        $$24 = $$6;
        break;
       }
       $372 = HEAP32[$4>>2]|0;
       $373 = HEAPU8[$372>>0]|(HEAPU8[$372+1>>0]<<8)|(HEAPU8[$372+2>>0]<<16)|(HEAPU8[$372+3>>0]<<24);
       $374 = ((($373)) + 9|0);
       $375 = HEAPU8[$374>>0]|(HEAPU8[$374+1>>0]<<8)|(HEAPU8[$374+2>>0]<<16)|(HEAPU8[$374+3>>0]<<24);
       $376 = ((($373)) + 13|0);
       $377 = HEAPU8[$376>>0]|(HEAPU8[$376+1>>0]<<8);
       $378 = ((($373)) + 15|0);
       $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8);
       __set_error_pos($0,$375,$377,$379);
       HEAP32[$3>>2] = 3;
       $$24 = $$6;
       break;
      }
     }
     $380 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $381 = (__set_current_error($0,35,$380)|0);
     $382 = ($381<<24>>24)==(0);
     if ($382) {
      $$24 = $$6;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$6;
     }
     break;
    }
    case 127: {
     $404 = ($403|0)==(0|0);
     if (!($404)) {
      $405 = HEAPU8[$403>>0]|(HEAPU8[$403+1>>0]<<8)|(HEAPU8[$403+2>>0]<<16)|(HEAPU8[$403+3>>0]<<24);
      $406 = ($405|0)==(0|0);
      if (!($406)) {
       $407 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $408 = (__set_current_error($0,45,$407)|0);
       $409 = ($408<<24>>24)==(0);
       if ($409) {
        $$9$ph = $$0611;
        label = 145;
        break;
       }
       $410 = HEAP32[$4>>2]|0;
       $411 = HEAPU8[$410>>0]|(HEAPU8[$410+1>>0]<<8)|(HEAPU8[$410+2>>0]<<16)|(HEAPU8[$410+3>>0]<<24);
       $412 = ((($411)) + 9|0);
       $413 = HEAPU8[$412>>0]|(HEAPU8[$412+1>>0]<<8)|(HEAPU8[$412+2>>0]<<16)|(HEAPU8[$412+3>>0]<<24);
       $414 = ((($411)) + 13|0);
       $415 = HEAPU8[$414>>0]|(HEAPU8[$414+1>>0]<<8);
       $416 = ((($411)) + 15|0);
       $417 = HEAPU8[$416>>0]|(HEAPU8[$416+1>>0]<<8);
       __set_error_pos($0,$413,$415,$417);
       HEAP32[$3>>2] = 3;
       $$9$ph = $$0611;
       label = 145;
       break;
      }
     }
     $418 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $419 = (__set_current_error($0,45,$418)|0);
     $420 = ($419<<24>>24)==(0);
     if ($420) {
      $$9$ph = $$0611;
      label = 145;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$9$ph = $$0611;
      label = 145;
     }
     break;
    }
    case 136: {
     ___assert_fail((4975|0),(1578|0),4008,(7288|0));
     // unreachable;
     break;
    }
    case 138: {
     $440 = HEAP32[$4>>2]|0;
     $441 = ($440|0)==(0|0);
     if (!($441)) {
      $442 = HEAPU8[$440>>0]|(HEAPU8[$440+1>>0]<<8)|(HEAPU8[$440+2>>0]<<16)|(HEAPU8[$440+3>>0]<<24);
      $443 = ($442|0)==(0|0);
      if (!($443)) {
       $444 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $445 = (__set_current_error($0,35,$444)|0);
       $446 = ($445<<24>>24)==(0);
       if ($446) {
        $$9$ph = $$7;
        label = 145;
        break;
       }
       $447 = HEAP32[$4>>2]|0;
       $448 = HEAPU8[$447>>0]|(HEAPU8[$447+1>>0]<<8)|(HEAPU8[$447+2>>0]<<16)|(HEAPU8[$447+3>>0]<<24);
       $449 = ((($448)) + 9|0);
       $450 = HEAPU8[$449>>0]|(HEAPU8[$449+1>>0]<<8)|(HEAPU8[$449+2>>0]<<16)|(HEAPU8[$449+3>>0]<<24);
       $451 = ((($448)) + 13|0);
       $452 = HEAPU8[$451>>0]|(HEAPU8[$451+1>>0]<<8);
       $453 = ((($448)) + 15|0);
       $454 = HEAPU8[$453>>0]|(HEAPU8[$453+1>>0]<<8);
       __set_error_pos($0,$450,$452,$454);
       HEAP32[$3>>2] = 3;
       $$9$ph = $$7;
       label = 145;
       break;
      }
     }
     $455 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $456 = (__set_current_error($0,35,$455)|0);
     $457 = ($456<<24>>24)==(0);
     if ($457) {
      $$9$ph = $$7;
      label = 145;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$9$ph = $$7;
      label = 145;
     }
     break;
    }
    case 184: {
     $557 = HEAP32[$1>>2]|0;
     $558 = ($557|0)==(0|0);
     if (!($558)) {
      $559 = HEAPU8[$557>>0]|(HEAPU8[$557+1>>0]<<8)|(HEAPU8[$557+2>>0]<<16)|(HEAPU8[$557+3>>0]<<24);
      $560 = ($559|0)==(0|0);
      if (!($560)) {
       $561 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $562 = (__set_current_error($0,20,$561)|0);
       $563 = ($562<<24>>24)==(0);
       if ($563) {
        label = 201;
        break;
       }
       $564 = HEAP32[$1>>2]|0;
       $565 = HEAPU8[$564>>0]|(HEAPU8[$564+1>>0]<<8)|(HEAPU8[$564+2>>0]<<16)|(HEAPU8[$564+3>>0]<<24);
       $566 = ((($565)) + 9|0);
       $567 = HEAPU8[$566>>0]|(HEAPU8[$566+1>>0]<<8)|(HEAPU8[$566+2>>0]<<16)|(HEAPU8[$566+3>>0]<<24);
       $568 = ((($565)) + 13|0);
       $569 = HEAPU8[$568>>0]|(HEAPU8[$568+1>>0]<<8);
       $570 = ((($565)) + 15|0);
       $571 = HEAPU8[$570>>0]|(HEAPU8[$570+1>>0]<<8);
       __set_error_pos($0,$567,$569,$571);
       HEAP32[$3>>2] = 3;
       label = 201;
       break;
      }
     }
     $572 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $573 = (__set_current_error($0,20,$572)|0);
     $574 = ($573<<24>>24)==(0);
     if ($574) {
      label = 201;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      label = 201;
     }
     break;
    }
    case 192: {
     $581 = HEAP32[$1>>2]|0;
     $582 = ($581|0)==(0|0);
     if (!($582)) {
      $583 = HEAPU8[$581>>0]|(HEAPU8[$581+1>>0]<<8)|(HEAPU8[$581+2>>0]<<16)|(HEAPU8[$581+3>>0]<<24);
      $584 = ($583|0)==(0|0);
      if (!($584)) {
       $585 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $586 = (__set_current_error($0,20,$585)|0);
       $587 = ($586<<24>>24)==(0);
       if ($587) {
        label = 201;
        break;
       }
       $588 = HEAP32[$1>>2]|0;
       $589 = HEAPU8[$588>>0]|(HEAPU8[$588+1>>0]<<8)|(HEAPU8[$588+2>>0]<<16)|(HEAPU8[$588+3>>0]<<24);
       $590 = ((($589)) + 9|0);
       $591 = HEAPU8[$590>>0]|(HEAPU8[$590+1>>0]<<8)|(HEAPU8[$590+2>>0]<<16)|(HEAPU8[$590+3>>0]<<24);
       $592 = ((($589)) + 13|0);
       $593 = HEAPU8[$592>>0]|(HEAPU8[$592+1>>0]<<8);
       $594 = ((($589)) + 15|0);
       $595 = HEAPU8[$594>>0]|(HEAPU8[$594+1>>0]<<8);
       __set_error_pos($0,$591,$593,$595);
       HEAP32[$3>>2] = 3;
       label = 201;
       break;
      }
     }
     $596 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $597 = (__set_current_error($0,20,$596)|0);
     $598 = ($597<<24>>24)==(0);
     if ($598) {
      label = 201;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      label = 201;
     }
     break;
    }
    case 205: {
     $612 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $613 = (__set_current_error($0,23,$612)|0);
     $614 = ($613<<24>>24)==(0);
     if ($614) {
      $$24 = $$15;
     } else {
      $615 = HEAP32[$4>>2]|0;
      $616 = HEAPU8[$615>>0]|(HEAPU8[$615+1>>0]<<8)|(HEAPU8[$615+2>>0]<<16)|(HEAPU8[$615+3>>0]<<24);
      $617 = ((($616)) + 9|0);
      $618 = HEAPU8[$617>>0]|(HEAPU8[$617+1>>0]<<8)|(HEAPU8[$617+2>>0]<<16)|(HEAPU8[$617+3>>0]<<24);
      $619 = ((($616)) + 13|0);
      $620 = HEAPU8[$619>>0]|(HEAPU8[$619+1>>0]<<8);
      $621 = ((($616)) + 15|0);
      $622 = HEAPU8[$621>>0]|(HEAPU8[$621+1>>0]<<8);
      __set_error_pos($0,$618,$620,$622);
      HEAP32[$3>>2] = 3;
      $$24 = $$15;
     }
     break;
    }
    case 208: {
     $624 = HEAP32[$4>>2]|0;
     $625 = ($624|0)==(0|0);
     if (!($625)) {
      $626 = HEAPU8[$624>>0]|(HEAPU8[$624+1>>0]<<8)|(HEAPU8[$624+2>>0]<<16)|(HEAPU8[$624+3>>0]<<24);
      $627 = ($626|0)==(0|0);
      if (!($627)) {
       $628 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $629 = (__set_current_error($0,35,$628)|0);
       $630 = ($629<<24>>24)==(0);
       if ($630) {
        $$24 = $$20;
        break;
       }
       $631 = HEAP32[$4>>2]|0;
       $632 = HEAPU8[$631>>0]|(HEAPU8[$631+1>>0]<<8)|(HEAPU8[$631+2>>0]<<16)|(HEAPU8[$631+3>>0]<<24);
       $633 = ((($632)) + 9|0);
       $634 = HEAPU8[$633>>0]|(HEAPU8[$633+1>>0]<<8)|(HEAPU8[$633+2>>0]<<16)|(HEAPU8[$633+3>>0]<<24);
       $635 = ((($632)) + 13|0);
       $636 = HEAPU8[$635>>0]|(HEAPU8[$635+1>>0]<<8);
       $637 = ((($632)) + 15|0);
       $638 = HEAPU8[$637>>0]|(HEAPU8[$637+1>>0]<<8);
       __set_error_pos($0,$634,$636,$638);
       HEAP32[$3>>2] = 3;
       $$24 = $$20;
       break;
      }
     }
     $639 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $640 = (__set_current_error($0,35,$639)|0);
     $641 = ($640<<24>>24)==(0);
     if ($641) {
      $$24 = $$20;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$20;
     }
     break;
    }
    case 221: {
     (__ls_foreach($32,153)|0);
     $659 = HEAP32[$4>>2]|0;
     $660 = ($659|0)==(0|0);
     if (!($660)) {
      $661 = HEAPU8[$659>>0]|(HEAPU8[$659+1>>0]<<8)|(HEAPU8[$659+2>>0]<<16)|(HEAPU8[$659+3>>0]<<24);
      $662 = ($661|0)==(0|0);
      if (!($662)) {
       $663 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $664 = (__set_current_error($0,28,$663)|0);
       $665 = ($664<<24>>24)==(0);
       if ($665) {
        $$24 = $$21;
        break;
       }
       $666 = HEAP32[$4>>2]|0;
       $667 = HEAPU8[$666>>0]|(HEAPU8[$666+1>>0]<<8)|(HEAPU8[$666+2>>0]<<16)|(HEAPU8[$666+3>>0]<<24);
       $668 = ((($667)) + 9|0);
       $669 = HEAPU8[$668>>0]|(HEAPU8[$668+1>>0]<<8)|(HEAPU8[$668+2>>0]<<16)|(HEAPU8[$668+3>>0]<<24);
       $670 = ((($667)) + 13|0);
       $671 = HEAPU8[$670>>0]|(HEAPU8[$670+1>>0]<<8);
       $672 = ((($667)) + 15|0);
       $673 = HEAPU8[$672>>0]|(HEAPU8[$672+1>>0]<<8);
       __set_error_pos($0,$669,$671,$673);
       HEAP32[$3>>2] = 3;
       $$24 = $$21;
       break;
      }
     }
     $674 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $675 = (__set_current_error($0,28,$674)|0);
     $676 = ($675<<24>>24)==(0);
     if ($676) {
      $$24 = $$21;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$21;
     }
     break;
    }
    case 233: {
     __ls_clear($31);
     $701 = ($$0640|0)!=(0|0);
     if ($701) {
      $702 = HEAPU8[$$0640>>0]|(HEAPU8[$$0640+1>>0]<<8)|(HEAPU8[$$0640+2>>0]<<16)|(HEAPU8[$$0640+3>>0]<<24);
      $703 = ($702|0)==(0|0);
      if ($703) {
       label = 239;
      } else {
       label = 237;
      }
     } else {
      $704 = HEAP32[$4>>2]|0;
      $705 = ($704|0)==(0|0);
      if ($705) {
       label = 239;
      } else {
       $706 = HEAPU8[$704>>0]|(HEAPU8[$704+1>>0]<<8)|(HEAPU8[$704+2>>0]<<16)|(HEAPU8[$704+3>>0]<<24);
       $707 = ($706|0)==(0|0);
       if ($707) {
        label = 239;
       } else {
        label = 237;
       }
      }
     }
     if ((label|0) == 237) {
      $708 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $709 = (__set_current_error($0,34,$708)|0);
      $710 = ($709<<24>>24)==(0);
      if ($710) {
       $$24 = $$0611;
       break;
      }
      $711 = HEAP32[$4>>2]|0;
      $$sink = $701 ? $$0640 : $711;
      $712 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
      $713 = ((($712)) + 9|0);
      $714 = HEAPU8[$713>>0]|(HEAPU8[$713+1>>0]<<8)|(HEAPU8[$713+2>>0]<<16)|(HEAPU8[$713+3>>0]<<24);
      $715 = ((($712)) + 13|0);
      $716 = HEAPU8[$715>>0]|(HEAPU8[$715+1>>0]<<8);
      $717 = ((($712)) + 15|0);
      $718 = HEAPU8[$717>>0]|(HEAPU8[$717+1>>0]<<8);
      __set_error_pos($0,$714,$716,$718);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
      break;
     }
     else if ((label|0) == 239) {
      $719 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $720 = (__set_current_error($0,34,$719)|0);
      $721 = ($720<<24>>24)==(0);
      if ($721) {
       $$24 = $$0611;
       break;
      }
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
      break;
     }
     break;
    }
    case 245: {
     $730 = ($$0640|0)!=(0|0);
     if ($730) {
      $731 = HEAPU8[$$0640>>0]|(HEAPU8[$$0640+1>>0]<<8)|(HEAPU8[$$0640+2>>0]<<16)|(HEAPU8[$$0640+3>>0]<<24);
      $732 = ($731|0)==(0|0);
      if ($732) {
       label = 251;
      } else {
       label = 249;
      }
     } else {
      $733 = HEAP32[$4>>2]|0;
      $734 = ($733|0)==(0|0);
      if ($734) {
       label = 251;
      } else {
       $735 = HEAPU8[$733>>0]|(HEAPU8[$733+1>>0]<<8)|(HEAPU8[$733+2>>0]<<16)|(HEAPU8[$733+3>>0]<<24);
       $736 = ($735|0)==(0|0);
       if ($736) {
        label = 251;
       } else {
        label = 249;
       }
      }
     }
     if ((label|0) == 249) {
      $737 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $738 = (__set_current_error($0,34,$737)|0);
      $739 = ($738<<24>>24)==(0);
      if ($739) {
       $$24 = $$0611;
       break;
      }
      $740 = HEAP32[$4>>2]|0;
      $742 = $730 ? $741 : $740;
      $743 = HEAPU8[$742>>0]|(HEAPU8[$742+1>>0]<<8)|(HEAPU8[$742+2>>0]<<16)|(HEAPU8[$742+3>>0]<<24);
      $744 = ((($743)) + 9|0);
      $745 = HEAPU8[$744>>0]|(HEAPU8[$744+1>>0]<<8)|(HEAPU8[$744+2>>0]<<16)|(HEAPU8[$744+3>>0]<<24);
      $746 = $730 ? $$0640 : $740;
      $747 = HEAPU8[$746>>0]|(HEAPU8[$746+1>>0]<<8)|(HEAPU8[$746+2>>0]<<16)|(HEAPU8[$746+3>>0]<<24);
      $748 = ((($747)) + 13|0);
      $749 = HEAPU8[$748>>0]|(HEAPU8[$748+1>>0]<<8);
      $750 = ((($747)) + 15|0);
      $751 = HEAPU8[$750>>0]|(HEAPU8[$750+1>>0]<<8);
      __set_error_pos($0,$745,$749,$751);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
      break;
     }
     else if ((label|0) == 251) {
      $752 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $753 = (__set_current_error($0,34,$752)|0);
      $754 = ($753<<24>>24)==(0);
      if ($754) {
       $$24 = $$0611;
       break;
      }
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
      break;
     }
     break;
    }
    case 253: {
     $755 = ($$0640|0)==(0|0);
     if (!($755)) {
      $756 = HEAPU8[$$0640>>0]|(HEAPU8[$$0640+1>>0]<<8)|(HEAPU8[$$0640+2>>0]<<16)|(HEAPU8[$$0640+3>>0]<<24);
      $757 = ($756|0)==(0|0);
      $758 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $759 = (__set_current_error($0,32,$758)|0);
      $760 = ($759<<24>>24)==(0);
      if ($757) {
       if ($760) {
        $$24 = $$0611;
        break;
       }
       __set_error_pos($0,0,0,0);
       HEAP32[$3>>2] = 3;
       $$24 = $$0611;
       break;
      } else {
       if ($760) {
        $$24 = $$0611;
        break;
       }
       $761 = HEAPU8[$$0640>>0]|(HEAPU8[$$0640+1>>0]<<8)|(HEAPU8[$$0640+2>>0]<<16)|(HEAPU8[$$0640+3>>0]<<24);
       $762 = ((($761)) + 9|0);
       $763 = HEAPU8[$762>>0]|(HEAPU8[$762+1>>0]<<8)|(HEAPU8[$762+2>>0]<<16)|(HEAPU8[$762+3>>0]<<24);
       $764 = ((($761)) + 13|0);
       $765 = HEAPU8[$764>>0]|(HEAPU8[$764+1>>0]<<8);
       $766 = ((($761)) + 15|0);
       $767 = HEAPU8[$766>>0]|(HEAPU8[$766+1>>0]<<8);
       __set_error_pos($0,$763,$765,$767);
       HEAP32[$3>>2] = 3;
       $$24 = $$0611;
       break;
      }
     }
     $768 = (__ls_popback($32)|0);
     $769 = (__is_unexpected_calc_type($0,$768)|0);
     $770 = ($769<<24>>24)==(0);
     $771 = HEAP32[$4>>2]|0;
     $772 = ($771|0)!=(0|0);
     if ($770) {
      if (!($772)) {
       $$0612 = $31;$$0614 = $32;$$0645 = $24;$$0652 = $33;$$15631 = $768;$$23 = $$0611;
       label = 270;
       break L4;
      }
      $789 = ((($771)) + 4|0);
      $790 = HEAPU8[$789>>0]|(HEAPU8[$789+1>>0]<<8)|(HEAPU8[$789+2>>0]<<16)|(HEAPU8[$789+3>>0]<<24);
      $791 = HEAP32[$1>>2]|0;
      $792 = ($790|0)==($791|0);
      if (!($792)) {
       $$0612 = $31;$$0614 = $32;$$0645 = $24;$$0652 = $33;$$15631 = $768;$$23 = $$0611;
       label = 270;
       break L4;
      }
      $793 = HEAPU8[$790>>0]|(HEAPU8[$790+1>>0]<<8)|(HEAPU8[$790+2>>0]<<16)|(HEAPU8[$790+3>>0]<<24);
      $794 = HEAPU8[$793>>0]|(HEAPU8[$793+1>>0]<<8)|(HEAPU8[$793+2>>0]<<16)|(HEAPU8[$793+3>>0]<<24);
      switch ($794|0) {
      case 3: case 2: case 0:  {
       break;
      }
      default: {
       $$0612 = $31;$$0614 = $32;$$0645 = $24;$$0652 = $33;$$15631 = $768;$$23 = $$0611;
       label = 270;
       break L4;
      }
      }
      $795 = ((($793)) + 8|0);
      $796 = HEAP8[$795>>0]|0;
      $797 = $796 | 2;
      HEAP8[$795>>0] = $797;
      $$0612 = $31;$$0614 = $32;$$0645 = $24;$$0652 = $33;$$15631 = $768;$$23 = $$0611;
      label = 270;
      break L4;
     }
     if ($772) {
      $773 = HEAPU8[$771>>0]|(HEAPU8[$771+1>>0]<<8)|(HEAPU8[$771+2>>0]<<16)|(HEAPU8[$771+3>>0]<<24);
      $774 = ($773|0)==(0|0);
      if (!($774)) {
       $775 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $776 = (__set_current_error($0,13,$775)|0);
       $777 = ($776<<24>>24)==(0);
       if ($777) {
        $$24 = $$0611;
        break;
       }
       $778 = HEAP32[$4>>2]|0;
       $779 = HEAPU8[$778>>0]|(HEAPU8[$778+1>>0]<<8)|(HEAPU8[$778+2>>0]<<16)|(HEAPU8[$778+3>>0]<<24);
       $780 = ((($779)) + 9|0);
       $781 = HEAPU8[$780>>0]|(HEAPU8[$780+1>>0]<<8)|(HEAPU8[$780+2>>0]<<16)|(HEAPU8[$780+3>>0]<<24);
       $782 = ((($779)) + 13|0);
       $783 = HEAPU8[$782>>0]|(HEAPU8[$782+1>>0]<<8);
       $784 = ((($779)) + 15|0);
       $785 = HEAPU8[$784>>0]|(HEAPU8[$784+1>>0]<<8);
       __set_error_pos($0,$781,$783,$785);
       HEAP32[$3>>2] = 3;
       $$24 = $$0611;
       break;
      }
     }
     $786 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $787 = (__set_current_error($0,13,$786)|0);
     $788 = ($787<<24>>24)==(0);
     if ($788) {
      $$24 = $$0611;
     } else {
      __set_error_pos($0,0,0,0);
      HEAP32[$3>>2] = 3;
      $$24 = $$0611;
     }
     break;
    }
   }
   if ((label|0) == 57) {
    $$24 = $$3$ph;
   }
   else if ((label|0) == 145) {
    $$24 = $$9$ph;
   }
   else if ((label|0) == 201) {
    $$24 = $$15;
   }
   $841 = ($$24|0)==(0|0);
   if ($841) {
    $$1613703 = $31;$$1615701 = $32;$$1653699 = $33;
   } else {
    $$0609$in786 = ((($$24)) + 8|0);
    $$0609787 = HEAPU8[$$0609$in786>>0]|(HEAPU8[$$0609$in786+1>>0]<<8)|(HEAPU8[$$0609$in786+2>>0]<<16)|(HEAPU8[$$0609$in786+3>>0]<<24);
    $842 = ($$0609787|0)==(0|0);
    if ($842) {
     $$1613702 = $31;$$1615700 = $32;$$1653698 = $33;$$25704 = $$24;
     label = 285;
    } else {
     $$0609788 = $$0609787;
     while(1) {
      $843 = HEAPU8[$$0609788>>0]|(HEAPU8[$$0609788+1>>0]<<8)|(HEAPU8[$$0609788+2>>0]<<16)|(HEAPU8[$$0609788+3>>0]<<24);
      __remove_if_exists($843,$32);
      $$0609$in = ((($$0609788)) + 8|0);
      $$0609 = HEAPU8[$$0609$in>>0]|(HEAPU8[$$0609$in+1>>0]<<8)|(HEAPU8[$$0609$in+2>>0]<<16)|(HEAPU8[$$0609$in+3>>0]<<24);
      $844 = ($$0609|0)==(0|0);
      if ($844) {
       $$1613 = $31;$$1615 = $32;$$1653 = $33;$$25 = $$24;
       label = 284;
       break;
      } else {
       $$0609788 = $$0609;
      }
     }
    }
   }
  } else {
   $29 = ((($23)) + 8|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   HEAP32[$4>>2] = $30;
   $$0612 = 0;$$0614 = 0;$$0645 = 0;$$0652 = 0;$$15631 = $24;$$23 = 0;
   label = 270;
  }
 } while(0);
 do {
  if ((label|0) == 270) {
   $798 = HEAPU8[$$15631>>0]|(HEAPU8[$$15631+1>>0]<<8)|(HEAPU8[$$15631+2>>0]<<16)|(HEAPU8[$$15631+3>>0]<<24);
   $799 = ($798|0)==(9);
   do {
    if ($799) {
     $800 = ((($$15631)) + 4|0);
     $801 = HEAPU8[$800>>0]|(HEAPU8[$800+1>>0]<<8)|(HEAPU8[$800+2>>0]<<16)|(HEAPU8[$800+3>>0]<<24);
     $802 = ((($801)) + 4|0);
     $803 = HEAPU8[$802>>0]|(HEAPU8[$802+1>>0]<<8)|(HEAPU8[$802+2>>0]<<16)|(HEAPU8[$802+3>>0]<<24);
     $804 = HEAPU8[$803>>0]|(HEAPU8[$803+1>>0]<<8)|(HEAPU8[$803+2>>0]<<16)|(HEAPU8[$803+3>>0]<<24);
     $805 = HEAP32[$2>>2]|0;
     HEAP8[$805>>0]=$804&255;HEAP8[$805+1>>0]=($804>>8)&255;HEAP8[$805+2>>0]=($804>>16)&255;HEAP8[$805+3>>0]=$804>>24;
     $806 = HEAPU8[$800>>0]|(HEAPU8[$800+1>>0]<<8)|(HEAPU8[$800+2>>0]<<16)|(HEAPU8[$800+3>>0]<<24);
     $807 = ((($806)) + 4|0);
     $808 = HEAPU8[$807>>0]|(HEAPU8[$807+1>>0]<<8)|(HEAPU8[$807+2>>0]<<16)|(HEAPU8[$807+3>>0]<<24);
     $809 = ((($808)) + 4|0);
     $810 = ((($805)) + 4|0);
     $811 = HEAPU8[$809>>0]|(HEAPU8[$809+1>>0]<<8)|(HEAPU8[$809+2>>0]<<16)|(HEAPU8[$809+3>>0]<<24);
     HEAP8[$810>>0]=$811&255;HEAP8[$810+1>>0]=($811>>8)&255;HEAP8[$810+2>>0]=($811>>16)&255;HEAP8[$810+3>>0]=$811>>24;
     $812 = (__is_string($$15631)|0);
     $813 = ($812<<24>>24)==(0);
     if (!($813)) {
      $814 = HEAP32[$2>>2]|0;
      $815 = ((($814)) + 8|0);
      $816 = HEAP8[$815>>0]|0;
      $817 = $816 | 1;
      HEAP8[$815>>0] = $817;
     }
    } else {
     $818 = HEAP32[$2>>2]|0;
     HEAP8[$818>>0]=$798&255;HEAP8[$818+1>>0]=($798>>8)&255;HEAP8[$818+2>>0]=($798>>16)&255;HEAP8[$818+3>>0]=$798>>24;
     $819 = (__is_string($$15631)|0);
     $820 = ($819<<24>>24)==(0);
     if ($820) {
      $831 = HEAP32[$2>>2]|0;
      $832 = ((($$15631)) + 4|0);
      $833 = ((($831)) + 4|0);
      $834 = HEAPU8[$832>>0]|(HEAPU8[$832+1>>0]<<8)|(HEAPU8[$832+2>>0]<<16)|(HEAPU8[$832+3>>0]<<24);
      HEAP8[$833>>0]=$834&255;HEAP8[$833+1>>0]=($834>>8)&255;HEAP8[$833+2>>0]=($834>>16)&255;HEAP8[$833+3>>0]=$834>>24;
      break;
     } else {
      $821 = (__extract_string($$15631)|0);
      $822 = (_strlen($821)|0);
      $823 = (($822) + 1)|0;
      $824 = (_mb_strdup($821,$823)|0);
      $825 = HEAP32[$2>>2]|0;
      $826 = ((($825)) + 4|0);
      HEAP8[$826>>0]=$824&255;HEAP8[$826+1>>0]=($824>>8)&255;HEAP8[$826+2>>0]=($824>>16)&255;HEAP8[$826+3>>0]=$824>>24;
      $827 = HEAP32[$2>>2]|0;
      $828 = ((($827)) + 8|0);
      $829 = HEAP8[$828>>0]|0;
      $830 = $829 & -2;
      HEAP8[$828>>0] = $830;
      break;
     }
    }
   } while(0);
   $835 = ($$0645|0)!=($$15631|0);
   $836 = ($$23|0)!=(0|0);
   $or$cond8 = $835 & $836;
   if ($or$cond8) {
    $837 = (__ls_try_remove($$23,$$15631,154,0)|0);
    $838 = ($837|0)==(0);
    if ($838) {
     $$1613702 = $$0612;$$1615700 = $$0614;$$1653698 = $$0652;$$25704 = $$23;
     label = 285;
    } else {
     __try_clear_intermediate_value($$15631,$0);
     $839 = (__is_referenced_calc_type($0,$$15631)|0);
     $840 = ($839<<24>>24)==(0);
     if ($840) {
      (__destroy_object($$15631,0)|0);
      $$1613702 = $$0612;$$1615700 = $$0614;$$1653698 = $$0652;$$25704 = $$23;
      label = 285;
      break;
     } else {
      __destroy_object_capsule_only($$15631);
      $$1613702 = $$0612;$$1615700 = $$0614;$$1653698 = $$0652;$$25704 = $$23;
      label = 285;
      break;
     }
    }
   } else {
    $$1613 = $$0612;$$1615 = $$0614;$$1653 = $$0652;$$25 = $$23;
    label = 284;
   }
  }
 } while(0);
 if ((label|0) == 284) {
  $845 = ($$25|0)==(0|0);
  if ($845) {
   $$1613703 = $$1613;$$1615701 = $$1615;$$1653699 = $$1653;
  } else {
   $$1613702 = $$1613;$$1615700 = $$1615;$$1653698 = $$1653;$$25704 = $$25;
   label = 285;
  }
 }
 if ((label|0) == 285) {
  $846 = ((($$25704)) + 8|0);
  $847 = HEAPU8[$846>>0]|(HEAPU8[$846+1>>0]<<8)|(HEAPU8[$846+2>>0]<<16)|(HEAPU8[$846+3>>0]<<24);
  $848 = ($847|0)==(0|0);
  if (!($848)) {
   $849 = HEAPU8[$847>>0]|(HEAPU8[$847+1>>0]<<8)|(HEAPU8[$847+2>>0]<<16)|(HEAPU8[$847+3>>0]<<24);
   $850 = ((($847)) + 12|0);
   __try_clear_intermediate_value($849,$0);
   $851 = HEAPU8[$847>>0]|(HEAPU8[$847+1>>0]<<8)|(HEAPU8[$847+2>>0]<<16)|(HEAPU8[$847+3>>0]<<24);
   $852 = HEAPU8[$850>>0]|(HEAPU8[$850+1>>0]<<8)|(HEAPU8[$850+2>>0]<<16)|(HEAPU8[$850+3>>0]<<24);
   (__destroy_object($851,$852)|0);
   $853 = ((($847)) + 8|0);
   $854 = HEAPU8[$853>>0]|(HEAPU8[$853+1>>0]<<8)|(HEAPU8[$853+2>>0]<<16)|(HEAPU8[$853+3>>0]<<24);
   $855 = ((($847)) + 4|0);
   $856 = HEAPU8[$855>>0]|(HEAPU8[$855+1>>0]<<8)|(HEAPU8[$855+2>>0]<<16)|(HEAPU8[$855+3>>0]<<24);
   $857 = ((($856)) + 8|0);
   HEAP8[$857>>0]=$854&255;HEAP8[$857+1>>0]=($854>>8)&255;HEAP8[$857+2>>0]=($854>>16)&255;HEAP8[$857+3>>0]=$854>>24;
   $858 = ($854|0)==(0|0);
   if ($858) {
    $$0785$lcssa = $847;
   } else {
    $$07851025 = $847;$859 = $856;$862 = $854;
    while(1) {
     $860 = $859;
     $861 = ((($862)) + 4|0);
     HEAP8[$861>>0]=$860&255;HEAP8[$861+1>>0]=($860>>8)&255;HEAP8[$861+2>>0]=($860>>16)&255;HEAP8[$861+3>>0]=$860>>24;
     _mb_free($$07851025);
     $863 = HEAPU8[$$25704>>0]|(HEAPU8[$$25704+1>>0]<<8)|(HEAPU8[$$25704+2>>0]<<16)|(HEAPU8[$$25704+3>>0]<<24);
     $864 = ((($863)) + -1|0);
     HEAP8[$$25704>>0]=$864&255;HEAP8[$$25704+1>>0]=($864>>8)&255;HEAP8[$$25704+2>>0]=($864>>16)&255;HEAP8[$$25704+3>>0]=$864>>24;
     $865 = HEAPU8[$862>>0]|(HEAPU8[$862+1>>0]<<8)|(HEAPU8[$862+2>>0]<<16)|(HEAPU8[$862+3>>0]<<24);
     $866 = ((($862)) + 12|0);
     __try_clear_intermediate_value($865,$0);
     $867 = HEAPU8[$862>>0]|(HEAPU8[$862+1>>0]<<8)|(HEAPU8[$862+2>>0]<<16)|(HEAPU8[$862+3>>0]<<24);
     $868 = HEAPU8[$866>>0]|(HEAPU8[$866+1>>0]<<8)|(HEAPU8[$866+2>>0]<<16)|(HEAPU8[$866+3>>0]<<24);
     (__destroy_object($867,$868)|0);
     $869 = ((($862)) + 8|0);
     $870 = HEAPU8[$869>>0]|(HEAPU8[$869+1>>0]<<8)|(HEAPU8[$869+2>>0]<<16)|(HEAPU8[$869+3>>0]<<24);
     $871 = ((($862)) + 4|0);
     $872 = HEAPU8[$871>>0]|(HEAPU8[$871+1>>0]<<8)|(HEAPU8[$871+2>>0]<<16)|(HEAPU8[$871+3>>0]<<24);
     $873 = ((($872)) + 8|0);
     HEAP8[$873>>0]=$870&255;HEAP8[$873+1>>0]=($870>>8)&255;HEAP8[$873+2>>0]=($870>>16)&255;HEAP8[$873+3>>0]=$870>>24;
     $874 = ($870|0)==(0|0);
     if ($874) {
      $$0785$lcssa = $862;
      break;
     } else {
      $$07851025$phi = $862;$859 = $872;$862 = $870;$$07851025 = $$07851025$phi;
     }
    }
   }
   _mb_free($$0785$lcssa);
   $875 = HEAPU8[$$25704>>0]|(HEAPU8[$$25704+1>>0]<<8)|(HEAPU8[$$25704+2>>0]<<16)|(HEAPU8[$$25704+3>>0]<<24);
   $876 = ((($875)) + -1|0);
   HEAP8[$$25704>>0]=$876&255;HEAP8[$$25704+1>>0]=($876>>8)&255;HEAP8[$$25704+2>>0]=($876>>16)&255;HEAP8[$$25704+3>>0]=$876>>24;
  }
  __ls_destroy($$25704);
  $$1613703 = $$1613702;$$1615701 = $$1615700;$$1653699 = $$1653698;
 }
 $877 = ($$1613703|0)==(0|0);
 if (!($877)) {
  (__ls_foreach($$1613703,155)|0);
  __ls_destroy($$1613703);
 }
 $878 = ($$1615701|0)==(0|0);
 if (!($878)) {
  (__ls_foreach($$1615701,155)|0);
  __ls_destroy($$1615701);
 }
 $879 = ($$1653699|0)==(0|0);
 if (!($879)) {
  $880 = ((($0)) + 122|0);
  $881 = HEAPU8[$880>>0]|(HEAPU8[$880+1>>0]<<8)|(HEAPU8[$880+2>>0]<<16)|(HEAPU8[$880+3>>0]<<24);
  $882 = (__ls_popback($881)|0);
  _mb_free($882);
 }
 $883 = HEAP32[$4>>2]|0;
 HEAP32[$1>>2] = $883;
 (_mb_set_gc_enabled($0,$20)|0);
 $884 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($884|0);
}
function __set_list($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$pre = 0, $$pre35 = 0, $$pre37 = 0, $$sink33 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)==(0|0);
 $6 = ($3|0)==(0|0);
 do {
  if (!($5)) {
   $7 = ($2|0)!=(0|0);
   if ($7) {
    $12 = ((($0)) + 13|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    if ($6) {
     $14 = $13;$15 = 0;$39 = 0;
    } else {
     $$pre = HEAP32[$3>>2]|0;
     $14 = $13;$15 = $$pre;$39 = 1;
    }
   } else {
    if ($6) {
     break;
    }
    $8 = HEAP32[$3>>2]|0;
    $9 = ($8|0)==(0|0);
    if ($9) {
     break;
    }
    $10 = ((($0)) + 13|0);
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $14 = $11;$15 = $8;$39 = 1;
   }
   $16 = (__try_purge_it($14,$2,$15)|0);
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    __fill_ranged($0);
    $18 = (__node_at_list($0,$1)|0);
    $19 = ($18|0)==(0|0);
    if ($19) {
     $$0 = 0;
    } else {
     $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $21 = ($20|0)==(0|0);
     if (!($21)) {
      (__destroy_object($20,0)|0);
     }
     if ($7) {
      __create_internal_object_from_public_value($2,$4);
      $22 = HEAP32[$4>>2]|0;
      $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      $24 = ($23|0)==(17);
      $25 = $22;
      if ($24) {
       $26 = ((($22)) + 4|0);
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       $28 = ((($27)) + 58|0);
       $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
       $30 = ($29|0)==(2);
       if (!($30)) {
        $31 = ((($22)) + 8|0);
        $32 = HEAP8[$31>>0]|0;
        $33 = $32 | 1;
        HEAP8[$31>>0] = $33;
       }
      }
      if ($39) {
       $$sink33 = $3;$34 = $25;
       label = 19;
      } else {
       $35 = $25;
      }
     } else {
      $$pre35 = HEAP32[$3>>2]|0;
      $$sink33 = $4;$34 = $$pre35;
      label = 19;
     }
     if ((label|0) == 19) {
      HEAP32[$$sink33>>2] = $34;
      $$pre37 = HEAP32[$4>>2]|0;
      $35 = $$pre37;
     }
     HEAP8[$18>>0]=$35&255;HEAP8[$18+1>>0]=($35>>8)&255;HEAP8[$18+2>>0]=($35>>16)&255;HEAP8[$18+3>>0]=$35>>24;
     $36 = ((($0)) + 17|0);
     __write_on_ref_object($36);
     __invalidate_list_cache($0);
     $37 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $38 = ($37|0)!=(0|0);
     $phitmp = $38&1;
     $$0 = $phitmp;
    }
   } else {
    $$0 = 0;
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 ___assert_fail((7231|0),(1578|0),7751,(7264|0));
 // unreachable;
 return (0)|0;
}
function __assign_with_it($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((3789|0),(1578|0),8078,(7215|0));
  // unreachable;
 }
 $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 L4: do {
  switch ($4|0) {
  case 12:  {
   $5 = ((($1)) + 4|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = ((($6)) + 21|0);
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 & 1;
   $10 = ($9<<24>>24)==(0);
   if ($10) {
    $15 = $6;
    $16 = ((($0)) + 4|0);
    HEAP8[$16>>0]=$15&255;HEAP8[$16+1>>0]=($15>>8)&255;HEAP8[$16+2>>0]=($15>>16)&255;HEAP8[$16+3>>0]=$15>>24;
    $17 = HEAP8[$7>>0]|0;
    $18 = $17 | 1;
    HEAP8[$7>>0] = $18;
    $19 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $20 = ((($19)) + 17|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ((($21)) + 17|0);
    __lock_ref_object($22,$21,$21);
    break L4;
   } else {
    $11 = ((($6)) + 17|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    $13 = (__create_list_it($12,1)|0);
    $14 = ((($0)) + 4|0);
    HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
    break L4;
   }
   break;
  }
  case 14:  {
   $23 = ((($1)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($24)) + 21|0);
   $26 = HEAP8[$25>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $33 = $24;
    $34 = ((($0)) + 4|0);
    HEAP8[$34>>0]=$33&255;HEAP8[$34+1>>0]=($33>>8)&255;HEAP8[$34+2>>0]=($33>>16)&255;HEAP8[$34+3>>0]=$33>>24;
    $35 = HEAP8[$25>>0]|0;
    $36 = $35 | 1;
    HEAP8[$25>>0] = $36;
    $37 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $38 = ((($37)) + 17|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = ((($39)) + 17|0);
    __lock_ref_object($40,$39,$39);
    break L4;
   } else {
    $29 = ((($24)) + 17|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = (__create_dict_it($30,1)|0);
    $32 = ((($0)) + 4|0);
    HEAP8[$32>>0]=$31&255;HEAP8[$32+1>>0]=($31>>8)&255;HEAP8[$32+2>>0]=($31>>16)&255;HEAP8[$32+3>>0]=$31>>24;
    break L4;
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 return;
}
function __node_at_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$083 = 0, $$083$in = 0, $$085 = 0, $$1 = 0, $$184 = 0, $$184$in = 0, $$186 = 0, $$2 = 0, $$2$in = 0, $$287 = 0, $$pn = 0, $$pn88 = 0, $$pn89 = 0, $$sink = 0, $$sink93 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4391|0),(1578|0),7810,(7274|0));
  // unreachable;
 }
 __fill_ranged($0);
 $3 = ($1|0)>(-1);
 do {
  if ($3) {
   $4 = ((($0)) + 31|0);
   $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $6 = ($5|0)>($1|0);
   if ($6) {
    $7 = ((($0)) + 27|0);
    $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $9 = (($5) - ($8))|0;
    $10 = (($9|0) / 2)&-1;
    $11 = (($10) + ($8))|0;
    $12 = ((($0)) + 23|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $14 = ($13|0)==(0|0);
    if ($14) {
     $45 = ((($0)) + 19|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $$287 = $1;$$pn89 = $46;
     while(1) {
      $$2$in = ((($$pn89)) + 8|0);
      $$2 = HEAPU8[$$2$in>>0]|(HEAPU8[$$2$in+1>>0]<<8)|(HEAPU8[$$2$in+2>>0]<<16)|(HEAPU8[$$2$in+3>>0]<<24);
      $47 = ($$2|0)!=(0|0);
      $48 = ($$287|0)!=(0);
      $49 = $48 & $47;
      $50 = (($$287) + -1)|0;
      if ($49) {
       $$287 = $50;$$pn89 = $$2;
      } else {
       break;
      }
     }
     if (!($47)) {
      $$1 = 0;
      break;
     }
     HEAP8[$12>>0]=$$2&255;HEAP8[$12+1>>0]=($$2>>8)&255;HEAP8[$12+2>>0]=($$2>>16)&255;HEAP8[$12+3>>0]=$$2>>24;
     HEAP8[$7>>0]=$1&255;HEAP8[$7+1>>0]=($1>>8)&255;HEAP8[$7+2>>0]=($1>>16)&255;HEAP8[$7+3>>0]=$1>>24;
     $$1 = $$2;
     break;
    }
    $15 = (($8|0) / 2)&-1;
    $16 = ($15|0)>($1|0);
    if ($16) {
     $17 = ((($0)) + 19|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $$085 = $1;$$pn88 = $18;
     while(1) {
      $$083$in = ((($$pn88)) + 8|0);
      $$083 = HEAPU8[$$083$in>>0]|(HEAPU8[$$083$in+1>>0]<<8)|(HEAPU8[$$083$in+2>>0]<<16)|(HEAPU8[$$083$in+3>>0]<<24);
      $19 = ($$083|0)!=(0|0);
      $20 = ($$085|0)!=(0);
      $21 = $20 & $19;
      $22 = (($$085) + -1)|0;
      if ($21) {
       $$085 = $22;$$pn88 = $$083;
      } else {
       break;
      }
     }
     if (!($19)) {
      $$1 = 0;
      break;
     }
     HEAP8[$12>>0]=$$083&255;HEAP8[$12+1>>0]=($$083>>8)&255;HEAP8[$12+2>>0]=($$083>>16)&255;HEAP8[$12+3>>0]=$$083>>24;
     HEAP8[$7>>0]=$1&255;HEAP8[$7+1>>0]=($1>>8)&255;HEAP8[$7+2>>0]=($1>>16)&255;HEAP8[$7+3>>0]=$1>>24;
     $$1 = $$083;
     break;
    }
    $23 = ($11|0)<($1|0);
    if ($23) {
     $37 = $1 ^ -1;
     $38 = (($5) + ($37))|0;
     $39 = ((($0)) + 19|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $$186 = $38;$$pn = $40;
     while(1) {
      $$184$in = ((($$pn)) + 4|0);
      $$184 = HEAPU8[$$184$in>>0]|(HEAPU8[$$184$in+1>>0]<<8)|(HEAPU8[$$184$in+2>>0]<<16)|(HEAPU8[$$184$in+3>>0]<<24);
      $41 = ($$184|0)!=(0|0);
      $42 = ($$186|0)!=(0);
      $43 = $42 & $41;
      $44 = (($$186) + -1)|0;
      if ($43) {
       $$186 = $44;$$pn = $$184;
      } else {
       break;
      }
     }
     if (!($41)) {
      $$1 = 0;
      break;
     }
     HEAP8[$12>>0]=$$184&255;HEAP8[$12+1>>0]=($$184>>8)&255;HEAP8[$12+2>>0]=($$184>>16)&255;HEAP8[$12+3>>0]=$$184>>24;
     HEAP8[$7>>0]=$1&255;HEAP8[$7+1>>0]=($1>>8)&255;HEAP8[$7+2>>0]=($1>>16)&255;HEAP8[$7+3>>0]=$1>>24;
     $$1 = $$184;
     break;
    }
    $24 = ($8|0)==($1|0);
    if ($24) {
     $$1 = $13;
    } else {
     $25 = $8;$28 = $13;$36 = $13;$51 = $13;
     while(1) {
      $26 = ($25|0)<($1|0);
      if ($26) {
       $27 = ((($28)) + 8|0);
       $$sink = $27;$$sink93 = 1;
       label = 17;
      } else {
       $29 = ($25|0)>($1|0);
       if ($29) {
        $35 = ((($36)) + 4|0);
        $$sink = $35;$$sink93 = -1;
        label = 17;
       } else {
        $33 = $25;$52 = $51;$53 = $28;$54 = $36;
       }
      }
      if ((label|0) == 17) {
       label = 0;
       $30 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
       HEAP8[$12>>0]=$30&255;HEAP8[$12+1>>0]=($30>>8)&255;HEAP8[$12+2>>0]=($30>>16)&255;HEAP8[$12+3>>0]=$30>>24;
       $31 = (($25) + ($$sink93))|0;
       HEAP8[$7>>0]=$31&255;HEAP8[$7+1>>0]=($31>>8)&255;HEAP8[$7+2>>0]=($31>>16)&255;HEAP8[$7+3>>0]=$31>>24;
       $32 = $30;
       $33 = $31;$52 = $32;$53 = $32;$54 = $32;
      }
      $34 = ($33|0)==($1|0);
      if ($34) {
       $$1 = $52;
       break;
      } else {
       $25 = $33;$28 = $53;$36 = $54;$51 = $52;
      }
     }
    }
   } else {
    $$1 = 0;
   }
  } else {
   $$1 = 0;
  }
 } while(0);
 return ($$1|0);
}
function _mb_get_gc_enabled($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 0;
 } else {
  $2 = ((($0)) + 38|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = $3 & 1;
  $5 = $4 ^ 1;
  $$0 = $5;
 }
 return ($$0|0);
}
function _mb_set_gc_enabled($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 $3 = ((($0)) + 38|0);
 if ($2) {
  $$0 = 3;
 } else {
  $4 = ($1<<24>>24)==(0);
  $5 = $4&1;
  $6 = HEAP8[$3>>0]|0;
  $7 = $6 & -2;
  $8 = $7 | $5;
  HEAP8[$3>>0] = $8;
  $$0 = 0;
 }
 return ($$0|0);
}
function __is_expression_terminal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$phitmp = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $narrow = 0, $or$cond = 0, $or$cond14 = 0, $or$cond15 = 0, $or$cond16 = 0;
 var $or$cond17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((7342|0),(1578|0),3673,(8140|0));
  // unreachable;
 }
 $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 switch ($4|0) {
 case 19: case 22:  {
  $15 = 1;
  break;
 }
 case 8:  {
  $5 = ((($1)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ((($6)) + 4|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)==(68|0);
  $10 = ($8|0)==(69|0);
  $or$cond14 = $9 | $10;
  $11 = ($8|0)==(70|0);
  $or$cond15 = $11 | $or$cond14;
  $12 = ($8|0)==(71|0);
  $or$cond16 = $12 | $or$cond15;
  $13 = ($8|0)==(74|0);
  $or$cond17 = $13 | $or$cond16;
  $14 = ($8|0)==(75|0);
  $narrow = $14 | $or$cond17;
  $$phitmp = $narrow&1;
  return ($$phitmp|0);
  break;
 }
 default: {
  $15 = 0;
 }
 }
 return ($15|0);
}
function __is_unary($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(34|0);
 $2 = ($0|0)==(33|0);
 $3 = $1 | $2;
 $4 = $3&1;
 return ($4|0);
}
function __is_array($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$0 = 0;
  } else {
   $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   switch ($2|0) {
   case 10:  {
    $$0 = 1;
    break L1;
    break;
   }
   case 9:  {
    $3 = ((($0)) + 4|0);
    $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    $5 = ((($4)) + 4|0);
    $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
    $8 = ($7|0)==(10);
    $9 = $8&1;
    $$0 = $9;
    break L1;
    break;
   }
   default: {
    $$0 = 0;
    break L1;
   }
   }
  }
 } while(0);
 return ($$0|0);
}
function __at_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($2|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((8118|0),(1578|0),7884,(8131|0));
  // unreachable;
 }
 __fill_ranged($0);
 $5 = (__node_at_list($0,$1)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $11 = 0;
 } else {
  $7 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $8 = ($7|0)==(0|0);
  if (!($8)) {
   (__internal_object_to_public_value($7,$2)|0);
  }
  $9 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $10 = ($9|0)!=(0|0);
  $phitmp = $10&1;
  $11 = $phitmp;
 }
 return ($11|0);
}
function __find_dict($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((8095|0),(1578|0),8029,(8107|0));
  // unreachable;
 }
 $6 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 L4: do {
  switch ($6|0) {
  case 2048: case 512:  {
   $$0 = 0;
   break;
  }
  default: {
   __create_internal_object_from_public_value($1,$3);
   $7 = ((($0)) + 19|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = HEAP32[$3>>2]|0;
   $10 = (__ht_find($8,$9)|0);
   $11 = HEAP32[$3>>2]|0;
   (__destroy_object($11,0)|0);
   $12 = ($2|0)==(0|0);
   $13 = ($10|0)==(0|0);
   do {
    if ($12) {
     if ($13) {
      $$0 = 0;
      break L4;
     }
     $$pre$phiZ2D = $10;
    } else {
     if (!($13)) {
      $14 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
      $15 = ($14|0)==(0|0);
      if (!($15)) {
       (__internal_object_to_public_value($14,$2)|0);
       $$pre$phiZ2D = $10;
       break;
      }
     }
     HEAP8[$2>>0]=1&255;HEAP8[$2+1>>0]=(1>>8)&255;HEAP8[$2+2>>0]=(1>>16)&255;HEAP8[$2+3>>0]=1>>24;
     $16 = ((($2)) + 4|0);
     HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
     $$0 = 1;
     break L4;
    }
   } while(0);
   $17 = HEAPU8[$$pre$phiZ2D>>0]|(HEAPU8[$$pre$phiZ2D+1>>0]<<8)|(HEAPU8[$$pre$phiZ2D+2>>0]<<16)|(HEAPU8[$$pre$phiZ2D+3>>0]<<24);
   $18 = ($17|0)!=(0|0);
   $phitmp = $18&1;
   $$0 = $phitmp;
  }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __remove_source_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),10097,(8073|0));
  // unreachable;
 } else {
  return -1;
 }
 return (0)|0;
}
function __get_priority($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((7451|0),(1578|0),3580,(7462|0));
  // unreachable;
 }
 $4 = (__get_priority_index($0)|0);
 $5 = (__get_priority_index($1)|0);
 $6 = ($4>>>0)<(20);
 $7 = ($5>>>0)<(20);
 $or$cond3 = $6 & $7;
 if ($or$cond3) {
  $8 = ((7605 + (($4*20)|0)|0) + ($5)|0);
  $9 = HEAP8[$8>>0]|0;
  return ($9|0);
 } else {
  ___assert_fail((7476|0),(1578|0),3584,(7462|0));
  // unreachable;
 }
 return (0)|0;
}
function __operate_operand($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$030 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 4|0;
 $6 = sp;
 HEAP32[$6>>2] = 0;
 $7 = ($0|0)!=(0|0);
 $8 = ($1|0)!=(0|0);
 $or$cond = $7 & $8;
 if (!($or$cond)) {
  ___assert_fail((7401|0),(1578|0),3636,(7411|0));
  // unreachable;
 }
 $9 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $10 = ($9|0)==(8);
 if (!($10)) {
  ___assert_fail((7428|0),(1578|0),3637,(7411|0));
  // unreachable;
 }
 $11 = ($2|0)==(0|0);
 L7: do {
  if ($11) {
   $$030 = 0;
  } else {
   $12 = (__create_object()|0);
   HEAP32[$5>>2] = $2;
   $13 = ((($5)) + 4|0);
   HEAP32[$13>>2] = $3;
   $14 = ((($5)) + 8|0);
   HEAP32[$14>>2] = $12;
   HEAP32[$6>>2] = $5;
   $15 = ((($1)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ((($16)) + 4|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = (FUNCTION_TABLE_iii[$18 & 255]($0,$6)|0);
   $20 = ($4|0)==(0|0);
   if (!($20)) {
    HEAP32[$4>>2] = $19;
   }
   L12: do {
    switch ($19|0) {
    case 0:  {
     $$030 = $12;
     break L7;
     break;
    }
    case 2:  {
     $$0 = $12;
     break;
    }
    default: {
     $21 = ($12|0)==(0|0);
     if ($21) {
      ___assert_fail((1713|0),(1578|0),3655,(7411|0));
      // unreachable;
     } else {
      _mb_free($12);
      $$0 = 0;
      break L12;
     }
    }
    }
   } while(0);
   $22 = (__set_current_error($0,34,0)|0);
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $$030 = $$0;
   } else {
    $24 = ((($1)) + 9|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ((($1)) + 13|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
    $28 = ((($1)) + 15|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
    __set_error_pos($0,$25,$27,$29);
    $$030 = $$0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$030|0);
}
function __is_unexpected_calc_type($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),3692,(7376|0));
  // unreachable;
 }
 $3 = ($1|0)==(0|0);
 L4: do {
  if ($3) {
   $6 = 1;
  } else {
   $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
   switch ($4|0) {
   case 21: case 20: case 19: case 18: case 15: case 8:  {
    $6 = 1;
    break L4;
    break;
   }
   default: {
   }
   }
   $5 = ($4|0)==(22);
   $phitmp = $5&1;
   $6 = $phitmp;
  }
 } while(0);
 return ($6|0);
}
function __ls_cmp_data($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $3 = ($2|0)!=($1|0);
 $4 = $3&1;
 return ($4|0);
}
function __is_referenced_calc_type($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((7342|0),(1578|0),3711,(7351|0));
  // unreachable;
 }
 $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 switch ($4|0) {
 case 10: case 16: case 14: case 12: case 13: case 11: case 7:  {
  $6 = 1;
  break;
 }
 default: {
  $5 = ($4|0)==(17);
  $phitmp = $5&1;
  $6 = $phitmp;
 }
 }
 return ($6|0);
}
function __remove_if_exists($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (__ls_try_remove($1,$0,154,0)|0);
 return;
}
function __destroy_object_not_compile_time($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),10001,(7309|0));
  // unreachable;
 }
 $3 = ((($0)) + 9|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (__dispose_object($0)|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _mb_free($0);
  }
 }
 return -1;
}
function __get_priority_index($0) {
 $0 = $0|0;
 var $$08 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((8005|0),(1578|0),3617,(8008|0));
  // unreachable;
 } else {
  $$08 = 0;
 }
 while(1) {
  $2 = (276 + ($$08<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==($0|0);
  if ($4) {
   label = 4;
   break;
  }
  $5 = (($$08) + 1)|0;
  $6 = ($5>>>0)<(20);
  if ($6) {
   $$08 = $5;
  } else {
   label = 6;
   break;
  }
 }
 if ((label|0) == 4) {
  return ($$08|0);
 }
 else if ((label|0) == 6) {
  ___assert_fail((8028|0),(1578|0),3624,(8008|0));
  // unreachable;
 }
 return (0)|0;
}
function __core_not($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$085 = 0, $$8 = 0, $$sink = 0, $$sink$shrunk = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15258,(8063|0));
  // unreachable;
 }
 $5 = ((($0)) + 75|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = HEAP32[$1>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$085 = 1;$15 = 0;
 } else {
  $9 = ((($7)) + 8|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $phitmp = ($10|0)==(0|0);
  $$085 = $phitmp;$15 = $10;
 }
 $11 = ((($6)) + 28|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ((($2)) + 4|0);
 HEAP32[$13>>2] = 0;
 HEAP32[$2>>2] = 0;
 if ($$085) {
  label = 11;
 } else {
  $14 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $16 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $17 = ($16|0)==(8);
  if ($17) {
   $18 = ((($14)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ((($19)) + 4|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ($21|0)==(22|0);
   if ($22) {
    $23 = (_mb_attempt_open_bracket($0,$1)|0);
    $24 = ($23|0)==(0);
    if ($24) {
     $25 = (_mb_pop_value($0,$1,$2)|0);
     $26 = ($25|0)==(0);
     if ($26) {
      $27 = (_mb_attempt_close_bracket($0,$1)|0);
      $28 = ($27|0)==(0);
      if ($28) {
       label = 14;
      } else {
       $$8 = $27;
      }
     } else {
      $$8 = $25;
     }
    } else {
     $$8 = $23;
    }
   } else {
    label = 11;
   }
  } else {
   label = 11;
  }
 }
 if ((label|0) == 11) {
  HEAP8[$11>>0]=1&255;HEAP8[$11+1>>0]=(1>>8)&255;HEAP8[$11+2>>0]=(1>>16)&255;HEAP8[$11+3>>0]=1>>24;
  $29 = (_mb_attempt_func_begin($0,$1)|0);
  $30 = ($29|0)==(0);
  if ($30) {
   $31 = (_mb_pop_value($0,$1,$2)|0);
   $32 = ($31|0)==(0);
   if ($32) {
    $33 = (_mb_attempt_func_end($0,$1)|0);
    $34 = ($33|0)==(0);
    if ($34) {
     label = 14;
    } else {
     $$8 = $33;
    }
   } else {
    $$8 = $31;
   }
  } else {
   $$8 = $29;
  }
 }
 if ((label|0) == 14) {
  $35 = HEAP32[$2>>2]|0;
  switch ($35|0) {
  case 0:  {
   $$sink$shrunk = 1;
   break;
  }
  case 2:  {
   $36 = HEAP32[$13>>2]|0;
   $37 = ($36|0)==(0);
   $$sink$shrunk = $37;
   break;
  }
  case 4:  {
   $38 = +HEAPF32[$13>>2];
   $39 = $38 == 0.0;
   $$sink$shrunk = $39;
   break;
  }
  default: {
   $$sink$shrunk = 0;
  }
  }
  $$sink = $$sink$shrunk&1;
  __assign_public_value($0,$2,0,1);
  $40 = (_mb_push_int($0,$1,$$sink)|0);
  $41 = ($40|0)==(0);
  if ($41) {
   HEAP8[$11>>0]=$12&255;HEAP8[$11+1>>0]=($12>>8)&255;HEAP8[$11+2>>0]=($12>>16)&255;HEAP8[$11+3>>0]=$12>>24;
   $$8 = 0;
  } else {
   $$8 = $40;
  }
 }
 STACKTOP = sp;return ($$8|0);
}
function __core_neg($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0137 = 0, $$0138161 = 0, $$13 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 48|0;
 $$byval_copy1 = sp + 40|0;
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),14957,(8053|0));
  // unreachable;
 }
 $6 = ((($0)) + 75|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = HEAP32[$1>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0137 = 0;$27 = 0;
 } else {
  $10 = ((($8)) + 8|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $$0137 = $11;$27 = $11;
 }
 $12 = ((($0)) + 122|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = (__ls_empty($13)|0);
 $15 = ($14<<24>>24)==(0);
 if ($15) {
  $16 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $17 = (__ls_back($16)|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = ($18|0)==(0|0);
  if ($19) {
   $$0138161 = 0;$90 = 0;
  } else {
   $20 = HEAP32[$18>>2]|0;
   $21 = (($20) + 1)|0;
   HEAP32[$18>>2] = $21;
   $$0138161 = $18;$90 = 1;
  }
 } else {
  $$0138161 = 0;$90 = 0;
 }
 $22 = ((($7)) + 28|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = ((($2)) + 4|0);
 HEAP32[$24>>2] = 0;
 HEAP32[$2>>2] = 0;
 $25 = ($$0137|0)==(0|0);
 if ($25) {
  label = 14;
 } else {
  $26 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $28 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $29 = ($28|0)==(8);
  if ($29) {
   $30 = ((($26)) + 4|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ($33|0)==(22|0);
   if ($34) {
    $35 = (_mb_attempt_open_bracket($0,$1)|0);
    $36 = ($35|0)==(0);
    if ($36) {
     $37 = (_mb_pop_value($0,$1,$2)|0);
     $38 = ($37|0)==(0);
     if ($38) {
      $39 = (_mb_attempt_close_bracket($0,$1)|0);
      $40 = ($39|0)==(0);
      if ($40) {
       label = 17;
      } else {
       $$13 = $39;
      }
     } else {
      $$13 = $37;
     }
    } else {
     $$13 = $35;
    }
   } else {
    label = 14;
   }
  } else {
   label = 14;
  }
 }
 if ((label|0) == 14) {
  HEAP8[$22>>0]=1&255;HEAP8[$22+1>>0]=(1>>8)&255;HEAP8[$22+2>>0]=(1>>16)&255;HEAP8[$22+3>>0]=1>>24;
  $41 = (_mb_attempt_func_begin($0,$1)|0);
  $42 = ($41|0)==(0);
  if ($42) {
   $43 = (_mb_pop_value($0,$1,$2)|0);
   $44 = ($43|0)==(0);
   if ($44) {
    $45 = (_mb_attempt_func_end($0,$1)|0);
    $46 = ($45|0)==(0);
    if ($46) {
     label = 17;
    } else {
     $$13 = $45;
    }
   } else {
    $$13 = $43;
   }
  } else {
   $$13 = $41;
  }
 }
 L21: do {
  if ((label|0) == 17) {
   if ($90) {
    $47 = HEAP32[$$0138161>>2]|0;
    $48 = (($47) + -1)|0;
    HEAP32[$$0138161>>2] = $48;
   }
   $49 = HEAP32[$2>>2]|0;
   switch ($49|0) {
   case 2:  {
    $50 = HEAP32[$24>>2]|0;
    $51 = (0 - ($50))|0;
    HEAP32[$24>>2] = $51;
    break;
   }
   case 4:  {
    $52 = +HEAPF32[$24>>2];
    $53 = - $52;
    HEAPF32[$24>>2] = $53;
    break;
   }
   case 64:  {
    ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
    (__public_value_to_internal_object($2,$3)|0);
    $54 = ((($3)) + 4|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 45|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ($57|0)==(0|0);
    if ($58) {
     label = 27;
    } else {
     $59 = ((($57)) + 20|0);
     $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
     $61 = ($60|0)==(0|0);
     if ($61) {
      label = 27;
     } else {
      ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
      $62 = (_mb_ref_value($0,$1,$$byval_copy)|0);
      $63 = ($62|0)==(0);
      if (!($63)) {
       $$13 = $62;
       break L21;
      }
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
      $64 = (_mb_unref_value($0,$1,$$byval_copy1)|0);
      $65 = ($64|0)==(0);
      if (!($65)) {
       $$13 = $64;
       break L21;
      }
      $66 = (FUNCTION_TABLE_iiiiii[$60 & 0]($0,$1,$2,0,$2)|0);
      $67 = ($66|0)==(0);
      if (!($67)) {
       $$13 = $66;
       break L21;
      }
     }
    }
    break;
   }
   default: {
    label = 27;
   }
   }
   do {
    if ((label|0) == 27) {
     $68 = HEAP32[$1>>2]|0;
     $69 = ($68|0)==(0|0);
     if (!($69)) {
      $70 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $71 = ($70|0)==(0|0);
      if (!($71)) {
       $72 = ((($0)) + 67|0);
       $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
       $74 = (__set_current_error($0,16,$73)|0);
       $75 = ($74<<24>>24)==(0);
       if ($75) {
        break;
       }
       $76 = HEAP32[$1>>2]|0;
       $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
       $78 = ((($77)) + 9|0);
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = ((($77)) + 13|0);
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8);
       $82 = ((($77)) + 15|0);
       $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8);
       __set_error_pos($0,$79,$81,$83);
       break;
      }
     }
     $84 = ((($0)) + 67|0);
     $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     $86 = (__set_current_error($0,16,$85)|0);
     $87 = ($86<<24>>24)==(0);
     if (!($87)) {
      __set_error_pos($0,0,0,0);
     }
    }
   } while(0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$2+4>>2]|0;
   $88 = (_mb_push_value($0,$1,$$byval_copy2)|0);
   $89 = ($88|0)==(0);
   if ($89) {
    HEAP8[$22>>0]=$23&255;HEAP8[$22+1>>0]=($23>>8)&255;HEAP8[$22+2>>0]=($23>>16)&255;HEAP8[$22+3>>0]=$23>>24;
    $$13 = 0;
   } else {
    $$13 = $88;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$13|0);
}
function _mb_attempt_func_begin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$031 = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 do {
  if ($or$cond) {
   $4 = ((($0)) + 130|0);
   $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   (__ls_pushback($5,0)|0);
   $6 = HEAP32[$1>>2]|0;
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ($8|0)==(8);
   if ($9) {
    $29 = ((($6)) + 8|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = ((($0)) + 114|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = (($32) + 1)|0;
    HEAP8[$31>>0]=$33&255;HEAP8[$31+1>>0]=($33>>8)&255;HEAP8[$31+2>>0]=($33>>16)&255;HEAP8[$31+3>>0]=$33>>24;
    $$0 = $30;$$031 = 0;$$pre$phiZ2D = $1;
    break;
   }
   $10 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   (__ls_popback($10)|0);
   $11 = ($6|0)==(0|0);
   if (!($11)) {
    $12 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
    $13 = ($12|0)==(0|0);
    if (!($13)) {
     $14 = ((($0)) + 67|0);
     $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
     $16 = (__set_current_error($0,25,$15)|0);
     $17 = ($16<<24>>24)==(0);
     if ($17) {
      $$0 = $6;$$031 = 0;$$pre$phiZ2D = $1;
      break;
     }
     $18 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
     $19 = ((($18)) + 9|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     $21 = ((($18)) + 13|0);
     $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8);
     $23 = ((($18)) + 15|0);
     $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
     __set_error_pos($0,$20,$22,$24);
     $$0 = $6;$$031 = 3;$$pre$phiZ2D = $1;
     break;
    }
   }
   $25 = ((($0)) + 67|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = (__set_current_error($0,25,$26)|0);
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $$0 = $6;$$031 = 0;$$pre$phiZ2D = $1;
   } else {
    __set_error_pos($0,0,0,0);
    $$0 = $6;$$031 = 3;$$pre$phiZ2D = $1;
   }
  } else {
   $$0 = 0;$$031 = 3;$$pre$phiZ2D = $1;
  }
 } while(0);
 HEAP32[$$pre$phiZ2D>>2] = $$0;
 return ($$031|0);
}
function _mb_attempt_func_end($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = ((($0)) + 130|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  (__ls_popback($5)|0);
  $6 = ((($0)) + 114|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = (($7) + -1)|0;
  HEAP8[$6>>0]=$8&255;HEAP8[$6+1>>0]=($8>>8)&255;HEAP8[$6+2>>0]=($8>>16)&255;HEAP8[$6+3>>0]=$8>>24;
  $$0 = 0;
 } else {
  $$0 = 3;
 }
 return ($$0|0);
}
function _mb_ref_value($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $4 = ($0|0)==(0|0);
 L1: do {
  if ($4) {
   $$0 = 3;
  } else {
   $5 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   switch ($5|0) {
   case 2048: case 512:  {
    $$0 = 0;
    break L1;
    break;
   }
   default: {
   }
   }
   ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
   (__public_value_to_internal_object($2,$3)|0);
   $6 = HEAP32[$3>>2]|0;
   switch ($6|0) {
   case 7:  {
    $28 = ((($3)) + 4|0);
    $29 = HEAP32[$28>>2]|0;
    __ref($29,$29);
    $$0 = 0;
    break L1;
    break;
   }
   case 10:  {
    $30 = ((($3)) + 8|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = $31 & 1;
    $33 = ($32<<24>>24)==(0);
    if (!($33)) {
     $$0 = 0;
     break L1;
    }
    $34 = ((($3)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    __ref($35,$35);
    $$0 = 0;
    break L1;
    break;
   }
   case 11:  {
    $36 = ((($3)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    __ref($37,$37);
    $$0 = 0;
    break L1;
    break;
   }
   case 13:  {
    $38 = ((($3)) + 4|0);
    $39 = HEAP32[$38>>2]|0;
    __ref($39,$39);
    $$0 = 0;
    break L1;
    break;
   }
   case 16:  {
    $40 = ((($3)) + 4|0);
    $41 = HEAP32[$40>>2]|0;
    __ref($41,$41);
    $$0 = 0;
    break L1;
    break;
   }
   case 17:  {
    $42 = ((($3)) + 8|0);
    $43 = HEAP8[$42>>0]|0;
    $44 = $43 & 1;
    $45 = ($44<<24>>24)==(0);
    if (!($45)) {
     $$0 = 0;
     break L1;
    }
    $46 = ((($3)) + 4|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = ((($47)) + 58|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ($49|0)==(2);
    if (!($50)) {
     $$0 = 0;
     break L1;
    }
    __ref($47,$47);
    $$0 = 0;
    break L1;
    break;
   }
   default: {
    $7 = ($1|0)==(0|0);
    if (!($7)) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ($8|0)==(0|0);
     if (!($9)) {
      $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
      $11 = ($10|0)==(0|0);
      if (!($11)) {
       $12 = ((($0)) + 67|0);
       $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
       $14 = (__set_current_error($0,65,$13)|0);
       $15 = ($14<<24>>24)==(0);
       if ($15) {
        $$0 = 0;
        break L1;
       }
       $16 = HEAP32[$1>>2]|0;
       $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
       $18 = ((($17)) + 9|0);
       $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $20 = ((($17)) + 13|0);
       $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
       $22 = ((($17)) + 15|0);
       $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8);
       __set_error_pos($0,$19,$21,$23);
       $$0 = 3;
       break L1;
      }
     }
    }
    $24 = ((($0)) + 67|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = (__set_current_error($0,65,$25)|0);
    $27 = ($26<<24>>24)==(0);
    if ($27) {
     $$0 = 0;
     break L1;
    }
    __set_error_pos($0,0,0,0);
    $$0 = 3;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _mb_unref_value($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $4 = ($0|0)==(0|0);
 L1: do {
  if ($4) {
   $$0 = 3;
  } else {
   $5 = (__try_purge_it($0,$2,0)|0);
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
    (__public_value_to_internal_object($2,$3)|0);
    $7 = HEAP32[$3>>2]|0;
    switch ($7|0) {
    case 7:  {
     $29 = ((($3)) + 4|0);
     $30 = HEAP32[$29>>2]|0;
     __unref($30,$30);
     $$0 = 0;
     break L1;
     break;
    }
    case 10:  {
     $31 = ((($3)) + 8|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32 & 1;
     $34 = ($33<<24>>24)==(0);
     if (!($34)) {
      $$0 = 0;
      break L1;
     }
     $35 = ((($3)) + 4|0);
     $36 = HEAP32[$35>>2]|0;
     __unref($36,$36);
     $$0 = 0;
     break L1;
     break;
    }
    case 11:  {
     $37 = ((($3)) + 4|0);
     $38 = HEAP32[$37>>2]|0;
     __unref($38,$38);
     $$0 = 0;
     break L1;
     break;
    }
    case 13:  {
     $39 = ((($3)) + 4|0);
     $40 = HEAP32[$39>>2]|0;
     __unref($40,$40);
     $$0 = 0;
     break L1;
     break;
    }
    case 16:  {
     $41 = ((($3)) + 8|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = $42 & 1;
     $44 = ($43<<24>>24)==(0);
     if (!($44)) {
      $$0 = 0;
      break L1;
     }
     $45 = ((($3)) + 4|0);
     $46 = HEAP32[$45>>2]|0;
     __unref($46,$46);
     $$0 = 0;
     break L1;
     break;
    }
    case 17:  {
     $47 = ((($3)) + 8|0);
     $48 = HEAP8[$47>>0]|0;
     $49 = $48 & 1;
     $50 = ($49<<24>>24)==(0);
     if (!($50)) {
      $$0 = 0;
      break L1;
     }
     $51 = ((($3)) + 4|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ((($52)) + 58|0);
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = ($54|0)==(2);
     if ($55) {
      __unref($52,$52);
      $$0 = 0;
      break L1;
     }
     $56 = ((($3)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($57)) + 58|0);
     $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
     $60 = ($59|0)==(2);
     if ($60) {
      $$0 = 0;
      break L1;
     }
     __destroy_routine(0,$57);
     $$0 = 0;
     break L1;
     break;
    }
    default: {
     $8 = ($1|0)==(0|0);
     if (!($8)) {
      $9 = HEAP32[$1>>2]|0;
      $10 = ($9|0)==(0|0);
      if (!($10)) {
       $11 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
       $12 = ($11|0)==(0|0);
       if (!($12)) {
        $13 = ((($0)) + 67|0);
        $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
        $15 = (__set_current_error($0,65,$14)|0);
        $16 = ($15<<24>>24)==(0);
        if ($16) {
         $$0 = 0;
         break L1;
        }
        $17 = HEAP32[$1>>2]|0;
        $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
        $19 = ((($18)) + 9|0);
        $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
        $21 = ((($18)) + 13|0);
        $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8);
        $23 = ((($18)) + 15|0);
        $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
        __set_error_pos($0,$20,$22,$24);
        $$0 = 3;
        break L1;
       }
      }
     }
     $25 = ((($0)) + 67|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = (__set_current_error($0,65,$26)|0);
     $28 = ($27<<24>>24)==(0);
     if ($28) {
      $$0 = 0;
      break L1;
     }
     __set_error_pos($0,0,0,0);
     $$0 = 3;
     break L1;
    }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _mb_push_int($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$014 = 0, $$1 = 0, $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  $6 = ((($3)) + 4|0);
  HEAP32[$6>>2] = $2;
  HEAP32[$3>>2] = 2;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
  $7 = (_mb_push_value($0,$1,$$byval_copy)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$014 = 0;
   label = 3;
  } else {
   $$1 = $7;
  }
 } else {
  $$014 = 3;
  label = 3;
 }
 if ((label|0) == 3) {
  $$1 = $$014;
 }
 STACKTOP = sp;return ($$1|0);
}
function __core_then($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8220)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8220)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_elseif($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8207)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8207)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_else($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8196)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8196)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_endif($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8184)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8184)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_to($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8175)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8175)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_step($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8164)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8164)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __try_get_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$tr5 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond4 = $3 & $2;
 L1: do {
  if ($or$cond4) {
   $$tr5 = $0;
   L2: while(1) {
    $4 = HEAPU8[$$tr5>>0]|(HEAPU8[$$tr5+1>>0]<<8)|(HEAPU8[$$tr5+2>>0]<<16)|(HEAPU8[$$tr5+3>>0]<<24);
    switch ($4|0) {
    case 2:  {
     label = 4;
     break L2;
     break;
    }
    case 9:  {
     break;
    }
    default: {
     $$0 = 0;
     break L2;
    }
    }
    $7 = ((($$tr5)) + 4|0);
    $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $9 = ((($8)) + 4|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ($10|0)==(0|0);
    if ($11) {
     break L1;
    } else {
     $$tr5 = $10;
    }
   }
   if ((label|0) == 4) {
    $5 = ((($$tr5)) + 4|0);
    $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    HEAP8[$1>>0]=$6&255;HEAP8[$1+1>>0]=($6>>8)&255;HEAP8[$1+2>>0]=($6>>16)&255;HEAP8[$1+3>>0]=$6>>24;
    $$0 = 1;
   }
   return ($$0|0);
  }
 } while(0);
 ___assert_fail((8298|0),(1578|0),6095,(8309|0));
 // unreachable;
 return (0)|0;
}
function __core_if($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0108190 = 0, $$0109 = 0, $$0109136 = 0, $$0110 = 0, $$1$ph148 = 0, $$1$ph148223 = 0, $$1$ph148223236 = 0, $$2 = 0, $$3 = 0, $$3135 = 0, $$6 = 0, $$6134 = 0, $$6134140143 = 0, $$8 = 0, $$lcssa231 = 0, $$pre = 0, $$sink120 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $or$cond = 0, $or$cond10 = 0, $or$cond117 = 0, $or$cond144 = 0, $or$cond21 = 0, $or$cond290 = 0, $or$cond8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15692,(8907|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 HEAP32[$2>>2] = $8;
 $9 = (__create_object()|0);
 HEAP32[$3>>2] = $9;
 $10 = ((($9)) + 4|0);
 $11 = ((($9)) + 4|0);
 $12 = ((($9)) + 8|0);
 $13 = ((($9)) + 4|0);
 $14 = ((($9)) + 4|0);
 $15 = ((($9)) + 4|0);
 $16 = ((($9)) + 4|0);
 $17 = ((($9)) + 8|0);
 $18 = ((($9)) + 4|0);
 $$0110 = 0;
 while(1) {
  dest=$9; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $19 = (__calc_expression($0,$2,$3)|0);
  $20 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  switch ($20|0) {
  case 7:  {
   $21 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   __ref($21,$21);
   break;
  }
  case 10:  {
   $22 = HEAP8[$12>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   if ($24) {
    $25 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    __ref($25,$25);
   }
   break;
  }
  case 11:  {
   $26 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   __ref($26,$26);
   break;
  }
  case 13:  {
   $27 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   __ref($27,$27);
   break;
  }
  case 16:  {
   $28 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   __ref($28,$28);
   break;
  }
  case 17:  {
   $29 = HEAP8[$17>>0]|0;
   $30 = $29 & 1;
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $32 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $33 = ((($32)) + 58|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = ($34|0)==(2);
    if ($35) {
     __ref($32,$32);
    }
   }
   break;
  }
  default: {
  }
  }
  $36 = ($19|0)==(0);
  $37 = HEAP32[$2>>2]|0;
  $38 = ($37|0)!=(0|0);
  $or$cond21 = $36 & $38;
  if (!($or$cond21)) {
   $$0109 = 0;$$3 = $$0110;$$6 = $19;
   label = 101;
   break;
  }
  $39 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $40 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $41 = ($40|0)==(0);
  if (!($41)) {
   label = 16;
   break;
  }
  $173 = ((($37)) + 8|0);
  $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
  $175 = ($174|0)==(0|0);
  if ($175) {
   $$2 = $$0110;$181 = $37;
  } else {
   $176 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
   $177 = ($176|0)==(0|0);
   if ($177) {
    $$2 = $$0110;$181 = $37;
   } else {
    $178 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
    $179 = ($178|0)==(22);
    if ($179) {
     __skip_if_chunk($0,$2);
     $$pre = HEAP32[$2>>2]|0;
     $$2 = 1;$181 = $$pre;
    } else {
     $$2 = $$0110;$181 = $37;
    }
   }
  }
  $180 = ($$2<<24>>24)!=(0);
  $182 = ($181|0)!=(0|0);
  $or$cond8 = $180 & $182;
  if (!($or$cond8)) {
   $$lcssa231 = $180;
   label = 65;
   break;
  }
  $183 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
  $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
  $185 = ($184|0)==(8);
  if (!($185)) {
   $$lcssa231 = 1;
   label = 65;
   break;
  }
  $186 = ((($183)) + 4|0);
  $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
  $188 = ((($187)) + 4|0);
  $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
  $190 = ($189|0)==(69|0);
  if (!($190)) {
   $$lcssa231 = 1;
   label = 65;
   break;
  }
  $191 = ((($181)) + 8|0);
  $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
  HEAP32[$2>>2] = $192;
  $$0110 = $$2;
 }
 L27: do {
  if ((label|0) == 16) {
   $42 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $43 = ($42|0)==(8);
   if ($43) {
    $44 = ((($39)) + 4|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $46 = ((($45)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ($47|0)==(68|0);
    if ($48) {
     $73 = $37;
    } else {
     label = 18;
    }
   } else {
    label = 18;
   }
   do {
    if ((label|0) == 18) {
     $49 = ((($37)) + 4|0);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     $51 = ($50|0)==(0|0);
     if (!($51)) {
      $52 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = ($53|0)==(8);
      if ($54) {
       $55 = ((($52)) + 4|0);
       $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
       $57 = ((($56)) + 4|0);
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = ($58|0)==(68|0);
       if ($59) {
        HEAP32[$2>>2] = $50;
        $73 = $50;
        break;
       }
      }
     }
     $60 = ((($0)) + 67|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = (__set_current_error($0,37,$61)|0);
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $$0109136 = 1;$$3135 = $$0110;$$6134 = 0;
      label = 104;
      break L27;
     }
     $64 = HEAP32[$2>>2]|0;
     $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
     $66 = ((($65)) + 9|0);
     $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     $68 = ((($65)) + 13|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8);
     $70 = ((($65)) + 15|0);
     $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8);
     __set_error_pos($0,$67,$69,$71);
     $$0109136 = 1;$$3135 = $$0110;$$6134 = 3;
     label = 104;
     break L27;
    }
   } while(0);
   $72 = ((($73)) + 8|0);
   $74 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
   $75 = ($74|0)==(0|0);
   if ($75) {
    label = 27;
   } else {
    $76 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $77 = ($76|0)==(0|0);
    if ($77) {
     label = 27;
    } else {
     $78 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
     $79 = ($78|0)==(22);
     if ($79) {
      $$1$ph148 = 1;$303 = $73;
     } else {
      label = 27;
     }
    }
   }
   if ((label|0) == 27) {
    $80 = ((($0)) + 92|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = ($81<<24>>24)!=(0);
    $83 = $81 & 1;
    $84 = ($83<<24>>24)==(0);
    $or$cond117 = $82 & $84;
    if ($or$cond117) {
     $$1$ph148 = $$0110;$303 = $73;
    } else {
     $85 = ((($0)) + 102|0);
     $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
     $87 = (__ls_back($86)|0);
     $88 = ((($0)) + 118|0);
     HEAP8[$88>>0]=$87&255;HEAP8[$88+1>>0]=($87>>8)&255;HEAP8[$88+2>>0]=($87>>16)&255;HEAP8[$88+3>>0]=$87>>24;
     $$1$ph148 = $$0110;$303 = $73;
    }
   }
   L93: while(1) {
    $89 = ($$1$ph148<<24>>24)!=(0);
    $90 = ($$1$ph148<<24>>24)==(0);
    $304 = $303;
    while(1) {
     $$sink120 = $304;
     while(1) {
      $91 = ((($$sink120)) + 8|0);
      $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
      HEAP32[$2>>2] = $92;
      $93 = ($92|0)==(0);
      $94 = $92;
      if ($93) {
       $$0109136 = 1;$$3135 = $$1$ph148;$$6134 = 0;
       label = 104;
       break L27;
      }
      $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
      $96 = ($95|0)==(0|0);
      if ($96) {
       break;
      }
      $97 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
      $98 = ($97|0)==(22);
      if ($98) {
       $$sink120 = $94;
      } else {
       break;
      }
     }
     $99 = $92;
     $100 = $92;
     $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
     $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
     $103 = ($102|0)==(8);
     if ($103) {
      $104 = ((($101)) + 4|0);
      $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
      $106 = ((($105)) + 4|0);
      $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
      $108 = ($107|0)==(71|0);
      if ($108) {
       label = 36;
       break L93;
      }
     }
     if ($89) {
      $112 = $92;
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
      $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
      $115 = ($114|0)==(8);
      if ($115) {
       $116 = ((($113)) + 4|0);
       $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
       $118 = ((($117)) + 4|0);
       $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
       $120 = ($119|0)==(70|0);
       if ($120) {
        $$1$ph148223236 = $$1$ph148;$168 = $94;
        break L93;
       }
      }
      $121 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
      $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
      $123 = ($122|0)==(8);
      if ($123) {
       $124 = ((($121)) + 4|0);
       $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
       $126 = ((($125)) + 4|0);
       $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
       $128 = ($127|0)==(69|0);
       if ($128) {
        $$1$ph148223236 = $$1$ph148;$168 = $94;
        break L93;
       }
      }
     }
     $129 = (__execute_statement($0,$2,1)|0);
     $130 = ($129|0)==(0);
     if (!($130)) {
      $$0109 = 1;$$3 = $$1$ph148;$$6 = $129;
      label = 101;
      break L27;
     }
     $131 = HEAP32[$2>>2]|0;
     $132 = ($131|0)==(0|0);
     if ($132) {
      $$0109136 = 1;$$3135 = $$1$ph148;$$6134 = 0;
      label = 104;
      break L27;
     }
     $133 = ((($131)) + 4|0);
     $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
     HEAP32[$2>>2] = $134;
     $135 = ($134|0)==(0);
     $136 = $134;
     if ($135) {
      $$1$ph148223 = $$1$ph148;$165 = $136;
      label = 54;
      break L93;
     }
     if ($90) {
      $137 = $134;
      $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
      $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
      $140 = ($139|0)==(19);
      if ($140) {
       $141 = ((($138)) + 4|0);
       $142 = HEAP8[$141>>0]|0;
       $143 = ($142<<24>>24)==(58);
       if ($143) {
        $$1$ph148 = 0;$303 = $136;
        continue L93;
       }
      }
     }
     if (!($89)) {
      $$1$ph148223 = 0;$165 = $136;
      label = 54;
      break L93;
     }
     $144 = ((($136)) + 8|0);
     $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     $146 = ($145|0)==(0|0);
     if ($146) {
      $$1$ph148223236 = $$1$ph148;$168 = $136;
      break L93;
     }
     $147 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $149 = ($148|0)==(8);
     if (!($149)) {
      $304 = $136;
      continue;
     }
     $150 = ((($147)) + 4|0);
     $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     $152 = ((($151)) + 4|0);
     $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
     $154 = ($153|0)==(69|0);
     if ($154) {
      $$1$ph148223236 = $$1$ph148;$168 = $136;
      break L93;
     }
     $155 = ((($147)) + 4|0);
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ((($156)) + 4|0);
     $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
     $159 = ($158|0)==(70|0);
     if ($159) {
      $$1$ph148223236 = $$1$ph148;$168 = $136;
      break L93;
     }
     $160 = ((($147)) + 4|0);
     $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
     $162 = ((($161)) + 4|0);
     $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
     $164 = ($163|0)==(71|0);
     if ($164) {
      $$1$ph148223236 = $$1$ph148;$168 = $136;
      break L93;
     } else {
      $304 = $136;
     }
    }
   }
   if ((label|0) == 36) {
    $109 = ((($94)) + 4|0);
    $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
    HEAP32[$2>>2] = $110;
    $111 = $110;
    $$1$ph148223 = $$1$ph148;$165 = $111;
    label = 54;
   }
   if ((label|0) == 54) {
    $166 = ($165|0)==(0|0);
    if ($166) {
     $$0109136 = 1;$$3135 = $$1$ph148223;$$6134 = 0;
     label = 104;
     break;
    } else {
     $$1$ph148223236 = $$1$ph148223;$168 = $165;
    }
   }
   $167 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
   $169 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
   $170 = ($169|0)==(22);
   if ($170) {
    $$0109136 = 1;$$3135 = $$1$ph148223236;$$6134 = 0;
    label = 104;
   } else {
    $171 = ((($0)) + 118|0);
    HEAP8[$171>>0]=0&255;HEAP8[$171+1>>0]=(0>>8)&255;HEAP8[$171+2>>0]=(0>>16)&255;HEAP8[$171+3>>0]=0>>24;
    $172 = (__skip_to($0,$2,0,22)|0);
    $$0109 = 1;$$3 = $$1$ph148223236;$$6 = $172;
    label = 101;
   }
  }
  else if ((label|0) == 65) {
   $or$cond10 = $$lcssa231 & $182;
   if ($or$cond10) {
    $193 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
    $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
    $195 = ($194|0)==(8);
    if ($195) {
     $196 = ((($193)) + 4|0);
     $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
     $198 = ((($197)) + 4|0);
     $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
     $200 = ($199|0)==(71|0);
     if ($200) {
      $$8 = 0;
      break;
     }
    }
   }
   $201 = (__skip_to($0,$2,70,22)|0);
   $202 = ($201|0)==(0);
   if ($202) {
    $203 = HEAP32[$2>>2]|0;
    $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
    $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
    switch ($205|0) {
    case 22:  {
     $$8 = 0;
     break L27;
     break;
    }
    case 8:  {
     $206 = ((($204)) + 4|0);
     $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
     $208 = ((($207)) + 4|0);
     $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
     $210 = ($209|0)==(70|0);
     if ($210) {
      $211 = ($$2<<24>>24)==(0);
      $212 = ((($203)) + 8|0);
      $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8)|(HEAPU8[$212+2>>0]<<16)|(HEAPU8[$212+3>>0]<<24);
      HEAP32[$2>>2] = $213;
      $214 = ($213|0)==(0|0);
      L37: do {
       if ($214) {
        label = 78;
       } else {
        $305 = $213;
        L38: while(1) {
         $$0108190 = $305;
         while(1) {
          $229 = HEAPU8[$$0108190>>0]|(HEAPU8[$$0108190+1>>0]<<8)|(HEAPU8[$$0108190+2>>0]<<16)|(HEAPU8[$$0108190+3>>0]<<24);
          $230 = ($229|0)==(0|0);
          if ($230) {
           break;
          }
          $231 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
          $232 = ($231|0)==(22);
          if (!($232)) {
           break;
          }
          $233 = ((($$0108190)) + 8|0);
          $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
          HEAP32[$2>>2] = $234;
          $235 = ($234|0)==(0|0);
          if ($235) {
           break L38;
          } else {
           $$0108190 = $234;
          }
         }
         $254 = HEAPU8[$$0108190>>0]|(HEAPU8[$$0108190+1>>0]<<8)|(HEAPU8[$$0108190+2>>0]<<16)|(HEAPU8[$$0108190+3>>0]<<24);
         $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8)|(HEAPU8[$254+2>>0]<<16)|(HEAPU8[$254+3>>0]<<24);
         $256 = ($255|0)==(8);
         if ($256) {
          $257 = ((($254)) + 4|0);
          $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
          $259 = ((($258)) + 4|0);
          $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
          $261 = ($260|0)==(71|0);
          if ($261) {
           label = 90;
           break;
          }
         }
         $264 = (__execute_statement($0,$2,1)|0);
         $265 = ($264|0)==(0);
         if (!($265)) {
          $$0109 = 1;$$3 = $$2;$$6 = $264;
          label = 101;
          break L27;
         }
         $266 = HEAP32[$2>>2]|0;
         $267 = ($266|0)==(0|0);
         if ($267) {
          $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
          label = 104;
          break L27;
         }
         $268 = ((($266)) + 4|0);
         $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
         HEAP32[$2>>2] = $269;
         $270 = ($269|0)==(0);
         $271 = $269;
         if ($270) {
          $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
          label = 104;
          break L27;
         }
         if ($211) {
          $272 = $269;
          $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
          $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
          $275 = ($274|0)==(19);
          if ($275) {
           $276 = ((($273)) + 4|0);
           $277 = HEAP8[$276>>0]|0;
           $278 = ($277<<24>>24)==(58);
           if (!($278)) {
            label = 98;
           }
          } else {
           label = 98;
          }
         } else {
          label = 98;
         }
         if ((label|0) == 98) {
          label = 0;
          if (!($$lcssa231)) {
           $$8 = 0;
           break L27;
          }
          $282 = ((($271)) + 8|0);
          $283 = HEAPU8[$282>>0]|(HEAPU8[$282+1>>0]<<8)|(HEAPU8[$282+2>>0]<<16)|(HEAPU8[$282+3>>0]<<24);
          $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
          $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
          $286 = ($285|0)==(8);
          if ($286) {
           $287 = ((($284)) + 4|0);
           $288 = HEAPU8[$287>>0]|(HEAPU8[$287+1>>0]<<8)|(HEAPU8[$287+2>>0]<<16)|(HEAPU8[$287+3>>0]<<24);
           $289 = ((($288)) + 4|0);
           $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
           $291 = ($290|0)==(71|0);
           if ($291) {
            $$6134140143 = 0;
            label = 105;
            break L27;
           }
          }
         }
         $279 = ((($271)) + 8|0);
         $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
         HEAP32[$2>>2] = $280;
         $281 = ($280|0)==(0|0);
         if ($281) {
          label = 78;
          break L37;
         } else {
          $305 = $280;
         }
        }
        if ((label|0) == 90) {
         $262 = ((($$0108190)) + 4|0);
         $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
         HEAP32[$2>>2] = $263;
         $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
         label = 104;
         break L27;
        }
        (_mb_get_last_error($0,0,0,0,0)|0);
        $236 = ($$0108190|0)==(0|0);
        if (!($236)) {
         $237 = HEAPU8[$$0108190>>0]|(HEAPU8[$$0108190+1>>0]<<8)|(HEAPU8[$$0108190+2>>0]<<16)|(HEAPU8[$$0108190+3>>0]<<24);
         $238 = ($237|0)==(0|0);
         if (!($238)) {
          $239 = ((($0)) + 67|0);
          $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
          $241 = (__set_current_error($0,39,$240)|0);
          $242 = ($241<<24>>24)==(0);
          if ($242) {
           $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
           label = 104;
           break L27;
          }
          $243 = HEAPU8[$$0108190>>0]|(HEAPU8[$$0108190+1>>0]<<8)|(HEAPU8[$$0108190+2>>0]<<16)|(HEAPU8[$$0108190+3>>0]<<24);
          $244 = ((($243)) + 9|0);
          $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
          $246 = ((($243)) + 13|0);
          $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8);
          $248 = ((($243)) + 15|0);
          $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8);
          __set_error_pos($0,$245,$247,$249);
          $$0109136 = 1;$$3135 = $$2;$$6134 = 3;
          label = 104;
          break L27;
         }
        }
       }
      } while(0);
      if ((label|0) == 78) {
       (_mb_get_last_error($0,0,0,0,0)|0);
      }
      $250 = ((($0)) + 67|0);
      $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
      $252 = (__set_current_error($0,39,$251)|0);
      $253 = ($252<<24>>24)==(0);
      if ($253) {
       $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
       label = 104;
       break L27;
      }
      __set_error_pos($0,0,0,0);
      $$0109136 = 1;$$3135 = $$2;$$6134 = 3;
      label = 104;
      break L27;
     }
     break;
    }
    default: {
    }
    }
    $215 = ($203|0)==(0|0);
    $216 = ($204|0)==(0|0);
    $or$cond290 = $215 | $216;
    $217 = ((($0)) + 67|0);
    $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
    $219 = (__set_current_error($0,38,$218)|0);
    $220 = ($219<<24>>24)==(0);
    if ($or$cond290) {
     if ($220) {
      $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
      label = 104;
      break;
     }
     __set_error_pos($0,0,0,0);
     $$0109136 = 1;$$3135 = $$2;$$6134 = 3;
     label = 104;
     break;
    } else {
     if ($220) {
      $$0109136 = 1;$$3135 = $$2;$$6134 = 0;
      label = 104;
      break;
     }
     $221 = HEAP32[$2>>2]|0;
     $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
     $223 = ((($222)) + 9|0);
     $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
     $225 = ((($222)) + 13|0);
     $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8);
     $227 = ((($222)) + 15|0);
     $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8);
     __set_error_pos($0,$224,$226,$228);
     $$0109136 = 1;$$3135 = $$2;$$6134 = 3;
     label = 104;
     break;
    }
   } else {
    $$0109 = 0;$$3 = $$2;$$6 = $201;
    label = 101;
   }
  }
 } while(0);
 if ((label|0) == 101) {
  $292 = ($$6|0)==(103);
  if ($292) {
   $293 = HEAP32[$2>>2]|0;
   $294 = ($293|0)==(0|0);
   if ($294) {
    $$8 = 103;
   } else {
    $295 = ((($293)) + 4|0);
    $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
    HEAP32[$2>>2] = $296;
    $$8 = 103;
   }
  } else {
   $$0109136 = $$0109;$$3135 = $$3;$$6134 = $$6;
   label = 104;
  }
 }
 if ((label|0) == 104) {
  $297 = ($$3135<<24>>24)==(0);
  $298 = ($$0109136<<24>>24)==(0);
  $or$cond144 = $298 | $297;
  if ($or$cond144) {
   $$8 = $$6134;
  } else {
   $$6134140143 = $$6134;
   label = 105;
  }
 }
 L136: do {
  if ((label|0) == 105) {
   $299 = (__skip_struct($0,$2,67,68,71)|0);
   $300 = ($299|0)==(0);
   if ($300) {
    $$8 = $$6134140143;
   } else {
    switch ($$6134140143|0) {
    case 101: case 102: case 6:  {
     $$8 = $$6134140143;
     break L136;
     break;
    }
    default: {
    }
    }
    $$8 = $299;
   }
  }
 } while(0);
 $301 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $301;
 $302 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 switch ($302|0) {
 case 14: case 12:  {
  __destroy_object_capsule_only($9);
  break;
 }
 case 1:  {
  break;
 }
 default: {
  (__destroy_object($9,0)|0);
 }
 }
 STACKTOP = sp;return ($$8|0);
}
function __core_for($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15907,(8598|0));
  // unreachable;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = ((($5)) + 8|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 HEAP32[$2>>2] = $7;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(9);
 do {
  if ($10) {
   $24 = ((($8)) + 4|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = ($7|0)==(0|0);
   if (!($26)) {
    $27 = ((($7)) + 8|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ($28|0)==(0|0);
    if (!($29)) {
     $30 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = ($31|0)==(8);
     if ($32) {
      $33 = ((($30)) + 4|0);
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
      $35 = ((($34)) + 4|0);
      $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
      $37 = ($36|0)==(73|0);
      if ($37) {
       $38 = (__execute_ranged_for_loop($0,$2,$25)|0);
       $$0 = $38;
       break;
      }
     }
    }
   }
   $39 = (__execute_normal_for_loop($0,$2,$25)|0);
   $$0 = $39;
  } else {
   $11 = ($7|0)==(0|0);
   $12 = ($8|0)==(0|0);
   $or$cond24 = $11 | $12;
   $13 = ((($0)) + 67|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = (__set_current_error($0,43,$14)|0);
   $16 = ($15<<24>>24)==(0);
   if ($or$cond24) {
    if ($16) {
     $$0 = 0;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$0 = 3;
    break;
   } else {
    if ($16) {
     $$0 = 0;
     break;
    }
    $17 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $18 = ((($17)) + 9|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = ((($17)) + 13|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
    $22 = ((($17)) + 15|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8);
    __set_error_pos($0,$19,$21,$23);
    $$0 = 3;
    break;
   }
  }
 } while(0);
 $40 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $40;
 STACKTOP = sp;return ($$0|0);
}
function __core_next($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15970,(8587|0));
  // unreachable;
 }
 $4 = ((($0)) + 75|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$1>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)==(9);
  if ($12) {
   $13 = ((($10)) + 4|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($5)) + 16|0);
   HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
  }
 }
 HEAP32[$1>>2] = $8;
 return 102;
}
function __core_while($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in$in = 0, $$036 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 24|0;
 $3 = sp + 4|0;
 $4 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15997,(8575|0));
  // unreachable;
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 HEAP32[$4>>2] = $3;
 ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
 HEAP32[$2>>2] = $9;
 $10 = (__calc_expression($0,$2,$4)|0);
 $11 = ($10|0)==(0);
 L4: do {
  if ($11) {
   $12 = ((($0)) + 98|0);
   $13 = ((($3)) + 4|0);
   L6: while(1) {
    $16 = HEAP32[$13>>2]|0;
    $17 = ($16|0)==(0);
    if ($17) {
     label = 20;
     break;
    }
    $18 = HEAP32[$2>>2]|0;
    $19 = ($18|0)==(0|0);
    if ($19) {
     $$036 = 0;
     break L4;
    } else {
     $$0$in$in = $18;
    }
    while(1) {
     $$0 = HEAPU8[$$0$in$in>>0]|(HEAPU8[$$0$in$in+1>>0]<<8)|(HEAPU8[$$0$in$in+2>>0]<<16)|(HEAPU8[$$0$in$in+3>>0]<<24);
     $20 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
     $21 = ($20|0)==(8);
     if ($21) {
      $22 = ((($$0)) + 4|0);
      $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      $24 = ((($23)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = ($25|0)==(78|0);
      if ($26) {
       break;
      }
     }
     $27 = (__execute_statement($0,$2,1)|0);
     switch ($27|0) {
     case 101:  {
      label = 11;
      break L6;
      break;
     }
     case 103:  {
      $30 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
      $31 = ($30|0)==(0|0);
      if (!($31)) {
       label = 14;
       break L6;
      }
      break;
     }
     case 0:  {
      break;
     }
     default: {
      $$036 = $27;
      break L4;
     }
     }
     $40 = HEAP32[$2>>2]|0;
     $41 = ($40|0)==(0|0);
     if ($41) {
      label = 18;
      break L6;
     } else {
      $$0$in$in = $40;
     }
    }
    HEAP32[$2>>2] = $9;
    $14 = (__calc_expression($0,$2,$4)|0);
    $15 = ($14|0)==(0);
    if (!($15)) {
     $$036 = $14;
     break L4;
    }
   }
   if ((label|0) == 11) {
    $28 = (__skip_struct($0,$2,77,0,78)|0);
    $29 = ($28|0)==(0);
    if (!($29)) {
     $$036 = 101;
     break;
    }
    (__skip_to($0,$2,0,22)|0);
    $$036 = 0;
    break;
   }
   else if ((label|0) == 14) {
    $32 = HEAP32[$2>>2]|0;
    $33 = ($32|0)==(0|0);
    if ($33) {
     $$036 = 103;
     break;
    }
    $34 = ((($32)) + 4|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    HEAP32[$2>>2] = $35;
    $36 = ($35|0)==(0);
    if ($36) {
     $$036 = 103;
     break;
    }
    $37 = $35;
    $38 = ((($37)) + 4|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    HEAP32[$2>>2] = $39;
    $$036 = 103;
    break;
   }
   else if ((label|0) == 18) {
    $42 = ((($0)) + 67|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = (__set_current_error($0,10,$43)|0);
    $45 = ($44<<24>>24)==(0);
    if ($45) {
     $$036 = $27;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$036 = 3;
    break;
   }
   else if ((label|0) == 20) {
    $46 = (__skip_struct($0,$2,77,0,78)|0);
    $47 = ($46|0)==(0);
    if (!($47)) {
     $$036 = 0;
     break;
    }
    (__skip_to($0,$2,0,22)|0);
    $$036 = 0;
    break;
   }
  } else {
   $$036 = $10;
  }
 } while(0);
 $48 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $48;
 STACKTOP = sp;return ($$036|0);
}
function __core_wend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8564)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8564)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_do($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1 = 0, $$1$ph = 0, $$2 = 0, $$cast = 0, $$pr51 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $brmerge = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 24|0;
 $3 = sp + 4|0;
 $4 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16079,(8508|0));
  // unreachable;
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 HEAP32[$2>>2] = $9;
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(0|0);
 L4: do {
  if ($11) {
   label = 5;
  } else {
   $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $13 = ($12|0)==(22);
   if ($13) {
    $26 = ((($9)) + 8|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    HEAP32[$2>>2] = $27;
    HEAP32[$4>>2] = $3;
    $$cast = $27;
    $28 = $27;
    $29 = ((($0)) + 98|0);
    ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
    $30 = ((($3)) + 4|0);
    L7: while(1) {
     HEAP32[$2>>2] = $$cast;
     $$1$ph = 0;$$sink = $28;$90 = $$cast;
     L9: while(1) {
      $31 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
      $$0 = $31;$$1 = $$1$ph;$$pr51 = $90;
      while(1) {
       $32 = ($$0|0)==(0|0);
       if ($32) {
        break L9;
       }
       $33 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
       $34 = ($33|0)==(8);
       if ($34) {
        $35 = ((($$0)) + 4|0);
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
        $37 = ((($36)) + 4|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
        $39 = ($38|0)==(80|0);
        if ($39) {
         break L9;
        }
       }
       $40 = (__execute_statement($0,$2,1)|0);
       switch ($40|0) {
       case 101:  {
        label = 17;
        break L7;
        break;
       }
       case 103:  {
        $43 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
        $44 = ($43|0)==(0|0);
        if (!($44)) {
         label = 20;
         break L7;
        }
        break;
       }
       case 0:  {
        break;
       }
       default: {
        $$2 = $40;
        break L4;
       }
       }
       $53 = HEAP32[$2>>2]|0;
       $54 = ($53|0)==(0|0);
       if ($54) {
        $$0 = 0;$$1 = $40;$$pr51 = 0;
       } else {
        break;
       }
      }
      $$1$ph = $40;$$sink = $53;$90 = $53;
     }
     $55 = ($$pr51|0)==(0|0);
     if ($55) {
      label = 31;
      break;
     }
     $56 = HEAPU8[$$pr51>>0]|(HEAPU8[$$pr51+1>>0]<<8)|(HEAPU8[$$pr51+2>>0]<<16)|(HEAPU8[$$pr51+3>>0]<<24);
     $57 = ($56|0)==(0|0);
     if ($57) {
      label = 31;
      break;
     }
     $58 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     $59 = ($58|0)==(8);
     if (!($59)) {
      label = 29;
      break;
     }
     $60 = ((($56)) + 4|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = ((($61)) + 4|0);
     $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
     $64 = ($63|0)==(80|0);
     if (!($64)) {
      label = 29;
      break;
     }
     $81 = ((($$pr51)) + 8|0);
     $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
     HEAP32[$2>>2] = $82;
     $83 = (__calc_expression($0,$2,$4)|0);
     $84 = ($83|0)==(0);
     if (!($84)) {
      $$2 = $83;
      break L4;
     }
     $85 = HEAP32[$30>>2]|0;
     $86 = ($85|0)==(0);
     if (!($86)) {
      label = 35;
      break;
     }
    }
    if ((label|0) == 17) {
     $41 = (__skip_struct($0,$2,79,0,80)|0);
     $42 = ($41|0)==(0);
     if (!($42)) {
      $$2 = 101;
      break;
     }
     (__skip_to($0,$2,0,22)|0);
     $$2 = 0;
     break;
    }
    else if ((label|0) == 20) {
     $45 = HEAP32[$2>>2]|0;
     $46 = ($45|0)==(0|0);
     if ($46) {
      $$2 = 103;
      break;
     }
     $47 = ((($45)) + 4|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
     HEAP32[$2>>2] = $48;
     $49 = ($48|0)==(0);
     if ($49) {
      $$2 = 103;
      break;
     }
     $50 = $48;
     $51 = ((($50)) + 4|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     HEAP32[$2>>2] = $52;
     $$2 = 103;
     break;
    }
    else if ((label|0) == 29) {
     $65 = ((($0)) + 67|0);
     $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
     $67 = (__set_current_error($0,42,$66)|0);
     $68 = ($67<<24>>24)==(0);
     if ($68) {
      $$2 = $$1;
      break;
     }
     $69 = HEAP32[$2>>2]|0;
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = ((($70)) + 9|0);
     $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
     $73 = ((($70)) + 13|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
     $75 = ((($70)) + 15|0);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8);
     __set_error_pos($0,$72,$74,$76);
     $$2 = 3;
     break;
    }
    else if ((label|0) == 31) {
     $77 = ((($0)) + 67|0);
     $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
     $79 = (__set_current_error($0,42,$78)|0);
     $80 = ($79<<24>>24)==(0);
     if ($80) {
      $$2 = $$1;
      break;
     }
     __set_error_pos($0,0,0,0);
     $$2 = 3;
     break;
    }
    else if ((label|0) == 35) {
     $87 = HEAP32[$2>>2]|0;
     $88 = ($87|0)==(0|0);
     if ($88) {
      $$2 = 0;
      break;
     }
     (__skip_to($0,$2,0,22)|0);
     $$2 = 0;
     break;
    }
   } else {
    label = 5;
   }
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $14 = ($9|0)==(0|0);
   $brmerge = $14 | $11;
   $15 = ((($0)) + 67|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__set_current_error($0,10,$16)|0);
   $18 = ($17<<24>>24)==(0);
   if ($brmerge) {
    if ($18) {
     $$2 = 0;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$2 = 3;
    break;
   } else {
    if ($18) {
     $$2 = 0;
     break;
    }
    $19 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $20 = ((($19)) + 9|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ((($19)) + 13|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8);
    $24 = ((($19)) + 15|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8);
    __set_error_pos($0,$21,$23,$25);
    $$2 = 3;
    break;
   }
  }
 } while(0);
 $89 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $89;
 STACKTOP = sp;return ($$2|0);
}
function __core_until($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8496)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8496)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_exit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  return 101;
 } else {
  ___assert_fail((2222|0),(1578|0),16162,(8485|0));
  // unreachable;
 }
 return (0)|0;
}
function __core_goto($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$083 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16178,(8441|0));
  // unreachable;
 }
 $4 = ((($0)) + 75|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$1>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($0)) + 92|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&255;
 $12 = $11 & 254;
 $13 = ($12|0)==(0);
 L4: do {
  if ($13) {
   $32 = $11 | 1;
   $33 = $32&255;
   HEAP8[$9>>0] = $33;
   $34 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = ($35|0)==(15);
   if (!($36)) {
    $37 = ($34|0)==(0|0);
    $38 = ((($0)) + 67|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = (__set_current_error($0,44,$39)|0);
    $41 = ($40<<24>>24)==(0);
    if ($37) {
     if ($41) {
      $$0 = $8;$$083 = 0;
      break;
     }
     __set_error_pos($0,0,0,0);
     $$0 = $8;$$083 = 3;
     break;
    } else {
     if ($41) {
      $$0 = $8;$$083 = 0;
      break;
     }
     $42 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $43 = ((($42)) + 9|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $45 = ((($42)) + 13|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8);
     $47 = ((($42)) + 15|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8);
     __set_error_pos($0,$44,$46,$48);
     $$0 = $8;$$083 = 3;
     break;
    }
   }
   $49 = ((($34)) + 4|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ((($50)) + 4|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ($52|0)==(0|0);
   do {
    if ($53) {
     $54 = ((($5)) + 8|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
     $56 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     $57 = (__ht_find($55,$56)|0);
     $58 = ($57|0)==(0|0);
     if (!($58)) {
      $59 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
      $61 = ($60|0)==(15);
      if ($61) {
       $75 = ((($59)) + 4|0);
       $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
       $77 = ((($76)) + 4|0);
       $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
       HEAP8[$51>>0]=$78&255;HEAP8[$51+1>>0]=($78>>8)&255;HEAP8[$51+2>>0]=($78>>16)&255;HEAP8[$51+3>>0]=$78>>24;
       $79 = $78;
       $80 = ($78|0)==(0);
       if ($80) {
        break;
       } else {
        $82 = $79;
        label = 25;
        break;
       }
      }
     }
     $62 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $63 = ($62|0)==(0|0);
     $64 = ((($0)) + 67|0);
     $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
     $66 = (__set_current_error($0,26,$65)|0);
     $67 = ($66<<24>>24)==(0);
     if ($63) {
      if ($67) {
       $$0 = $8;$$083 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = $8;$$083 = 3;
      break L4;
     } else {
      if ($67) {
       $$0 = $8;$$083 = 0;
       break L4;
      }
      $68 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
      $69 = ((($68)) + 9|0);
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
      $71 = ((($68)) + 13|0);
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8);
      $73 = ((($68)) + 15|0);
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
      __set_error_pos($0,$70,$72,$74);
      $$0 = $8;$$083 = 3;
      break L4;
     }
    } else {
     $82 = $52;
     label = 25;
    }
   } while(0);
   if ((label|0) == 25) {
    $81 = ((($82)) + 4|0);
    $83 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
    $84 = ($83|0)==(0|0);
    if (!($84)) {
     $85 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
     $86 = ($85|0)==(0|0);
     if (!($86)) {
      $$0 = $83;$$083 = 0;
      break;
     }
     $87 = ((($83)) + 8|0);
     $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
     $$0 = $88;$$083 = 0;
     break;
    }
   }
   ___assert_fail((8452|0),(1578|0),16201,(8441|0));
   // unreachable;
  } else {
   $14 = ($8|0)==(0|0);
   if (!($14)) {
    $15 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $16 = ($15|0)==(0|0);
    if (!($16)) {
     $17 = ((($0)) + 67|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = (__set_current_error($0,50,$18)|0);
     $20 = ($19<<24>>24)==(0);
     if ($20) {
      $$0 = $8;$$083 = 0;
      break;
     }
     $21 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $22 = ((($21)) + 9|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ((($21)) + 13|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8);
     $26 = ((($21)) + 15|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     __set_error_pos($0,$23,$25,$27);
     $$0 = $8;$$083 = 3;
     break;
    }
   }
   $28 = ((($0)) + 67|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = (__set_current_error($0,50,$29)|0);
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $$0 = $8;$$083 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$0 = $8;$$083 = 3;
   }
  }
 } while(0);
 HEAP32[$1>>2] = $$0;
 return ($$083|0);
}
function __core_gosub($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16218,(8429|0));
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ((($0)) + 92|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = $7 & 254;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $28 = $7 | 1;
   $29 = $28&255;
   HEAP8[$5>>0] = $29;
   $30 = (__core_goto($0,$1)|0);
   $31 = ($30|0)==(0);
   if ($31) {
    $32 = ((($0)) + 102|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    (__ls_pushback($33,$4)|0);
    $$0 = 0;
   } else {
    $$0 = $30;
   }
  } else {
   $10 = ($4|0)==(0|0);
   if (!($10)) {
    $11 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
    $12 = ($11|0)==(0|0);
    if (!($12)) {
     $13 = ((($0)) + 67|0);
     $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
     $15 = (__set_current_error($0,50,$14)|0);
     $16 = ($15<<24>>24)==(0);
     if ($16) {
      $$0 = 0;
      break;
     }
     $17 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
     $18 = ((($17)) + 9|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ((($17)) + 13|0);
     $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
     $22 = ((($17)) + 15|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8);
     __set_error_pos($0,$19,$21,$23);
     $$0 = 3;
     break;
    }
   }
   $24 = ((($0)) + 67|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = (__set_current_error($0,50,$25)|0);
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $$0 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$0 = 3;
   }
  }
 } while(0);
 return ($$0|0);
}
function __core_end($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  return 6;
 } else {
  ___assert_fail((2222|0),(1578|0),17003,(8419|0));
  // unreachable;
 }
 return (0)|0;
}
function __skip_struct($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$047 = 0, $$052 = 0, $$1 = 0, $$151 = 0, $$pr = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond3 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 HEAP32[$5>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 $8 = ($2|0)!=(0|0);
 $or$cond3 = $or$cond & $8;
 $9 = ($4|0)!=(0|0);
 $or$cond9 = $or$cond3 & $9;
 if (!($or$cond9)) {
  ___assert_fail((8517|0),(1578|0),11579,(8551|0));
  // unreachable;
 }
 $10 = HEAP32[$1>>2]|0;
 HEAP32[$5>>2] = $10;
 $11 = ($10|0)==(0);
 $12 = $10;
 $13 = $10;
 L4: do {
  if ($11) {
   $21 = $12;$30 = $13;$60 = 0;
   label = 7;
  } else {
   $14 = ($3|0)==(0|0);
   $$052 = 1;$18 = $12;$61 = $10;$62 = $13;
   L6: while(1) {
    $17 = ((($18)) + 8|0);
    $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $20 = ($19|0)==(0|0);
    if ($20) {
     $21 = $18;$30 = $62;$60 = $61;
     label = 7;
     break L4;
    }
    $41 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    HEAP32[$5>>2] = $19;
    $42 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ($43|0)==(8);
    do {
     if ($44) {
      $45 = ((($42)) + 4|0);
      $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
      $47 = ((($46)) + 4|0);
      $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
      $49 = ($48|0)==($2|0);
      if ($49) {
       if (!($14)) {
        $50 = (__skip_single_line_struct($5,$3)|0);
        $51 = ($50<<24>>24)==(0);
        if (!($51)) {
         $$151 = $$052;
         break;
        }
       }
       $52 = (($$052) + 1)|0;
       $$1 = $52;
      } else {
       $53 = ($48|0)==($4|0);
       $54 = ($41|0)!=(0|0);
       $or$cond11 = $54 & $53;
       if (!($or$cond11)) {
        $$151 = $$052;
        break;
       }
       $55 = (($$052) + -1)|0;
       $56 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $57 = ($56|0)==(22);
       if ($57) {
        $$1 = $55;
       } else {
        $$151 = $$052;
        break;
       }
      }
      $58 = ($$1|0)==(0);
      if ($58) {
       break L6;
      } else {
       $$151 = $$1;
      }
     } else {
      $$151 = $$052;
     }
    } while(0);
    $$pr = HEAP32[$5>>2]|0;
    $15 = ($$pr|0)==(0|0);
    $16 = $$pr;
    if ($15) {
     $63 = $16;
     label = 11;
     break L4;
    } else {
     $$052 = $$151;$18 = $$pr;$61 = $16;$62 = $$pr;
    }
   }
   $$pre = HEAP32[$5>>2]|0;
   $$047 = 0;$59 = $$pre;
  }
 } while(0);
 if ((label|0) == 7) {
  $22 = ($21|0)==(0|0);
  if ($22) {
   $63 = $60;
   label = 11;
  } else {
   $23 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $24 = ($23|0)==(0|0);
   if ($24) {
    $63 = $60;
    label = 11;
   } else {
    $25 = ((($0)) + 67|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = (__set_current_error($0,25,$26)|0);
    $28 = ($27<<24>>24)==(0);
    if ($28) {
     $$047 = 0;$59 = $60;
    } else {
     $29 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $31 = ((($29)) + 9|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = ((($29)) + 13|0);
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
     $35 = ((($29)) + 15|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
     __set_error_pos($0,$32,$34,$36);
     $$047 = 3;$59 = $60;
    }
   }
  }
 }
 if ((label|0) == 11) {
  $37 = ((($0)) + 67|0);
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = (__set_current_error($0,25,$38)|0);
  $40 = ($39<<24>>24)==(0);
  if ($40) {
   $$047 = 0;$59 = $63;
  } else {
   __set_error_pos($0,0,0,0);
   $$047 = 3;$59 = $63;
  }
 }
 HEAP32[$1>>2] = $59;
 STACKTOP = sp;return ($$047|0);
}
function __skip_single_line_struct($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$012 = 0, $$015 = 0, $$016 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$015 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $2 = ($$015|0)==(0|0);
 L1: do {
  if ($2) {
   $$012 = 0;
  } else {
   $$016 = $$015;
   while(1) {
    $3 = HEAPU8[$$016>>0]|(HEAPU8[$$016+1>>0]<<8)|(HEAPU8[$$016+2>>0]<<16)|(HEAPU8[$$016+3>>0]<<24);
    $4 = ($3|0)==(0|0);
    if (!($4)) {
     $5 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
     $6 = ($5|0)==(22);
     if ($6) {
      break;
     }
    }
    $7 = ((($$016)) + 8|0);
    $$0 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $8 = ($$0|0)==(0|0);
    if ($8) {
     $$012 = 0;
     break L1;
    } else {
     $$016 = $$0;
    }
   }
   $9 = ((($$016)) + 4|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $$012 = 0;
   } else {
    $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $14 = ($13|0)==(8);
    if ($14) {
     $15 = ((($12)) + 4|0);
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ((($16)) + 4|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = ($18|0)==($1|0);
     if ($19) {
      $$012 = 0;
      break;
     }
    }
    HEAP32[$0>>2] = $$016;
    $$012 = 1;
   }
  }
 } while(0);
 return ($$012|0);
}
function __core_in($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,8898)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,8898)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __execute_ranged_for_loop($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0167 = 0, $$0169 = 0, $$0172 = 0, $$1 = 0, $$1166 = 0, $$1168$ph = 0, $$1170$ph = 0, $$1176$ph = 0, $$180 = 0, $$2171195 = 0, $$2177 = 0, $$2198 = 0, $$2198221228231 = 0, $$2198221229 = 0, $$2199 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond203 = 0, $or$cond5 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $3 = sp + 96|0;
 $4 = sp + 76|0;
 $5 = sp + 72|0;
 $6 = sp + 64|0;
 $7 = sp + 56|0;
 $8 = sp + 48|0;
 $9 = sp + 40|0;
 $10 = sp + 20|0;
 $11 = sp;
 HEAP32[$3>>2] = 0;
 HEAP32[$5>>2] = 0;
 $12 = ($0|0)!=(0|0);
 $13 = ($1|0)!=(0|0);
 $or$cond = $12 & $13;
 $14 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $14;
 if (!($or$cond5)) {
  ___assert_fail((8608|0),(1578|0),11310,(8869|0));
  // unreachable;
 }
 $15 = ((($0)) + 75|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = ((($2)) + 8|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18 & 3;
 $20 = ($19<<24>>24)==(0);
 if ($20) {
  $61 = $2;
 } else {
  $21 = (__search_var_in_scope_chain($0,$2,0)|0);
  $22 = ($21|0)==(0|0);
  if ($22) {
   $61 = $2;
  } else {
   $23 = ((($21)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   L7: do {
    switch ($25|0) {
    case 7:  {
     $26 = ((($24)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     __unref($27,$27);
     break;
    }
    case 10:  {
     $28 = ((($24)) + 8|0);
     $29 = HEAP8[$28>>0]|0;
     $30 = $29 & 1;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $32 = ((($24)) + 4|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      __unref($33,$33);
     }
     break;
    }
    case 11:  {
     $34 = ((($24)) + 4|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     __unref($35,$35);
     break;
    }
    case 13:  {
     $36 = ((($24)) + 4|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     __unref($37,$37);
     break;
    }
    case 16:  {
     $38 = ((($24)) + 8|0);
     $39 = HEAP8[$38>>0]|0;
     $40 = $39 & 1;
     $41 = ($40<<24>>24)==(0);
     if ($41) {
      $42 = ((($24)) + 4|0);
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      __unref($43,$43);
     }
     break;
    }
    case 17:  {
     $44 = ((($24)) + 8|0);
     $45 = HEAP8[$44>>0]|0;
     $46 = $45 & 1;
     $47 = ($46<<24>>24)==(0);
     if ($47) {
      $48 = ((($24)) + 4|0);
      $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      $50 = ((($49)) + 58|0);
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = ($51|0)==(2);
      if ($52) {
       __unref($49,$49);
       break L7;
      }
      $53 = ((($24)) + 4|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $55 = ((($54)) + 58|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ($56|0)==(2);
      if (!($57)) {
       __destroy_routine(0,$54);
      }
     }
     break;
    }
    default: {
    }
    }
   } while(0);
   $58 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   dest=$58; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   $59 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   HEAP8[$59>>0]=0&255;HEAP8[$59+1>>0]=(0>>8)&255;HEAP8[$59+2>>0]=(0>>16)&255;HEAP8[$59+3>>0]=0>>24;
   $61 = $21;
  }
 }
 $60 = ((($61)) + 4|0);
 $62 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
 $63 = (__is_ref($62)|0);
 $64 = ($63<<24>>24)==(0);
 if ($64) {
  $$0172 = 0;$275 = 0;
 } else {
  $65 = ((($62)) + 4|0);
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  $67 = ((($66)) + 13|0);
  $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
  $69 = ((($68)) + 21|0);
  $70 = (__gc_remove($66,$66,$69)|0);
  $71 = ($70|0)==(0);
  $$ = $71 ? 0 : $66;
  $$180 = $71 ? 0 : $66;
  $$0172 = $$180;$275 = $$;
 }
 HEAP32[$5>>2] = $4;
 $72 = ((($6)) + 4|0);
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
 HEAP32[$72>>2] = 0;
 HEAP32[$6>>2] = 0;
 $73 = ((($7)) + 4|0);
 HEAP32[$73>>2] = 0;
 HEAP32[$7>>2] = 0;
 $74 = HEAP32[$1>>2]|0;
 $75 = ((($74)) + 8|0);
 $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
 $77 = ((($76)) + 8|0);
 $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
 HEAP32[$3>>2] = $78;
 $79 = ($78|0)==(0|0);
 L26: do {
  if ($79) {
   $80 = ((($0)) + 67|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = (__set_current_error($0,10,$81)|0);
   $83 = ($82<<24>>24)==(0);
   if ($83) {
    $$1 = 0;$$1166 = 0;$$2177 = 3;
   } else {
    __set_error_pos($0,0,0,0);
    $$1 = 0;$$1166 = 0;$$2177 = 3;
   }
  } else {
   $84 = (__calc_expression($0,$3,$5)|0);
   $85 = ($84|0)==(0);
   if ($85) {
    $86 = HEAP32[$4>>2]|0;
    switch ($86|0) {
    case 7:  {
     (__internal_object_to_public_value($4,$6)|0);
     $87 = (__try_overridden($0,$3,$6,2203,64)|0);
     $88 = $87 & 3;
     $89 = ($88|0)==(3);
     if ($89) {
      $90 = ((($16)) + 20|0);
      __swap_public_value($7,$90);
      $$0167 = 0;$$0169 = 0;
     } else {
      $$0167 = 0;$$0169 = 0;
     }
     break;
    }
    case 11:  {
     $91 = ((($4)) + 4|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (__create_list_it($92,1)|0);
     $$0167 = 0;$$0169 = $93;
     break;
    }
    case 13:  {
     $94 = ((($4)) + 4|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = (__create_dict_it($95,1)|0);
     $$0167 = $96;$$0169 = 0;
     break;
    }
    case 16:  {
     (__internal_object_to_public_value($4,$6)|0);
     $97 = (__try_overridden($0,$3,$6,2203,64)|0);
     $98 = $97 & 3;
     $99 = ($98|0)==(3);
     if ($99) {
      $100 = ((($16)) + 20|0);
      __swap_public_value($7,$100);
      $$0167 = 0;$$0169 = 0;
     } else {
      $$0167 = 0;$$0169 = 0;
     }
     break;
    }
    default: {
     $101 = HEAP32[$3>>2]|0;
     $102 = ($101|0)==(0|0);
     if (!($102)) {
      $103 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
      $104 = ($103|0)==(0|0);
      if (!($104)) {
       $105 = ((($0)) + 67|0);
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = (__set_current_error($0,62,$106)|0);
       $108 = ($107<<24>>24)==(0);
       if ($108) {
        $$1 = 0;$$1166 = 0;$$2177 = 0;
        break L26;
       }
       $109 = HEAP32[$3>>2]|0;
       $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
       $111 = ((($110)) + 9|0);
       $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
       $113 = ((($110)) + 13|0);
       $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8);
       $115 = ((($110)) + 15|0);
       $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8);
       __set_error_pos($0,$112,$114,$116);
       $$1 = 0;$$1166 = 0;$$2177 = 3;
       break L26;
      }
     }
     $117 = ((($0)) + 67|0);
     $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
     $119 = (__set_current_error($0,62,$118)|0);
     $120 = ($119<<24>>24)==(0);
     if ($120) {
      $$1 = 0;$$1166 = 0;$$2177 = 0;
      break L26;
     }
     __set_error_pos($0,0,0,0);
     $$1 = 0;$$1166 = 0;$$2177 = 3;
     break L26;
    }
    }
    $121 = HEAP32[$3>>2]|0;
    $122 = HEAP32[$4>>2]|0;
    switch ($122|0) {
    case 11:  {
     $123 = ((($4)) + 4|0);
     $124 = HEAP32[$123>>2]|0;
     __ref($124,$124);
     break;
    }
    case 13:  {
     $125 = ((($4)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     __ref($126,$126);
     break;
    }
    case 7:  {
     $127 = ((($4)) + 4|0);
     $128 = HEAP32[$127>>2]|0;
     __ref($128,$128);
     break;
    }
    default: {
    }
    }
    $129 = ((($8)) + 4|0);
    $130 = ((($9)) + 4|0);
    $131 = ((($16)) + 20|0);
    $132 = ((($10)) + 4|0);
    $133 = ((($10)) + 8|0);
    $$1168$ph = $$0167;$$1170$ph = $$0169;
    L51: while(1) {
     HEAP32[$3>>2] = $121;
     $134 = HEAP32[$7>>2]|0;
     $135 = ($134|0)==(0);
     L53: do {
      if (!($135)) {
       while(1) {
        HEAP32[$129>>2] = 0;
        HEAP32[$8>>2] = 0;
        HEAP32[$130>>2] = 0;
        HEAP32[$9>>2] = 0;
        ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;HEAP32[$10+12>>2]=0|0;HEAP8[$10+16>>0]=0|0;
        $136 = (__try_overridden($0,$3,$7,2212,64)|0);
        $137 = $136 & 3;
        $138 = ($137|0)==(3);
        if ($138) {
         __swap_public_value($8,$131);
        }
        $139 = HEAP32[$8>>2]|0;
        $140 = ($139|0)!=(2);
        $141 = HEAP32[$129>>2]|0;
        $142 = ($141|0)==(0);
        $or$cond203 = $140 | $142;
        if ($or$cond203) {
         label = 63;
         break L51;
        }
        $143 = (__try_overridden($0,$3,$7,8894,128)|0);
        $144 = $143 & 3;
        $145 = ($144|0)==(3);
        if ($145) {
         __swap_public_value($9,$131);
        }
        (__public_value_to_internal_object($9,$10)|0);
        HEAP8[$60>>0]=$10&255;HEAP8[$60+1>>0]=($10>>8)&255;HEAP8[$60+2>>0]=($10>>16)&255;HEAP8[$60+3>>0]=$10>>24;
        $146 = (__common_keep_looping($0,$3,$2)|0);
        $147 = HEAP32[$10>>2]|0;
        L63: do {
         switch ($147|0) {
         case 7:  {
          $148 = HEAP32[$132>>2]|0;
          __unref($148,$148);
          break;
         }
         case 10:  {
          $149 = HEAP8[$133>>0]|0;
          $150 = $149 & 1;
          $151 = ($150<<24>>24)==(0);
          if ($151) {
           $152 = HEAP32[$132>>2]|0;
           __unref($152,$152);
          }
          break;
         }
         case 11:  {
          $153 = HEAP32[$132>>2]|0;
          __unref($153,$153);
          break;
         }
         case 13:  {
          $154 = HEAP32[$132>>2]|0;
          __unref($154,$154);
          break;
         }
         case 16:  {
          $155 = HEAP8[$133>>0]|0;
          $156 = $155 & 1;
          $157 = ($156<<24>>24)==(0);
          if ($157) {
           $158 = HEAP32[$132>>2]|0;
           __unref($158,$158);
          }
          break;
         }
         case 17:  {
          $159 = HEAP8[$133>>0]|0;
          $160 = $159 & 1;
          $161 = ($160<<24>>24)==(0);
          if ($161) {
           $162 = HEAP32[$132>>2]|0;
           $163 = ((($162)) + 58|0);
           $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
           $165 = ($164|0)==(2);
           if ($165) {
            __unref($162,$162);
            break L63;
           }
           $166 = HEAP32[$132>>2]|0;
           $167 = ((($166)) + 58|0);
           $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
           $169 = ($168|0)==(2);
           if (!($169)) {
            __destroy_routine(0,$166);
           }
          }
          break;
         }
         default: {
         }
         }
        } while(0);
        switch ($146|0) {
        case 101:  {
         label = 64;
         break L51;
         break;
        }
        case 0:  {
         break;
        }
        default: {
         $$1176$ph = $146;
         break L51;
        }
        }
        HEAP32[$3>>2] = $121;
        $171 = HEAP32[$7>>2]|0;
        $172 = ($171|0)==(0);
        if ($172) {
         break L53;
        }
       }
      }
     } while(0);
     $173 = ($$1170$ph|0)==(0|0);
     if ($173) {
      $174 = ($$1168$ph|0)==(0|0);
      if ($174) {
       label = 81;
       break;
      }
      $175 = (__move_dict_it_next($$1168$ph)|0);
      $$2171195 = 0;$$2198 = $175;$276 = 0;
     } else {
      $176 = (__move_list_it_next($$1170$ph)|0);
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$2171195 = 0;$$2198 = $$1168$ph;$276 = 0;
      } else {
       $178 = (__invalid_list_it($176)|0);
       $179 = ($178<<24>>24)==(0);
       if ($179) {
        $$2171195 = $176;$$2198 = $$1168$ph;$276 = 1;
       } else {
        label = 74;
        break;
       }
      }
     }
     $180 = ($$2198|0)==(0|0);
     if ($180) {
      if ($276) {
       $$2198221229 = 0;$277 = 0;
       label = 83;
      } else {
       label = 81;
       break;
      }
     } else {
      $181 = (__invalid_dict_it($$2198)|0);
      $182 = ($181<<24>>24)==(0);
      if (!($182)) {
       label = 74;
       break;
      }
      if ($276) {
       $$2198221229 = $$2198;$277 = 1;
       label = 83;
      } else {
       $$2198221228231 = $$2198;
       label = 89;
      }
     }
     do {
      if ((label|0) == 83) {
       label = 0;
       $204 = ((($$2171195)) + 17|0);
       $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $206 = ((($205)) + 35|0);
       $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $214 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
        (__dispose_object($214)|0);
        $215 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
        HEAP8[$215>>0]=2&255;HEAP8[$215+1>>0]=(2>>8)&255;HEAP8[$215+2>>0]=(2>>16)&255;HEAP8[$215+3>>0]=2>>24;
        $216 = ((($$2171195)) + 22|0);
        $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
        $218 = ((($215)) + 4|0);
        HEAP8[$218>>0]=$217&255;HEAP8[$218+1>>0]=($217>>8)&255;HEAP8[$218+2>>0]=($217>>16)&255;HEAP8[$218+3>>0]=$217>>24;
        $$2199 = $$2198221229;
        break;
       }
       $209 = ((($$2171195)) + 22|0);
       $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
       $211 = ($210|0)==(0|0);
       if (!($211)) {
        $212 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
        $213 = ($212|0)==(0|0);
        if (!($213)) {
         HEAP8[$60>>0]=$212&255;HEAP8[$60+1>>0]=($212>>8)&255;HEAP8[$60+2>>0]=($212>>16)&255;HEAP8[$60+3>>0]=$212>>24;
         $$2199 = $$2198221229;
         break;
        }
       }
       if ($277) {
        $$2198221228231 = $$2198221229;
        label = 89;
       } else {
        $$2199 = 0;
       }
      }
     } while(0);
     if ((label|0) == 89) {
      label = 0;
      $219 = ((($$2198221228231)) + 26|0);
      $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
      $221 = ($220|0)==(0|0);
      if ($221) {
       $$2199 = $$2198221228231;
      } else {
       $222 = ((($220)) + 12|0);
       $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
       $224 = ($223|0)==(0|0);
       if ($224) {
        $$2199 = $$2198221228231;
       } else {
        HEAP8[$60>>0]=$223&255;HEAP8[$60+1>>0]=($223>>8)&255;HEAP8[$60+2>>0]=($223>>16)&255;HEAP8[$60+3>>0]=$223>>24;
        $$2199 = $$2198221228231;
       }
      }
     }
     $225 = (__common_keep_looping($0,$3,$2)|0);
     switch ($225|0) {
     case 0:  {
      $$1168$ph = $$2199;$$1170$ph = $$2171195;
      break;
     }
     case 101:  {
      label = 93;
      break L51;
      break;
     }
     default: {
      $$1 = $$0167;$$1166 = $$0169;$$2177 = $225;
      break L26;
     }
     }
    }
    if ((label|0) == 63) {
     $170 = (__common_end_looping($0,$3)|0);
     $$1176$ph = $170;
    }
    else if ((label|0) == 64) {
     $$1176$ph = 0;
    }
    else if ((label|0) == 74) {
     $183 = HEAP32[$3>>2]|0;
     $184 = ($183|0)==(0|0);
     if (!($184)) {
      $185 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
      $186 = ($185|0)==(0|0);
      if (!($186)) {
       $187 = ((($0)) + 67|0);
       $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
       $189 = (__set_current_error($0,61,$188)|0);
       $190 = ($189<<24>>24)==(0);
       if ($190) {
        $$1 = $$0167;$$1166 = $$0169;$$2177 = 0;
        break;
       }
       $191 = HEAP32[$3>>2]|0;
       $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
       $193 = ((($192)) + 9|0);
       $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
       $195 = ((($192)) + 13|0);
       $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8);
       $197 = ((($192)) + 15|0);
       $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8);
       __set_error_pos($0,$194,$196,$198);
       $$1 = $$0167;$$1166 = $$0169;$$2177 = 3;
       break;
      }
     }
     $199 = ((($0)) + 67|0);
     $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
     $201 = (__set_current_error($0,61,$200)|0);
     $202 = ($201<<24>>24)==(0);
     if ($202) {
      $$1 = $$0167;$$1166 = $$0169;$$2177 = 0;
      break;
     }
     __set_error_pos($0,0,0,0);
     $$1 = $$0167;$$1166 = $$0169;$$2177 = 3;
     break;
    }
    else if ((label|0) == 81) {
     $203 = (__common_end_looping($0,$3)|0);
     $$1 = $$0167;$$1166 = $$0169;$$2177 = $203;
     break;
    }
    else if ((label|0) == 93) {
     $$1 = $$0167;$$1166 = $$0169;$$2177 = 0;
     break;
    }
    $$1 = $$0167;$$1166 = $$0169;$$2177 = $$1176$ph;
   } else {
    $$1 = 0;$$1166 = 0;$$2177 = $84;
   }
  }
 } while(0);
 $226 = HEAP32[$7>>2]|0;
 $227 = ($226|0)==(0);
 if (!($227)) {
  ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;HEAP32[$11+12>>2]=0|0;HEAP8[$11+16>>0]=0|0;
  (__public_value_to_internal_object($7,$11)|0);
  $228 = HEAP32[$11>>2]|0;
  L120: do {
   switch ($228|0) {
   case 7:  {
    $229 = ((($11)) + 4|0);
    $230 = HEAP32[$229>>2]|0;
    __unref($230,$230);
    break;
   }
   case 10:  {
    $231 = ((($11)) + 8|0);
    $232 = HEAP8[$231>>0]|0;
    $233 = $232 & 1;
    $234 = ($233<<24>>24)==(0);
    if ($234) {
     $235 = ((($11)) + 4|0);
     $236 = HEAP32[$235>>2]|0;
     __unref($236,$236);
    }
    break;
   }
   case 11:  {
    $237 = ((($11)) + 4|0);
    $238 = HEAP32[$237>>2]|0;
    __unref($238,$238);
    break;
   }
   case 13:  {
    $239 = ((($11)) + 4|0);
    $240 = HEAP32[$239>>2]|0;
    __unref($240,$240);
    break;
   }
   case 16:  {
    $241 = ((($11)) + 8|0);
    $242 = HEAP8[$241>>0]|0;
    $243 = $242 & 1;
    $244 = ($243<<24>>24)==(0);
    if ($244) {
     $245 = ((($11)) + 4|0);
     $246 = HEAP32[$245>>2]|0;
     __unref($246,$246);
    }
    break;
   }
   case 17:  {
    $247 = ((($11)) + 8|0);
    $248 = HEAP8[$247>>0]|0;
    $249 = $248 & 1;
    $250 = ($249<<24>>24)==(0);
    if ($250) {
     $251 = ((($11)) + 4|0);
     $252 = HEAP32[$251>>2]|0;
     $253 = ((($252)) + 58|0);
     $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
     $255 = ($254|0)==(2);
     if ($255) {
      __unref($252,$252);
      break L120;
     }
     $256 = ((($11)) + 4|0);
     $257 = HEAP32[$256>>2]|0;
     $258 = ((($257)) + 58|0);
     $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
     $260 = ($259|0)==(2);
     if (!($260)) {
      __destroy_routine(0,$257);
     }
    }
    break;
   }
   default: {
   }
   }
  } while(0);
 }
 $261 = ($$1166|0)==(0|0);
 if ($261) {
  $262 = ($$1|0)==(0|0);
  if (!($262)) {
   __destroy_dict_it($$1);
  }
 } else {
  __destroy_list_it($$1166);
 }
 $263 = HEAP32[$4>>2]|0;
 switch ($263|0) {
 case 11:  {
  $264 = ((($4)) + 4|0);
  $265 = HEAP32[$264>>2]|0;
  __unref($265,$265);
  break;
 }
 case 13:  {
  $266 = ((($4)) + 4|0);
  $267 = HEAP32[$266>>2]|0;
  __unref($267,$267);
  break;
 }
 case 7:  {
  $268 = ((($4)) + 4|0);
  $269 = HEAP32[$268>>2]|0;
  __unref($269,$269);
  break;
 }
 default: {
 }
 }
 $270 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $270;
 HEAP8[$60>>0]=$62&255;HEAP8[$60+1>>0]=($62>>8)&255;HEAP8[$60+2>>0]=($62>>16)&255;HEAP8[$60+3>>0]=$62>>24;
 $271 = ($$0172|0)==(0|0);
 if (!($271)) {
  $272 = ((($$0172)) + 13|0);
  $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
  $274 = ((($273)) + 21|0);
  __gc_add($$0172,$275,$274);
 }
 STACKTOP = sp;return ($$2177|0);
}
function __execute_normal_for_loop($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0.0, $$1 = 0, $$1$ph = 0, $$ph = 0, $$pn = 0, $$pn124 = 0, $$pr = 0, $$sink = 0.0, $$sroa$5$0 = 0, $$sroa$5$0$in = 0, $$sroa$5$0$in132 = 0, $$sroa$5$0133139 = 0.0, $$sroa$554$0 = 0, $$sroa$554$0$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0;
 var $123 = 0.0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0.0;
 var $98 = 0, $99 = 0, $brmerge$demorgan = 0, $or$cond = 0, $or$cond148 = 0, $or$cond5 = 0, $or$cond9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp + 48|0;
 $4 = sp + 28|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 HEAP32[$3>>2] = 0;
 HEAP32[$6>>2] = 0;
 HEAP32[$7>>2] = 0;
 $8 = ($0|0)!=(0|0);
 $9 = ($1|0)!=(0|0);
 $or$cond = $8 & $9;
 $10 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $10;
 if (!($or$cond5)) {
  ___assert_fail((8608|0),(1578|0),11201,(8627|0));
  // unreachable;
 }
 $11 = HEAP32[$1>>2]|0;
 HEAP32[$3>>2] = $11;
 HEAP32[$6>>2] = $4;
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
 HEAP32[$7>>2] = $5;
 ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
 $12 = (__execute_statement($0,$3,1)|0);
 $13 = ($12|0)==(0);
 $14 = HEAP32[$3>>2]|0;
 $15 = ($14|0)!=(0|0);
 $or$cond9 = $13 & $15;
 L4: do {
  if ($or$cond9) {
   $16 = ((($14)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   HEAP32[$3>>2] = $17;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ($19|0)==(8);
   if ($20) {
    $21 = ((($18)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ($24|0)==(74|0);
    if ($25) {
     $40 = ((($17)) + 8|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     HEAP32[$3>>2] = $41;
     $42 = ($41|0)==(0|0);
     if ($42) {
      $47 = ((($0)) + 67|0);
      $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
      $49 = (__set_current_error($0,10,$48)|0);
      $50 = ($49<<24>>24)==(0);
      if ($50) {
       $$1 = 0;
       break;
      }
      __set_error_pos($0,0,0,0);
      $$1 = 3;
      break;
     }
     HEAP32[$3>>2] = $41;
     $43 = (__calc_expression($0,$3,$6)|0);
     $44 = ($43|0)==(0);
     if (!($44)) {
      $$1 = $43;
      break;
     }
     $45 = ((($2)) + 4|0);
     $$sroa$5$0$in132 = ((($5)) + 4|0);
     $46 = ((($5)) + 4|0);
     L14: while(1) {
      $51 = HEAP32[$3>>2]|0;
      $52 = ($51|0)==(0|0);
      do {
       if (!($52)) {
        $53 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
        $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
        $55 = ($54|0)==(8);
        if ($55) {
         $56 = ((($53)) + 4|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = ((($57)) + 4|0);
         $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
         $60 = ($59|0)==(75|0);
         if ($60) {
          $61 = ((($51)) + 8|0);
          $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
          HEAP32[$3>>2] = $62;
          $63 = ($62|0)==(0|0);
          if ($63) {
           label = 21;
           break L14;
          }
          $68 = (__calc_expression($0,$3,$7)|0);
          $69 = ($68|0)==(0);
          if ($69) {
           break;
          } else {
           $$1$ph = $68;
           label = 48;
           break L14;
          }
         }
        }
        dest=$5; src=8652; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
       }
      } while(0);
      $70 = (__compare_numbers($5,8669)|0);
      $71 = ($70|0)>(0);
      if ($71) {
       $72 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $73 = (__compare_numbers($72,$4)|0);
       $74 = ($73|0)>(0);
       if ($74) {
        label = 28;
        break;
       }
      }
      $75 = (__compare_numbers($5,8669)|0);
      $76 = ($75|0)<(0);
      if ($76) {
       $77 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $78 = (__compare_numbers($77,$4)|0);
       $79 = ($78|0)<(0);
       if ($79) {
        label = 28;
        break;
       }
      }
      $81 = HEAP32[$3>>2]|0;
      $82 = ($81|0)==(0|0);
      if ($82) {
       $$1$ph = 0;
       label = 48;
       break;
      }
      $83 = (__common_keep_looping($0,$3,$2)|0);
      switch ($83|0) {
      case 101:  {
       $$1$ph = 0;
       label = 48;
       break L14;
       break;
      }
      case 0:  {
       break;
      }
      default: {
       $$1 = $83;
       break L4;
      }
      }
      $84 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
      $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
      switch ($85|0) {
      case 2:  {
       $$ph = 1;
       label = 33;
       break;
      }
      case 9:  {
       $87 = ((($84)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = ((($88)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = ($91|0)==(2);
       $$pn = $90;$119 = $87;$96 = $92;
       break;
      }
      default: {
       $$ph = 0;
       label = 33;
      }
      }
      if ((label|0) == 33) {
       label = 0;
       $86 = ((($84)) + 4|0);
       $$pn = $84;$119 = $86;$96 = $$ph;
      }
      $$sroa$554$0$in = ((($$pn)) + 4|0);
      $$sroa$554$0 = HEAPU8[$$sroa$554$0$in>>0]|(HEAPU8[$$sroa$554$0$in+1>>0]<<8)|(HEAPU8[$$sroa$554$0$in+2>>0]<<16)|(HEAPU8[$$sroa$554$0$in+3>>0]<<24);
      $93 = HEAP32[$5>>2]|0;
      switch ($93|0) {
      case 2:  {
       $$pn124 = $5;$103 = 1;
       label = 38;
       break;
      }
      case 9:  {
       $98 = HEAP32[$46>>2]|0;
       $99 = ((($98)) + 4|0);
       $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
       $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
       $102 = ($101|0)==(2);
       $$pn124 = $100;$103 = $102;
       label = 38;
       break;
      }
      default: {
       $$sroa$5$0133139 = +HEAPF32[$$sroa$5$0$in132>>2];
       HEAP8[$84>>0]=3&255;HEAP8[$84+1>>0]=(3>>8)&255;HEAP8[$84+2>>0]=(3>>16)&255;HEAP8[$84+3>>0]=3>>24;
       $94 = (+($$sroa$554$0|0));
       $95 = (HEAP32[tempDoublePtr>>2]=$$sroa$554$0,+HEAPF32[tempDoublePtr>>2]);
       $97 = $96 ? $94 : $95;
       $117 = $$sroa$5$0133139;$118 = $97;
       label = 43;
      }
      }
      do {
       if ((label|0) == 38) {
        label = 0;
        $$sroa$5$0$in = ((($$pn124)) + 4|0);
        $$sroa$5$0 = HEAPU8[$$sroa$5$0$in>>0]|(HEAPU8[$$sroa$5$0$in+1>>0]<<8)|(HEAPU8[$$sroa$5$0$in+2>>0]<<16)|(HEAPU8[$$sroa$5$0$in+3>>0]<<24);
        $brmerge$demorgan = $96 & $103;
        if (!($brmerge$demorgan)) {
         HEAP8[$84>>0]=3&255;HEAP8[$84+1>>0]=(3>>8)&255;HEAP8[$84+2>>0]=(3>>16)&255;HEAP8[$84+3>>0]=3>>24;
         $111 = (+($$sroa$554$0|0));
         $112 = (HEAP32[tempDoublePtr>>2]=$$sroa$554$0,+HEAPF32[tempDoublePtr>>2]);
         $113 = $96 ? $111 : $112;
         $114 = (+($$sroa$5$0|0));
         $115 = (HEAP32[tempDoublePtr>>2]=$$sroa$5$0,+HEAPF32[tempDoublePtr>>2]);
         $$ = $103 ? $114 : $115;
         $117 = $$;$118 = $113;
         label = 43;
         break;
        }
        $104 = (($$sroa$5$0) + ($$sroa$554$0))|0;
        $105 = (+($104|0));
        $106 = (+($$sroa$554$0|0));
        $107 = (+($$sroa$5$0|0));
        $108 = $106 + $107;
        $109 = $108 == $105;
        if ($109) {
         HEAP8[$84>>0]=2&255;HEAP8[$84+1>>0]=(2>>8)&255;HEAP8[$84+2>>0]=(2>>16)&255;HEAP8[$84+3>>0]=2>>24;
         $110 = ((($84)) + 4|0);
         HEAP8[$110>>0]=$104&255;HEAP8[$110+1>>0]=($104>>8)&255;HEAP8[$110+2>>0]=($104>>16)&255;HEAP8[$110+3>>0]=$104>>24;
         break;
        } else {
         HEAP8[$84>>0]=3&255;HEAP8[$84+1>>0]=(3>>8)&255;HEAP8[$84+2>>0]=(3>>16)&255;HEAP8[$84+3>>0]=3>>24;
         $$sink = $108;
         label = 44;
         break;
        }
       }
      } while(0);
      if ((label|0) == 43) {
       label = 0;
       $116 = $118 + $117;
       $$sink = $116;
       label = 44;
      }
      if ((label|0) == 44) {
       label = 0;
       HEAPF32[tempDoublePtr>>2]=$$sink;HEAP8[$119>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$119+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$119+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$119+3>>0]=HEAP8[tempDoublePtr+3>>0];
       $$pr = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
       $120 = ($$pr|0)==(3);
       if ($120) {
        HEAP8[tempDoublePtr>>0]=HEAP8[$119>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$119+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$119+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$119+3>>0];$121 = +HEAPF32[tempDoublePtr>>2];
        $122 = (~~(($121)));
        $123 = (+($122|0));
        $124 = $121 == $123;
        if ($124) {
         HEAP8[$84>>0]=2&255;HEAP8[$84+1>>0]=(2>>8)&255;HEAP8[$84+2>>0]=(2>>16)&255;HEAP8[$84+3>>0]=2>>24;
         HEAP8[tempDoublePtr>>0]=HEAP8[$119>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$119+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$119+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$119+3>>0];$125 = +HEAPF32[tempDoublePtr>>2];
         $126 = (~~(($125)));
         $127 = ((($84)) + 4|0);
         HEAP8[$127>>0]=$126&255;HEAP8[$127+1>>0]=($126>>8)&255;HEAP8[$127+2>>0]=($126>>16)&255;HEAP8[$127+3>>0]=$126>>24;
        }
       }
      }
      HEAP32[$3>>2] = $41;
      $128 = (__calc_expression($0,$3,$6)|0);
      $129 = ($128|0)==(0);
      if (!($129)) {
       $$1$ph = $128;
       label = 48;
       break;
      }
     }
     if ((label|0) == 21) {
      $64 = ((($0)) + 67|0);
      $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
      $66 = (__set_current_error($0,10,$65)|0);
      $67 = ($66<<24>>24)==(0);
      if ($67) {
       $$1 = 0;
       break;
      }
      __set_error_pos($0,0,0,0);
      $$1 = 3;
      break;
     }
     else if ((label|0) == 28) {
      $80 = (__common_end_looping($0,$3)|0);
      $$1 = $80;
      break;
     }
     else if ((label|0) == 48) {
      $$1 = $$1$ph;
      break;
     }
    }
   }
   $26 = ($17|0)==(0|0);
   $27 = ($18|0)==(0|0);
   $or$cond148 = $26 | $27;
   $28 = ((($0)) + 67|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = (__set_current_error($0,40,$29)|0);
   $31 = ($30<<24>>24)==(0);
   if ($or$cond148) {
    if ($31) {
     $$1 = 0;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$1 = 3;
    break;
   } else {
    if ($31) {
     $$1 = 0;
     break;
    }
    $32 = HEAP32[$3>>2]|0;
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 9|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = ((($33)) + 13|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
    $38 = ((($33)) + 15|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
    __set_error_pos($0,$35,$37,$39);
    $$1 = 3;
    break;
   }
  } else {
   $$1 = $12;
  }
 } while(0);
 $130 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $130;
 STACKTOP = sp;return ($$1|0);
}
function __compare_numbers($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $$39 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0;
 var $44 = 0.0, $45 = 0, $46 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond38 = 0, $switch35 = 0, $switch37 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((8727|0),(1578|0),10118,(8743|0));
  // unreachable;
 }
 $4 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $5 = $4 & -2;
 $switch37 = ($5|0)==(2);
 if ($switch37) {
  $6 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  $7 = $6 & -2;
  $switch35 = ($7|0)==(2);
  if ($switch35) {
   $8 = ($4|0)==(2);
   $9 = ($6|0)==(2);
   $or$cond38 = $8 & $9;
   do {
    if ($or$cond38) {
     $10 = ((($0)) + 4|0);
     $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
     $12 = ((($1)) + 4|0);
     $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $14 = ($11|0)>($13|0);
     if ($14) {
      $$0 = 1;
     } else {
      $15 = ($11|0)<($13|0);
      $$ = $15 << 31 >> 31;
      return ($$|0);
     }
    } else {
     $16 = ($4|0)==(3);
     if ($16) {
      $17 = ($6|0)==(3);
      $18 = ((($0)) + 4|0);
      if ($17) {
       HEAP8[tempDoublePtr>>0]=HEAP8[$18>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$18+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$18+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$18+3>>0];$19 = +HEAPF32[tempDoublePtr>>2];
       $20 = ((($1)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$20>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$20+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$20+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$20+3>>0];$21 = +HEAPF32[tempDoublePtr>>2];
       $22 = $19 > $21;
       if ($22) {
        $$0 = 1;
        break;
       }
       $23 = $19 < $21;
       if (!($23)) {
        $$0 = 0;
        break;
       }
       $$0 = -1;
       break;
      } else {
       $28 = $18;
       label = 16;
      }
     } else {
      $24 = ((($0)) + 4|0);
      if ($8) {
       $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
       $26 = (+($25|0));
       $37 = $26;$39 = $24;
      } else {
       $28 = $24;
       label = 16;
      }
     }
     if ((label|0) == 16) {
      HEAP8[tempDoublePtr>>0]=HEAP8[$28>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$28+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$28+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$28+3>>0];$27 = +HEAPF32[tempDoublePtr>>2];
      $37 = $27;$39 = $28;
     }
     $29 = ((($1)) + 4|0);
     if ($9) {
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $31 = (+($30|0));
      $32 = (HEAP32[tempDoublePtr>>2]=$30,+HEAPF32[tempDoublePtr>>2]);
      $36 = $31;$43 = $30;$44 = $32;
     } else {
      HEAP8[tempDoublePtr>>0]=HEAP8[$29>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$29+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$29+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$29+3>>0];$33 = +HEAPF32[tempDoublePtr>>2];
      $34 = (HEAPF32[tempDoublePtr>>2]=$33,HEAP32[tempDoublePtr>>2]|0);
      $36 = $33;$43 = $34;$44 = $33;
     }
     $35 = $37 > $36;
     if ($35) {
      $$0 = 1;
     } else {
      if ($8) {
       $38 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
       $40 = (+($38|0));
       $46 = $40;
      } else {
       HEAP8[tempDoublePtr>>0]=HEAP8[$39>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$39+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$39+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$39+3>>0];$41 = +HEAPF32[tempDoublePtr>>2];
       $46 = $41;
      }
      $42 = (+($43|0));
      $$39 = $9 ? $42 : $44;
      $45 = $46 < $$39;
      if ($45) {
       $$0 = -1;
      } else {
       $$0 = 0;
      }
     }
    }
   } while(0);
   return ($$0|0);
  }
 }
 ___assert_fail((8760|0),(1578|0),10119,(8743|0));
 // unreachable;
 return (0)|0;
}
function __common_end_looping($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),11127,(8707|0));
  // unreachable;
 }
 $4 = (__skip_struct($0,$1,72,0,76)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (__skip_to($0,$1,0,22)|0);
  $$0 = $6;
 } else {
  $$0 = $4;
 }
 return ($$0|0);
}
function __common_keep_looping($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in$in = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond37 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),11143,(8686|0));
  // unreachable;
 }
 $6 = ((($0)) + 75|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$3>>2] = $8;
 $$0$in$in = $8;
 L4: while(1) {
  $$0 = HEAPU8[$$0$in$in>>0]|(HEAPU8[$$0$in$in+1>>0]<<8)|(HEAPU8[$$0$in$in+2>>0]<<16)|(HEAPU8[$$0$in$in+3>>0]<<24);
  $9 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
  $10 = ($9|0)==(8);
  if ($10) {
   $11 = ((($$0)) + 4|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ((($12)) + 4|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ($14|0)==(76|0);
   if ($15) {
    $$1 = 0;
    break;
   }
  }
  $16 = (__execute_statement($0,$3,0)|0);
  switch ($16|0) {
  case 102:  {
   label = 7;
   break L4;
   break;
  }
  case 101:  {
   label = 11;
   break L4;
   break;
  }
  case 0:  {
   break;
  }
  default: {
   $$1 = $16;
   break L4;
  }
  }
  $25 = HEAP32[$3>>2]|0;
  $26 = ($25|0)==(0|0);
  if ($26) {
   label = 14;
   break;
  } else {
   $$0$in$in = $25;
  }
 }
 do {
  if ((label|0) == 7) {
   $17 = ((($7)) + 16|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ($18|0)==(0|0);
   $20 = ($18|0)==($2|0);
   $or$cond37 = $19 | $20;
   if ($or$cond37) {
    HEAP8[$17>>0]=0&255;HEAP8[$17+1>>0]=(0>>8)&255;HEAP8[$17+2>>0]=(0>>16)&255;HEAP8[$17+3>>0]=0>>24;
    $$1 = 0;
    break;
   }
   $21 = (__skip_struct($0,$3,72,0,76)|0);
   $22 = ($21|0)==(0);
   if ($22) {
    (__skip_to($0,$3,0,22)|0);
    $$1 = 102;
   } else {
    $$1 = 102;
   }
  }
  else if ((label|0) == 11) {
   $23 = (__skip_struct($0,$3,72,0,76)|0);
   $24 = ($23|0)==(0);
   if ($24) {
    (__skip_to($0,$3,0,22)|0);
    $$1 = 101;
   } else {
    $$1 = 101;
   }
  }
  else if ((label|0) == 14) {
   $27 = ((($0)) + 67|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = (__set_current_error($0,41,$28)|0);
   $30 = ($29<<24>>24)==(0);
   if ($30) {
    $$1 = 0;
   } else {
    __set_error_pos($0,0,0,0);
    $$1 = 3;
   }
  }
 } while(0);
 $31 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $31;
 STACKTOP = sp;return ($$1|0);
}
function __is_ref($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 switch ($1|0) {
 case 16: case 13: case 11: case 10: case 7:  {
  $$0 = 1;
  break;
 }
 case 17:  {
  $2 = ((($0)) + 4|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($3)) + 58|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = ($5|0)==(2);
  $7 = $6&1;
  $$0 = $7;
  break;
 }
 default: {
  $$0 = 0;
 }
 }
 return ($$0|0);
}
function __skip_if_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$ph = 0, $$0$ph$be = 0, $$093$ph = 0, $$093$ph$be = 0, $$194 = 0, $$pr6 = 0, $$pr6$pre = 0, $$promoted = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond73 = 0, $or$cond74 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),11535,(8916|0));
  // unreachable;
 }
 $5 = HEAP32[$1>>2]|0;
 HEAP32[$2>>2] = $5;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $7 = ((($5)) + 4|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $$0$ph = 0;$$093$ph = 0;$$pr6 = $5;
   L7: while(1) {
    $10 = ($$093$ph|0)==(0);
    $11 = (($$093$ph) + -1)|0;
    $12 = 1 << $11;
    $13 = $12 & $$0$ph;
    $14 = ($13|0)==(0);
    $$promoted = HEAP32[$2>>2]|0;
    $15 = $$pr6;$17 = $$promoted;$39 = $$pr6;
    while(1) {
     $16 = ($15|0)==(0|0);
     if ($16) {
      label = 9;
      break L7;
     }
     $38 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     HEAP32[$1>>2] = $15;
     $40 = ((($15)) + 8|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ($41|0)==(0|0);
     if ($42) {
      label = 33;
      break;
     }
     $43 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $45 = ($44|0)==(8);
     if ($45) {
      $46 = ((($43)) + 4|0);
      $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $48 = ((($47)) + 4|0);
      $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      $50 = ($49|0)==(67|0);
      if ($50) {
       label = 18;
       break;
      }
     }
     if ($10) {
      label = 46;
      break;
     }
     $75 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $77 = ($76|0)==(8);
     if ($77) {
      $78 = ((($75)) + 4|0);
      $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
      $80 = ((($79)) + 4|0);
      $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
      $82 = ($81|0)==(68|0);
      if ($82) {
       label = 29;
       break;
      }
     }
     if (!($14)) {
      label = 35;
      break;
     }
     $95 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
     $97 = ($96|0)==(8);
     if ($97) {
      label = 38;
      break;
     } else {
      $15 = $41;$17 = $41;$39 = $41;
     }
    }
    do {
     if ((label|0) == 18) {
      label = 0;
      HEAP32[$2>>2] = $41;
      $51 = (__skip_single_line_struct($2,68)|0);
      $52 = ($51<<24>>24)==(0);
      if ($52) {
       $53 = (($$093$ph) + 1)|0;
       $54 = ($53>>>0)>(32);
       if ($54) {
        label = 20;
        break L7;
       } else {
        $$194 = $53;
        label = 47;
       }
      } else {
       $$194 = $$093$ph;
       label = 47;
      }
     }
     else if ((label|0) == 29) {
      label = 0;
      HEAP32[$2>>2] = $41;
      $83 = ((($41)) + 8|0);
      $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
      $85 = ($84|0)==(0|0);
      if (!($85)) {
       $86 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
       $87 = ($86|0)==(0|0);
       if (!($87)) {
        $88 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
        $89 = ($88|0)==(22);
        if ($89) {
         $$0$ph$be = $$0$ph;$$093$ph$be = $$093$ph;
         break;
        }
       }
      }
      $90 = $12 | $$0$ph;
      $$0$ph$be = $90;$$093$ph$be = $$093$ph;
     }
     else if ((label|0) == 33) {
      label = 0;
      HEAP32[$2>>2] = $41;
      $$194 = $$093$ph;
      label = 47;
     }
     else if ((label|0) == 35) {
      label = 0;
      HEAP32[$2>>2] = $41;
      $91 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
      $92 = ($91|0)==(0|0);
      if ($92) {
       $$0$ph$be = $$0$ph;$$093$ph$be = $$093$ph;
      } else {
       $93 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
       $94 = ($93|0)==(22);
       if ($94) {
        label = 39;
       } else {
        $$0$ph$be = $$0$ph;$$093$ph$be = $$093$ph;
       }
      }
     }
     else if ((label|0) == 38) {
      label = 0;
      HEAP32[$2>>2] = $41;
      $98 = ((($95)) + 4|0);
      $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
      $100 = ((($99)) + 4|0);
      $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
      $102 = ($101|0)==(71|0);
      if ($102) {
       label = 39;
      } else {
       $$0$ph$be = $$0$ph;$$093$ph$be = $$093$ph;
      }
     }
     else if ((label|0) == 46) {
      label = 0;
      HEAP32[$2>>2] = $41;
      $$194 = $$093$ph;
      label = 47;
     }
    } while(0);
    if ((label|0) == 39) {
     label = 0;
     $103 = ($$093$ph|0)<(1);
     if ($103) {
      label = 40;
      break;
     }
     $118 = ((($41)) + 8|0);
     $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
     HEAP32[$2>>2] = $119;
     $$194 = $11;
     label = 47;
    }
    if ((label|0) == 47) {
     label = 0;
     $120 = ($$194|0)==(0);
     if ($120) {
      $121 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $122 = ($121|0)==(8);
      if ($122) {
       $123 = ((($38)) + 4|0);
       $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
       $125 = ((($124)) + 4|0);
       $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
       $127 = ($126|0)==(69|0);
       $128 = ($126|0)==(70|0);
       $or$cond73 = $127 | $128;
       $129 = ($126|0)==(71|0);
       $or$cond74 = $or$cond73 | $129;
       if ($or$cond74) {
        break;
       } else {
        $$0$ph$be = $$0$ph;$$093$ph$be = 0;
       }
      } else {
       $$0$ph$be = $$0$ph;$$093$ph$be = 0;
      }
     } else {
      $$0$ph$be = $$0$ph;$$093$ph$be = $$194;
     }
    }
    $$pr6$pre = HEAP32[$2>>2]|0;
    $$0$ph = $$0$ph$be;$$093$ph = $$093$ph$be;$$pr6 = $$pr6$pre;
   }
   do {
    if ((label|0) == 9) {
     HEAP32[$2>>2] = $17;
     $18 = HEAP32[$1>>2]|0;
     $19 = ($18|0)==(0|0);
     if (!($19)) {
      $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
      $21 = ($20|0)==(0|0);
      if (!($21)) {
       $22 = ((($0)) + 67|0);
       $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
       $24 = (__set_current_error($0,10,$23)|0);
       $25 = ($24<<24>>24)==(0);
       if ($25) {
        break;
       }
       $26 = HEAP32[$1>>2]|0;
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       $28 = ((($27)) + 9|0);
       $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
       $30 = ((($27)) + 13|0);
       $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
       $32 = ((($27)) + 15|0);
       $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
       __set_error_pos($0,$29,$31,$33);
       break;
      }
     }
     $34 = ((($0)) + 67|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = (__set_current_error($0,10,$35)|0);
     $37 = ($36<<24>>24)==(0);
     if (!($37)) {
      __set_error_pos($0,0,0,0);
     }
    }
    else if ((label|0) == 20) {
     $55 = HEAP32[$1>>2]|0;
     $56 = ($55|0)==(0|0);
     if (!($56)) {
      $57 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $58 = ($57|0)==(0|0);
      if (!($58)) {
       $59 = ((($0)) + 67|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
       $61 = (__set_current_error($0,33,$60)|0);
       $62 = ($61<<24>>24)==(0);
       if ($62) {
        break;
       }
       $63 = HEAP32[$1>>2]|0;
       $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
       $65 = ((($64)) + 9|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
       $67 = ((($64)) + 13|0);
       $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8);
       $69 = ((($64)) + 15|0);
       $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
       __set_error_pos($0,$66,$68,$70);
       break;
      }
     }
     $71 = ((($0)) + 67|0);
     $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
     $73 = (__set_current_error($0,33,$72)|0);
     $74 = ($73<<24>>24)==(0);
     if (!($74)) {
      __set_error_pos($0,0,0,0);
     }
    }
    else if ((label|0) == 40) {
     $104 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $105 = ($104|0)==(0|0);
     $106 = ((($0)) + 67|0);
     $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
     $108 = (__set_current_error($0,25,$107)|0);
     $109 = ($108<<24>>24)==(0);
     if ($105) {
      if ($109) {
       break;
      }
      __set_error_pos($0,0,0,0);
      break;
     } else {
      if ($109) {
       break;
      }
      $110 = HEAP32[$1>>2]|0;
      $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
      $112 = ((($111)) + 9|0);
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
      $114 = ((($111)) + 13|0);
      $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8);
      $116 = ((($111)) + 15|0);
      $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8);
      __set_error_pos($0,$113,$115,$117);
      break;
     }
    }
   } while(0);
   STACKTOP = sp;return;
  }
 }
 ___assert_fail((8931|0),(1578|0),11538,(8916|0));
 // unreachable;
}
function _mb_get_last_error($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)==(0|0);
 if ($5) {
  $$0 = 0;
 } else {
  $6 = ((($0)) + 135|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
  $8 = ($1|0)==(0|0);
  if (!($8)) {
   $9 = ((($0)) + 139|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   HEAP32[$1>>2] = $10;
  }
  $11 = ($2|0)==(0|0);
  if (!($11)) {
   $12 = ((($0)) + 143|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   HEAP32[$2>>2] = $13;
  }
  $14 = ($3|0)==(0|0);
  if (!($14)) {
   $15 = ((($0)) + 147|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8);
   HEAP16[$3>>1] = $16;
  }
  $17 = ($4|0)==(0|0);
  if (!($17)) {
   $18 = ((($0)) + 149|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
   HEAP16[$4>>1] = $19;
  }
  $20 = ((($0)) + 139|0);
  HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
  $$0 = $7;
 }
 return ($$0|0);
}
function __pop_weak_scope($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),9363,(8948|0));
  // unreachable;
 }
 $3 = ($1|0)==(0|0);
 if (!($3)) {
  HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
 }
 return ($1|0);
}
function __pop_arg($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$0 = 0, $$036 = 0, $$037 = 0, $$1 = 0, $$sink38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = HEAP32[$1>>2]|0;
 $10 = ((($8)) + 4|0);
 HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
 HEAP8[$8>>0]=0&255;HEAP8[$8+1>>0]=(0>>8)&255;HEAP8[$8+2>>0]=(0>>16)&255;HEAP8[$8+3>>0]=0>>24;
 $11 = (__multiline_statement($0)|0);
 $12 = ($11<<24>>24)==(0);
 L1: do {
  if ($12) {
   $$1 = $9;
  } else {
   $$sink38 = $9;
   L2: while(1) {
    $13 = HEAPU8[$$sink38>>0]|(HEAPU8[$$sink38+1>>0]<<8)|(HEAPU8[$$sink38+2>>0]<<16)|(HEAPU8[$$sink38+3>>0]<<24);
    $$036 = $13;$$037 = $$sink38;
    while(1) {
     $14 = ($$036|0)==(0|0);
     if ($14) {
      $$1 = $$037;
      break L1;
     }
     $15 = HEAPU8[$$036>>0]|(HEAPU8[$$036+1>>0]<<8)|(HEAPU8[$$036+2>>0]<<16)|(HEAPU8[$$036+3>>0]<<24);
     $16 = ($15|0)==(22);
     if (!($16)) {
      $$1 = $$037;
      break L1;
     }
     $17 = ((($$037)) + 8|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = ($18|0)==(0|0);
     if ($19) {
      $$036 = 0;$$037 = 0;
     } else {
      $$sink38 = $18;
      continue L2;
     }
    }
   }
  }
 } while(0);
 $20 = ($$1|0)==(0|0);
 do {
  if ($20) {
   label = 14;
  } else {
   $21 = HEAPU8[$$1>>0]|(HEAPU8[$$1+1>>0]<<8)|(HEAPU8[$$1+2>>0]<<16)|(HEAPU8[$$1+3>>0]<<24);
   $22 = ($21|0)==(0|0);
   if ($22) {
    label = 14;
   } else {
    $23 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $24 = ($23|0)==(8);
    if ($24) {
     $25 = ((($21)) + 4|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ((($26)) + 4|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ($28|0)==(88|0);
     if ($29) {
      $30 = ($7|0)==(0|0);
      if ($30) {
       HEAP8[$8>>0]=1&255;HEAP8[$8+1>>0]=(1>>8)&255;HEAP8[$8+2>>0]=(1>>16)&255;HEAP8[$8+3>>0]=1>>24;
       $$0 = 0;
       break;
      }
      $31 = (__ls_popfront($7)|0);
      $32 = ($31|0)==(0|0);
      if ($32) {
       $$0 = 0;
      } else {
       (__internal_object_to_public_value($31,$8)|0);
       __destroy_object_capsule_only($31);
       $$0 = 0;
      }
     } else {
      label = 14;
     }
    } else {
     label = 14;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  $33 = (FUNCTION_TABLE_iiiiiiii[$6 & 255]($0,$1,$2,$3,$4,$5,$8)|0);
  $$0 = $33;
 }
 return ($$0|0);
}
function __mark_lazy_destroy_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = (__create_object()|0);
  HEAP8[$4>>0]=4&255;HEAP8[$4+1>>0]=(4>>8)&255;HEAP8[$4+2>>0]=(4>>16)&255;HEAP8[$4+3>>0]=4>>24;
  $5 = ((($4)) + 8|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = $6 & -2;
  HEAP8[$5>>0] = $7;
  $8 = ((($4)) + 4|0);
  HEAP8[$8>>0]=$1&255;HEAP8[$8+1>>0]=($1>>8)&255;HEAP8[$8+2>>0]=($1>>16)&255;HEAP8[$8+3>>0]=$1>>24;
  $9 = ((($0)) + 43|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  (__ls_pushback($10,$4)|0);
  return;
 } else {
  ___assert_fail((8997|0),(1578|0),10613,(9005|0));
  // unreachable;
 }
}
function __core_args($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$071 = 0, $$5 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16497,(8973|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$071 = 0;
 } else {
  $8 = ((($6)) + 8|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $$071 = $9;
 }
 HEAP32[$1>>2] = $$071;
 $10 = ((($0)) + 84|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)==(0|0);
 do {
  if ($12) {
   label = 23;
  } else {
   $13 = (__ls_popfront($11)|0);
   $14 = ($13|0)==(0|0);
   if ($14) {
    label = 23;
   } else {
    $15 = ((($2)) + 4|0);
    HEAP32[$15>>2] = 0;
    HEAP32[$2>>2] = 0;
    (__internal_object_to_public_value($13,$2)|0);
    ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
    $16 = (_mb_push_value($0,$1,$$byval_copy)|0);
    $17 = ($16|0)==(0);
    if (!($17)) {
     $$5 = $16;
     break;
    }
    $18 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    L13: do {
     switch ($18|0) {
     case 7:  {
      $19 = ((($13)) + 4|0);
      $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
      __unref($20,$20);
      break;
     }
     case 10:  {
      $21 = ((($13)) + 8|0);
      $22 = HEAP8[$21>>0]|0;
      $23 = $22 & 1;
      $24 = ($23<<24>>24)==(0);
      if ($24) {
       $25 = ((($13)) + 4|0);
       $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
       __unref($26,$26);
      }
      break;
     }
     case 11:  {
      $27 = ((($13)) + 4|0);
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      __unref($28,$28);
      break;
     }
     case 13:  {
      $29 = ((($13)) + 4|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      __unref($30,$30);
      break;
     }
     case 16:  {
      $31 = ((($13)) + 8|0);
      $32 = HEAP8[$31>>0]|0;
      $33 = $32 & 1;
      $34 = ($33<<24>>24)==(0);
      if ($34) {
       $35 = ((($13)) + 4|0);
       $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
       __unref($36,$36);
      }
      break;
     }
     case 17:  {
      $37 = ((($13)) + 8|0);
      $38 = HEAP8[$37>>0]|0;
      $39 = $38 & 1;
      $40 = ($39<<24>>24)==(0);
      if ($40) {
       $41 = ((($13)) + 4|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = ((($42)) + 58|0);
       $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
       $45 = ($44|0)==(2);
       if ($45) {
        __unref($42,$42);
        break L13;
       }
       $46 = ((($13)) + 4|0);
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       $48 = ((($47)) + 58|0);
       $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
       $50 = ($49|0)==(2);
       if (!($50)) {
        __destroy_routine(0,$47);
       }
      }
      break;
     }
     default: {
     }
     }
    } while(0);
    __destroy_object_capsule_only($13);
    label = 24;
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $51 = ((($3)) + 4|0);
  HEAP32[$51>>2] = 0;
  HEAP32[$3>>2] = 1;
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  $52 = (_mb_push_value($0,$1,$$byval_copy1)|0);
  $53 = ($52|0)==(0);
  if ($53) {
   label = 24;
  } else {
   $$5 = $52;
  }
 }
 if ((label|0) == 24) {
  $$5 = 0;
 }
 STACKTOP = sp;return ($$5|0);
}
function __ls_popfront($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1847|0),(1578|0),2471,(8984|0));
  // unreachable;
 }
 $2 = (__ls_front($0)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ((($2)) + 8|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ((($0)) + 8|0);
  HEAP8[$7>>0]=$6&255;HEAP8[$7+1>>0]=($6>>8)&255;HEAP8[$7+2>>0]=($6>>16)&255;HEAP8[$7+3>>0]=$6>>24;
  $8 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $10 = ((($8)) + 4|0);
   HEAP8[$10>>0]=$0&255;HEAP8[$10+1>>0]=($0>>8)&255;HEAP8[$10+2>>0]=($0>>16)&255;HEAP8[$10+3>>0]=$0>>24;
  }
  $11 = ($6|0)==(0);
  if ($11) {
   $12 = ((($0)) + 4|0);
   HEAP8[$12>>0]=0&255;HEAP8[$12+1>>0]=(0>>8)&255;HEAP8[$12+2>>0]=(0>>16)&255;HEAP8[$12+3>>0]=0>>24;
  }
  HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
  $13 = ((($2)) + 4|0);
  HEAP8[$13>>0]=0&255;HEAP8[$13+1>>0]=(0>>8)&255;HEAP8[$13+2>>0]=(0>>16)&255;HEAP8[$13+3>>0]=0>>24;
  _mb_free($2);
  $14 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  $15 = ((($14)) + -1|0);
  HEAP8[$0>>0]=$15&255;HEAP8[$0+1>>0]=($15>>8)&255;HEAP8[$0+2>>0]=($15>>16)&255;HEAP8[$0+3>>0]=$15>>24;
  $$0 = $4;
 }
 return ($$0|0);
}
function __ls_front($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 return ($2|0);
}
function __push_weak_scope_by_routine($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1649|0),(1578|0),9320,(9035|0));
  // unreachable;
 }
 $4 = (__find_scope($0,$1)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = $1;
 } else {
  $6 = (__reference_scope_by_routine($0,$1,$2)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)==(0|0);
 if (!($7)) {
  $8 = ((($0)) + 75|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  HEAP8[$$0>>0]=$9&255;HEAP8[$$0+1>>0]=($9>>8)&255;HEAP8[$$0+2>>0]=($9>>16)&255;HEAP8[$$0+3>>0]=$9>>24;
 }
 return ($$0|0);
}
function __reference_scope_by_routine($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$0$in43 = 0, $$042 = 0, $$044 = 0, $$045 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((4191|0),(1578|0),9302,(9063|0));
  // unreachable;
 }
 $5 = ((($1)) + 4|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)==(2);
 if ($7) {
  $8 = ((($1)) + 12|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $$042 = $9;
 } else {
  $$042 = $1;
 }
 $10 = (__create_running_context(0)|0);
 $11 = ((($10)) + 4|0);
 HEAP8[$11>>0]=2&255;HEAP8[$11+1>>0]=(2>>8)&255;HEAP8[$11+2>>0]=(2>>16)&255;HEAP8[$11+3>>0]=2>>24;
 $12 = ((($10)) + 12|0);
 HEAP8[$12>>0]=$$042&255;HEAP8[$12+1>>0]=($$042>>8)&255;HEAP8[$12+2>>0]=($$042>>16)&255;HEAP8[$12+3>>0]=$$042>>24;
 $13 = ($2|0)==(0|0);
 if (!($13)) {
  $14 = ((($2)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(0|0);
  if (!($16)) {
   $17 = (__ht_create(119,120,0)|0);
   $18 = ((($10)) + 8|0);
   HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
   $19 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $20 = ($19|0)==(0|0);
   if ($20) {
    ___assert_fail((9091|0),(1578|0),9312,(9063|0));
    // unreachable;
   }
   $$0$in43 = ((($19)) + 8|0);
   $$044 = HEAPU8[$$0$in43>>0]|(HEAPU8[$$0$in43+1>>0]<<8)|(HEAPU8[$$0$in43+2>>0]<<16)|(HEAPU8[$$0$in43+3>>0]<<24);
   $21 = ($$044|0)==(0|0);
   if (!($21)) {
    $$045 = $$044;
    while(1) {
     $22 = HEAPU8[$$045>>0]|(HEAPU8[$$045+1>>0]<<8)|(HEAPU8[$$045+2>>0]<<16)|(HEAPU8[$$045+3>>0]<<24);
     (__duplicate_parameter($22,$10)|0);
     $$0$in = ((($$045)) + 8|0);
     $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
     $23 = ($$0|0)==(0|0);
     if ($23) {
      break;
     } else {
      $$045 = $$0;
     }
    }
   }
  }
 }
 return ($10|0);
}
function __push_scope_by_routine($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),9332,(9137|0));
  // unreachable;
 }
 $3 = (__find_scope($0,$1)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = $1;
 } else {
  $5 = (__reference_scope_by_routine($0,$1,0)|0);
  $$0 = $5;
 }
 $6 = ($$0|0)==(0|0);
 $$phi$trans$insert = ((($0)) + 75|0);
 if ($6) {
  $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
  $8 = $$pre;
 } else {
  $7 = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
  HEAP8[$$0>>0]=$7&255;HEAP8[$$0+1>>0]=($7>>8)&255;HEAP8[$$0+2>>0]=($7>>16)&255;HEAP8[$$0+3>>0]=$7>>24;
  HEAP8[$$phi$trans$insert>>0]=$$0&255;HEAP8[$$phi$trans$insert+1>>0]=($$0>>8)&255;HEAP8[$$phi$trans$insert+2>>0]=($$0>>16)&255;HEAP8[$$phi$trans$insert+3>>0]=$$0>>24;
  $8 = $$0;
 }
 return ($8|0);
}
function __destroy_edge_objects($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = ((($0)) + 39|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  (__ls_foreach($3,135)|0);
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  __ls_clear($4);
 }
 return;
}
function __mark_edge_destroy_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = (__create_object()|0);
  HEAP8[$4>>0]=4&255;HEAP8[$4+1>>0]=(4>>8)&255;HEAP8[$4+2>>0]=(4>>16)&255;HEAP8[$4+3>>0]=4>>24;
  $5 = ((($4)) + 8|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = $6 & -2;
  HEAP8[$5>>0] = $7;
  $8 = ((($4)) + 4|0);
  HEAP8[$8>>0]=$1&255;HEAP8[$8+1>>0]=($1>>8)&255;HEAP8[$8+2>>0]=($1>>16)&255;HEAP8[$8+3>>0]=$1>>24;
  $9 = ((($0)) + 39|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  (__ls_pushback($10,$4)|0);
  return;
 } else {
  ___assert_fail((8997|0),(1578|0),10592,(9188|0));
  // unreachable;
 }
}
function __copy_list_to_array($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  $6 = ((($2)) + 4|0);
  HEAP32[$6>>2] = 0;
  HEAP32[$2>>2] = 0;
  (__internal_object_to_public_value($0,$2)|0);
  $7 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  HEAP32[$3>>2] = $7;
  $8 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  $9 = ((($1)) + 4|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ((($1)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = (($12) + 1)|0;
  HEAP8[$11>>0]=$13&255;HEAP8[$11+1>>0]=($13>>8)&255;HEAP8[$11+2>>0]=($13>>16)&255;HEAP8[$11+3>>0]=$13>>24;
  (__set_array_elem($8,0,$10,$12,$6,$3)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3160|0),(1578|0),8206,(9266|0));
  // unreachable;
 }
}
function __clear_list($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((4391|0),(1578|0),7913,(9322|0));
  // unreachable;
 }
 $2 = ((($0)) + 35|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  _mb_free($3);
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 }
 $5 = ((($0)) + 19|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 (__ls_foreach($6,135)|0);
 $7 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 __ls_clear($7);
 $8 = ((($0)) + 31|0);
 HEAP8[$8>>0]=0&255;HEAP8[$8+1>>0]=(0>>8)&255;HEAP8[$8+2>>0]=(0>>16)&255;HEAP8[$8+3>>0]=0>>24;
 $9 = ((($0)) + 17|0);
 __write_on_ref_object($9);
 __invalidate_list_cache($0);
 return;
}
function __clear_dict($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((4391|0),(1578|0),8052,(9310|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 19|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  __ht_foreach($3,144);
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  __ht_clear($4);
  $5 = ((($0)) + 17|0);
  __write_on_ref_object($5);
  return;
 }
}
function __remove_at_list($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4391|0),(1578|0),7784,(9372|0));
  // unreachable;
 }
 __fill_ranged($0);
 $3 = (__node_at_list($0,$1)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
 } else {
  $5 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $6 = ($5|0)==(0|0);
  if ($6) {
   $$0 = 0;
  } else {
   $7 = ((($0)) + 19|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   __ls_remove($8,$3,135);
   $9 = ((($0)) + 31|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = (($10) + -1)|0;
   HEAP8[$9>>0]=$11&255;HEAP8[$9+1>>0]=($11>>8)&255;HEAP8[$9+2>>0]=($11>>16)&255;HEAP8[$9+3>>0]=$11>>24;
   $12 = ((($0)) + 17|0);
   __write_on_ref_object($12);
   __invalidate_list_cache($0);
   $$0 = 1;
  }
 }
 return ($$0|0);
}
function __remove_dict($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((9347|0),(1578|0),8001,(9359|0));
  // unreachable;
 }
 __create_internal_object_from_public_value($1,$2);
 $5 = ((($0)) + 13|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = HEAP32[$2>>2]|0;
 $8 = (__try_purge_it($6,$1,$7)|0);
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  $11 = ((($0)) + 19|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = HEAP32[$2>>2]|0;
  $14 = (__ht_find($12,$13)|0);
  $15 = ($14|0)==(0|0);
  if ($15) {
   $$0 = 0;
  } else {
   $16 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $17 = ($16|0)==(0|0);
   if ($17) {
    $$0 = 0;
   } else {
    $18 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    $19 = HEAP32[$2>>2]|0;
    (__ht_remove($18,$19,147)|0);
    $20 = HEAP32[$2>>2]|0;
    (__destroy_object($20,0)|0);
    $21 = ((($0)) + 17|0);
    __write_on_ref_object($21);
    $$0 = 1;
   }
  }
 } else {
  $10 = HEAP32[$2>>2]|0;
  __destroy_object_capsule_only($10);
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ls_remove($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((9388|0),(1578|0),2518,(9401|0));
  // unreachable;
 }
 $5 = ((($1)) + 4|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 $8 = $6;
 $$pre = ((($1)) + 8|0);
 if (!($7)) {
  $9 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8)|(HEAPU8[$$pre+2>>0]<<16)|(HEAPU8[$$pre+3>>0]<<24);
  $10 = ((($6)) + 8|0);
  HEAP8[$10>>0]=$9&255;HEAP8[$10+1>>0]=($9>>8)&255;HEAP8[$10+2>>0]=($9>>16)&255;HEAP8[$10+3>>0]=$9>>24;
 }
 $11 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8)|(HEAPU8[$$pre+2>>0]<<16)|(HEAPU8[$$pre+3>>0]<<24);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 4|0);
  HEAP8[$13>>0]=$8&255;HEAP8[$13+1>>0]=($8>>8)&255;HEAP8[$13+2>>0]=($8>>16)&255;HEAP8[$13+3>>0]=$8>>24;
 }
 $14 = ((($0)) + 4|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==($1|0);
 if ($16) {
  $17 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  HEAP8[$14>>0]=$17&255;HEAP8[$14+1>>0]=($17>>8)&255;HEAP8[$14+2>>0]=($17>>16)&255;HEAP8[$14+3>>0]=$17>>24;
  $18 = $17;
  $19 = $18;
 } else {
  $19 = $15;
 }
 $20 = ($19|0)==($0|0);
 if ($20) {
  HEAP8[$14>>0]=0&255;HEAP8[$14+1>>0]=(0>>8)&255;HEAP8[$14+2>>0]=(0>>16)&255;HEAP8[$14+3>>0]=0>>24;
 }
 $21 = ($2|0)==(0|0);
 if (!($21)) {
  $22 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  $23 = ((($1)) + 12|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  (FUNCTION_TABLE_iii[$2 & 255]($22,$24)|0);
 }
 _mb_free($1);
 $25 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $26 = ((($25)) + -1|0);
 HEAP8[$0>>0]=$26&255;HEAP8[$0+1>>0]=($26>>8)&255;HEAP8[$0+2>>0]=($26>>16)&255;HEAP8[$0+3>>0]=$26>>24;
 return;
}
function __find_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  __fill_ranged($0);
  __create_internal_object_from_public_value($1,$3);
  $6 = ((($0)) + 19|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = HEAP32[$3>>2]|0;
  $9 = (__ls_find($7,$8,142,$2)|0);
  $10 = ($9|0)!=(0|0);
  $11 = $10&1;
  $12 = HEAP32[$3>>2]|0;
  (__destroy_object($12,0)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((8095|0),(1578|0),7900,(9427|0));
  // unreachable;
 }
 return (0)|0;
}
function __sort_list($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((4391|0),(1578|0),7927,(9462|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 19|0);
  __ls_sort($2);
  $3 = ((($0)) + 17|0);
  __write_on_ref_object($3);
  __invalidate_list_cache($0);
  return;
 }
}
function __ls_sort($0) {
 $0 = $0|0;
 var $$01065 = 0, $$0107 = 0, $$011312 = 0, $$0114 = 0, $$0116$lcssa19 = 0, $$011611 = 0, $$0118 = 0, $$01193 = 0, $$012410 = 0, $$1 = 0, $$1108 = 0, $$1117 = 0, $$1125 = 0, $$2$lcssa20 = 0, $$2111 = 0, $$2126 = 0, $$213 = 0, $$3 = 0, $$3112 = 0, $$3122 = 0;
 var $$4 = 0, $$4123 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 8|0);
   $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
   $6 = ($5|0)==(0|0);
   if (!($6)) {
    $$0114 = 1;$$1 = $5;
    while(1) {
     $7 = ($$1|0)==(0|0);
     if ($7) {
      label = 6;
      break;
     }
     $8 = ($$0114|0)>(0);
     $$011312 = 0;$$011611 = 0;$$012410 = $$1;$$213 = 0;
     while(1) {
      $10 = (($$011312) + 1)|0;
      L10: do {
       if ($8) {
        $$01065 = 0;$$01193 = $$012410;
        while(1) {
         $11 = (($$01065) + 1)|0;
         $13 = ((($$01193)) + 8|0);
         $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
         $15 = ($14|0)==(0|0);
         if ($15) {
          $$0107 = $$0114;$$1117 = $$011611;$$1125 = $$012410;$$2111 = $11;$$3 = $$213;$$3122 = 0;
          break L10;
         }
         $12 = ($11|0)<($$0114|0);
         if ($12) {
          $$01065 = $11;$$01193 = $14;
         } else {
          $$0107 = $$0114;$$1117 = $$011611;$$1125 = $$012410;$$2111 = $11;$$3 = $$213;$$3122 = $14;
          break;
         }
        }
       } else {
        $$0107 = $$0114;$$1117 = $$011611;$$1125 = $$012410;$$2111 = 0;$$3 = $$213;$$3122 = $$012410;
       }
      } while(0);
      while(1) {
       $16 = ($$2111|0)>(0);
       if ($16) {
        label = 16;
       } else {
        $17 = ($$0107|0)>(0);
        $18 = ($$3122|0)!=(0|0);
        $19 = $18 & $17;
        if (!($19)) {
         break;
        }
        $20 = ($$2111|0)==(0);
        if ($20) {
         $21 = ((($$3122)) + 8|0);
         $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
         $23 = (($$0107) + -1)|0;
         $$0118 = $$3122;$$1108 = $23;$$2126 = $$1125;$$3112 = 0;$$4123 = $22;
        } else {
         label = 16;
        }
       }
       do {
        if ((label|0) == 16) {
         label = 0;
         $24 = ($$0107|0)!=(0);
         $25 = ($$3122|0)!=(0|0);
         $or$cond3 = $25 & $24;
         if (!($or$cond3)) {
          $26 = ((($$1125)) + 8|0);
          $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
          $28 = (($$2111) + -1)|0;
          $$0118 = $$1125;$$1108 = $$0107;$$2126 = $27;$$3112 = $28;$$4123 = $$3122;
          break;
         }
         $29 = HEAPU8[$$1125>>0]|(HEAPU8[$$1125+1>>0]<<8)|(HEAPU8[$$1125+2>>0]<<16)|(HEAPU8[$$1125+3>>0]<<24);
         $30 = HEAPU8[$$3122>>0]|(HEAPU8[$$3122+1>>0]<<8)|(HEAPU8[$$3122+2>>0]<<16)|(HEAPU8[$$3122+3>>0]<<24);
         $31 = (__ht_cmp_object($29,$30)|0);
         $32 = ($31|0)<(1);
         if ($32) {
          $33 = ((($$1125)) + 8|0);
          $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
          $35 = (($$2111) + -1)|0;
          $$0118 = $$1125;$$1108 = $$0107;$$2126 = $34;$$3112 = $35;$$4123 = $$3122;
          break;
         } else {
          $36 = ((($$3122)) + 8|0);
          $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
          $38 = (($$0107) + -1)|0;
          $$0118 = $$3122;$$1108 = $38;$$2126 = $$1125;$$3112 = $$2111;$$4123 = $37;
          break;
         }
        }
       } while(0);
       $39 = ($$1117|0)==(0|0);
       if ($39) {
        $$4 = $$0118;
       } else {
        $40 = ((($$1117)) + 8|0);
        HEAP8[$40>>0]=$$0118&255;HEAP8[$40+1>>0]=($$0118>>8)&255;HEAP8[$40+2>>0]=($$0118>>16)&255;HEAP8[$40+3>>0]=$$0118>>24;
        $$4 = $$3;
       }
       $41 = ((($$0118)) + 4|0);
       HEAP8[$41>>0]=$$1117&255;HEAP8[$41+1>>0]=($$1117>>8)&255;HEAP8[$41+2>>0]=($$1117>>16)&255;HEAP8[$41+3>>0]=$$1117>>24;
       $$0107 = $$1108;$$1117 = $$0118;$$1125 = $$2126;$$2111 = $$3112;$$3 = $$4;$$3122 = $$4123;
      }
      $9 = ($$3122|0)==(0|0);
      if ($9) {
       break;
      } else {
       $$011312 = $10;$$011611 = $$1117;$$012410 = $$3122;$$213 = $$3;
      }
     }
     $42 = ((($$1117)) + 8|0);
     HEAP8[$42>>0]=0&255;HEAP8[$42+1>>0]=(0>>8)&255;HEAP8[$42+2>>0]=(0>>16)&255;HEAP8[$42+3>>0]=0>>24;
     $43 = ($$011312|0)<(1);
     $44 = $$0114 << 1;
     if ($43) {
      $$0116$lcssa19 = $$1117;$$2$lcssa20 = $$3;
      break;
     } else {
      $$0114 = $44;$$1 = $$3;
     }
    }
    if ((label|0) == 6) {
     HEAP32[(8)>>2] = 0;
     $$0116$lcssa19 = 0;$$2$lcssa20 = 0;
    }
    $45 = HEAP32[$0>>2]|0;
    $46 = ((($45)) + 8|0);
    HEAP8[$46>>0]=$$2$lcssa20&255;HEAP8[$46+1>>0]=($$2$lcssa20>>8)&255;HEAP8[$46+2>>0]=($$2$lcssa20>>16)&255;HEAP8[$46+3>>0]=$$2$lcssa20>>24;
    $47 = HEAP32[$0>>2]|0;
    $48 = ((($47)) + 4|0);
    HEAP8[$48>>0]=$$0116$lcssa19&255;HEAP8[$48+1>>0]=($$0116$lcssa19>>8)&255;HEAP8[$48+2>>0]=($$0116$lcssa19>>16)&255;HEAP8[$48+3>>0]=$$0116$lcssa19>>24;
    $49 = HEAP32[$0>>2]|0;
    $50 = ((($$2$lcssa20)) + 4|0);
    HEAP8[$50>>0]=$49&255;HEAP8[$50+1>>0]=($49>>8)&255;HEAP8[$50+2>>0]=($49>>16)&255;HEAP8[$50+3>>0]=$49>>24;
   }
   return;
  }
 }
 ___assert_fail((9473|0),(1578|0),2602,(9494|0));
 // unreachable;
}
function __insert_list($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($2|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((8095|0),(1578|0),7723,(9516|0));
  // unreachable;
 }
 $7 = ((($0)) + 13|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($3|0)!=(0|0);
 if ($9) {
  $10 = HEAP32[$3>>2]|0;
  $11 = $10;
 } else {
  $11 = 0;
 }
 $12 = (__try_purge_it($8,$2,$11)|0);
 $13 = ($12<<24>>24)==(0);
 if ($13) {
  __fill_ranged($0);
  __create_internal_object_from_public_value($2,$4);
  $14 = HEAP32[$4>>2]|0;
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(17);
  $17 = $14;
  if ($16) {
   $18 = ((($14)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ((($19)) + 58|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ($21|0)==(2);
   if (!($22)) {
    $23 = ((($14)) + 8|0);
    $24 = HEAP8[$23>>0]|0;
    $25 = $24 | 1;
    HEAP8[$23>>0] = $25;
   }
  }
  if ($9) {
   HEAP32[$3>>2] = $17;
  }
  $26 = ((($0)) + 19|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = (__ls_insert_at($27,$1,$14)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   $$0 = 0;
  } else {
   $30 = ((($0)) + 31|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = (($31) + 1)|0;
   HEAP8[$30>>0]=$32&255;HEAP8[$30+1>>0]=($32>>8)&255;HEAP8[$30+2>>0]=($32>>16)&255;HEAP8[$30+3>>0]=$32>>24;
   $33 = ((($0)) + 17|0);
   __write_on_ref_object($33);
   __invalidate_list_cache($0);
   $$0 = 1;
  }
 } else {
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ls_insert_at($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$024 = 0, $$025 = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1847|0),(1578|0),2493,(9529|0));
  // unreachable;
 } else {
  $$025 = $1;$$pn = $0;
 }
 while(1) {
  $$0$in = ((($$pn)) + 8|0);
  $$0 = HEAPU8[$$0$in>>0]|(HEAPU8[$$0$in+1>>0]<<8)|(HEAPU8[$$0$in+2>>0]<<16)|(HEAPU8[$$0$in+3>>0]<<24);
  $4 = ($$0|0)!=(0|0);
  $5 = ($$025|0)!=(0);
  $6 = $5 & $4;
  $7 = (($$025) + -1)|0;
  if ($6) {
   $$025 = $7;$$pn = $$0;
  } else {
   break;
  }
 }
 if ($4) {
  $10 = (__ls_create_node($2)|0);
  $11 = ((($$0)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 8|0);
  HEAP8[$13>>0]=$10&255;HEAP8[$13+1>>0]=($10>>8)&255;HEAP8[$13+2>>0]=($10>>16)&255;HEAP8[$13+3>>0]=$10>>24;
  $14 = $12;
  $15 = ((($10)) + 4|0);
  HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
  $16 = ((($10)) + 8|0);
  HEAP8[$16>>0]=$$0&255;HEAP8[$16+1>>0]=($$0>>8)&255;HEAP8[$16+2>>0]=($$0>>16)&255;HEAP8[$16+3>>0]=$$0>>24;
  HEAP8[$11>>0]=$10&255;HEAP8[$11+1>>0]=($10>>8)&255;HEAP8[$11+2>>0]=($10>>16)&255;HEAP8[$11+3>>0]=$10>>24;
  $$024 = $10;
 } else {
  $8 = ($$025|0)==(0);
  if ($8) {
   $9 = (__ls_pushback($0,$2)|0);
   $$024 = $9;
  } else {
   $$024 = 0;
  }
 }
 $17 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $18 = ((($17)) + 1|0);
 HEAP8[$0>>0]=$18&255;HEAP8[$0+1>>0]=($18>>8)&255;HEAP8[$0+2>>0]=($18>>16)&255;HEAP8[$0+3>>0]=$18>>24;
 return ($$024|0);
}
function __pop_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if (!($or$cond5)) {
  ___assert_fail((9564|0),(1578|0),7695,(9581|0));
  // unreachable;
 }
 __fill_ranged($0);
 $6 = ((($0)) + 19|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (__ls_popback($7)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $18 = ((($1)) + 4|0);
  HEAP8[$18>>0]=0&255;HEAP8[$18+1>>0]=(0>>8)&255;HEAP8[$18+2>>0]=(0>>16)&255;HEAP8[$18+3>>0]=0>>24;
  HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
  $$0 = 0;
 } else {
  (__internal_object_to_public_value($8,$1)|0);
  __destroy_object_capsule_only($8);
  $10 = ((($0)) + 31|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = (($11) + -1)|0;
  HEAP8[$10>>0]=$12&255;HEAP8[$10+1>>0]=($12>>8)&255;HEAP8[$10+2>>0]=($12>>16)&255;HEAP8[$10+3>>0]=$12>>24;
  $13 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  $14 = ($13|0)==(8);
  if ($14) {
   $15 = ((($1)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   __mark_lazy_destroy_string($2,$16);
  }
  $17 = ((($0)) + 17|0);
  __write_on_ref_object($17);
  __invalidate_list_cache($0);
  $$0 = 1;
 }
 return ($$0|0);
}
function __std_abs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ispos = 0, $neg = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17017,(10959|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $ispos = ($13|0)>(-1);
      $neg = (0 - ($13))|0;
      $14 = $ispos ? $13 : $neg;
      HEAP32[$5>>2] = $14;
      $$042 = 0;
      break L4;
      break;
     }
     case 4:  {
      $15 = +HEAPF32[$5>>2];
      $16 = (+Math_abs((+$15)));
      HEAPF32[$5>>2] = $16;
      $$042 = 0;
      break L4;
      break;
     }
     default: {
      $17 = HEAP32[$1>>2]|0;
      $18 = ($17|0)==(0|0);
      if (!($18)) {
       $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
       $20 = ($19|0)==(0|0);
       if (!($20)) {
        $21 = ((($0)) + 67|0);
        $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
        $23 = (__set_current_error($0,16,$22)|0);
        $24 = ($23<<24>>24)==(0);
        if ($24) {
         $$042 = 0;
         break L4;
        }
        $25 = HEAP32[$1>>2]|0;
        $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
        $27 = ((($26)) + 9|0);
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
        $29 = ((($26)) + 13|0);
        $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
        $31 = ((($26)) + 15|0);
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
        __set_error_pos($0,$28,$30,$32);
        $$042 = 0;
        break L4;
       }
      }
      $33 = ((($0)) + 67|0);
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
      $35 = (__set_current_error($0,16,$34)|0);
      $36 = ($35<<24>>24)==(0);
      if ($36) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $37 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $38 = ($37|0)==(0);
 $$1 = $38 ? $$042 : $37;
 STACKTOP = sp;return ($$1|0);
}
function __std_sgn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17053,(10950|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = ($13|0)==(0);
      $15 = ($13|0)>(0);
      $16 = $15 ? 1 : -1;
      $17 = $14 ? 0 : $16;
      HEAP32[$5>>2] = $17;
      $43 = $17;
      break;
     }
     case 4:  {
      $18 = +HEAPF32[$5>>2];
      $19 = $18 != 0.0;
      $20 = $18 > 0.0;
      $21 = $20 ? 1 : -1;
      $22 = $19 ? $21 : 0;
      HEAP32[$5>>2] = $22;
      HEAP32[$2>>2] = 2;
      $43 = $22;
      break;
     }
     default: {
      $23 = HEAP32[$1>>2]|0;
      $24 = ($23|0)==(0|0);
      if (!($24)) {
       $25 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $26 = ($25|0)==(0|0);
       if (!($26)) {
        $27 = ((($0)) + 67|0);
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
        $29 = (__set_current_error($0,16,$28)|0);
        $30 = ($29<<24>>24)==(0);
        if ($30) {
         $$0 = 0;
         break L4;
        }
        $31 = HEAP32[$1>>2]|0;
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
        $33 = ((($32)) + 9|0);
        $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
        $35 = ((($32)) + 13|0);
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
        $37 = ((($32)) + 15|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
        __set_error_pos($0,$34,$36,$38);
        $$0 = 0;
        break L4;
       }
      }
      $39 = ((($0)) + 67|0);
      $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
      $41 = (__set_current_error($0,16,$40)|0);
      $42 = ($41<<24>>24)==(0);
      if ($42) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 0;
      break L4;
     }
     }
     $44 = (_mb_push_int($0,$1,$43)|0);
     $$0 = $44;
    } else {
     $$0 = $10;
    }
   } else {
    $$0 = $8;
   }
  } else {
   $$0 = $6;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_sqr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $sqrtf = 0.0, $sqrtf43 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17091,(10941|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $sqrtf43 = (+Math_sqrt((+$14)));
      HEAPF32[$5>>2] = $sqrtf43;
      HEAP32[$2>>2] = 4;
      $37 = $sqrtf43;
      break;
     }
     case 4:  {
      $35 = +HEAPF32[$5>>2];
      $sqrtf = (+Math_sqrt((+$35)));
      HEAPF32[$5>>2] = $sqrtf;
      $37 = $sqrtf;
      break;
     }
     default: {
      $15 = HEAP32[$1>>2]|0;
      $16 = ($15|0)==(0|0);
      if (!($16)) {
       $17 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
       $18 = ($17|0)==(0|0);
       if (!($18)) {
        $19 = ((($0)) + 67|0);
        $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
        $21 = (__set_current_error($0,16,$20)|0);
        $22 = ($21<<24>>24)==(0);
        if ($22) {
         $$042 = 0;
         break L4;
        }
        $23 = HEAP32[$1>>2]|0;
        $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
        $25 = ((($24)) + 9|0);
        $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
        $27 = ((($24)) + 13|0);
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
        $29 = ((($24)) + 15|0);
        $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
        __set_error_pos($0,$26,$28,$30);
        $$042 = 0;
        break L4;
       }
      }
      $31 = ((($0)) + 67|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
      $33 = (__set_current_error($0,16,$32)|0);
      $34 = ($33<<24>>24)==(0);
      if ($34) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $36 = (~~(($37)));
     $38 = (+($36|0));
     $39 = $37 == $38;
     if ($39) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $36;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $40 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $41 = ($40|0)==(0);
 $$1 = $41 ? $$042 : $40;
 STACKTOP = sp;return ($$1|0);
}
function __std_floor($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17114,(10930|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $$pre = HEAP32[$5>>2]|0;
      $36 = $$pre;
      break;
     }
     case 4:  {
      $13 = +HEAPF32[$5>>2];
      $14 = (+Math_floor((+$13)));
      $15 = (~~(($14)));
      HEAP32[$5>>2] = $15;
      HEAP32[$2>>2] = 2;
      $36 = $15;
      break;
     }
     default: {
      $16 = HEAP32[$1>>2]|0;
      $17 = ($16|0)==(0|0);
      if (!($17)) {
       $18 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
       $19 = ($18|0)==(0|0);
       if (!($19)) {
        $20 = ((($0)) + 67|0);
        $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
        $22 = (__set_current_error($0,16,$21)|0);
        $23 = ($22<<24>>24)==(0);
        if ($23) {
         $$0 = 0;
         break L4;
        }
        $24 = HEAP32[$1>>2]|0;
        $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $26 = ((($25)) + 9|0);
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($25)) + 13|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
        $30 = ((($25)) + 15|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        __set_error_pos($0,$27,$29,$31);
        $$0 = 0;
        break L4;
       }
      }
      $32 = ((($0)) + 67|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $34 = (__set_current_error($0,16,$33)|0);
      $35 = ($34<<24>>24)==(0);
      if ($35) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 0;
      break L4;
     }
     }
     $37 = (_mb_push_int($0,$1,$36)|0);
     $$0 = $37;
    } else {
     $$0 = $10;
    }
   } else {
    $$0 = $8;
   }
  } else {
   $$0 = $6;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_ceil($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17150,(10920|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $$pre = HEAP32[$5>>2]|0;
      $36 = $$pre;
      break;
     }
     case 4:  {
      $13 = +HEAPF32[$5>>2];
      $14 = (+Math_ceil((+$13)));
      $15 = (~~(($14)));
      HEAP32[$5>>2] = $15;
      HEAP32[$2>>2] = 2;
      $36 = $15;
      break;
     }
     default: {
      $16 = HEAP32[$1>>2]|0;
      $17 = ($16|0)==(0|0);
      if (!($17)) {
       $18 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
       $19 = ($18|0)==(0|0);
       if (!($19)) {
        $20 = ((($0)) + 67|0);
        $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
        $22 = (__set_current_error($0,16,$21)|0);
        $23 = ($22<<24>>24)==(0);
        if ($23) {
         $$0 = 0;
         break L4;
        }
        $24 = HEAP32[$1>>2]|0;
        $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $26 = ((($25)) + 9|0);
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($25)) + 13|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
        $30 = ((($25)) + 15|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        __set_error_pos($0,$27,$29,$31);
        $$0 = 0;
        break L4;
       }
      }
      $32 = ((($0)) + 67|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $34 = (__set_current_error($0,16,$33)|0);
      $35 = ($34<<24>>24)==(0);
      if ($35) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 0;
      break L4;
     }
     }
     $37 = (_mb_push_int($0,$1,$36)|0);
     $$0 = $37;
    } else {
     $$0 = $10;
    }
   } else {
    $$0 = $8;
   }
  } else {
   $$0 = $6;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_fix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17186,(10911|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $$pre = HEAP32[$5>>2]|0;
      $35 = $$pre;
      break;
     }
     case 4:  {
      $13 = +HEAPF32[$5>>2];
      $14 = (~~(($13)));
      HEAP32[$5>>2] = $14;
      HEAP32[$2>>2] = 2;
      $35 = $14;
      break;
     }
     default: {
      $15 = HEAP32[$1>>2]|0;
      $16 = ($15|0)==(0|0);
      if (!($16)) {
       $17 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
       $18 = ($17|0)==(0|0);
       if (!($18)) {
        $19 = ((($0)) + 67|0);
        $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
        $21 = (__set_current_error($0,16,$20)|0);
        $22 = ($21<<24>>24)==(0);
        if ($22) {
         $$0 = 0;
         break L4;
        }
        $23 = HEAP32[$1>>2]|0;
        $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
        $25 = ((($24)) + 9|0);
        $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
        $27 = ((($24)) + 13|0);
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
        $29 = ((($24)) + 15|0);
        $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
        __set_error_pos($0,$26,$28,$30);
        $$0 = 0;
        break L4;
       }
      }
      $31 = ((($0)) + 67|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
      $33 = (__set_current_error($0,16,$32)|0);
      $34 = ($33<<24>>24)==(0);
      if ($34) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 0;
      break L4;
     }
     }
     $36 = (_mb_push_int($0,$1,$35)|0);
     $$0 = $36;
    } else {
     $$0 = $10;
    }
   } else {
    $$0 = $8;
   }
  } else {
   $$0 = $6;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_round($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17222,(10900|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $$pre = HEAP32[$5>>2]|0;
      $36 = $$pre;
      break;
     }
     case 4:  {
      $13 = +HEAPF32[$5>>2];
      $14 = $13 + 0.5;
      $15 = (~~(($14)));
      HEAP32[$5>>2] = $15;
      HEAP32[$2>>2] = 2;
      $36 = $15;
      break;
     }
     default: {
      $16 = HEAP32[$1>>2]|0;
      $17 = ($16|0)==(0|0);
      if (!($17)) {
       $18 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
       $19 = ($18|0)==(0|0);
       if (!($19)) {
        $20 = ((($0)) + 67|0);
        $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
        $22 = (__set_current_error($0,16,$21)|0);
        $23 = ($22<<24>>24)==(0);
        if ($23) {
         $$0 = 0;
         break L4;
        }
        $24 = HEAP32[$1>>2]|0;
        $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $26 = ((($25)) + 9|0);
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($25)) + 13|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
        $30 = ((($25)) + 15|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        __set_error_pos($0,$27,$29,$31);
        $$0 = 0;
        break L4;
       }
      }
      $32 = ((($0)) + 67|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $34 = (__set_current_error($0,16,$33)|0);
      $35 = ($34<<24>>24)==(0);
      if ($35) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 0;
      break L4;
     }
     }
     $37 = (_mb_push_int($0,$1,$36)|0);
     $$0 = $37;
    } else {
     $$0 = $10;
    }
   } else {
    $$0 = $8;
   }
  } else {
   $$0 = $6;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_srnd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$3 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17258,(10890|0));
  // unreachable;
 }
 $5 = (_mb_attempt_open_bracket($0,$1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_mb_pop_int($0,$1,$2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = (_mb_attempt_close_bracket($0,$1)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = HEAP32[$2>>2]|0;
    _srand($11);
    $$3 = 0;
   } else {
    $$3 = $9;
   }
  } else {
   $$3 = $7;
  }
 } else {
  $$3 = $5;
 }
 STACKTOP = sp;return ($$3|0);
}
function __std_rnd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0113 = 0, $$11 = 0, $$2111$ph = 0, $$3112 = 0, $$7$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17277,(10881|0));
  // unreachable;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0|0);
 L4: do {
  if ($6) {
   label = 23;
  } else {
   $7 = ((($5)) + 8|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ($8|0)==(0|0);
   if ($9) {
    label = 23;
   } else {
    $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $12 = ($11|0)==(8);
    if ($12) {
     $13 = ((($10)) + 4|0);
     $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
     $15 = ((($14)) + 4|0);
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ($16|0)==(22|0);
     if ($17) {
      HEAP32[$2>>2] = 0;
      $18 = (_mb_attempt_open_bracket($0,$1)|0);
      $19 = ($18|0)==(0);
      do {
       if ($19) {
        $20 = (_mb_has_arg($0,$1)|0);
        $21 = ($20|0)==(0);
        if (!($21)) {
         $22 = (_mb_pop_int($0,$1,$2)|0);
         $23 = ($22|0)==(0);
         if (!($23)) {
          $$7$ph = $22;
          break;
         }
        }
        $24 = (_mb_has_arg($0,$1)|0);
        $25 = ($24|0)==(0);
        if ($25) {
         $$0113 = 0;
        } else {
         $26 = HEAP32[$2>>2]|0;
         $27 = (_mb_pop_int($0,$1,$2)|0);
         $28 = ($27|0)==(0);
         if ($28) {
          $$0113 = $26;
         } else {
          $$7$ph = $27;
          break;
         }
        }
        $29 = (_mb_attempt_close_bracket($0,$1)|0);
        $30 = ($29|0)==(0);
        if ($30) {
         $31 = HEAP32[$2>>2]|0;
         $32 = ($$0113|0)<($31|0);
         if ($32) {
          $53 = (_rand()|0);
          $54 = (+($53|0));
          $55 = $54 * 4.6566128730773926E-10;
          $56 = HEAP32[$2>>2]|0;
          $57 = (($56) - ($$0113))|0;
          $58 = (+($57|0));
          $59 = $58 + 0.99998998641967773;
          $60 = $55 * $59;
          $61 = (+($$0113|0));
          $62 = $60 + $61;
          $63 = (~~(($62)));
          $64 = (_mb_push_int($0,$1,$63)|0);
          $65 = ($64|0)==(0);
          if ($65) {
           $$3112 = 0;
           label = 26;
           break L4;
          } else {
           $$11 = $64;
           break L4;
          }
         }
         $33 = HEAP32[$1>>2]|0;
         $34 = ($33|0)==(0|0);
         if ($34) {
          label = 18;
         } else {
          $35 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
          $36 = ($35|0)==(0|0);
          if ($36) {
           label = 18;
          } else {
           $37 = ((($0)) + 67|0);
           $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
           $39 = (__set_current_error($0,19,$38)|0);
           $40 = ($39<<24>>24)==(0);
           if ($40) {
            $$2111$ph = 0;
           } else {
            $41 = HEAP32[$1>>2]|0;
            $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
            $43 = ((($42)) + 9|0);
            $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
            $45 = ((($42)) + 13|0);
            $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8);
            $47 = ((($42)) + 15|0);
            $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8);
            __set_error_pos($0,$44,$46,$48);
            $$2111$ph = 3;
           }
          }
         }
         if ((label|0) == 18) {
          $49 = ((($0)) + 67|0);
          $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
          $51 = (__set_current_error($0,19,$50)|0);
          $52 = ($51<<24>>24)==(0);
          if ($52) {
           $$2111$ph = 0;
          } else {
           __set_error_pos($0,0,0,0);
           $$2111$ph = 3;
          }
         }
         $$3112 = $$2111$ph;
         label = 26;
         break L4;
        } else {
         $$7$ph = $29;
        }
       } else {
        $$7$ph = $18;
       }
      } while(0);
      $$11 = $$7$ph;
     } else {
      label = 23;
     }
    } else {
     label = 23;
    }
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $66 = (_mb_attempt_func_begin($0,$1)|0);
  $67 = ($66|0)==(0);
  if ($67) {
   $68 = (_mb_attempt_func_end($0,$1)|0);
   $69 = ($68|0)==(0);
   if ($69) {
    $70 = (_rand()|0);
    $71 = (($70|0) % 101)&-1;
    $72 = (+($71|0));
    $73 = $72 / 100.0;
    $74 = (_mb_push_real($0,$1,$73)|0);
    $75 = ($74|0)==(0);
    if ($75) {
     $$3112 = 0;
     label = 26;
    } else {
     $$11 = $74;
    }
   } else {
    $$11 = $68;
   }
  } else {
   $$11 = $66;
  }
 }
 if ((label|0) == 26) {
  $$11 = $$3112;
 }
 STACKTOP = sp;return ($$11|0);
}
function __std_sin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17323,(10872|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_sin((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_sin((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_cos($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17346,(10863|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_cos((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_cos((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_tan($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17369,(10854|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_tan((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_tan((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_asin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17392,(10844|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_asin((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_asin((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_acos($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17415,(10834|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_acos((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_acos((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_atan($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17438,(10824|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_atan((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_atan((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_exp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17461,(10815|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_exp((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_exp((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_log($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17484,(10806|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     switch ($12|0) {
     case 2:  {
      $13 = HEAP32[$5>>2]|0;
      $14 = (+($13|0));
      $15 = $14;
      $16 = (+Math_log((+$15)));
      $17 = $16;
      HEAPF32[$5>>2] = $17;
      HEAP32[$2>>2] = 4;
      $43 = $17;
      break;
     }
     case 4:  {
      $38 = +HEAPF32[$5>>2];
      $39 = $38;
      $40 = (+Math_log((+$39)));
      $41 = $40;
      HEAPF32[$5>>2] = $41;
      $43 = $41;
      break;
     }
     default: {
      $18 = HEAP32[$1>>2]|0;
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
       $21 = ($20|0)==(0|0);
       if (!($21)) {
        $22 = ((($0)) + 67|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = (__set_current_error($0,16,$23)|0);
        $25 = ($24<<24>>24)==(0);
        if ($25) {
         $$042 = 0;
         break L4;
        }
        $26 = HEAP32[$1>>2]|0;
        $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $28 = ((($27)) + 9|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = ((($27)) + 13|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
        $32 = ((($27)) + 15|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
        __set_error_pos($0,$29,$31,$33);
        $$042 = 0;
        break L4;
       }
      }
      $34 = ((($0)) + 67|0);
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = (__set_current_error($0,16,$35)|0);
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$042 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$042 = 0;
      break L4;
     }
     }
     $42 = (~~(($43)));
     $44 = (+($42|0));
     $45 = $43 == $44;
     if ($45) {
      HEAP32[$2>>2] = 2;
      HEAP32[$5>>2] = $42;
      $$042 = 0;
     } else {
      $$042 = 0;
     }
    } else {
     $$042 = $10;
    }
   } else {
    $$042 = $8;
   }
  } else {
   $$042 = $6;
  }
 } while(0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $46 = (_mb_push_value($0,$1,$$byval_copy)|0);
 $47 = ($46|0)==(0);
 $$1 = $47 ? $$042 : $46;
 STACKTOP = sp;return ($$1|0);
}
function __std_asc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$$0$ = 0, $$064 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17511,(10797|0));
  // unreachable;
 }
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = (_mb_pop_string($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_mb_attempt_close_bracket($0,$1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$2>>2]|0;
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(0);
     do {
      if ($14) {
       $$064 = 3;
      } else {
       $15 = (_mb_uu_ischar($12)|0);
       $16 = ($15>>>0)>(4);
       if (!($16)) {
        _memcpy(($3|0),($12|0),($15|0))|0;
        $$0$$0$ = HEAP32[$3>>2]|0;
        $37 = (_mb_push_int($0,$1,$$0$$0$)|0);
        $38 = ($37|0)==(0);
        if ($38) {
         $$064 = 0;
         break;
        } else {
         $$4 = $37;
         break L4;
        }
       }
       $17 = HEAP32[$1>>2]|0;
       $18 = ($17|0)==(0|0);
       if (!($18)) {
        $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
        $20 = ($19|0)==(0|0);
        if (!($20)) {
         $21 = ((($0)) + 67|0);
         $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
         $23 = (__set_current_error($0,12,$22)|0);
         $24 = ($23<<24>>24)==(0);
         if ($24) {
          $$064 = 0;
          break;
         }
         $25 = HEAP32[$1>>2]|0;
         $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
         $27 = ((($26)) + 9|0);
         $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
         $29 = ((($26)) + 13|0);
         $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
         $31 = ((($26)) + 15|0);
         $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
         __set_error_pos($0,$28,$30,$32);
         $$064 = 0;
         break;
        }
       }
       $33 = ((($0)) + 67|0);
       $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
       $35 = (__set_current_error($0,12,$34)|0);
       $36 = ($35<<24>>24)==(0);
       if ($36) {
        $$064 = 0;
       } else {
        __set_error_pos($0,0,0,0);
        $$064 = 0;
       }
      }
     } while(0);
     $$4 = $$064;
    } else {
     $$4 = $10;
    }
   } else {
    $$4 = $8;
   }
  } else {
   $$4 = $6;
  }
 } while(0);
 STACKTOP = sp;return ($$4|0);
}
function __std_chr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17546,(10788|0));
  // unreachable;
 }
 $5 = (_mb_attempt_open_bracket($0,$1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_mb_pop_int($0,$1,$2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = (_mb_attempt_close_bracket($0,$1)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (_mb_malloc(5)|0);
    ;HEAP8[$11>>0]=0|0;HEAP8[$11+1>>0]=0|0;HEAP8[$11+2>>0]=0|0;HEAP8[$11+3>>0]=0|0;HEAP8[$11+4>>0]=0|0;
    $12 = HEAP32[$2>>2]|0;
    HEAP8[$11>>0]=$12&255;HEAP8[$11+1>>0]=($12>>8)&255;HEAP8[$11+2>>0]=($12>>16)&255;HEAP8[$11+3>>0]=$12>>24;
    $13 = (_mb_push_string($0,$1,$11)|0);
    $$4 = $13;
   } else {
    $$4 = $9;
   }
  } else {
   $$4 = $7;
  }
 } else {
  $$4 = $5;
 }
 STACKTOP = sp;return ($$4|0);
}
function __std_left($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0100 = 0, $$5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17569,(10778|0));
  // unreachable;
 }
 $7 = (_mb_attempt_open_bracket($0,$1)|0);
 $8 = ($7|0)==(0);
 L4: do {
  if ($8) {
   $9 = (_mb_pop_string($0,$1,$2)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (_mb_pop_int($0,$1,$3)|0);
    $12 = ($11|0)==(0);
    if ($12) {
     $13 = (_mb_attempt_close_bracket($0,$1)|0);
     $14 = ($13|0)==(0);
     if ($14) {
      $15 = HEAP32[$3>>2]|0;
      $16 = ($15|0)<(1);
      L9: do {
       if ($16) {
        $17 = HEAP32[$1>>2]|0;
        $18 = ($17|0)==(0|0);
        if (!($18)) {
         $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
         $20 = ($19|0)==(0|0);
         if (!($20)) {
          $21 = ((($0)) + 67|0);
          $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
          $23 = (__set_current_error($0,19,$22)|0);
          $24 = ($23<<24>>24)==(0);
          if ($24) {
           $$0100 = 0;
           break;
          }
          $25 = HEAP32[$1>>2]|0;
          $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
          $27 = ((($26)) + 9|0);
          $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
          $29 = ((($26)) + 13|0);
          $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
          $31 = ((($26)) + 15|0);
          $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
          __set_error_pos($0,$28,$30,$32);
          $$0100 = 3;
          break;
         }
        }
        $33 = ((($0)) + 67|0);
        $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
        $35 = (__set_current_error($0,19,$34)|0);
        $36 = ($35<<24>>24)==(0);
        if ($36) {
         $$0100 = 0;
        } else {
         __set_error_pos($0,0,0,0);
         $$0100 = 3;
        }
       } else {
        $37 = HEAP32[$2>>2]|0;
        $38 = (_mb_uu_substr($37,0,$15,$4)|0);
        switch ($38|0) {
        case 0:  {
         $39 = HEAP32[$1>>2]|0;
         $40 = ($39|0)==(0|0);
         if (!($40)) {
          $41 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
          $42 = ($41|0)==(0|0);
          if (!($42)) {
           $43 = ((($0)) + 67|0);
           $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
           $45 = (__set_current_error($0,14,$44)|0);
           $46 = ($45<<24>>24)==(0);
           if ($46) {
            $$0100 = 0;
            break L9;
           }
           $47 = HEAP32[$1>>2]|0;
           $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
           $49 = ((($48)) + 9|0);
           $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
           $51 = ((($48)) + 13|0);
           $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8);
           $53 = ((($48)) + 15|0);
           $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
           __set_error_pos($0,$50,$52,$54);
           $$0100 = 3;
           break L9;
          }
         }
         $55 = ((($0)) + 67|0);
         $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
         $57 = (__set_current_error($0,14,$56)|0);
         $58 = ($57<<24>>24)==(0);
         if ($58) {
          $$0100 = 0;
          break L9;
         }
         __set_error_pos($0,0,0,0);
         $$0100 = 3;
         break L9;
         break;
        }
        case -1:  {
         $59 = HEAP32[$1>>2]|0;
         $60 = ($59|0)==(0|0);
         if (!($60)) {
          $61 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
          $62 = ($61|0)==(0|0);
          if (!($62)) {
           $63 = ((($0)) + 67|0);
           $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
           $65 = (__set_current_error($0,19,$64)|0);
           $66 = ($65<<24>>24)==(0);
           if ($66) {
            $$0100 = 0;
            break L9;
           }
           $67 = HEAP32[$1>>2]|0;
           $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
           $69 = ((($68)) + 9|0);
           $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
           $71 = ((($68)) + 13|0);
           $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8);
           $73 = ((($68)) + 15|0);
           $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
           __set_error_pos($0,$70,$72,$74);
           $$0100 = 3;
           break L9;
          }
         }
         $75 = ((($0)) + 67|0);
         $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
         $77 = (__set_current_error($0,19,$76)|0);
         $78 = ($77<<24>>24)==(0);
         if ($78) {
          $$0100 = 0;
          break L9;
         }
         __set_error_pos($0,0,0,0);
         $$0100 = 3;
         break L9;
         break;
        }
        default: {
         $79 = HEAP32[$4>>2]|0;
         $80 = (_mb_push_string($0,$1,$79)|0);
         $81 = ($80|0)==(0);
         if ($81) {
          $$0100 = 0;
          break L9;
         } else {
          $$5 = $80;
          break L4;
         }
        }
        }
       }
      } while(0);
      $$5 = $$0100;
     } else {
      $$5 = $13;
     }
    } else {
     $$5 = $11;
    }
   } else {
    $$5 = $9;
   }
  } else {
   $$5 = $7;
  }
 } while(0);
 STACKTOP = sp;return ($$5|0);
}
function __std_mid($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0110 = 0, $$6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $or$cond = 0, $or$cond8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 12|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 HEAP32[$5>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17612,(10769|0));
  // unreachable;
 }
 $8 = (_mb_attempt_open_bracket($0,$1)|0);
 $9 = ($8|0)==(0);
 L4: do {
  if ($9) {
   $10 = (_mb_pop_string($0,$1,$2)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = (_mb_pop_int($0,$1,$3)|0);
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = (_mb_pop_int($0,$1,$4)|0);
     $15 = ($14|0)==(0);
     if ($15) {
      $16 = (_mb_attempt_close_bracket($0,$1)|0);
      $17 = ($16|0)==(0);
      if ($17) {
       $18 = HEAP32[$4>>2]|0;
       $19 = ($18|0)<(1);
       $20 = HEAP32[$3>>2]|0;
       $21 = ($20|0)<(0);
       $or$cond8 = $19 | $21;
       L10: do {
        if ($or$cond8) {
         label = 10;
        } else {
         $22 = HEAP32[$2>>2]|0;
         $23 = (_strlen($22)|0);
         $24 = ($20|0)<($23|0);
         if ($24) {
          $45 = (_mb_uu_substr($22,$20,$18,$5)|0);
          switch ($45|0) {
          case 0:  {
           $46 = HEAP32[$1>>2]|0;
           $47 = ($46|0)==(0|0);
           if (!($47)) {
            $48 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
            $49 = ($48|0)==(0|0);
            if (!($49)) {
             $50 = ((($0)) + 67|0);
             $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
             $52 = (__set_current_error($0,14,$51)|0);
             $53 = ($52<<24>>24)==(0);
             if ($53) {
              $$0110 = 0;
              break L10;
             }
             $54 = HEAP32[$1>>2]|0;
             $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
             $56 = ((($55)) + 9|0);
             $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
             $58 = ((($55)) + 13|0);
             $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
             $60 = ((($55)) + 15|0);
             $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8);
             __set_error_pos($0,$57,$59,$61);
             $$0110 = 3;
             break L10;
            }
           }
           $62 = ((($0)) + 67|0);
           $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
           $64 = (__set_current_error($0,14,$63)|0);
           $65 = ($64<<24>>24)==(0);
           if ($65) {
            $$0110 = 0;
            break L10;
           }
           __set_error_pos($0,0,0,0);
           $$0110 = 3;
           break L10;
           break;
          }
          case -1:  {
           $66 = HEAP32[$1>>2]|0;
           $67 = ($66|0)==(0|0);
           if (!($67)) {
            $68 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
            $69 = ($68|0)==(0|0);
            if (!($69)) {
             $70 = ((($0)) + 67|0);
             $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
             $72 = (__set_current_error($0,19,$71)|0);
             $73 = ($72<<24>>24)==(0);
             if ($73) {
              $$0110 = 0;
              break L10;
             }
             $74 = HEAP32[$1>>2]|0;
             $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
             $76 = ((($75)) + 9|0);
             $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
             $78 = ((($75)) + 13|0);
             $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8);
             $80 = ((($75)) + 15|0);
             $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8);
             __set_error_pos($0,$77,$79,$81);
             $$0110 = 3;
             break L10;
            }
           }
           $82 = ((($0)) + 67|0);
           $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
           $84 = (__set_current_error($0,19,$83)|0);
           $85 = ($84<<24>>24)==(0);
           if ($85) {
            $$0110 = 0;
            break L10;
           }
           __set_error_pos($0,0,0,0);
           $$0110 = 3;
           break L10;
           break;
          }
          default: {
           $86 = HEAP32[$5>>2]|0;
           $87 = (_mb_push_string($0,$1,$86)|0);
           $88 = ($87|0)==(0);
           if ($88) {
            $$0110 = 0;
            break L10;
           } else {
            $$6 = $87;
            break L4;
           }
          }
          }
         } else {
          label = 10;
         }
        }
       } while(0);
       do {
        if ((label|0) == 10) {
         $25 = HEAP32[$1>>2]|0;
         $26 = ($25|0)==(0|0);
         if (!($26)) {
          $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
          $28 = ($27|0)==(0|0);
          if (!($28)) {
           $29 = ((($0)) + 67|0);
           $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
           $31 = (__set_current_error($0,19,$30)|0);
           $32 = ($31<<24>>24)==(0);
           if ($32) {
            $$0110 = 0;
            break;
           }
           $33 = HEAP32[$1>>2]|0;
           $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
           $35 = ((($34)) + 9|0);
           $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
           $37 = ((($34)) + 13|0);
           $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
           $39 = ((($34)) + 15|0);
           $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
           __set_error_pos($0,$36,$38,$40);
           $$0110 = 3;
           break;
          }
         }
         $41 = ((($0)) + 67|0);
         $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
         $43 = (__set_current_error($0,19,$42)|0);
         $44 = ($43<<24>>24)==(0);
         if ($44) {
          $$0110 = 0;
         } else {
          __set_error_pos($0,0,0,0);
          $$0110 = 3;
         }
        }
       } while(0);
       $$6 = $$0110;
      } else {
       $$6 = $16;
      }
     } else {
      $$6 = $14;
     }
    } else {
     $$6 = $12;
    }
   } else {
    $$6 = $10;
   }
  } else {
   $$6 = $8;
  }
 } while(0);
 STACKTOP = sp;return ($$6|0);
}
function __std_right($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0100 = 0, $$5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17655,(10758|0));
  // unreachable;
 }
 $7 = (_mb_attempt_open_bracket($0,$1)|0);
 $8 = ($7|0)==(0);
 L4: do {
  if ($8) {
   $9 = (_mb_pop_string($0,$1,$2)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (_mb_pop_int($0,$1,$3)|0);
    $12 = ($11|0)==(0);
    if ($12) {
     $13 = (_mb_attempt_close_bracket($0,$1)|0);
     $14 = ($13|0)==(0);
     if ($14) {
      $15 = HEAP32[$3>>2]|0;
      $16 = ($15|0)<(1);
      L9: do {
       if ($16) {
        $17 = HEAP32[$1>>2]|0;
        $18 = ($17|0)==(0|0);
        if (!($18)) {
         $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
         $20 = ($19|0)==(0|0);
         if (!($20)) {
          $21 = ((($0)) + 67|0);
          $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
          $23 = (__set_current_error($0,19,$22)|0);
          $24 = ($23<<24>>24)==(0);
          if ($24) {
           $$0100 = 0;
           break;
          }
          $25 = HEAP32[$1>>2]|0;
          $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
          $27 = ((($26)) + 9|0);
          $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
          $29 = ((($26)) + 13|0);
          $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
          $31 = ((($26)) + 15|0);
          $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
          __set_error_pos($0,$28,$30,$32);
          $$0100 = 3;
          break;
         }
        }
        $33 = ((($0)) + 67|0);
        $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
        $35 = (__set_current_error($0,19,$34)|0);
        $36 = ($35<<24>>24)==(0);
        if ($36) {
         $$0100 = 0;
        } else {
         __set_error_pos($0,0,0,0);
         $$0100 = 3;
        }
       } else {
        $37 = HEAP32[$2>>2]|0;
        $38 = (_mb_uu_strlen($37)|0);
        $39 = (($38) - ($15))|0;
        $40 = (_mb_uu_substr($37,$39,$15,$4)|0);
        switch ($40|0) {
        case 0:  {
         $41 = HEAP32[$1>>2]|0;
         $42 = ($41|0)==(0|0);
         if (!($42)) {
          $43 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
          $44 = ($43|0)==(0|0);
          if (!($44)) {
           $45 = ((($0)) + 67|0);
           $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
           $47 = (__set_current_error($0,14,$46)|0);
           $48 = ($47<<24>>24)==(0);
           if ($48) {
            $$0100 = 0;
            break L9;
           }
           $49 = HEAP32[$1>>2]|0;
           $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
           $51 = ((($50)) + 9|0);
           $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
           $53 = ((($50)) + 13|0);
           $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
           $55 = ((($50)) + 15|0);
           $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8);
           __set_error_pos($0,$52,$54,$56);
           $$0100 = 3;
           break L9;
          }
         }
         $57 = ((($0)) + 67|0);
         $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
         $59 = (__set_current_error($0,14,$58)|0);
         $60 = ($59<<24>>24)==(0);
         if ($60) {
          $$0100 = 0;
          break L9;
         }
         __set_error_pos($0,0,0,0);
         $$0100 = 3;
         break L9;
         break;
        }
        case -1:  {
         $61 = HEAP32[$1>>2]|0;
         $62 = ($61|0)==(0|0);
         if (!($62)) {
          $63 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
          $64 = ($63|0)==(0|0);
          if (!($64)) {
           $65 = ((($0)) + 67|0);
           $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
           $67 = (__set_current_error($0,19,$66)|0);
           $68 = ($67<<24>>24)==(0);
           if ($68) {
            $$0100 = 0;
            break L9;
           }
           $69 = HEAP32[$1>>2]|0;
           $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
           $71 = ((($70)) + 9|0);
           $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
           $73 = ((($70)) + 13|0);
           $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
           $75 = ((($70)) + 15|0);
           $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8);
           __set_error_pos($0,$72,$74,$76);
           $$0100 = 3;
           break L9;
          }
         }
         $77 = ((($0)) + 67|0);
         $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
         $79 = (__set_current_error($0,19,$78)|0);
         $80 = ($79<<24>>24)==(0);
         if ($80) {
          $$0100 = 0;
          break L9;
         }
         __set_error_pos($0,0,0,0);
         $$0100 = 3;
         break L9;
         break;
        }
        default: {
         $81 = HEAP32[$4>>2]|0;
         $82 = (_mb_push_string($0,$1,$81)|0);
         $83 = ($82|0)==(0);
         if ($83) {
          $$0100 = 0;
          break L9;
         } else {
          $$5 = $82;
          break L4;
         }
        }
        }
       }
      } while(0);
      $$5 = $$0100;
     } else {
      $$5 = $13;
     }
    } else {
     $$5 = $11;
    }
   } else {
    $$5 = $9;
   }
  } else {
   $$5 = $7;
  }
 } while(0);
 STACKTOP = sp;return ($$5|0);
}
function __std_str($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$079 = 0, $$4 = 0, $$6 = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer = sp;
 $2 = sp + 24|0;
 $3 = sp + 40|0;
 $4 = sp + 32|0;
 $5 = sp + 4|0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17697,(10708|0));
  // unreachable;
 }
 $8 = ((($2)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$2>>2] = 0;
 __init_dynamic_buffer($3);
 $9 = (_mb_attempt_open_bracket($0,$1)|0);
 $10 = ($9|0)==(0);
 L4: do {
  if ($10) {
   $11 = (_mb_pop_value($0,$1,$2)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = (_mb_attempt_close_bracket($0,$1)|0);
    $14 = ($13|0)==(0);
    if ($14) {
     $15 = HEAP32[$2>>2]|0;
     switch ($15|0) {
     case 2:  {
      __resize_dynamic_buffer($3,32);
      $16 = ((($3)) + 32|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      $18 = HEAP32[$8>>2]|0;
      HEAP32[$vararg_buffer>>2] = $18;
      $19 = (_sprintf($17,10083,$vararg_buffer)|0);
      $20 = ($19>>>0)>(31);
      if ($20) {
       ___assert_fail((10717|0),(1578|0),17714,(10708|0));
       // unreachable;
      } else {
       $$pre$phiZ2D = $16;
      }
      break;
     }
     case 4:  {
      __resize_dynamic_buffer($3,318);
      $21 = +HEAPF32[$8>>2];
      $22 = ((($3)) + 32|0);
      $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      __real_to_str_std($21,$23);
      $$pre$phiZ2D = $22;
      break;
     }
     case 16:  {
      $24 = HEAP32[$8>>2]|0;
      $25 = (_mb_get_type_string($24)|0);
      $26 = (_strlen($25)|0);
      $27 = (($26) + 1)|0;
      $28 = (_mb_strdup($25,$27)|0);
      $29 = (_mb_push_string($0,$1,$28)|0);
      $30 = ($29|0)==(0);
      if ($30) {
       $$079 = 0;
       label = 20;
       break L4;
      } else {
       $$6 = $29;
       break L4;
      }
      break;
     }
     case 4096:  {
      HEAP8[$4>>0] = 0;
      $31 = HEAP32[$8>>2]|0;
      ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
      $32 = (__format_class_to_string($0,$1,$31,$5,$4)|0);
      $33 = ($32|0)==(0);
      do {
       if ($33) {
        $34 = HEAP8[$4>>0]|0;
        $35 = ($34<<24>>24)==(0);
        if ($35) {
         $40 = (__internal_type_to_public_type(16)|0);
         $41 = (_mb_get_type_string($40)|0);
         $42 = (_strlen($41)|0);
         $43 = (($42) + 1)|0;
         $44 = (_mb_strdup($41,$43)|0);
         $45 = (_mb_push_string($0,$1,$44)|0);
         $46 = ($45|0)==(0);
         if ($46) {
          break;
         } else {
          $$4 = $45;
         }
        } else {
         $36 = ((($5)) + 4|0);
         $37 = HEAP32[$36>>2]|0;
         $38 = (_mb_push_string($0,$1,$37)|0);
         $39 = ($38|0)==(0);
         if ($39) {
          break;
         } else {
          $$4 = $38;
         }
        }
        $$6 = $$4;
        break L4;
       }
      } while(0);
      $$079 = $32;
      label = 20;
      break L4;
      break;
     }
     default: {
      $$079 = 3;
      label = 20;
      break L4;
     }
     }
     $47 = HEAPU8[$$pre$phiZ2D>>0]|(HEAPU8[$$pre$phiZ2D+1>>0]<<8)|(HEAPU8[$$pre$phiZ2D+2>>0]<<16)|(HEAPU8[$$pre$phiZ2D+3>>0]<<24);
     $48 = ($47|0)==($3|0);
     if ($48) {
      $49 = ((($3)) + 36|0);
      $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
      $51 = (_mb_memdup($3,$50)|0);
      $52 = $51;
     } else {
      $52 = $47;
     }
     $53 = (_mb_push_string($0,$1,$52)|0);
     $54 = ($53|0)==(0);
     if ($54) {
      $$079 = 0;
      label = 20;
     } else {
      $$6 = $53;
     }
    } else {
     $$079 = $13;
     label = 20;
    }
   } else {
    $$079 = $11;
    label = 20;
   }
  } else {
   $$079 = $9;
   label = 20;
  }
 } while(0);
 if ((label|0) == 20) {
  __assign_public_value($0,$2,0,1);
  $$6 = $$079;
 }
 STACKTOP = sp;return ($$6|0);
}
function __std_val($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0147 = 0, $$0147$$6$ = 0, $$8 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $magicptr = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy3 = sp + 72|0;
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 8|0;
 $5 = sp;
 HEAP32[$2>>2] = 0;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17783,(10699|0));
  // unreachable;
 }
 $8 = ((($3)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$3>>2] = 0;
 $9 = ((($5)) + 4|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$5>>2] = 0;
 $10 = (_mb_attempt_open_bracket($0,$1)|0);
 $11 = ($10|0)==(0);
 L4: do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($12|0)==(0|0);
   if ($13) {
    label = 9;
   } else {
    $14 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $16 = ($15|0)==(8);
    if ($16) {
     $17 = ((($14)) + 4|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = ((($18)) + 4|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     $21 = ($20|0)==(14|0);
     if ($21) {
      $22 = ((($0)) + 67|0);
      $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      $24 = (__set_current_error($0,61,$23)|0);
      $25 = ($24<<24>>24)==(0);
      if ($25) {
       $$0147 = 0;
      } else {
       $26 = HEAP32[$1>>2]|0;
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       $28 = ((($27)) + 9|0);
       $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
       $30 = ((($27)) + 13|0);
       $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
       $32 = ((($27)) + 15|0);
       $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
       __set_error_pos($0,$29,$31,$33);
       $$0147 = 3;
      }
     } else {
      label = 9;
     }
    } else {
     label = 9;
    }
   }
   L11: do {
    if ((label|0) == 9) {
     $34 = (_mb_pop_value($0,$1,$3)|0);
     $35 = ($34|0)==(0);
     if (!($35)) {
      $$8 = $34;
      break L4;
     }
     $36 = (__try_overridden($0,$1,$3,9974,128)|0);
     $37 = $36 & 1;
     $38 = ($37|0)==(0);
     if (!($38)) {
      $124 = $36 & 2;
      $125 = ($124|0)==(0);
      if (!($125)) {
       $$0147 = 0;
       break;
      }
      ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
      $126 = (_mb_push_value($0,$1,$$byval_copy3)|0);
      $127 = ($126|0)==(0);
      if ($127) {
       $$0147 = 0;
       break;
      } else {
       $$8 = $126;
       break L4;
      }
     }
     $39 = HEAP32[$3>>2]|0;
     switch ($39|0) {
     case 8:  {
      $40 = HEAP32[$8>>2]|0;
      $41 = (_strtol($40,$2,0)|0);
      HEAP32[$9>>2] = $41;
      $42 = HEAP32[$2>>2]|0;
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(0);
      if ($44) {
       HEAP32[$5>>2] = 2;
       ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
       $45 = (_mb_push_value($0,$1,$$byval_copy)|0);
       $46 = ($45|0)==(0);
       if ($46) {
        $$0147 = 0;
        break L11;
       } else {
        $$8 = $45;
        break L4;
       }
      }
      $47 = HEAP32[$8>>2]|0;
      $48 = (+_strtod($47,$2));
      $49 = $48;
      HEAPF32[$9>>2] = $49;
      $50 = HEAP32[$2>>2]|0;
      $51 = HEAP8[$50>>0]|0;
      $52 = ($51<<24>>24)==(0);
      if (!($52)) {
       $$0147 = 3;
       break L11;
      }
      HEAP32[$5>>2] = 4;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
      $53 = (_mb_push_value($0,$1,$$byval_copy1)|0);
      $54 = ($53|0)==(0);
      if ($54) {
       $$0147 = 0;
       break L11;
      } else {
       $$8 = $53;
       break L4;
      }
      break;
     }
     case 512:  {
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      (__public_value_to_internal_object($3,$4)|0);
      $55 = HEAP32[$1>>2]|0;
      $56 = ($55|0)==(0|0);
      if (!($56)) {
       $57 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
       $58 = ($57|0)==(0|0);
       if (!($58)) {
        $59 = ((($0)) + 67|0);
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
        $61 = (__set_current_error($0,13,$60)|0);
        $62 = ($61<<24>>24)==(0);
        if ($62) {
         $$0147 = 0;
         break L11;
        }
        $63 = HEAP32[$1>>2]|0;
        $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
        $65 = ((($64)) + 9|0);
        $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
        $67 = ((($64)) + 13|0);
        $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8);
        $69 = ((($64)) + 15|0);
        $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
        __set_error_pos($0,$66,$68,$70);
        $$0147 = 3;
        break L11;
       }
      }
      $71 = ((($0)) + 67|0);
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
      $73 = (__set_current_error($0,13,$72)|0);
      $74 = ($73<<24>>24)==(0);
      if ($74) {
       $$0147 = 0;
       break L11;
      }
      __set_error_pos($0,0,0,0);
      $$0147 = 3;
      break L11;
      break;
     }
     case 2048:  {
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      (__public_value_to_internal_object($3,$4)|0);
      $75 = ((($4)) + 4|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ($76|0)==(0|0);
      L39: do {
       if (!($77)) {
        $78 = ((($76)) + 26|0);
        $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
        $magicptr = $79;
        switch ($magicptr|0) {
        case -1: case 0:  {
         break L39;
         break;
        }
        default: {
        }
        }
        $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
        $81 = ($80|0)==(0|0);
        if (!($81)) {
         (__internal_object_to_public_value($80,$5)|0);
         ;HEAP32[$$byval_copy2>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$5+4>>2]|0;
         $82 = (_mb_push_value($0,$1,$$byval_copy2)|0);
         $83 = ($82|0)==(0);
         if ($83) {
          $$0147 = 0;
          break L11;
         } else {
          $$8 = $82;
          break L4;
         }
        }
       }
      } while(0);
      $84 = HEAP32[$1>>2]|0;
      $85 = ($84|0)==(0|0);
      if (!($85)) {
       $86 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
       $87 = ($86|0)==(0|0);
       if (!($87)) {
        $88 = ((($0)) + 67|0);
        $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
        $90 = (__set_current_error($0,61,$89)|0);
        $91 = ($90<<24>>24)==(0);
        if ($91) {
         $$0147 = 0;
         break L11;
        }
        $92 = HEAP32[$1>>2]|0;
        $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
        $94 = ((($93)) + 9|0);
        $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
        $96 = ((($93)) + 13|0);
        $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8);
        $98 = ((($93)) + 15|0);
        $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
        __set_error_pos($0,$95,$97,$99);
        $$0147 = 3;
        break L11;
       }
      }
      $100 = ((($0)) + 67|0);
      $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
      $102 = (__set_current_error($0,61,$101)|0);
      $103 = ($102<<24>>24)==(0);
      if ($103) {
       $$0147 = 0;
       break L11;
      }
      __set_error_pos($0,0,0,0);
      $$0147 = 3;
      break L11;
      break;
     }
     default: {
      __assign_public_value($0,$3,0,1);
      $104 = HEAP32[$1>>2]|0;
      $105 = ($104|0)==(0|0);
      if (!($105)) {
       $106 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
       $107 = ($106|0)==(0|0);
       if (!($107)) {
        $108 = ((($0)) + 67|0);
        $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
        $110 = (__set_current_error($0,13,$109)|0);
        $111 = ($110<<24>>24)==(0);
        if ($111) {
         $$0147 = 0;
         break L11;
        }
        $112 = HEAP32[$1>>2]|0;
        $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
        $114 = ((($113)) + 9|0);
        $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
        $116 = ((($113)) + 13|0);
        $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8);
        $118 = ((($113)) + 15|0);
        $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8);
        __set_error_pos($0,$115,$117,$119);
        $$0147 = 3;
        break L11;
       }
      }
      $120 = ((($0)) + 67|0);
      $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
      $122 = (__set_current_error($0,13,$121)|0);
      $123 = ($122<<24>>24)==(0);
      if ($123) {
       $$0147 = 0;
       break L11;
      }
      __set_error_pos($0,0,0,0);
      $$0147 = 3;
      break L11;
     }
     }
    }
   } while(0);
   $128 = (_mb_attempt_close_bracket($0,$1)|0);
   $129 = ($128|0)==(0);
   $$0147$$6$ = $129 ? $$0147 : $128;
   $$8 = $$0147$$6$;
  } else {
   $$8 = $10;
  }
 } while(0);
 STACKTOP = sp;return ($$8|0);
}
function __std_len($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$081 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17868,(10424|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 L4: do {
  if ($7) {
   $8 = HEAP32[$1>>2]|0;
   $9 = ($8|0)!=(0|0);
   if ($9) {
    $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $11 = ($10|0)==(0|0);
    if (!($11)) {
     $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
     $13 = ($12|0)==(8);
     if ($13) {
      $14 = ((($10)) + 4|0);
      $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
      $16 = ((($15)) + 4|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      $18 = ($17|0)==(88|0);
      if ($18) {
       $19 = ((($8)) + 8|0);
       $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
       HEAP32[$1>>2] = $20;
       $21 = ((($0)) + 84|0);
       $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
       $23 = ($22|0)==(0|0);
       if ($23) {
        $25 = 0;
       } else {
        $24 = (__ls_count($22)|0);
        $25 = $24;
       }
       $26 = (_mb_push_int($0,$1,$25)|0);
       $27 = ($26|0)==(0);
       if (!($27)) {
        $$081 = $26;
        break;
       }
       $28 = (_mb_attempt_close_bracket($0,$1)|0);
       $$081 = $28;
       break;
      }
     }
    }
   }
   $29 = (_mb_pop_value($0,$1,$2)|0);
   $30 = ($29|0)==(0);
   if ($30) {
    $31 = (__try_overridden($0,$1,$2,9978,128)|0);
    $32 = $31 & 1;
    $33 = ($32|0)==(0);
    L17: do {
     if ($33) {
      $34 = HEAP32[$2>>2]|0;
      switch ($34|0) {
      case 8:  {
       $35 = HEAP32[$5>>2]|0;
       $36 = (_mb_uu_strlen($35)|0);
       $37 = (_mb_push_int($0,$1,$36)|0);
       $38 = ($37|0)==(0);
       if ($38) {
        break L17;
       } else {
        $$081 = $37;
        break L4;
       }
       break;
      }
      case 128:  {
       $39 = HEAP32[$5>>2]|0;
       $40 = ((($39)) + 29|0);
       $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
       $42 = (_mb_push_int($0,$1,$41)|0);
       $43 = ($42|0)==(0);
       if ($43) {
        break L17;
       } else {
        $$081 = $42;
        break L4;
       }
       break;
      }
      case 256:  {
       $44 = HEAP32[$5>>2]|0;
       $45 = ((($44)) + 31|0);
       $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $47 = (_mb_push_int($0,$1,$46)|0);
       $48 = ($47|0)==(0);
       if (!($48)) {
        $$081 = $47;
        break L4;
       }
       __assign_public_value($0,$2,0,1);
       break L17;
       break;
      }
      case 1024:  {
       $49 = HEAP32[$5>>2]|0;
       $50 = ((($49)) + 19|0);
       $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
       $52 = (__ht_count($51)|0);
       $53 = (_mb_push_int($0,$1,$52)|0);
       $54 = ($53|0)==(0);
       if (!($54)) {
        $$081 = $53;
        break L4;
       }
       __assign_public_value($0,$2,0,1);
       break L17;
       break;
      }
      default: {
       if ($9) {
        $55 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
        $56 = ($55|0)==(0|0);
        if (!($56)) {
         $57 = ((($0)) + 67|0);
         $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
         $59 = (__set_current_error($0,3,$58)|0);
         $60 = ($59<<24>>24)==(0);
         if ($60) {
          $$081 = 0;
          break L4;
         }
         $61 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
         $62 = ((($61)) + 9|0);
         $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
         $64 = ((($61)) + 13|0);
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8);
         $66 = ((($61)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($0,$63,$65,$67);
         $$081 = 3;
         break L4;
        }
       }
       $68 = ((($0)) + 67|0);
       $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
       $70 = (__set_current_error($0,3,$69)|0);
       $71 = ($70<<24>>24)==(0);
       if ($71) {
        $$081 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$081 = 3;
       break L4;
      }
      }
     } else {
      $72 = $31 & 2;
      $73 = ($72|0)==(0);
      if ($73) {
       $74 = (_mb_push_int($0,$1,0)|0);
       $75 = ($74|0)==(0);
       if (!($75)) {
        $$081 = $74;
        break L4;
       }
      }
     }
    } while(0);
    $76 = (_mb_attempt_close_bracket($0,$1)|0);
    $$081 = $76;
   } else {
    $$081 = $29;
   }
  } else {
   $$081 = $6;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$081|0);
}
function __std_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $magicptr = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $7 = sp;
 HEAP32[$5>>2] = 0;
 HEAP32[$6>>2] = 0;
 $8 = ($0|0)!=(0|0);
 $9 = ($1|0)!=(0|0);
 $or$cond = $8 & $9;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),17952,(10415|0));
  // unreachable;
 }
 $10 = ((($2)) + 4|0);
 HEAP32[$10>>2] = 0;
 HEAP32[$2>>2] = 0;
 $11 = ((($3)) + 4|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$3>>2] = 0;
 $12 = ((($7)) + 4|0);
 HEAP32[$12>>2] = 0;
 HEAP32[$7>>2] = 0;
 $13 = (_mb_attempt_open_bracket($0,$1)|0);
 $14 = ($13|0)==(0);
 L4: do {
  if ($14) {
   $15 = (_mb_pop_value($0,$1,$2)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $17 = (__try_overridden($0,$1,$2,8894,128)|0);
    $18 = $17 & 1;
    $19 = ($18|0)==(0);
    L7: do {
     if ($19) {
      ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
      $20 = HEAP32[$2>>2]|0;
      switch ($20|0) {
      case 256:  {
       (__public_value_to_internal_object($2,$4)|0);
       $21 = (_mb_pop_int($0,$1,$5)|0);
       $22 = ($21|0)==(0);
       if (!($22)) {
        $$0 = $21;
        break L4;
       }
       $23 = ((($4)) + 4|0);
       $24 = HEAP32[$23>>2]|0;
       $25 = HEAP32[$5>>2]|0;
       $26 = (__at_list($24,$25,$7)|0);
       $27 = ($26<<24>>24)==(0);
       if (!($27)) {
        break L7;
       }
       $28 = HEAP32[$1>>2]|0;
       $29 = ($28|0)==(0|0);
       if (!($29)) {
        $30 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $31 = ($30|0)==(0|0);
        if (!($31)) {
         $32 = ((($0)) + 67|0);
         $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $34 = (__set_current_error($0,20,$33)|0);
         $35 = ($34<<24>>24)==(0);
         if ($35) {
          $$0 = 0;
          break L4;
         }
         $36 = HEAP32[$1>>2]|0;
         $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
         $38 = ((($37)) + 9|0);
         $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
         $40 = ((($37)) + 13|0);
         $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8);
         $42 = ((($37)) + 15|0);
         $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8);
         __set_error_pos($0,$39,$41,$43);
         $$0 = 3;
         break L4;
        }
       }
       $44 = ((($0)) + 67|0);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $46 = (__set_current_error($0,20,$45)|0);
       $47 = ($46<<24>>24)==(0);
       if ($47) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      case 1024:  {
       (__public_value_to_internal_object($2,$4)|0);
       $48 = (_mb_pop_value($0,$1,$3)|0);
       $49 = ($48|0)==(0);
       if (!($49)) {
        $$0 = $48;
        break L4;
       }
       $50 = ((($4)) + 4|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = (__find_dict($51,$3,$7)|0);
       $53 = ($52<<24>>24)==(0);
       if (!($53)) {
        break L7;
       }
       $54 = HEAP32[$1>>2]|0;
       $55 = ($54|0)==(0|0);
       if (!($55)) {
        $56 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
        $57 = ($56|0)==(0|0);
        if (!($57)) {
         $58 = ((($0)) + 67|0);
         $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
         $60 = (__set_current_error($0,20,$59)|0);
         $61 = ($60<<24>>24)==(0);
         if ($61) {
          $$0 = 0;
          break L4;
         }
         $62 = HEAP32[$1>>2]|0;
         $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
         $64 = ((($63)) + 9|0);
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($63)) + 13|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         $68 = ((($63)) + 15|0);
         $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8);
         __set_error_pos($0,$65,$67,$69);
         $$0 = 3;
         break L4;
        }
       }
       $70 = ((($0)) + 67|0);
       $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
       $72 = (__set_current_error($0,20,$71)|0);
       $73 = ($72<<24>>24)==(0);
       if ($73) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      case 512:  {
       (__public_value_to_internal_object($2,$4)|0);
       $74 = ((($4)) + 4|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = ($75|0)==(0|0);
       if (!($76)) {
        $77 = ((($75)) + 17|0);
        $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
        $79 = ((($78)) + 35|0);
        $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
        $81 = ($80|0)==(0|0);
        if (!($81)) {
         $87 = ((($75)) + 22|0);
         $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
         HEAP32[$12>>2] = $88;
         HEAP32[$7>>2] = 2;
         break L7;
        }
        $82 = ((($75)) + 22|0);
        $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
        $84 = ($83|0)==(0|0);
        if (!($84)) {
         $85 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
         $86 = ($85|0)==(0|0);
         if (!($86)) {
          (__internal_object_to_public_value($85,$7)|0);
          break L7;
         }
        }
       }
       $89 = HEAP32[$1>>2]|0;
       $90 = ($89|0)==(0|0);
       if (!($90)) {
        $91 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
        $92 = ($91|0)==(0|0);
        if (!($92)) {
         $93 = ((($0)) + 67|0);
         $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
         $95 = (__set_current_error($0,61,$94)|0);
         $96 = ($95<<24>>24)==(0);
         if ($96) {
          $$0 = 0;
          break L4;
         }
         $97 = HEAP32[$1>>2]|0;
         $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
         $99 = ((($98)) + 9|0);
         $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
         $101 = ((($98)) + 13|0);
         $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8);
         $103 = ((($98)) + 15|0);
         $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8);
         __set_error_pos($0,$100,$102,$104);
         $$0 = 3;
         break L4;
        }
       }
       $105 = ((($0)) + 67|0);
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = (__set_current_error($0,61,$106)|0);
       $108 = ($107<<24>>24)==(0);
       if ($108) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      case 2048:  {
       (__public_value_to_internal_object($2,$4)|0);
       $109 = ((($4)) + 4|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = ($110|0)==(0|0);
       L51: do {
        if (!($111)) {
         $112 = ((($110)) + 26|0);
         $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
         $magicptr = $113;
         switch ($magicptr|0) {
         case -1: case 0:  {
          break L51;
          break;
         }
         default: {
         }
         }
         $114 = ((($113)) + 12|0);
         $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
         $116 = ($115|0)==(0|0);
         if (!($116)) {
          (__internal_object_to_public_value($115,$7)|0);
          break L7;
         }
        }
       } while(0);
       $117 = HEAP32[$1>>2]|0;
       $118 = ($117|0)==(0|0);
       if (!($118)) {
        $119 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
        $120 = ($119|0)==(0|0);
        if (!($120)) {
         $121 = ((($0)) + 67|0);
         $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
         $123 = (__set_current_error($0,61,$122)|0);
         $124 = ($123<<24>>24)==(0);
         if ($124) {
          $$0 = 0;
          break L4;
         }
         $125 = HEAP32[$1>>2]|0;
         $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
         $127 = ((($126)) + 9|0);
         $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
         $129 = ((($126)) + 13|0);
         $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8);
         $131 = ((($126)) + 15|0);
         $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8);
         __set_error_pos($0,$128,$130,$132);
         $$0 = 3;
         break L4;
        }
       }
       $133 = ((($0)) + 67|0);
       $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
       $135 = (__set_current_error($0,61,$134)|0);
       $136 = ($135<<24>>24)==(0);
       if ($136) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
       break;
      }
      case 4096:  {
       (__public_value_to_internal_object($2,$4)|0);
       $137 = (_mb_pop_string($0,$1,$6)|0);
       $138 = ($137|0)==(0);
       if (!($138)) {
        $$0 = $137;
        break L4;
       }
       $139 = HEAP32[$6>>2]|0;
       $140 = (_mb_strupr($139)|0);
       HEAP32[$6>>2] = $140;
       $141 = ((($4)) + 4|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = (__search_identifier_in_class($0,$142,$140,0,0)|0);
       $144 = ($143|0)==(0|0);
       if ($144) {
        break L7;
       }
       $145 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
       $146 = ($145|0)==(0|0);
       if ($146) {
        break L7;
       }
       (__internal_object_to_public_value($145,$7)|0);
       break L7;
       break;
      }
      default: {
       $147 = HEAP32[$1>>2]|0;
       $148 = ($147|0)==(0|0);
       if (!($148)) {
        $149 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
        $150 = ($149|0)==(0|0);
        if (!($150)) {
         $151 = ((($0)) + 67|0);
         $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
         $153 = (__set_current_error($0,64,$152)|0);
         $154 = ($153<<24>>24)==(0);
         if ($154) {
          $$0 = 0;
          break L4;
         }
         $155 = HEAP32[$1>>2]|0;
         $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
         $157 = ((($156)) + 9|0);
         $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
         $159 = ((($156)) + 13|0);
         $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8);
         $161 = ((($156)) + 15|0);
         $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8);
         __set_error_pos($0,$158,$160,$162);
         $$0 = 3;
         break L4;
        }
       }
       $163 = ((($0)) + 67|0);
       $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
       $165 = (__set_current_error($0,64,$164)|0);
       $166 = ($165<<24>>24)==(0);
       if ($166) {
        $$0 = 0;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$0 = 3;
       break L4;
      }
      }
     }
    } while(0);
    $167 = (_mb_attempt_close_bracket($0,$1)|0);
    $168 = $17 & 2;
    $169 = $167 | $168;
    $170 = ($169|0)==(0);
    if ($170) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$7+4>>2]|0;
     $171 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $171;
    } else {
     $$0 = $167;
    }
   } else {
    $$0 = $15;
   }
  } else {
   $$0 = $13;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_set($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $switch$split2D = 0, $switch$split92D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy = sp + 72|0;
 $2 = sp + 64|0;
 $3 = sp + 56|0;
 $4 = sp + 48|0;
 $5 = sp + 28|0;
 $6 = sp + 24|0;
 $7 = sp + 20|0;
 $8 = sp + 16|0;
 $9 = sp + 8|0;
 $10 = sp;
 HEAP32[$6>>2] = 0;
 HEAP32[$7>>2] = 0;
 HEAP32[$8>>2] = 0;
 $11 = ($0|0)!=(0|0);
 $12 = ($1|0)!=(0|0);
 $or$cond = $11 & $12;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18054,(10406|0));
  // unreachable;
 }
 $13 = ((($2)) + 4|0);
 HEAP32[$13>>2] = 0;
 HEAP32[$2>>2] = 0;
 $14 = ((($3)) + 4|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$3>>2] = 0;
 $15 = ((($4)) + 4|0);
 HEAP32[$15>>2] = 0;
 HEAP32[$4>>2] = 0;
 $16 = (_mb_attempt_open_bracket($0,$1)|0);
 $17 = ($16|0)==(0);
 L4: do {
  if ($17) {
   $18 = (_mb_pop_value($0,$1,$2)|0);
   $19 = ($18|0)==(0);
   if ($19) {
    $20 = (__try_overridden($0,$1,$2,9982,128)|0);
    $21 = $20 & 1;
    $22 = ($21|0)==(0);
    L7: do {
     if ($22) {
      ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP8[$5+16>>0]=0|0;
      $23 = HEAP32[$2>>2]|0;
      $switch$split2D = ($23|0)<(1024);
      L9: do {
       if ($switch$split2D) {
        switch ($23|0) {
        case 256:  {
         break;
        }
        default: {
         break L9;
        }
        }
        (__public_value_to_internal_object($2,$5)|0);
        $24 = ((($5)) + 4|0);
        while(1) {
         $25 = (_mb_has_arg($0,$1)|0);
         $26 = ($25|0)==(0);
         if ($26) {
          break L7;
         }
         HEAP32[$15>>2] = 0;
         HEAP32[$4>>2] = 0;
         $27 = (_mb_pop_int($0,$1,$7)|0);
         $28 = ($27|0)==(0);
         if (!($28)) {
          $$0 = $27;
          break L4;
         }
         $29 = (_mb_pop_value($0,$1,$4)|0);
         $30 = ($29|0)==(0);
         if (!($30)) {
          $$0 = $29;
          break L4;
         }
         $31 = HEAP32[$24>>2]|0;
         $32 = HEAP32[$7>>2]|0;
         $33 = (__set_list($31,$32,$4,$6)|0);
         $34 = ($33<<24>>24)==(0);
         if ($34) {
          break;
         }
        }
        $35 = HEAP32[$6>>2]|0;
        $36 = ($35|0)==(0|0);
        if (!($36)) {
         (__destroy_object($35,0)|0);
        }
        $37 = HEAP32[$1>>2]|0;
        $38 = ($37|0)==(0|0);
        if (!($38)) {
         $39 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
         $40 = ($39|0)==(0|0);
         if (!($40)) {
          $41 = ((($0)) + 67|0);
          $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
          $43 = (__set_current_error($0,20,$42)|0);
          $44 = ($43<<24>>24)==(0);
          if ($44) {
           $$0 = 0;
           break L4;
          }
          $45 = HEAP32[$1>>2]|0;
          $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
          $47 = ((($46)) + 9|0);
          $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
          $49 = ((($46)) + 13|0);
          $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8);
          $51 = ((($46)) + 15|0);
          $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8);
          __set_error_pos($0,$48,$50,$52);
          $$0 = 3;
          break L4;
         }
        }
        $53 = ((($0)) + 67|0);
        $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
        $55 = (__set_current_error($0,20,$54)|0);
        $56 = ($55<<24>>24)==(0);
        if ($56) {
         $$0 = 0;
         break L4;
        }
        __set_error_pos($0,0,0,0);
        $$0 = 3;
        break L4;
       } else {
        $switch$split92D = ($23|0)<(4096);
        if ($switch$split92D) {
         switch ($23|0) {
         case 1024:  {
          break;
         }
         default: {
          break L9;
         }
         }
         (__public_value_to_internal_object($2,$5)|0);
         $57 = ((($5)) + 4|0);
         while(1) {
          $58 = (_mb_has_arg($0,$1)|0);
          $59 = ($58|0)==(0);
          if ($59) {
           break L7;
          }
          HEAP32[$14>>2] = 0;
          HEAP32[$3>>2] = 0;
          HEAP32[$15>>2] = 0;
          HEAP32[$4>>2] = 0;
          $60 = (_mb_pop_value($0,$1,$3)|0);
          $61 = ($60|0)==(0);
          if (!($61)) {
           $$0 = $60;
           break L4;
          }
          $62 = (_mb_pop_value($0,$1,$4)|0);
          $63 = ($62|0)==(0);
          if (!($63)) {
           $$0 = $62;
           break L4;
          }
          $64 = HEAP32[$57>>2]|0;
          $65 = (__set_dict($64,$3,$4,0,0)|0);
          $66 = ($65<<24>>24)==(0);
          if ($66) {
           break;
          }
         }
         $67 = HEAP32[$1>>2]|0;
         $68 = ($67|0)==(0|0);
         if (!($68)) {
          $69 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
          $70 = ($69|0)==(0|0);
          if (!($70)) {
           $71 = ((($0)) + 67|0);
           $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
           $73 = (__set_current_error($0,46,$72)|0);
           $74 = ($73<<24>>24)==(0);
           if ($74) {
            $$0 = 0;
            break L4;
           }
           $75 = HEAP32[$1>>2]|0;
           $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
           $77 = ((($76)) + 9|0);
           $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
           $79 = ((($76)) + 13|0);
           $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8);
           $81 = ((($76)) + 15|0);
           $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8);
           __set_error_pos($0,$78,$80,$82);
           $$0 = 3;
           break L4;
          }
         }
         $83 = ((($0)) + 67|0);
         $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
         $85 = (__set_current_error($0,46,$84)|0);
         $86 = ($85<<24>>24)==(0);
         if ($86) {
          $$0 = 0;
          break L4;
         }
         __set_error_pos($0,0,0,0);
         $$0 = 3;
         break L4;
        }
        switch ($23|0) {
        case 4096:  {
         break;
        }
        default: {
         break L9;
        }
        }
        $87 = ((($9)) + 4|0);
        HEAP32[$87>>2] = 0;
        HEAP32[$9>>2] = 0;
        (__public_value_to_internal_object($2,$5)|0);
        $88 = (_mb_pop_string($0,$1,$8)|0);
        $89 = ($88|0)==(0);
        if (!($89)) {
         $$0 = $88;
         break L4;
        }
        $90 = (_mb_pop_value($0,$1,$9)|0);
        $91 = ($90|0)==(0);
        if (!($91)) {
         $$0 = $90;
         break L4;
        }
        $92 = HEAP32[$8>>2]|0;
        $93 = (_mb_strupr($92)|0);
        HEAP32[$8>>2] = $93;
        $94 = ((($5)) + 4|0);
        $95 = HEAP32[$94>>2]|0;
        $96 = (__search_identifier_in_class($0,$95,$93,0,0)|0);
        $97 = ($96|0)==(0|0);
        if (!($97)) {
         $98 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
         $99 = ($98|0)==(0|0);
         if (!($99)) {
          $100 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
          $101 = ($100|0)==(9);
          if ($101) {
           HEAP32[$10>>2] = 0;
           $102 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
           $103 = ((($102)) + 4|0);
           $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
           $105 = ((($104)) + 4|0);
           $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
           (__destroy_object($106,0)|0);
           __create_internal_object_from_public_value($9,$10);
           $107 = HEAP32[$10>>2]|0;
           $108 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
           $109 = ((($108)) + 4|0);
           HEAP8[$109>>0]=$107&255;HEAP8[$109+1>>0]=($107>>8)&255;HEAP8[$109+2>>0]=($107>>16)&255;HEAP8[$109+3>>0]=$107>>24;
           break L7;
          }
         }
        }
        $110 = HEAP32[$1>>2]|0;
        $111 = ($110|0)==(0|0);
        if (!($111)) {
         $112 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
         $113 = ($112|0)==(0|0);
         if (!($113)) {
          $114 = ((($0)) + 67|0);
          $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
          $116 = (__set_current_error($0,18,$115)|0);
          $117 = ($116<<24>>24)==(0);
          if ($117) {
           $$0 = 0;
           break L4;
          }
          $118 = HEAP32[$1>>2]|0;
          $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
          $120 = ((($119)) + 9|0);
          $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
          $122 = ((($119)) + 13|0);
          $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8);
          $124 = ((($119)) + 15|0);
          $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8);
          __set_error_pos($0,$121,$123,$125);
          $$0 = 3;
          break L4;
         }
        }
        $126 = ((($0)) + 67|0);
        $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
        $128 = (__set_current_error($0,18,$127)|0);
        $129 = ($128<<24>>24)==(0);
        if ($129) {
         $$0 = 0;
         break L4;
        }
        __set_error_pos($0,0,0,0);
        $$0 = 3;
        break L4;
       }
      } while(0);
      $130 = HEAP32[$1>>2]|0;
      $131 = ($130|0)==(0|0);
      if (!($131)) {
       $132 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $133 = ($132|0)==(0|0);
       if (!($133)) {
        $134 = ((($0)) + 67|0);
        $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
        $136 = (__set_current_error($0,63,$135)|0);
        $137 = ($136<<24>>24)==(0);
        if ($137) {
         $$0 = 0;
         break L4;
        }
        $138 = HEAP32[$1>>2]|0;
        $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
        $140 = ((($139)) + 9|0);
        $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
        $142 = ((($139)) + 13|0);
        $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8);
        $144 = ((($139)) + 15|0);
        $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8);
        __set_error_pos($0,$141,$143,$145);
        $$0 = 3;
        break L4;
       }
      }
      $146 = ((($0)) + 67|0);
      $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
      $148 = (__set_current_error($0,63,$147)|0);
      $149 = ($148<<24>>24)==(0);
      if ($149) {
       $$0 = 0;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0 = 3;
      break L4;
     }
    } while(0);
    $150 = (_mb_attempt_close_bracket($0,$1)|0);
    $151 = $20 & 2;
    $152 = $150 | $151;
    $153 = ($152|0)==(0);
    if ($153) {
     ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
     $154 = (_mb_push_value($0,$1,$$byval_copy)|0);
     $$0 = $154;
    } else {
     $$0 = $150;
    }
   } else {
    $$0 = $18;
   }
  } else {
   $$0 = $16;
  }
 } while(0);
 __assign_public_value($0,$2,0,1);
 STACKTOP = sp;return ($$0|0);
}
function __std_print($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$096 = 0, $$1 = 0, $$1$ph = 0, $$195$ph = 0, $$4$ph = 0, $$4106 = 0, $$pr100$pre = 0, $$pr100151 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, $or$cond3 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $vararg_buffer27 = sp + 72|0;
 $vararg_buffer24 = sp + 64|0;
 $vararg_buffer21 = sp + 56|0;
 $vararg_buffer18 = sp + 48|0;
 $vararg_buffer15 = sp + 40|0;
 $vararg_buffer12 = sp + 32|0;
 $vararg_buffer8 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 100|0;
 $3 = sp + 80|0;
 $4 = sp + 76|0;
 $5 = sp + 112|0;
 $6 = sp + 104|0;
 HEAP32[$2>>2] = 0;
 HEAP32[$4>>2] = 0;
 $7 = ($0|0)!=(0|0);
 $8 = ($1|0)!=(0|0);
 $or$cond = $7 & $8;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18146,(10068|0));
  // unreachable;
 }
 $9 = ((($0)) + 114|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = (($10) + 1)|0;
 HEAP8[$9>>0]=$11&255;HEAP8[$9+1>>0]=($11>>8)&255;HEAP8[$9+2>>0]=($11>>16)&255;HEAP8[$9+3>>0]=$11>>24;
 $12 = HEAP32[$1>>2]|0;
 $13 = ((($12)) + 8|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 HEAP32[$2>>2] = $14;
 $15 = ($14|0)==(0|0);
 $16 = $14;
 L4: do {
  if ($15) {
   label = 5;
  } else {
   $17 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $18 = ($17|0)==(0|0);
   if ($18) {
    label = 5;
   } else {
    $23 = ((($5)) + 32|0);
    $$096 = $17;
    L7: while(1) {
     HEAP32[$4>>2] = $3;
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     $24 = HEAPU8[$$096>>0]|(HEAPU8[$$096+1>>0]<<8)|(HEAPU8[$$096+2>>0]<<16)|(HEAPU8[$$096+3>>0]<<24);
     L9: do {
      switch ($24|0) {
      case 9:  {
       $25 = ((($$096)) + 4|0);
       $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
       $27 = ((($26)) + 4|0);
       $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
       $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
       $30 = ($29|0)==(17);
       if ($30) {
        $31 = (__eval_var_in_print($0,$4,$2,$28)|0);
        HEAP32[$4>>2] = $31;
        $$1$ph = 0;$$195$ph = 0;
        label = 41;
        break L9;
       }
       $32 = ((($26)) + 8|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33 & 3;
       $35 = ($34<<24>>24)==(0);
       if ($35) {
        label = 16;
       } else {
        $36 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
        $37 = (__search_identifier_in_scope_chain($0,0,$36,2,0,0)|0);
        $38 = ($37|0)==(0|0);
        if ($38) {
         $$1$ph = 0;$$195$ph = 0;
         label = 41;
        } else {
         $39 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
         $40 = ($39|0)==(0|0);
         if ($40) {
          $$1$ph = 0;$$195$ph = 0;
          label = 41;
         } else {
          $41 = ($$096|0)==($39|0);
          if ($41) {
           $$1$ph = 0;$$195$ph = 0;
           label = 41;
          } else {
           $42 = (__eval_var_in_print($0,$4,$2,$39)|0);
           HEAP32[$4>>2] = $42;
           $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
           $44 = ($43|0)==(4);
           $$ = $44&1;
           $$1$ph = 0;$$195$ph = $$;
           label = 41;
          }
         }
        }
       }
       break;
      }
      case 17: case 8: case 16: case 5: case 4: case 3: case 2: case 0: case 10:  {
       label = 16;
       break;
      }
      case 19:  {
       break;
      }
      default: {
       label = 64;
       break L7;
      }
      }
     } while(0);
     L18: do {
      if ((label|0) == 16) {
       label = 0;
       $45 = (__calc_expression($0,$2,$4)|0);
       $46 = HEAP32[$4>>2]|0;
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       switch ($47|0) {
       case 17:  {
        $48 = ((($46)) + 4|0);
        $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
        $50 = ((($49)) + 58|0);
        $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
        $52 = ($51|0)==(2);
        if (!($52)) {
         $53 = ((($46)) + 8|0);
         $54 = HEAP8[$53>>0]|0;
         $55 = $54 | 1;
         HEAP8[$53>>0] = $55;
        }
        $70 = ((($46)) + 8|0);
        $71 = HEAP8[$70>>0]|0;
        $72 = $71 & 1;
        $73 = ($72<<24>>24)==(0);
        if ($73) {
         $74 = ((($46)) + 4|0);
         $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
         $76 = ((($75)) + 58|0);
         $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
         $78 = ($77|0)==(2);
         if ($78) {
          __ref($75,$75);
         }
        }
        break;
       }
       case 7:  {
        $56 = ((($46)) + 4|0);
        $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
        __ref($57,$57);
        break;
       }
       case 10:  {
        $58 = ((($46)) + 8|0);
        $59 = HEAP8[$58>>0]|0;
        $60 = $59 & 1;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         $62 = ((($46)) + 4|0);
         $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
         __ref($63,$63);
        }
        break;
       }
       case 11:  {
        $64 = ((($46)) + 4|0);
        $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
        __ref($65,$65);
        break;
       }
       case 13:  {
        $66 = ((($46)) + 4|0);
        $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
        __ref($67,$67);
        break;
       }
       case 16:  {
        $68 = ((($46)) + 4|0);
        $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
        __ref($69,$69);
        break;
       }
       default: {
       }
       }
       $79 = HEAP32[$4>>2]|0;
       $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
       switch ($80|0) {
       case 7:  {
        $81 = ((($79)) + 4|0);
        $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
        __unref($82,$82);
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
        break;
       }
       case 10:  {
        $83 = ((($79)) + 8|0);
        $84 = HEAP8[$83>>0]|0;
        $85 = $84 & 1;
        $86 = ($85<<24>>24)==(0);
        if (!($86)) {
         $$1$ph = $45;$$195$ph = 0;
         label = 41;
         break L18;
        }
        $87 = ((($79)) + 4|0);
        $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
        __unref($88,$88);
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
        break;
       }
       case 11:  {
        $89 = ((($79)) + 4|0);
        $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
        __unref($90,$90);
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
        break;
       }
       case 13:  {
        $91 = ((($79)) + 4|0);
        $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
        __unref($92,$92);
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
        break;
       }
       case 16:  {
        $93 = ((($79)) + 8|0);
        $94 = HEAP8[$93>>0]|0;
        $95 = $94 & 1;
        $96 = ($95<<24>>24)==(0);
        if (!($96)) {
         $$1$ph = $45;$$195$ph = 0;
         label = 41;
         break L18;
        }
        $97 = ((($79)) + 4|0);
        $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
        __unref($98,$98);
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
        break;
       }
       case 17:  {
        $99 = ((($79)) + 8|0);
        $100 = HEAP8[$99>>0]|0;
        $101 = $100 & 1;
        $102 = ($101<<24>>24)==(0);
        if (!($102)) {
         $$1$ph = $45;$$195$ph = 0;
         label = 41;
         break L18;
        }
        $103 = ((($79)) + 4|0);
        $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
        $105 = ((($104)) + 58|0);
        $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
        $107 = ($106|0)==(2);
        if ($107) {
         __unref($104,$104);
         $$1$ph = $45;$$195$ph = 0;
         label = 41;
         break L18;
        }
        $108 = ((($79)) + 4|0);
        $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
        $110 = ((($109)) + 58|0);
        $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
        $112 = ($111|0)==(2);
        if ($112) {
         $$1$ph = $45;$$195$ph = 0;
         label = 41;
         break L18;
        }
        __destroy_routine(0,$109);
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
        break;
       }
       default: {
        $$1$ph = $45;$$195$ph = 0;
        label = 41;
        break L18;
       }
       }
      }
     } while(0);
     L48: do {
      if ((label|0) == 41) {
       label = 0;
       $$1 = $$1$ph;
       L50: while(1) {
        $113 = HEAP32[$4>>2]|0;
        $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
        switch ($114|0) {
        case 0:  {
         label = 43;
         break L50;
         break;
        }
        case 2:  {
         label = 44;
         break L50;
         break;
        }
        case 3:  {
         label = 45;
         break L50;
         break;
        }
        case 4:  {
         label = 46;
         break L50;
         break;
        }
        case 7:  {
         label = 49;
         break L50;
         break;
        }
        case 5:  {
         label = 54;
         break L50;
         break;
        }
        case 16:  {
         break;
        }
        default: {
         label = 60;
         break L50;
        }
        }
        HEAP8[$6>>0] = 0;
        $178 = ((($113)) + 4|0);
        $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
        HEAP32[$4>>2] = $3;
        ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
        $180 = (__format_class_to_string($0,$2,$179,$3,$6)|0);
        $181 = ($180|0)==(0);
        if (!($181)) {
         label = 59;
         break L7;
        }
        $182 = HEAP8[$6>>0]|0;
        $183 = ($182<<24>>24)==(0);
        if ($183) {
         label = 58;
         break;
        }
        $$1 = 0;
       }
       do {
        if ((label|0) == 43) {
         label = 0;
         $115 = (__get_printer($0)|0);
         (FUNCTION_TABLE_iii[$115 & 255](10079,$vararg_buffer)|0);
        }
        else if ((label|0) == 44) {
         label = 0;
         $116 = (__get_printer($0)|0);
         $117 = HEAP32[$4>>2]|0;
         $118 = ((($117)) + 4|0);
         $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
         HEAP32[$vararg_buffer1>>2] = $119;
         (FUNCTION_TABLE_iii[$116 & 255](10083,$vararg_buffer1)|0);
        }
        else if ((label|0) == 45) {
         label = 0;
         $120 = (__get_printer($0)|0);
         $121 = HEAP32[$4>>2]|0;
         $122 = ((($121)) + 4|0);
         HEAP8[tempDoublePtr>>0]=HEAP8[$122>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$122+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$122+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$122+3>>0];$123 = +HEAPF32[tempDoublePtr>>2];
         $124 = $123;
         HEAPF64[$vararg_buffer4>>3] = $124;
         (FUNCTION_TABLE_iii[$120 & 255](10086,$vararg_buffer4)|0);
        }
        else if ((label|0) == 46) {
         label = 0;
         __print_string($0,$113);
         $125 = HEAP32[$4>>2]|0;
         $126 = ((($125)) + 8|0);
         $127 = HEAP8[$126>>0]|0;
         $128 = $127 & 1;
         $129 = ($128<<24>>24)==(0);
         if ($129) {
          $130 = ((($125)) + 4|0);
          $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
          $132 = ($131|0)==(0|0);
          $133 = ($$195$ph<<24>>24)!=(0);
          $or$cond3 = $133 | $132;
          if (!($or$cond3)) {
           _mb_free($131);
           $134 = HEAP32[$4>>2]|0;
           $135 = ((($134)) + 4|0);
           HEAP8[$135>>0]=0&255;HEAP8[$135+1>>0]=(0>>8)&255;HEAP8[$135+2>>0]=(0>>16)&255;HEAP8[$135+3>>0]=0>>24;
          }
         }
        }
        else if ((label|0) == 49) {
         label = 0;
         $136 = ((($113)) + 4|0);
         $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
         $138 = ((($137)) + 37|0);
         $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
         $140 = ($139|0)==(0|0);
         if ($140) {
          $168 = (__get_printer($0)|0);
          $169 = HEAP32[$4>>2]|0;
          $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
          $171 = (__internal_type_to_public_type($170)|0);
          $172 = (_mb_get_type_string($171)|0);
          (FUNCTION_TABLE_iii[$168 & 255]($172,$vararg_buffer12)|0);
          break;
         }
         __init_dynamic_buffer($5);
         $141 = HEAP32[$4>>2]|0;
         $142 = ((($141)) + 4|0);
         $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
         $144 = ((($143)) + 37|0);
         $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
         $146 = ((($143)) + 17|0);
         $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
         $148 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
         $149 = (__countof_dynamic_buffer($5)|0);
         $150 = (FUNCTION_TABLE_iiiii[$145 & 0]($0,$147,$148,$149)|0);
         $151 = (__countof_dynamic_buffer($5)|0);
         $152 = ($150>>>0)>($151>>>0);
         if ($152) {
          $153 = $150;
          while(1) {
           __resize_dynamic_buffer($5,$153);
           $154 = HEAP32[$4>>2]|0;
           $155 = ((($154)) + 4|0);
           $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
           $157 = ((($156)) + 37|0);
           $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
           $159 = ((($156)) + 17|0);
           $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
           $161 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
           $162 = (__countof_dynamic_buffer($5)|0);
           $163 = (FUNCTION_TABLE_iiiii[$158 & 0]($0,$160,$161,$162)|0);
           $164 = (__countof_dynamic_buffer($5)|0);
           $165 = ($163>>>0)>($164>>>0);
           if ($165) {
            $153 = $163;
           } else {
            break;
           }
          }
         }
         $166 = (__get_printer($0)|0);
         $167 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
         HEAP32[$vararg_buffer8>>2] = $167;
         (FUNCTION_TABLE_iii[$166 & 255](10023,$vararg_buffer8)|0);
         __dispose_dynamic_buffer($5);
        }
        else if ((label|0) == 54) {
         label = 0;
         $173 = (__get_printer($0)|0);
         $174 = HEAP32[$4>>2]|0;
         $175 = ((($174)) + 4|0);
         $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
         $177 = (_mb_get_type_string($176)|0);
         (FUNCTION_TABLE_iii[$173 & 255]($177,$vararg_buffer15)|0);
        }
        else if ((label|0) == 58) {
         label = 0;
         $184 = (__get_printer($0)|0);
         $185 = (__internal_type_to_public_type(16)|0);
         $186 = (_mb_get_type_string($185)|0);
         (FUNCTION_TABLE_iii[$184 & 255]($186,$vararg_buffer18)|0);
         break L48;
        }
        else if ((label|0) == 60) {
         label = 0;
         $187 = (__get_printer($0)|0);
         $188 = HEAP32[$4>>2]|0;
         $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
         $190 = (__internal_type_to_public_type($189)|0);
         $191 = (_mb_get_type_string($190)|0);
         (FUNCTION_TABLE_iii[$187 & 255]($191,$vararg_buffer21)|0);
        }
       } while(0);
       $192 = ($$1|0)==(0);
       if (!($192)) {
        $$4$ph = $$1;
        label = 85;
        break L4;
       }
      }
     } while(0);
     $193 = HEAP32[$2>>2]|0;
     $194 = ($193|0)==(0|0);
     if ($194) {
      break;
     }
     $195 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
     $196 = ((($195)) + 4|0);
     $197 = HEAP8[$196>>0]|0;
     $198 = ($197<<24>>24)==(59);
     if ($198) {
      $219 = (__get_printer($0)|0);
      (FUNCTION_TABLE_iii[$219 & 255](10089,$vararg_buffer24)|0);
      $$pr100$pre = HEAP32[$2>>2]|0;
      $220 = ($$pr100$pre|0)==(0|0);
      if ($220) {
       break;
      } else {
       $$pr100151 = $$pr100$pre;
      }
     } else {
      $$pr100151 = $193;
     }
     $221 = HEAPU8[$$pr100151>>0]|(HEAPU8[$$pr100151+1>>0]<<8)|(HEAPU8[$$pr100151+2>>0]<<16)|(HEAPU8[$$pr100151+3>>0]<<24);
     $222 = (__is_print_terminal($0,$221)|0);
     $223 = ($222<<24>>24)==(0);
     if (!($223)) {
      break;
     }
     $224 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
     $225 = ($224|0)==(19);
     if (!($225)) {
      label = 75;
      break;
     }
     $226 = ((($221)) + 4|0);
     $227 = HEAP8[$226>>0]|0;
     switch ($227<<24>>24) {
     case 59: case 44:  {
      break;
     }
     default: {
      label = 75;
      break L7;
     }
     }
     $228 = HEAP32[$2>>2]|0;
     $229 = ((($228)) + 8|0);
     $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
     HEAP32[$2>>2] = $230;
     $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
     $232 = ($230|0)==(0|0);
     if ($232) {
      break;
     }
     $253 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
     switch ($253|0) {
     case 19:  {
      $254 = ((($231)) + 4|0);
      $255 = HEAP8[$254>>0]|0;
      $256 = ($255<<24>>24)==(58);
      if ($256) {
       break L7;
      } else {
       $$096 = $231;
       continue L7;
      }
      break;
     }
     case 8:  {
      $257 = ((($231)) + 4|0);
      $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
      $259 = ((($258)) + 4|0);
      $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
      $261 = ($260|0)==(23|0);
      if ($261) {
       break L7;
      }
      break;
     }
     default: {
     }
     }
     $262 = (__is_expression_terminal($0,$231)|0);
     $263 = ($262<<24>>24)==(0);
     if ($263) {
      $$096 = $231;
     } else {
      break;
     }
    }
    do {
     if ((label|0) == 59) {
      $$4$ph = $180;
      label = 85;
      break L4;
     }
     else if ((label|0) == 64) {
      $199 = HEAP32[$2>>2]|0;
      $200 = ($199|0)==(0|0);
      if (!($200)) {
       $201 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
       $202 = ($201|0)==(0|0);
       if (!($202)) {
        $203 = ((($0)) + 67|0);
        $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
        $205 = (__set_current_error($0,3,$204)|0);
        $206 = ($205<<24>>24)==(0);
        if ($206) {
         break;
        }
        $207 = HEAP32[$2>>2]|0;
        $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
        $209 = ((($208)) + 9|0);
        $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
        $211 = ((($208)) + 13|0);
        $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8);
        $213 = ((($208)) + 15|0);
        $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8);
        __set_error_pos($0,$210,$212,$214);
        $$4$ph = 3;
        label = 85;
        break L4;
       }
      }
      $215 = ((($0)) + 67|0);
      $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
      $217 = (__set_current_error($0,3,$216)|0);
      $218 = ($217<<24>>24)==(0);
      if (!($218)) {
       __set_error_pos($0,0,0,0);
       $$4$ph = 3;
       label = 85;
       break L4;
      }
     }
     else if ((label|0) == 75) {
      $233 = HEAP32[$2>>2]|0;
      $234 = ($233|0)==(0|0);
      if (!($234)) {
       $235 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
       $236 = ($235|0)==(0|0);
       if (!($236)) {
        $237 = ((($0)) + 67|0);
        $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
        $239 = (__set_current_error($0,30,$238)|0);
        $240 = ($239<<24>>24)==(0);
        if ($240) {
         break;
        }
        $241 = HEAP32[$2>>2]|0;
        $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
        $243 = ((($242)) + 9|0);
        $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
        $245 = ((($242)) + 13|0);
        $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8);
        $247 = ((($242)) + 15|0);
        $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8);
        __set_error_pos($0,$244,$246,$248);
        $$4$ph = 3;
        label = 85;
        break L4;
       }
      }
      $249 = ((($0)) + 67|0);
      $250 = HEAPU8[$249>>0]|(HEAPU8[$249+1>>0]<<8)|(HEAPU8[$249+2>>0]<<16)|(HEAPU8[$249+3>>0]<<24);
      $251 = (__set_current_error($0,30,$250)|0);
      $252 = ($251<<24>>24)==(0);
      if (!($252)) {
       __set_error_pos($0,0,0,0);
       $$4$ph = 3;
       label = 85;
       break L4;
      }
     }
    } while(0);
    $270 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $271 = (($270) + -1)|0;
    HEAP8[$9>>0]=$271&255;HEAP8[$9+1>>0]=($271>>8)&255;HEAP8[$9+2>>0]=($271>>16)&255;HEAP8[$9+3>>0]=$271>>24;
    $272 = HEAP32[$2>>2]|0;
    HEAP32[$1>>2] = $272;
    $$4106 = 0;
   }
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $19 = ((($0)) + 67|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = (__set_current_error($0,10,$20)|0);
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $268 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $269 = (($268) + -1)|0;
    HEAP8[$9>>0]=$269&255;HEAP8[$9+1>>0]=($269>>8)&255;HEAP8[$9+2>>0]=($269>>16)&255;HEAP8[$9+3>>0]=$269>>24;
    HEAP32[$1>>2] = $16;
    $$4106 = 0;
    break;
   } else {
    __set_error_pos($0,0,0,0);
    $$4$ph = 3;
    label = 85;
    break;
   }
  }
 } while(0);
 if ((label|0) == 85) {
  $264 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $265 = (($264) + -1)|0;
  HEAP8[$9>>0]=$265&255;HEAP8[$9+1>>0]=($265>>8)&255;HEAP8[$9+2>>0]=($265>>16)&255;HEAP8[$9+3>>0]=$265>>24;
  $266 = HEAP32[$2>>2]|0;
  HEAP32[$1>>2] = $266;
  $267 = (__get_printer($0)|0);
  (FUNCTION_TABLE_iii[$267 & 255](10089,$vararg_buffer27)|0);
  $$4106 = $$4$ph;
 }
 STACKTOP = sp;return ($$4106|0);
}
function __std_input($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0128 = 0, $$0129 = 0, $$0131 = 0, $$1132 = 0, $$2 = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond135 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $2 = sp + 8|0;
 $3 = sp;
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),18320,(9998|0));
  // unreachable;
 }
 $6 = (_mb_attempt_func_begin($0,$1)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = (_mb_attempt_func_end($0,$1)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   $10 = HEAP32[$1>>2]|0;
   $11 = ($10|0)==(0|0);
   L7: do {
    if ($11) {
     label = 8;
    } else {
     $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
     $13 = ($12|0)==(0|0);
     if ($13) {
      label = 8;
     } else {
      $14 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
      L10: do {
       switch ($14|0) {
       case 22:  {
        label = 8;
        break L7;
        break;
       }
       case 4:  {
        $16 = ((($12)) + 4|0);
        $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
        __print_string($0,$12);
        $18 = ((($10)) + 8|0);
        $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
        $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
        $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
        $22 = ($21|0)==(19);
        if ($22) {
         $23 = ((($20)) + 4|0);
         $24 = HEAP8[$23>>0]|0;
         $25 = ($24<<24>>24)==(44);
         if ($25) {
          $39 = ((($19)) + 8|0);
          $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
          $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
          $$pre = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
          $$0129 = $17;$$0131 = $40;$42 = $$pre;$45 = $41;
          break L10;
         }
        }
        $26 = ($19|0)==(0|0);
        $27 = ($20|0)==(0|0);
        $or$cond135 = $26 | $27;
        $28 = ((($0)) + 67|0);
        $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
        $30 = (__set_current_error($0,29,$29)|0);
        $31 = ($30<<24>>24)==(0);
        if ($or$cond135) {
         if ($31) {
          $$0128 = 0;$$1132 = $19;
          break L7;
         }
         __set_error_pos($0,0,0,0);
         $$0128 = 3;$$1132 = $19;
         break L7;
        } else {
         if ($31) {
          $$0128 = 0;$$1132 = $19;
          break L7;
         }
         $32 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
         $33 = ((($32)) + 9|0);
         $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
         $35 = ((($32)) + 13|0);
         $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
         $37 = ((($32)) + 15|0);
         $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
         __set_error_pos($0,$34,$36,$38);
         $$0128 = 3;$$1132 = $19;
         break L7;
        }
        break;
       }
       default: {
        $$0129 = 0;$$0131 = $10;$42 = $14;$45 = $12;
       }
       }
      } while(0);
      $43 = ($42|0)==(9);
      if (!($43)) {
       $44 = ($$0131|0)==(0|0);
       if (!($44)) {
        $46 = ($45|0)==(0|0);
        if (!($46)) {
         $47 = ((($0)) + 67|0);
         $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
         $49 = (__set_current_error($0,18,$48)|0);
         $50 = ($49<<24>>24)==(0);
         if ($50) {
          $$0128 = 0;$$1132 = $$0131;
          break;
         }
         $51 = HEAPU8[$$0131>>0]|(HEAPU8[$$0131+1>>0]<<8)|(HEAPU8[$$0131+2>>0]<<16)|(HEAPU8[$$0131+3>>0]<<24);
         $52 = ((($51)) + 9|0);
         $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
         $54 = ((($51)) + 13|0);
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
         $56 = ((($51)) + 15|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
         __set_error_pos($0,$53,$55,$57);
         $$0128 = 3;$$1132 = $$0131;
         break;
        }
       }
       $58 = ((($0)) + 67|0);
       $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
       $60 = (__set_current_error($0,18,$59)|0);
       $61 = ($60<<24>>24)==(0);
       if ($61) {
        $$0128 = 0;$$1132 = $$0131;
        break;
       }
       __set_error_pos($0,0,0,0);
       $$0128 = 3;$$1132 = $$0131;
       break;
      }
      $62 = ((($45)) + 4|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $64 = ((($63)) + 4|0);
      $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
      $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
      switch ($66|0) {
      case 3: case 2:  {
       $67 = (__get_inputer($0)|0);
       (FUNCTION_TABLE_iiii[$67 & 255]($$0129,$2,256)|0);
       $68 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
       $69 = ((($68)) + 4|0);
       $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
       HEAP8[$70>>0]=2&255;HEAP8[$70+1>>0]=(2>>8)&255;HEAP8[$70+2>>0]=(2>>16)&255;HEAP8[$70+3>>0]=2>>24;
       $71 = (_strtol($2,$3,0)|0);
       $72 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
       $73 = ((($72)) + 4|0);
       $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $75 = ((($74)) + 4|0);
       HEAP8[$75>>0]=$71&255;HEAP8[$75+1>>0]=($71>>8)&255;HEAP8[$75+2>>0]=($71>>16)&255;HEAP8[$75+3>>0]=$71>>24;
       $76 = HEAP32[$3>>2]|0;
       $77 = HEAP8[$76>>0]|0;
       $78 = ($77<<24>>24)==(0);
       if (!($78)) {
        $79 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
        $80 = ((($79)) + 4|0);
        $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
        HEAP8[$81>>0]=3&255;HEAP8[$81+1>>0]=(3>>8)&255;HEAP8[$81+2>>0]=(3>>16)&255;HEAP8[$81+3>>0]=3>>24;
        $82 = (+_strtod($2,$3));
        $83 = $82;
        $84 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
        $85 = ((($84)) + 4|0);
        $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
        $87 = ((($86)) + 4|0);
        HEAPF32[tempDoublePtr>>2]=$83;HEAP8[$87>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$87+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$87+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$87+3>>0]=HEAP8[tempDoublePtr+3>>0];
        $88 = HEAP32[$3>>2]|0;
        $89 = HEAP8[$88>>0]|0;
        $90 = ($89<<24>>24)==(0);
        if (!($90)) {
         $91 = ($$0131|0)==(0|0);
         if (!($91)) {
          $92 = HEAPU8[$$0131>>0]|(HEAPU8[$$0131+1>>0]<<8)|(HEAPU8[$$0131+2>>0]<<16)|(HEAPU8[$$0131+3>>0]<<24);
          $93 = ($92|0)==(0|0);
          if (!($93)) {
           $94 = ((($0)) + 67|0);
           $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
           $96 = (__set_current_error($0,23,$95)|0);
           $97 = ($96<<24>>24)==(0);
           if ($97) {
            $$0128 = 0;$$1132 = $$0131;
            break L7;
           }
           $98 = HEAPU8[$$0131>>0]|(HEAPU8[$$0131+1>>0]<<8)|(HEAPU8[$$0131+2>>0]<<16)|(HEAPU8[$$0131+3>>0]<<24);
           $99 = ((($98)) + 9|0);
           $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
           $101 = ((($98)) + 13|0);
           $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8);
           $103 = ((($98)) + 15|0);
           $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8);
           __set_error_pos($0,$100,$102,$104);
           $$0128 = 3;$$1132 = $$0131;
           break L7;
          }
         }
         $105 = ((($0)) + 67|0);
         $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
         $107 = (__set_current_error($0,23,$106)|0);
         $108 = ($107<<24>>24)==(0);
         if ($108) {
          $$0128 = 0;$$1132 = $$0131;
          break L7;
         }
         __set_error_pos($0,0,0,0);
         $$0128 = 3;$$1132 = $$0131;
         break L7;
        }
       }
       $109 = ((($$0131)) + 8|0);
       $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
       $$0128 = 0;$$1132 = $110;
       break L7;
       break;
      }
      case 4:  {
       $111 = ((($65)) + 4|0);
       $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
       $113 = ($112|0)==(0|0);
       if (!($113)) {
        $114 = ((($65)) + 8|0);
        $115 = HEAP8[$114>>0]|0;
        $116 = $115 & 1;
        $117 = ($116<<24>>24)==(0);
        if ($117) {
         _mb_free($112);
         $118 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
         $119 = ((($118)) + 4|0);
         $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
         $121 = ((($120)) + 4|0);
         HEAP8[$121>>0]=0&255;HEAP8[$121+1>>0]=(0>>8)&255;HEAP8[$121+2>>0]=(0>>16)&255;HEAP8[$121+3>>0]=0>>24;
        }
       }
       $122 = (__get_inputer($0)|0);
       $123 = (FUNCTION_TABLE_iiii[$122 & 255]($$0129,$2,256)|0);
       $124 = (($123) + 1)|0;
       $125 = (_mb_memdup($2,$124)|0);
       $126 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
       $127 = ((($126)) + 4|0);
       $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
       $129 = ((($128)) + 4|0);
       HEAP8[$129>>0]=$125&255;HEAP8[$129+1>>0]=($125>>8)&255;HEAP8[$129+2>>0]=($125>>16)&255;HEAP8[$129+3>>0]=$125>>24;
       $130 = ((($$0131)) + 8|0);
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $$0128 = 0;$$1132 = $131;
       break L7;
       break;
      }
      default: {
       $132 = ($$0131|0)==(0|0);
       $133 = ((($0)) + 67|0);
       $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
       $135 = (__set_current_error($0,23,$134)|0);
       $136 = ($135<<24>>24)==(0);
       if ($132) {
        if ($136) {
         $$0128 = 0;$$1132 = 0;
         break L7;
        }
        __set_error_pos($0,0,0,0);
        $$0128 = 3;$$1132 = 0;
        break L7;
       } else {
        if ($136) {
         $$0128 = 0;$$1132 = $$0131;
         break L7;
        }
        $137 = HEAPU8[$$0131>>0]|(HEAPU8[$$0131+1>>0]<<8)|(HEAPU8[$$0131+2>>0]<<16)|(HEAPU8[$$0131+3>>0]<<24);
        $138 = ((($137)) + 9|0);
        $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
        $140 = ((($137)) + 13|0);
        $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8);
        $142 = ((($137)) + 15|0);
        $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8);
        __set_error_pos($0,$139,$141,$143);
        $$0128 = 3;$$1132 = $$0131;
        break L7;
       }
      }
      }
     }
    }
   } while(0);
   if ((label|0) == 8) {
    $15 = (__get_inputer($0)|0);
    (FUNCTION_TABLE_iiii[$15 & 255](0,$2,256)|0);
    $$0128 = 0;$$1132 = $10;
   }
   HEAP32[$1>>2] = $$1132;
   $$2 = $$0128;
  } else {
   $$2 = $8;
  }
 } else {
  $$2 = $6;
 }
 STACKTOP = sp;return ($$2|0);
}
function __get_inputer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $mb_gets$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),4863,(10039|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 167|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ($3|0)==(0|0);
  $mb_gets$ = $4 ? 156 : $3;
  return ($mb_gets$|0);
 }
 return (0)|0;
}
function __print_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if ($or$cond) {
  $4 = (__get_printer($0)|0);
  $5 = ((($1)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(0|0);
  $$ = $7 ? 6969 : $6;
  HEAP32[$vararg_buffer>>2] = $$;
  (FUNCTION_TABLE_iii[$4 & 255](10023,$vararg_buffer)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((7342|0),(1578|0),4897,(10009|0));
  // unreachable;
 }
}
function __get_printer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $printf$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),4853,(10026|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 163|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ($3|0)==(0|0);
  $printf$ = $4 ? 157 : $3;
  return ($printf$|0);
 }
 return (0)|0;
}
function _mb_gets($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)!=(0|0);
 $4 = ($2|0)!=(0);
 $or$cond = $3 & $4;
 if ($or$cond) {
  $5 = HEAP32[140]|0;
  $6 = (_fgets($1,$2,$5)|0);
  $7 = ($6|0)==(0|0);
  if ($7) {
   $8 = HEAP32[172]|0;
   (_fwrite(10052,15,1,$8)|0);
   _exit(1);
   // unreachable;
  }
  $9 = (_strlen($1)|0);
  $10 = (($9) + -1)|0;
  $11 = (($1) + ($10)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(10);
  if ($13) {
   HEAP8[$11>>0] = 0;
   $$0 = $10;
  } else {
   $$0 = $9;
  }
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __eval_var_in_print($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $5 = ($0|0)==(0|0);
 if ($5) {
  ___assert_fail((1649|0),(1578|0),10857,(10387|0));
  // unreachable;
 }
 $6 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 switch ($6|0) {
 case 17:  {
  (__execute_statement($0,$2,1)|0);
  $7 = ((($0)) + 75|0);
  ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($8)) + 20|0);
  (__public_value_to_internal_object($9,$4)|0);
  $10 = HEAP32[$4>>2]|0;
  $11 = ($10|0)==(4);
  if ($11) {
   $12 = ((($4)) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = (_strlen($13)|0);
   $15 = (($14) + 1)|0;
   $16 = (_mb_strdup($13,$15)|0);
   HEAP32[$12>>2] = $16;
   $17 = ((($4)) + 8|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18 & -2;
   HEAP8[$17>>0] = $19;
   $20 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $21 = ((($20)) + 24|0);
   HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
   $22 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $23 = ((($22)) + 20|0);
   HEAP8[$23>>0]=0&255;HEAP8[$23+1>>0]=(0>>8)&255;HEAP8[$23+2>>0]=(0>>16)&255;HEAP8[$23+3>>0]=0>>24;
  }
  $24 = HEAP32[$1>>2]|0;
  dest=$24; src=$4; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $25 = ((($3)) + 4|0);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ((($26)) + 58|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = ($28|0)==(3);
  if (!($29)) {
   $30 = HEAP32[$2>>2]|0;
   $31 = ($30|0)==(0|0);
   if (!($31)) {
    $32 = ((($30)) + 4|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    HEAP32[$2>>2] = $33;
   }
  }
  break;
 }
 case 9:  {
  $34 = ((($3)) + 4|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ((($35)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  HEAP32[$1>>2] = $37;
  $38 = HEAP32[$2>>2]|0;
  $39 = ($38|0)==(0|0);
  if (!($39)) {
   $40 = ((($38)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   HEAP32[$2>>2] = $41;
  }
  break;
 }
 default: {
  HEAP32[$1>>2] = $3;
  $42 = HEAP32[$2>>2]|0;
  $43 = ($42|0)==(0|0);
  if (!($43)) {
   $44 = ((($42)) + 8|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   HEAP32[$2>>2] = $45;
  }
 }
 }
 $46 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($46|0);
}
function __init_dynamic_buffer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((10291|0),(1578|0),3167,(10366|0));
  // unreachable;
 } else {
  dest=$0; stop=dest+32|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $2 = ((($0)) + 32|0);
  HEAP8[$2>>0]=$0&255;HEAP8[$2+1>>0]=($0>>8)&255;HEAP8[$2+2>>0]=($0>>16)&255;HEAP8[$2+3>>0]=$0>>24;
  $3 = ((($0)) + 36|0);
  HEAP8[$3>>0]=32&255;HEAP8[$3+1>>0]=(32>>8)&255;HEAP8[$3+2>>0]=(32>>16)&255;HEAP8[$3+3>>0]=32>>24;
  return;
 }
}
function __countof_dynamic_buffer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((10291|0),(1578|0),3187,(10342|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 36|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  return ($3|0);
 }
 return (0)|0;
}
function __resize_dynamic_buffer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((10291|0),(1578|0),3196,(10319|0));
  // unreachable;
 }
 $3 = ((($0)) + 36|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4>>>0)<($1>>>0);
 if ($5) {
  $6 = ((($0)) + 32|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)==($0|0);
  do {
   if (!($8)) {
    $9 = ($7|0)==(0|0);
    if ($9) {
     ___assert_fail((1713|0),(1578|0),3200,(10319|0));
     // unreachable;
    } else {
     _mb_free($7);
     HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
     break;
    }
   }
  } while(0);
  $10 = (_mb_malloc($1)|0);
  HEAP8[$6>>0]=$10&255;HEAP8[$6+1>>0]=($10>>8)&255;HEAP8[$6+2>>0]=($10>>16)&255;HEAP8[$6+3>>0]=$10>>24;
  HEAP8[$3>>0]=$1&255;HEAP8[$3+1>>0]=($1>>8)&255;HEAP8[$3+2>>0]=($1>>16)&255;HEAP8[$3+3>>0]=$1>>24;
 }
 return;
}
function __dispose_dynamic_buffer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((10291|0),(1578|0),3176,(10295|0));
  // unreachable;
 }
 $2 = ((($0)) + 32|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==($0|0);
 do {
  if (!($4)) {
   $5 = ($3|0)==(0|0);
   if ($5) {
    ___assert_fail((1713|0),(1578|0),3179,(10295|0));
    // unreachable;
   } else {
    _mb_free($3);
    HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
    break;
   }
  }
 } while(0);
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 $6 = ((($0)) + 36|0);
 HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
 return;
}
function _mb_get_type_string($0) {
 $0 = $0|0;
 var $$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 do {
  switch ($0|0) {
  case 0:  {
   $$0 = 10079;
   break;
  }
  case 1:  {
   $$0 = 10283;
   break;
  }
  case 2:  {
   $$0 = 10275;
   break;
  }
  case 4:  {
   $$0 = 10270;
   break;
  }
  case 6:  {
   $$0 = 10263;
   break;
  }
  case 8:  {
   $$0 = 10256;
   break;
  }
  case 16:  {
   $$0 = 10251;
   break;
  }
  case 32:  {
   $$0 = 10242;
   break;
  }
  case 64:  {
   $$0 = 10229;
   break;
  }
  case 128:  {
   $$0 = 10223;
   break;
  }
  case 256:  {
   $$0 = 2123;
   break;
  }
  case 512:  {
   $$0 = 10209;
   break;
  }
  case 1024:  {
   $$0 = 2128;
   break;
  }
  case 2048:  {
   $$0 = 10195;
   break;
  }
  case 1280:  {
   $$0 = 10184;
   break;
  }
  case 2560:  {
   $$0 = 2203;
   break;
  }
  case 4096:  {
   $$0 = 10178;
   break;
  }
  case 8192:  {
   $$0 = 10170;
   break;
  }
  default: {
   $$0 = 16212;
  }
  }
 } while(0);
 return ($$0|0);
}
function __format_class_to_string($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$064 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond9 = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 8|0;
 $6 = sp;
 $7 = ($0|0)!=(0|0);
 $8 = ($1|0)!=(0|0);
 $or$cond = $7 & $8;
 $9 = ($2|0)!=(0|0);
 $or$cond3 = $or$cond & $9;
 $10 = ($3|0)!=(0|0);
 $or$cond9 = $or$cond3 & $10;
 if (!($or$cond9)) {
  ___assert_fail((10110|0),(1578|0),8619,(10136|0));
  // unreachable;
 }
 $11 = (__search_identifier_in_class($0,$2,10160,0,0)|0);
 $12 = ($4|0)!=(0|0);
 if ($12) {
  HEAP8[$4>>0] = 0;
 }
 $13 = ($11|0)==(0|0);
 if ($13) {
  $$064 = 0;
 } else {
  $14 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $15 = HEAP32[$1>>2]|0;
  HEAP32[$5>>2] = $15;
  $16 = ((($6)) + 4|0);
  HEAP32[$16>>2] = 0;
  HEAP32[$6>>2] = 0;
  $17 = ((($14)) + 4|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = (__eval_routine($0,$5,$6,1,$18,148,149)|0);
  $20 = ($19|0)==(0);
  do {
   if ($20) {
    $21 = ((($0)) + 75|0);
    dest=$3; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = ((($22)) + 20|0);
    (__public_value_to_internal_object($23,$3)|0);
    $24 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    $25 = ($24|0)==(4);
    if ($25) {
     $26 = ((($3)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = (_strlen($27)|0);
     $29 = (($28) + 1)|0;
     $30 = (_mb_strdup($27,$29)|0);
     HEAP8[$26>>0]=$30&255;HEAP8[$26+1>>0]=($30>>8)&255;HEAP8[$26+2>>0]=($30>>16)&255;HEAP8[$26+3>>0]=$30>>24;
     $31 = ((($3)) + 8|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32 & -2;
     HEAP8[$31>>0] = $33;
     $34 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
     $35 = ((($34)) + 24|0);
     HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=(0>>8)&255;HEAP8[$35+2>>0]=(0>>16)&255;HEAP8[$35+3>>0]=0>>24;
     $36 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
     $37 = ((($36)) + 20|0);
     HEAP8[$37>>0]=0&255;HEAP8[$37+1>>0]=(0>>8)&255;HEAP8[$37+2>>0]=(0>>16)&255;HEAP8[$37+3>>0]=0>>24;
     if (!($12)) {
      $$2 = 0;
      break;
     }
     HEAP8[$4>>0] = 1;
     $$2 = 0;
     break;
    }
    $38 = HEAP32[$1>>2]|0;
    $39 = ($38|0)==(0|0);
    if (!($39)) {
     $40 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $41 = ($40|0)==(0|0);
     if (!($41)) {
      $42 = ((($0)) + 67|0);
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      $44 = (__set_current_error($0,17,$43)|0);
      $45 = ($44<<24>>24)==(0);
      if ($45) {
       $$2 = 0;
       break;
      }
      $46 = HEAP32[$1>>2]|0;
      $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $48 = ((($47)) + 9|0);
      $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      $50 = ((($47)) + 13|0);
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8);
      $52 = ((($47)) + 15|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8);
      __set_error_pos($0,$49,$51,$53);
      $$2 = 3;
      break;
     }
    }
    $54 = ((($0)) + 67|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    $56 = (__set_current_error($0,17,$55)|0);
    $57 = ($56<<24>>24)==(0);
    if ($57) {
     $$2 = 0;
    } else {
     __set_error_pos($0,0,0,0);
     $$2 = 3;
    }
   } else {
    $$2 = 0;
   }
  } while(0);
  $$064 = $$2;
 }
 STACKTOP = sp;return ($$064|0);
}
function __is_print_terminal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((7342|0),(1578|0),4777,(10091|0));
  // unreachable;
 }
 $4 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 switch ($4|0) {
 case 22:  {
  $19 = 1;
  break;
 }
 case 19:  {
  $5 = ((($1)) + 4|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ($6<<24>>24)==(58);
  $$ = $7&1;
  return ($$|0);
  break;
 }
 case 8:  {
  $8 = ((($1)) + 4|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = ((($9)) + 4|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)==(69|0);
  if ($12) {
   $19 = 1;
  } else {
   $13 = ((($1)) + 4|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)==(70|0);
   if ($17) {
    $19 = 1;
   } else {
    $18 = ($16|0)==(71|0);
    $phitmp = $18&1;
    $19 = $phitmp;
   }
  }
  break;
 }
 default: {
  $19 = 0;
 }
 }
 return ($19|0);
}
function _mb_pop_string($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($2|0)==(0|0);
 do {
  if ($4) {
   $$1 = 3;
  } else {
   HEAP32[$2>>2] = 0;
   $5 = ($0|0)!=(0|0);
   $6 = ($1|0)!=(0|0);
   $or$cond = $5 & $6;
   if ($or$cond) {
    $7 = ((($3)) + 4|0);
    HEAP32[$7>>2] = 0;
    HEAP32[$3>>2] = 0;
    $8 = (_mb_pop_value($0,$1,$3)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     $10 = HEAP32[$3>>2]|0;
     $cond1 = ($10|0)==(8);
     if ($cond1) {
      $11 = HEAP32[$7>>2]|0;
      HEAP32[$2>>2] = $11;
      $$1 = 0;
      break;
     } else {
      __assign_public_value($0,$3,0,0);
      $$1 = 3;
      break;
     }
    } else {
     $$1 = $8;
    }
   } else {
    $$1 = 3;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ls_count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1847|0),(1578|0),2686,(10689|0));
  // unreachable;
 } else {
  $2 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
  return ($2|0);
 }
 return (0)|0;
}
function _mb_uu_strlen($0) {
 $0 = $0|0;
 var $$013 = 0, $$015 = 0, $$2 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$2 = 0;
  } else {
   $$013 = 0;$$015 = $0;
   while(1) {
    $2 = HEAP8[$$015>>0]|0;
    $3 = ($2<<24>>24)==(0);
    if ($3) {
     $$2 = $$013;
     break L1;
    }
    $4 = (_mb_uu_ischar($$015)|0);
    $5 = ($4|0)<(1);
    $6 = (($$015) + ($4)|0);
    $7 = (($$013) + 1)|0;
    if ($5) {
     $$2 = $4;
     break;
    } else {
     $$013 = $7;$$015 = $6;
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function _mb_uu_ischar($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$0 = 0;
  } else {
   $2 = HEAP8[$0>>0]|0;
   $3 = ($2<<24>>24)<(0);
   if ($3) {
    $4 = $2&255;
    $5 = (10433 + ($4)|0);
    $6 = HEAP8[$5>>0]|0;
    switch ($6<<24>>24) {
    case 2:  {
     $$0 = 2;
     break L1;
     break;
    }
    case 3:  {
     $$0 = 3;
     break L1;
     break;
    }
    case 4:  {
     $$0 = 3;
     break L1;
     break;
    }
    case 5:  {
     $$0 = 4;
     break L1;
     break;
    }
    case 6:  {
     $$0 = 4;
     break L1;
     break;
    }
    case 10:  {
     $$0 = 3;
     break L1;
     break;
    }
    case 11:  {
     $$0 = 4;
     break L1;
     break;
    }
    default: {
     $$0 = 0;
     break L1;
    }
    }
   } else {
    $$0 = 1;
   }
  }
 } while(0);
 return ($$0|0);
}
function __real_to_str_std($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$01 = 0, $2 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = $0;
 HEAPF64[$vararg_buffer>>3] = $2;
 $3 = (_sprintf($1,10086,$vararg_buffer)|0);
 $4 = ($3>>>0)>(317);
 if ($4) {
  ___assert_fail((10717|0),(1578|0),6214,(10741|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 L3: while(1) {
  $5 = (($1) + ($$01)|0);
  $6 = HEAP8[$5>>0]|0;
  switch ($6<<24>>24) {
  case 44:  {
   label = 4;
   break L3;
   break;
  }
  case 0:  {
   break L3;
   break;
  }
  default: {
  }
  }
  $7 = (($$01) + 1)|0;
  $8 = ($7>>>0)<(318);
  if ($8) {
   $$01 = $7;
  } else {
   break;
  }
 }
 if ((label|0) == 4) {
  HEAP8[$5>>0] = 46;
 }
 STACKTOP = sp;return;
}
function _mb_push_string($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  $6 = ((($3)) + 4|0);
  HEAP32[$6>>2] = $2;
  HEAP32[$3>>2] = 8;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
  $7 = (_mb_push_value($0,$1,$$byval_copy)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   __mark_lazy_destroy_string($0,$2);
   $$1 = 0;
  } else {
   $$1 = $7;
  }
 } else {
  $$1 = 3;
 }
 STACKTOP = sp;return ($$1|0);
}
function _mb_uu_substr($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$058 = 0, $$065$lcssa = 0, $$071 = 0, $$260124 = 0, $$267 = 0, $$270$ph = 0, $$273$lcssa = 0, $$273$ph = 0, $$273116 = 0, $$273123 = 0, $$4 = 0, $$lcssa = 0, $$ph = 0, $$pr$pre = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond3$not = 0, $or$cond5 = 0, $or$cond77 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 $5 = ($1|0)<(0);
 $or$cond = $4 | $5;
 $6 = ($2|0)<(1);
 $or$cond3 = $or$cond | $6;
 $or$cond3$not = $or$cond3 ^ 1;
 $7 = ($3|0)!=(0|0);
 $or$cond5 = $7 & $or$cond3$not;
 L1: do {
  if ($or$cond5) {
   $$058 = $0;$$071 = 0;
   while(1) {
    $8 = HEAP8[$$058>>0]|0;
    $9 = ($8<<24>>24)==(0);
    if ($9) {
     $$270$ph = 0;$$273$ph = $$071;$$ph = 0;
     break;
    }
    $10 = (_mb_uu_ischar($$058)|0);
    $11 = ($10|0)<(1);
    if ($11) {
     $$4 = $10;
     break L1;
    }
    $12 = ($$071|0)==($1|0);
    $13 = (($$058) + ($10)|0);
    $14 = (($$071) + 1)|0;
    if ($12) {
     $$270$ph = $$058;$$273$ph = $1;$$ph = $8;
     break;
    } else {
     $$058 = $13;$$071 = $14;
    }
   }
   $15 = (($2) + ($1))|0;
   $16 = ($$ph<<24>>24)==(0);
   L7: do {
    if ($16) {
     $$065$lcssa = 0;$$273$lcssa = $$273$ph;$$lcssa = $$ph;
     label = 6;
    } else {
     $$260124 = $$058;$$273123 = $$273$ph;$33 = $$ph;
     while(1) {
      $17 = (_mb_uu_ischar($$260124)|0);
      $18 = ($17|0)<(1);
      if ($18) {
       $$4 = $17;
       break L1;
      }
      $19 = ($$273123|0)==($15|0);
      $20 = (($$260124) + ($17)|0);
      if ($19) {
       $$267 = $$260124;$$273116 = $$273123;$$pre$phiZ2D = $15;$23 = $33;
       break L7;
      }
      $21 = (($$273123) + 1)|0;
      $$pr$pre = HEAP8[$20>>0]|0;
      $22 = ($$pr$pre<<24>>24)==(0);
      if ($22) {
       $$065$lcssa = $20;$$273$lcssa = $21;$$lcssa = $$pr$pre;
       label = 6;
       break;
      } else {
       $$260124 = $20;$$273123 = $21;$33 = $$pr$pre;
      }
     }
    }
   } while(0);
   if ((label|0) == 6) {
    $$pre = (($2) + ($1))|0;
    $$267 = $$065$lcssa;$$273116 = $$273$lcssa;$$pre$phiZ2D = $$pre;$23 = $$lcssa;
   }
   $24 = ($23<<24>>24)!=(0);
   $25 = ($$273116|0)==($$pre$phiZ2D|0);
   $or$cond77 = $25 | $24;
   if ($or$cond77) {
    $26 = $$267;
    $27 = $$270$ph;
    $28 = (($26) - ($27))|0;
    $29 = (($28) + 1)|0;
    $30 = (_mb_malloc($29)|0);
    HEAP32[$3>>2] = $30;
    _memcpy(($30|0),($$270$ph|0),($28|0))|0;
    $31 = HEAP32[$3>>2]|0;
    $32 = (($31) + ($28)|0);
    HEAP8[$32>>0] = 0;
    $$4 = $28;
   } else {
    $$4 = -1;
   }
  } else {
   $$4 = -1;
  }
 } while(0);
 return ($$4|0);
}
function _mb_push_real($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 var $$014 = 0, $$1 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if ($or$cond) {
  $6 = ((($3)) + 4|0);
  HEAPF32[$6>>2] = $2;
  HEAP32[$3>>2] = 4;
  $7 = (~~(($2)));
  $8 = (+($7|0));
  $9 = $8 == $2;
  if ($9) {
   HEAP32[$3>>2] = 2;
   HEAP32[$6>>2] = $7;
  }
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
  $10 = (_mb_push_value($0,$1,$$byval_copy)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$014 = 0;
   label = 5;
  } else {
   $$1 = $10;
  }
 } else {
  $$014 = 3;
  label = 5;
 }
 if ((label|0) == 5) {
  $$1 = $$014;
 }
 STACKTOP = sp;return ($$1|0);
}
function __core_dim($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0152 = 0, $$1 = 0, $$sink = 0, $$sink164 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0;
 var $or$cond = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $2 = sp;
 $3 = sp + 4|0;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),15618,(11903|0));
  // unreachable;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(0|0);
 L4: do {
  if ($9) {
   label = 5;
  } else {
   $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = ($11|0)==(10);
   if ($12) {
    dest=$3; stop=dest+50|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $32 = ((($10)) + 4|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 21|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = ((($3)) + 21|0);
    HEAP8[$36>>0]=$35&255;HEAP8[$36+1>>0]=($35>>8)&255;HEAP8[$36+2>>0]=($35>>16)&255;HEAP8[$36+3>>0]=$35>>24;
    $37 = ((($33)) + 17|0);
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $39 = ((($3)) + 17|0);
    HEAP8[$39>>0]=$38&255;HEAP8[$39+1>>0]=($38>>8)&255;HEAP8[$39+2>>0]=($38>>16)&255;HEAP8[$39+3>>0]=$38>>24;
    $40 = ((($8)) + 8|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = ($41|0)==(0|0);
    do {
     if (!($42)) {
      $43 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
      $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
      $45 = ($44|0)==(8);
      if ($45) {
       $46 = ((($43)) + 4|0);
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       $48 = ((($47)) + 4|0);
       $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
       $50 = ($49|0)==(22|0);
       if ($50) {
        $68 = ((($41)) + 8|0);
        $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
        $70 = ($69|0)==(0|0);
        if ($70) {
         $73 = ((($0)) + 67|0);
         $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
         $75 = (__set_current_error($0,23,$74)|0);
         $76 = ($75<<24>>24)==(0);
         if ($76) {
          $$0152 = 0;$$1 = $41;
          break L4;
         }
         __set_error_pos($0,0,0,0);
         $$0152 = 3;$$1 = $41;
         break L4;
        }
        $71 = ((($3)) + 33|0);
        $72 = ((($3)) + 29|0);
        $$0 = $69;$$sink164 = 0;$87 = 0;
        while(1) {
         $77 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
         $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
         $79 = ($78|0)==(8);
         if ($79) {
          $80 = ((($77)) + 4|0);
          $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
          $82 = ((($81)) + 4|0);
          $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
          $84 = ($83|0)==(23|0);
          if ($84) {
           label = 46;
           break;
          }
         }
         $85 = (__try_get_value($77,$2)|0);
         $86 = ($85<<24>>24)==(0);
         if ($86) {
          label = 26;
          break;
         }
         $101 = HEAP32[$2>>2]|0;
         $102 = ($101|0)<(1);
         if ($102) {
          label = 32;
          break;
         }
         $116 = ($87&255)>(3);
         if ($116) {
          label = 38;
          break;
         }
         $130 = $87&255;
         $131 = (($87) + 1)<<24>>24;
         $132 = (((($3)) + 34|0) + ($130<<2)|0);
         HEAP8[$132>>0]=$101&255;HEAP8[$132+1>>0]=($101>>8)&255;HEAP8[$132+2>>0]=($101>>16)&255;HEAP8[$132+3>>0]=$101>>24;
         $133 = ($$sink164|0)!=(0);
         $134 = (($101) + ($$sink164))|0;
         $135 = Math_imul($101, $$sink164)|0;
         $$sink = $133 ? $135 : $134;
         $136 = ((($$0)) + 8|0);
         $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
         $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
         $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
         $140 = ($139|0)==(19);
         if (!($140)) {
          $$0 = $137;$$sink164 = $$sink;$87 = $131;
          continue;
         }
         $141 = ((($138)) + 4|0);
         $142 = HEAP8[$141>>0]|0;
         $143 = ($142<<24>>24)==(44);
         if (!($143)) {
          $$0 = $137;$$sink164 = $$sink;$87 = $131;
          continue;
         }
         $144 = ((($137)) + 8|0);
         $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
         $$0 = $145;$$sink164 = $$sink;$87 = $131;
        }
        if ((label|0) == 26) {
         HEAP8[$71>>0] = $87;
         HEAP8[$72>>0]=$$sink164&255;HEAP8[$72+1>>0]=($$sink164>>8)&255;HEAP8[$72+2>>0]=($$sink164>>16)&255;HEAP8[$72+3>>0]=$$sink164>>24;
         $88 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
         $89 = ($88|0)==(0|0);
         $90 = ((($0)) + 67|0);
         $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
         $92 = (__set_current_error($0,13,$91)|0);
         $93 = ($92<<24>>24)==(0);
         if ($89) {
          if ($93) {
           $$0152 = 0;$$1 = $$0;
           break L4;
          }
          __set_error_pos($0,0,0,0);
          $$0152 = 3;$$1 = $$0;
          break L4;
         } else {
          if ($93) {
           $$0152 = 0;$$1 = $$0;
           break L4;
          }
          $94 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
          $95 = ((($94)) + 9|0);
          $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
          $97 = ((($94)) + 13|0);
          $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8);
          $99 = ((($94)) + 15|0);
          $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8);
          __set_error_pos($0,$96,$98,$100);
          $$0152 = 3;$$1 = $$0;
          break L4;
         }
        }
        else if ((label|0) == 32) {
         HEAP8[$71>>0] = $87;
         HEAP8[$72>>0]=$$sink164&255;HEAP8[$72+1>>0]=($$sink164>>8)&255;HEAP8[$72+2>>0]=($$sink164>>16)&255;HEAP8[$72+3>>0]=$$sink164>>24;
         $103 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
         $104 = ($103|0)==(0|0);
         $105 = ((($0)) + 67|0);
         $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
         $107 = (__set_current_error($0,19,$106)|0);
         $108 = ($107<<24>>24)==(0);
         if ($104) {
          if ($108) {
           $$0152 = 0;$$1 = $$0;
           break L4;
          }
          __set_error_pos($0,0,0,0);
          $$0152 = 3;$$1 = $$0;
          break L4;
         } else {
          if ($108) {
           $$0152 = 0;$$1 = $$0;
           break L4;
          }
          $109 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
          $110 = ((($109)) + 9|0);
          $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
          $112 = ((($109)) + 13|0);
          $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
          $114 = ((($109)) + 15|0);
          $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8);
          __set_error_pos($0,$111,$113,$115);
          $$0152 = 3;$$1 = $$0;
          break L4;
         }
        }
        else if ((label|0) == 38) {
         HEAP8[$71>>0] = $87;
         HEAP8[$72>>0]=$$sink164&255;HEAP8[$72+1>>0]=($$sink164>>8)&255;HEAP8[$72+2>>0]=($$sink164>>16)&255;HEAP8[$72+3>>0]=$$sink164>>24;
         $117 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
         $118 = ($117|0)==(0|0);
         $119 = ((($0)) + 67|0);
         $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
         $121 = (__set_current_error($0,21,$120)|0);
         $122 = ($121<<24>>24)==(0);
         if ($118) {
          if ($122) {
           $$0152 = 0;$$1 = $$0;
           break L4;
          }
          __set_error_pos($0,0,0,0);
          $$0152 = 3;$$1 = $$0;
          break L4;
         } else {
          if ($122) {
           $$0152 = 0;$$1 = $$0;
           break L4;
          }
          $123 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
          $124 = ((($123)) + 9|0);
          $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
          $126 = ((($123)) + 13|0);
          $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8);
          $128 = ((($123)) + 15|0);
          $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8);
          __set_error_pos($0,$125,$127,$129);
          $$0152 = 3;$$1 = $$0;
          break L4;
         }
        }
        else if ((label|0) == 46) {
         HEAP8[$71>>0] = $87;
         HEAP8[$72>>0]=$$sink164&255;HEAP8[$72+1>>0]=($$sink164>>8)&255;HEAP8[$72+2>>0]=($$sink164>>16)&255;HEAP8[$72+3>>0]=$$sink164>>24;
         $146 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         __clear_array($146);
         $147 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         dest=$3; src=$147; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
         dest=$147; src=$3; stop=dest+50|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
         $148 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         __init_array($148);
         $149 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $150 = ((($149)) + 25|0);
         $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
         $152 = ($151|0)==(0|0);
         if (!($152)) {
          $$0152 = 0;$$1 = $$0;
          break L4;
         }
         $153 = ((($149)) + 33|0);
         HEAP8[$153>>0] = 0;
         $154 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $155 = ((($154)) + 34|0);
         HEAP8[$155>>0]=0&255;HEAP8[$155+1>>0]=(0>>8)&255;HEAP8[$155+2>>0]=(0>>16)&255;HEAP8[$155+3>>0]=0>>24;
         $156 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $157 = ((($156)) + 29|0);
         HEAP8[$157>>0]=0&255;HEAP8[$157+1>>0]=(0>>8)&255;HEAP8[$157+2>>0]=(0>>16)&255;HEAP8[$157+3>>0]=0>>24;
         $158 = ($$0|0)==(0|0);
         if (!($158)) {
          $159 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
          $160 = ($159|0)==(0|0);
          if (!($160)) {
           $161 = ((($0)) + 67|0);
           $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
           $163 = (__set_current_error($0,11,$162)|0);
           $164 = ($163<<24>>24)==(0);
           if ($164) {
            $$0152 = 0;$$1 = $$0;
            break L4;
           }
           $165 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
           $166 = ((($165)) + 9|0);
           $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
           $168 = ((($165)) + 13|0);
           $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8);
           $170 = ((($165)) + 15|0);
           $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8);
           __set_error_pos($0,$167,$169,$171);
           $$0152 = 3;$$1 = $$0;
           break L4;
          }
         }
         $172 = ((($0)) + 67|0);
         $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
         $174 = (__set_current_error($0,11,$173)|0);
         $175 = ($174<<24>>24)==(0);
         if ($175) {
          $$0152 = 0;$$1 = $$0;
          break L4;
         }
         __set_error_pos($0,0,0,0);
         $$0152 = 3;$$1 = $$0;
         break L4;
        }
       }
      } else {
       $51 = ($43|0)==(0|0);
       if ($51) {
        break;
       }
      }
      $52 = ((($0)) + 67|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = (__set_current_error($0,31,$53)|0);
      $55 = ($54<<24>>24)==(0);
      if ($55) {
       $$0152 = 0;$$1 = $8;
       break L4;
      }
      $56 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = ((($57)) + 9|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
      $60 = ((($57)) + 13|0);
      $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8);
      $62 = ((($57)) + 15|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
      __set_error_pos($0,$59,$61,$63);
      $$0152 = 3;$$1 = $8;
      break L4;
     }
    } while(0);
    $64 = ((($0)) + 67|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = (__set_current_error($0,31,$65)|0);
    $67 = ($66<<24>>24)==(0);
    if ($67) {
     $$0152 = 0;$$1 = $8;
    } else {
     __set_error_pos($0,0,0,0);
     $$0152 = 3;$$1 = $8;
    }
   } else {
    label = 5;
   }
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $13 = ($6|0)==(0|0);
   $brmerge = $13 | $9;
   if (!($brmerge)) {
    $14 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $15 = ($14|0)==(0|0);
    if (!($15)) {
     $16 = ((($0)) + 67|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     $18 = (__set_current_error($0,23,$17)|0);
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $$0152 = 0;$$1 = $6;
      break;
     }
     $20 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
     $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
     $22 = ((($21)) + 9|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ((($21)) + 13|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8);
     $26 = ((($21)) + 15|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     __set_error_pos($0,$23,$25,$27);
     $$0152 = 3;$$1 = $6;
     break;
    }
   }
   $28 = ((($0)) + 67|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = (__set_current_error($0,23,$29)|0);
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $$0152 = 0;$$1 = $6;
   } else {
    __set_error_pos($0,0,0,0);
    $$0152 = 3;$$1 = $6;
   }
  }
 } while(0);
 HEAP32[$1>>2] = $$1;
 STACKTOP = sp;return ($$0152|0);
}
function __core_def($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$070 = 0, $$071 = 0, $$pre$phi75Z2D = 0, $$pre$phiZ2D = 0, $$sink72 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond = 0, $or$cond77 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16407,(11893|0));
  // unreachable;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = ((($5)) + 8|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 HEAP32[$2>>2] = $7;
 $8 = ((($0)) + 92|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = $10 & 253;
 $12 = ($11|0)==(0);
 $13 = $7;
 L4: do {
  if ($12) {
   $32 = $10 | 2;
   $33 = $32&255;
   HEAP8[$8>>0] = $33;
   $34 = ((($0)) + 83|0);
   $35 = HEAP8[$34>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   do {
    if ($37) {
     $38 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
     $39 = ($38|0)==(0|0);
     if ($39) {
      $53 = ((($0)) + 67|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $55 = (__set_current_error($0,52,$54)|0);
      $56 = ($55<<24>>24)==(0);
      if ($56) {
       $$071 = 0;$137 = $13;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$071 = 3;$137 = $13;
      break L4;
     }
     $40 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $41 = ($40|0)==(17);
     if (!($41)) {
      $42 = ((($0)) + 67|0);
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      $44 = (__set_current_error($0,52,$43)|0);
      $45 = ($44<<24>>24)==(0);
      if ($45) {
       $$071 = 0;$137 = $13;
       break L4;
      }
      $46 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $47 = ((($46)) + 9|0);
      $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
      $49 = ((($46)) + 13|0);
      $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8);
      $51 = ((($46)) + 15|0);
      $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8);
      __set_error_pos($0,$48,$50,$52);
      $$071 = 3;$137 = $13;
      break L4;
     }
     $57 = ((($38)) + 4|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $59 = ((($58)) + 8|0);
     $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
     $61 = ($60|0)==(0|0);
     if (!($61)) {
      $62 = ((($0)) + 67|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $64 = (__set_current_error($0,53,$63)|0);
      $65 = ($64<<24>>24)==(0);
      if ($65) {
       $$071 = 0;$137 = $13;
       break L4;
      }
      $66 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $67 = ((($66)) + 9|0);
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $69 = ((($66)) + 13|0);
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
      $71 = ((($66)) + 15|0);
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8);
      __set_error_pos($0,$68,$70,$72);
      $$071 = 3;$137 = $13;
      break L4;
     }
     $73 = ((($7)) + 8|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     HEAP32[$2>>2] = $74;
     $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $77 = ($76|0)==(8);
     $78 = $74;
     if ($77) {
      $79 = ((($75)) + 4|0);
      $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
      $81 = ((($80)) + 4|0);
      $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
      $83 = ($82|0)==(22|0);
      if ($83) {
       $84 = ((($58)) + 4|0);
       $$sink72 = $74;
       L23: while(1) {
        $98 = ((($$sink72)) + 8|0);
        $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
        HEAP32[$2>>2] = $99;
        $$070 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
        $100 = HEAPU8[$$070>>0]|(HEAPU8[$$070+1>>0]<<8)|(HEAPU8[$$070+2>>0]<<16)|(HEAPU8[$$070+3>>0]<<24);
        switch ($100|0) {
        case 8:  {
         $101 = ((($$070)) + 4|0);
         $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
         $103 = ((($102)) + 4|0);
         $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
         $105 = ($104|0)==(23|0);
         if ($105) {
          label = 40;
          break L23;
         }
         $119 = ((($$070)) + 4|0);
         $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
         $121 = ((($120)) + 4|0);
         $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
         $123 = ($122|0)==(88|0);
         if ($123) {
          label = 37;
          break L23;
         } else {
          $$sink72 = $99;
          continue L23;
         }
         break;
        }
        case 9:  {
         break;
        }
        default: {
         $$sink72 = $99;
         continue L23;
        }
        }
        $106 = ((($$070)) + 4|0);
        $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
        $108 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
        $109 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
        $110 = (__search_identifier_in_scope_chain($0,$108,$109,0,0,0)|0);
        $111 = ($110|0)==(0|0);
        if ($111) {
         $$0 = $107;
        } else {
         $112 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
         $113 = ((($112)) + 4|0);
         $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
         $$0 = $114;
        }
        $115 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
        $116 = ($115|0)==(0|0);
        if ($116) {
         $117 = (__ls_create()|0);
         HEAP8[$84>>0]=$117&255;HEAP8[$84+1>>0]=($117>>8)&255;HEAP8[$84+2>>0]=($117>>16)&255;HEAP8[$84+3>>0]=$117>>24;
         $118 = $117;
        } else {
         $118 = $115;
        }
        (__ls_pushback($118,$$0)|0);
        $$sink72 = $99;
       }
       if ((label|0) == 37) {
        $124 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
        $125 = ($124|0)==(0|0);
        if ($125) {
         $126 = (__ls_create()|0);
         HEAP8[$84>>0]=$126&255;HEAP8[$84+1>>0]=($126>>8)&255;HEAP8[$84+2>>0]=($126>>16)&255;HEAP8[$84+3>>0]=$126>>24;
         $127 = $126;
        } else {
         $127 = $124;
        }
        (__ls_pushback($127,8964)|0);
        $128 = ((($99)) + 8|0);
        $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
        HEAP32[$2>>2] = $129;
        $130 = $129;
        $$pre$phiZ2D = $2;$132 = $130;
       }
       else if ((label|0) == 40) {
        $$pre$phiZ2D = $2;$132 = $99;
       }
       $131 = ((($132)) + 8|0);
       $133 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
       HEAP32[$$pre$phiZ2D>>2] = $133;
       HEAP8[$59>>0]=$133&255;HEAP8[$59+1>>0]=($133>>8)&255;HEAP8[$59+2>>0]=($133>>16)&255;HEAP8[$59+3>>0]=$133>>24;
       $$pre$phi75Z2D = $$pre$phiZ2D;
       break;
      }
     }
     $85 = ($74|0)==(0|0);
     $86 = ($75|0)==(0|0);
     $or$cond77 = $85 | $86;
     $87 = ((($0)) + 67|0);
     $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
     $89 = (__set_current_error($0,31,$88)|0);
     $90 = ($89<<24>>24)==(0);
     if ($or$cond77) {
      if ($90) {
       $$071 = 0;$137 = $78;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$071 = 3;$137 = $78;
      break L4;
     } else {
      if ($90) {
       $$071 = 0;$137 = $78;
       break L4;
      }
      $91 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      $92 = ((($91)) + 9|0);
      $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
      $94 = ((($91)) + 13|0);
      $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8);
      $96 = ((($91)) + 15|0);
      $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8);
      __set_error_pos($0,$93,$95,$97);
      $$071 = 3;$137 = $78;
      break L4;
     }
    } else {
     $$pre$phi75Z2D = $2;
    }
   } while(0);
   (__skip_to($0,$2,87,-1)|0);
   $134 = HEAP32[$2>>2]|0;
   $135 = ((($134)) + 8|0);
   $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
   HEAP32[$$pre$phi75Z2D>>2] = $136;
   $$071 = 0;$137 = $136;
  } else {
   $14 = ($7|0)==(0|0);
   if (!($14)) {
    $15 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $16 = ($15|0)==(0|0);
    if (!($16)) {
     $17 = ((($0)) + 67|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = (__set_current_error($0,50,$18)|0);
     $20 = ($19<<24>>24)==(0);
     if ($20) {
      $$071 = 0;$137 = $13;
      break;
     }
     $21 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
     $22 = ((($21)) + 9|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ((($21)) + 13|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8);
     $26 = ((($21)) + 15|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     __set_error_pos($0,$23,$25,$27);
     $$071 = 3;$137 = $13;
     break;
    }
   }
   $28 = ((($0)) + 67|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = (__set_current_error($0,50,$29)|0);
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $$071 = 0;$137 = $13;
   } else {
    __set_error_pos($0,0,0,0);
    $$071 = 3;$137 = $13;
   }
  }
 } while(0);
 HEAP32[$1>>2] = $137;
 STACKTOP = sp;return ($$071|0);
}
function __core_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $$0154 = 0, $$0156 = 0, $$1164 = 0, $$157 = 0, $$lcssa = 0, $$pr172 = 0, $$pre196 = 0, $$sink = 0, $$sink229 = 0, $$sink6 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16538,(11881|0));
  // unreachable;
 }
 $5 = ((($0)) + 75|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = HEAP32[$1>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 HEAP32[$2>>2] = $9;
 $10 = ((($0)) + 92|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = $12 & 253;
 $14 = ($13|0)==(0);
 $15 = $9;
 L4: do {
  if ($14) {
   $34 = $12 | 2;
   $35 = $34&255;
   HEAP8[$10>>0] = $35;
   $36 = ((($0)) + 83|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37 & 1;
   $39 = ($38<<24>>24)==(0);
   if (!($39)) {
    $40 = ($9|0)==(0|0);
    if ($40) {
     $44 = $15;
    } else {
     (__skip_to($0,$2,90,0)|0);
     $41 = HEAP32[$2>>2]|0;
     $42 = ((($41)) + 8|0);
     $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
     HEAP32[$2>>2] = $43;
     $44 = $43;
    }
    HEAP32[$1>>2] = $44;
    $$0 = 0;
    break;
   }
   $45 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $46 = ($45|0)==(0|0);
   if ($46) {
    $66 = ((($0)) + 67|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = (__set_current_error($0,55,$67)|0);
    $69 = ($68<<24>>24)==(0);
    if ($69) {
     $$0154 = 0;$$0156 = 0;$254 = $15;
     label = 78;
     break;
    }
    __set_error_pos($0,0,0,0);
    $$0154 = 0;$$0156 = 3;$254 = $15;
    label = 78;
    break;
   }
   $47 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   switch ($47|0) {
   case 16:  {
    $71 = $45;
    break;
   }
   case 9:  {
    $48 = ((($45)) + 4|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ((($49)) + 4|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = ($51|0)==(0|0);
    if ($52) {
     label = 18;
    } else {
     $53 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $54 = ($53|0)==(16);
     if ($54) {
      $71 = $51;
     } else {
      label = 18;
     }
    }
    break;
   }
   default: {
    label = 18;
   }
   }
   if ((label|0) == 18) {
    $55 = ((($0)) + 67|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = (__set_current_error($0,55,$56)|0);
    $58 = ($57<<24>>24)==(0);
    if ($58) {
     $$0154 = 0;$$0156 = 0;$254 = $15;
     label = 78;
     break;
    }
    $59 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $60 = ((($59)) + 9|0);
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    $62 = ((($59)) + 13|0);
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
    $64 = ((($59)) + 15|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8);
    __set_error_pos($0,$61,$63,$65);
    $$0154 = 0;$$0156 = 3;$254 = $15;
    label = 78;
    break;
   }
   $70 = ((($71)) + 4|0);
   $72 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
   $73 = ((($9)) + 8|0);
   $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
   HEAP32[$2>>2] = $74;
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = ((($0)) + 93|0);
   $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
   HEAP8[$76>>0]=$72&255;HEAP8[$76+1>>0]=($72>>8)&255;HEAP8[$76+2>>0]=($72>>16)&255;HEAP8[$76+3>>0]=$72>>24;
   $78 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $79 = ($78|0)==(8);
   $80 = $74;
   L23: do {
    if ($79) {
     $81 = ((($75)) + 4|0);
     $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
     $83 = ((($82)) + 4|0);
     $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
     $85 = ($84|0)==(22|0);
     if ($85) {
      $86 = ((($74)) + 8|0);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
      HEAP32[$2>>2] = $87;
      $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
      $89 = ($88|0)==(0|0);
      $90 = $87;
      L26: do {
       if ($89) {
        $111 = $87;$120 = $87;$256 = $90;
       } else {
        $$pr172 = $87;$257 = $90;$258 = $87;$92 = $88;
        L28: while(1) {
         $91 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
         $93 = ($91|0)==(9);
         if ($93) {
          $94 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
          $95 = ($94|0)==(0|0);
          $$157 = $95 ? $6 : $94;
          $96 = ((($92)) + 4|0);
          $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
          $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
          $99 = (__search_identifier_in_scope_chain($0,$$157,$98,0,0,0)|0);
          $100 = ($99|0)==(0|0);
          if ($100) {
           $$1164 = $92;
          } else {
           $101 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
           $102 = ($101|0)==(0|0);
           $$ = $102 ? $92 : $101;
           $$1164 = $$;
          }
         } else {
          $$1164 = $92;
         }
         $103 = HEAPU8[$$1164>>0]|(HEAPU8[$$1164+1>>0]<<8)|(HEAPU8[$$1164+2>>0]<<16)|(HEAPU8[$$1164+3>>0]<<24);
         switch ($103|0) {
         case 16:  {
          $132 = $$1164;
          break;
         }
         case 9:  {
          $104 = ((($$1164)) + 4|0);
          $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
          $106 = ((($105)) + 4|0);
          $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
          $108 = ($107|0)==(0|0);
          if ($108) {
           $111 = $$pr172;$120 = $258;$256 = $257;
           break L26;
          }
          $109 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
          $110 = ($109|0)==(16);
          if ($110) {
           $132 = $107;
          } else {
           $111 = $$pr172;$120 = $258;$256 = $257;
           break L26;
          }
          break;
         }
         default: {
          $111 = $$pr172;$120 = $258;$256 = $257;
          break L26;
         }
         }
         $131 = ((($132)) + 4|0);
         $133 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
         __link_meta_class($0,$72,$133);
         $134 = ((($$pr172)) + 8|0);
         $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
         HEAP32[$2>>2] = $135;
         $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
         $137 = ($136|0)==(0|0);
         if ($137) {
          label = 40;
         } else {
          $138 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
          switch ($138|0) {
          case 16:  {
           break;
          }
          case 19:  {
           label = 40;
           break;
          }
          default: {
           label = 42;
           break L28;
          }
          }
         }
         if ((label|0) == 40) {
          label = 0;
          $139 = ((($136)) + 4|0);
          $140 = HEAP8[$139>>0]|0;
          $141 = ($140<<24>>24)==(44);
          if (!($141)) {
           label = 45;
           break;
          }
         }
         $142 = ((($135)) + 8|0);
         $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
         HEAP32[$2>>2] = $143;
         $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
         $145 = ($144|0)==(0|0);
         $146 = $143;
         if ($145) {
          $111 = $143;$120 = $143;$256 = $146;
          break L26;
         } else {
          $$pr172 = $143;$257 = $146;$258 = $143;$92 = $144;
         }
        }
        if ((label|0) == 42) {
         $147 = $135;
         $148 = ($138|0)==(8);
         if ($148) {
          $149 = ((($136)) + 4|0);
          $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
          $151 = ((($150)) + 4|0);
          $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
          $153 = ($152|0)==(23|0);
          if ($153) {
           $154 = ((($135)) + 8|0);
           $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
           HEAP32[$2>>2] = $155;
           $169 = $155;
           break L23;
          } else {
           $259 = $147;
          }
         } else {
          $259 = $147;
         }
        }
        else if ((label|0) == 45) {
         $156 = $135;
         $259 = $156;
        }
        $157 = ($135|0)==(0|0);
        $158 = ((($0)) + 67|0);
        $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
        $160 = (__set_current_error($0,32,$159)|0);
        $161 = ($160<<24>>24)==(0);
        if ($157) {
         if ($161) {
          $$0154 = $77;$$0156 = 0;$254 = $259;
          label = 78;
          break L4;
         }
         __set_error_pos($0,0,0,0);
         $$0154 = $77;$$0156 = 3;$254 = $259;
         label = 78;
         break L4;
        } else {
         if ($161) {
          $$0154 = $77;$$0156 = 0;$254 = $259;
          label = 78;
          break L4;
         }
         $162 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
         $163 = ((($162)) + 9|0);
         $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
         $165 = ((($162)) + 13|0);
         $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8);
         $167 = ((($162)) + 15|0);
         $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8);
         __set_error_pos($0,$164,$166,$168);
         $$0154 = $77;$$0156 = 3;$254 = $259;
         label = 78;
         break L4;
        }
       }
      } while(0);
      $112 = ($111|0)==(0|0);
      if (!($112)) {
       $113 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
       $114 = ($113|0)==(0|0);
       if (!($114)) {
        $115 = ((($0)) + 67|0);
        $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
        $117 = (__set_current_error($0,55,$116)|0);
        $118 = ($117<<24>>24)==(0);
        if ($118) {
         $$0154 = $77;$$0156 = 0;$254 = $256;
         label = 78;
         break L4;
        }
        $119 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
        $121 = ((($119)) + 9|0);
        $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
        $123 = ((($119)) + 13|0);
        $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8);
        $125 = ((($119)) + 15|0);
        $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8);
        __set_error_pos($0,$122,$124,$126);
        $$0154 = $77;$$0156 = 3;$254 = $256;
        label = 78;
        break L4;
       }
      }
      $127 = ((($0)) + 67|0);
      $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
      $129 = (__set_current_error($0,55,$128)|0);
      $130 = ($129<<24>>24)==(0);
      if ($130) {
       $$0154 = $77;$$0156 = 0;$254 = $256;
       label = 78;
       break L4;
      }
      __set_error_pos($0,0,0,0);
      $$0154 = $77;$$0156 = 3;$254 = $256;
      label = 78;
      break L4;
     } else {
      $169 = $80;
     }
    } else {
     $169 = $80;
    }
   } while(0);
   HEAP32[$1>>2] = $169;
   $170 = ((($72)) + 29|0);
   $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
   __push_scope_by_class($0,$171);
   $172 = (__execute_statement($0,$1,1)|0);
   $173 = ($172|0)==(0);
   do {
    if ($173) {
     while(1) {
      $174 = HEAP32[$1>>2]|0;
      HEAP32[$2>>2] = $174;
      $219 = ($174|0)==(0|0);
      if ($219) {
       break;
      }
      $220 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
      $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
      $222 = ($221|0)==(8);
      if ($222) {
       $223 = ((($220)) + 4|0);
       $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
       $225 = ((($224)) + 4|0);
       $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
       $227 = ($226|0)==(90|0);
       if ($227) {
        break;
       }
      }
      $228 = (__execute_statement($0,$1,1)|0);
      $229 = ($228|0)==(0);
      if (!($229)) {
       label = 52;
       break;
      }
     }
     if ((label|0) == 52) {
      $175 = $174;
      $$lcssa = $228;$260 = $175;
      break;
     }
     $230 = $174;
     __pop_scope($0,0);
     $231 = (__search_class_hash_and_compare_functions($0,$72)|0);
     $232 = ($231|0)==(0);
     $233 = ($174|0)!=(0|0);
     if ($232) {
      if (!($233)) {
       $$0154 = $77;$$0156 = 0;$254 = $230;
       label = 78;
       break L4;
      }
      (__skip_to($0,$2,90,0)|0);
      $251 = HEAP32[$2>>2]|0;
      $252 = ((($251)) + 8|0);
      $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
      HEAP32[$2>>2] = $253;
      $$0154 = $77;$$0156 = 0;$254 = $253;
      label = 78;
      break L4;
     }
     if ($233) {
      $234 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
      $235 = ($234|0)==(0|0);
      if (!($235)) {
       $236 = ((($0)) + 67|0);
       $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
       $238 = (__set_current_error($0,57,$237)|0);
       $239 = ($238<<24>>24)==(0);
       if ($239) {
        $$0154 = $77;$$0156 = 0;$254 = $230;
        label = 78;
        break L4;
       }
       $240 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
       $241 = ((($240)) + 9|0);
       $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
       $243 = ((($240)) + 13|0);
       $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8);
       $245 = ((($240)) + 15|0);
       $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8);
       __set_error_pos($0,$242,$244,$246);
       $$0154 = $77;$$0156 = 0;$254 = $230;
       label = 78;
       break L4;
      }
     }
     $247 = ((($0)) + 67|0);
     $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
     $249 = (__set_current_error($0,57,$248)|0);
     $250 = ($249<<24>>24)==(0);
     if ($250) {
      $$0154 = $77;$$0156 = 0;$254 = $230;
      label = 78;
      break L4;
     }
     __set_error_pos($0,0,0,0);
     $$0154 = $77;$$0156 = 0;$254 = $230;
     label = 78;
     break L4;
    } else {
     $$lcssa = $172;$260 = $169;
    }
   } while(0);
   $176 = ($$lcssa|0)>(200);
   $177 = ((($0)) + 135|0);
   if ($176) {
    HEAP8[$177>>0]=66&255;HEAP8[$177+1>>0]=(66>>8)&255;HEAP8[$177+2>>0]=(66>>16)&255;HEAP8[$177+3>>0]=66>>24;
    $180 = 66;
   } else {
    $$pre196 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
    $180 = $$pre196;
   }
   $178 = ((($0)) + 139|0);
   $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
   (__set_current_error($0,$180,$179)|0);
   $181 = ((($0)) + 159|0);
   $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
   $183 = ($182|0)==(0|0);
   if (!($183)) {
    $184 = ((($0)) + 134|0);
    $185 = HEAP8[$184>>0]|0;
    $186 = $185 & 1;
    $187 = ($186<<24>>24)==(0);
    if ($187) {
     $188 = $185 | 1;
     HEAP8[$184>>0] = $188;
     $189 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
     $190 = (_mb_get_error_desc($189)|0);
     $191 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
     $192 = ((($0)) + 71|0);
     $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
     $194 = ($193|0)==(0|0);
     if ($194) {
      $195 = ((($0)) + 143|0);
      $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
      $197 = ((($0)) + 147|0);
      $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8);
      $261 = $198;$262 = $196;
      label = 62;
     } else {
      $199 = ((($0)) + 79|0);
      $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
      $201 = ($200|0)==(0);
      $202 = ((($0)) + 143|0);
      $203 = ((($193)) + 164|0);
      $$sink = $201 ? $203 : $202;
      $204 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
      $205 = ((($0)) + 79|0);
      $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
      $207 = ($206|0)==(0);
      $208 = ((($0)) + 147|0);
      $209 = ((($193)) + 168|0);
      $$sink229 = $207 ? $209 : $208;
      $210 = HEAPU8[$$sink229>>0]|(HEAPU8[$$sink229+1>>0]<<8);
      $211 = ((($0)) + 79|0);
      $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
      $213 = ($212|0)==(0);
      if ($213) {
       $214 = ((($193)) + 170|0);
       $$sink6 = $214;$217 = $204;$218 = $210;
      } else {
       $261 = $210;$262 = $204;
       label = 62;
      }
     }
     if ((label|0) == 62) {
      $215 = ((($0)) + 149|0);
      $$sink6 = $215;$217 = $262;$218 = $261;
     }
     $216 = HEAPU8[$$sink6>>0]|(HEAPU8[$$sink6+1>>0]<<8);
     FUNCTION_TABLE_viiiiiiii[$182 & 127]($0,$189,$190,$191,$217,$218,$216,$$lcssa);
    }
   }
   __pop_scope($0,0);
   $$0154 = $77;$$0156 = $$lcssa;$254 = $260;
   label = 78;
  } else {
   $16 = ($9|0)==(0|0);
   if (!($16)) {
    $17 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $18 = ($17|0)==(0|0);
    if (!($18)) {
     $19 = ((($0)) + 67|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     $21 = (__set_current_error($0,50,$20)|0);
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $$0154 = 0;$$0156 = 0;$254 = $15;
      label = 78;
      break;
     }
     $23 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
     $24 = ((($23)) + 9|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($23)) + 13|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     $28 = ((($23)) + 15|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
     __set_error_pos($0,$25,$27,$29);
     $$0154 = 0;$$0156 = 3;$254 = $15;
     label = 78;
     break;
    }
   }
   $30 = ((($0)) + 67|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = (__set_current_error($0,50,$31)|0);
   $33 = ($32<<24>>24)==(0);
   if ($33) {
    $$0154 = 0;$$0156 = 0;$254 = $15;
    label = 78;
   } else {
    __set_error_pos($0,0,0,0);
    $$0154 = 0;$$0156 = 3;$254 = $15;
    label = 78;
   }
  }
 } while(0);
 if ((label|0) == 78) {
  HEAP32[$1>>2] = $254;
  $255 = ((($0)) + 93|0);
  HEAP8[$255>>0]=$$0154&255;HEAP8[$255+1>>0]=($$0154>>8)&255;HEAP8[$255+2>>0]=($$0154>>16)&255;HEAP8[$255+3>>0]=$$0154>>24;
  $$0 = $$0156;
 }
 STACKTOP = sp;return ($$0|0);
}
function __core_endclass($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  label = 5;
 } else {
  $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
  } else {
   $6 = (__set_current_error($0,48,11866)|0);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $9 = ((($8)) + 9|0);
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = ((($8)) + 13|0);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
    $13 = ((($8)) + 15|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
    __set_error_pos($0,$10,$12,$14);
    $$2 = 3;
   }
  }
 }
 if ((label|0) == 5) {
  $15 = (__set_current_error($0,48,11866)|0);
  $16 = ($15<<24>>24)==(0);
  if ($16) {
   $$2 = 0;
  } else {
   __set_error_pos($0,0,0,0);
   $$2 = 3;
  }
 }
 return ($$2|0);
}
function __core_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$064 = 0, $$4 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $switch$split2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 28|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16660,(11856|0));
  // unreachable;
 }
 $8 = ((($5)) + 4|0);
 HEAP32[$8>>2] = 0;
 HEAP32[$5>>2] = 0;
 $9 = (_mb_attempt_func_begin($0,$1)|0);
 $10 = ($9|0)==(0);
 L4: do {
  if ($10) {
   $11 = (_mb_pop_value($0,$1,$2)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $13 = (_mb_attempt_func_end($0,$1)|0);
    $14 = ($13|0)==(0);
    if ($14) {
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP8[$4+16>>0]=0|0;
     $15 = HEAP32[$2>>2]|0;
     $switch$split2D = ($15|0)<(4096);
     L8: do {
      if ($switch$split2D) {
       switch ($15|0) {
       case 8:  {
        break;
       }
       default: {
        label = 10;
        break L8;
       }
       }
       $16 = ((($2)) + 4|0);
       $17 = HEAP32[$16>>2]|0;
       $18 = (_mb_strupr($17)|0);
       HEAP32[$16>>2] = $18;
       $19 = (__reflect_string_to_class($0,$18,$2)|0);
       $20 = ($19|0)==(0|0);
       if ($20) {
        label = 10;
       } else {
        __ref($19,$19);
        label = 9;
       }
      } else {
       switch ($15|0) {
       case 4096:  {
        label = 9;
        break;
       }
       default: {
        label = 10;
       }
       }
      }
     } while(0);
     do {
      if ((label|0) == 9) {
       (__public_value_to_internal_object($2,$3)|0);
       __clone_object($0,$3,$4,0,1);
       HEAP32[$5>>2] = 4096;
       $21 = ((($4)) + 4|0);
       $22 = HEAP32[$21>>2]|0;
       HEAP32[$8>>2] = $22;
       ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
       $23 = (_mb_push_value($0,$1,$$byval_copy)|0);
       $24 = ($23|0)==(0);
       if (!($24)) {
        $$4 = $23;
        break L4;
       }
       __assign_public_value($0,$5,0,0);
       $$064 = 0;
      }
      else if ((label|0) == 10) {
       $25 = HEAP32[$1>>2]|0;
       $26 = ($25|0)==(0|0);
       if (!($26)) {
        $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
        $28 = ($27|0)==(0|0);
        if (!($28)) {
         $29 = ((($0)) + 67|0);
         $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
         $31 = (__set_current_error($0,55,$30)|0);
         $32 = ($31<<24>>24)==(0);
         if ($32) {
          $$064 = 0;
          break;
         }
         $33 = HEAP32[$1>>2]|0;
         $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
         $35 = ((($34)) + 9|0);
         $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
         $37 = ((($34)) + 13|0);
         $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
         $39 = ((($34)) + 15|0);
         $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
         __set_error_pos($0,$36,$38,$40);
         $$064 = 3;
         break;
        }
       }
       $41 = ((($0)) + 67|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = (__set_current_error($0,55,$42)|0);
       $44 = ($43<<24>>24)==(0);
       if ($44) {
        $$064 = 0;
       } else {
        __set_error_pos($0,0,0,0);
        $$064 = 3;
       }
      }
     } while(0);
     __assign_public_value($0,$2,0,1);
     $$4 = $$064;
    } else {
     $$4 = $13;
    }
   } else {
    $$4 = $11;
   }
  } else {
   $$4 = $9;
  }
 } while(0);
 STACKTOP = sp;return ($$4|0);
}
function __core_var($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ((($0)) + 93|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)==(0|0);
 do {
  if ($7) {
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    $9 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $10 = ($9|0)==(0|0);
    if (!($10)) {
     $11 = ((($0)) + 67|0);
     $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
     $13 = (__set_current_error($0,55,$12)|0);
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      break;
     }
     $15 = HEAP32[$1>>2]|0;
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ((($16)) + 9|0);
     $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
     $19 = ((($16)) + 13|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
     $21 = ((($16)) + 15|0);
     $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8);
     __set_error_pos($0,$18,$20,$22);
     break;
    }
   }
   $23 = ((($0)) + 67|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = (__set_current_error($0,55,$24)|0);
   $26 = ($25<<24>>24)==(0);
   if (!($26)) {
    __set_error_pos($0,0,0,0);
   }
  }
 } while(0);
 HEAP32[$1>>2] = $4;
 return 1;
}
function __core_reflect($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$067 = 0, $$4 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $switch$split2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16731,(11811|0));
  // unreachable;
 }
 $7 = ((($4)) + 4|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$4>>2] = 0;
 $8 = (_mb_attempt_func_begin($0,$1)|0);
 $9 = ($8|0)==(0);
 L4: do {
  if ($9) {
   $10 = (_mb_pop_value($0,$1,$2)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = (_mb_attempt_func_end($0,$1)|0);
    $13 = ($12|0)==(0);
    if ($13) {
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP8[$3+16>>0]=0|0;
     $14 = HEAP32[$2>>2]|0;
     $switch$split2D = ($14|0)<(4096);
     L8: do {
      if ($switch$split2D) {
       switch ($14|0) {
       case 8:  {
        break;
       }
       default: {
        label = 10;
        break L8;
       }
       }
       $15 = ((($2)) + 4|0);
       $16 = HEAP32[$15>>2]|0;
       $17 = (_mb_strupr($16)|0);
       HEAP32[$15>>2] = $17;
       $18 = (__reflect_string_to_class($0,$17,$2)|0);
       $19 = ($18|0)==(0|0);
       if ($19) {
        label = 10;
       } else {
        __ref($18,$18);
        label = 9;
       }
      } else {
       switch ($14|0) {
       case 4096:  {
        label = 9;
        break;
       }
       default: {
        label = 10;
       }
       }
      }
     } while(0);
     do {
      if ((label|0) == 9) {
       (__public_value_to_internal_object($2,$3)|0);
       $20 = (__create_dict($0)|0);
       $21 = ((($3)) + 4|0);
       $22 = HEAP32[$21>>2]|0;
       (__traverse_class($22,158,0,-1,0,$20,0)|0);
       HEAP32[$4>>2] = 1024;
       HEAP32[$7>>2] = $20;
       ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
       $23 = (_mb_push_value($0,$1,$$byval_copy)|0);
       $24 = ($23|0)==(0);
       if ($24) {
        $$067 = 0;
       } else {
        $$4 = $23;
        break L4;
       }
      }
      else if ((label|0) == 10) {
       $25 = HEAP32[$1>>2]|0;
       $26 = ($25|0)==(0|0);
       if (!($26)) {
        $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
        $28 = ($27|0)==(0|0);
        if (!($28)) {
         $29 = ((($0)) + 67|0);
         $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
         $31 = (__set_current_error($0,55,$30)|0);
         $32 = ($31<<24>>24)==(0);
         if ($32) {
          $$067 = 0;
          break;
         }
         $33 = HEAP32[$1>>2]|0;
         $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
         $35 = ((($34)) + 9|0);
         $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
         $37 = ((($34)) + 13|0);
         $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8);
         $39 = ((($34)) + 15|0);
         $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
         __set_error_pos($0,$36,$38,$40);
         $$067 = 3;
         break;
        }
       }
       $41 = ((($0)) + 67|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = (__set_current_error($0,55,$42)|0);
       $44 = ($43<<24>>24)==(0);
       if ($44) {
        $$067 = 0;
       } else {
        __set_error_pos($0,0,0,0);
        $$067 = 3;
       }
      }
     } while(0);
     __assign_public_value($0,$2,0,1);
     $$4 = $$067;
    } else {
     $$4 = $12;
    }
   } else {
    $$4 = $10;
   }
  } else {
   $$4 = $8;
  }
 } while(0);
 STACKTOP = sp;return ($$4|0);
}
function __core_lambda($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$0144 = 0, $$0144181 = 0, $$0145 = 0, $$0149 = 0, $$1 = 0, $$1146$lcssa = 0, $$1146180 = 0, $$3$ph = 0, $$4$ph = 0, $$4161163 = 0, $$byval_copy = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 HEAP32[$3>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16793,(11654|0));
  // unreachable;
 }
 $7 = (_mb_malloc(62)|0);
 __init_lambda($0,$7);
 $8 = (_mb_attempt_open_bracket($0,$1)|0);
 $9 = ($8|0)==(0);
 L4: do {
  if ($9) {
   $10 = (_mb_has_arg($0,$1)|0);
   $11 = ($10|0)==(0);
   L6: do {
    if (!($11)) {
     $12 = ((($7)) + 21|0);
     $13 = ((($7)) + 17|0);
     while(1) {
      HEAP32[$4>>2] = 0;
      $14 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
      $15 = ($14|0)==(0|0);
      if ($15) {
       $16 = (__ls_create()|0);
       HEAP8[$12>>0]=$16&255;HEAP8[$12+1>>0]=($16>>8)&255;HEAP8[$12+2>>0]=($16>>16)&255;HEAP8[$12+3>>0]=$16>>24;
       $27 = $16;
      } else {
       $27 = $14;
      }
      $17 = HEAP32[$1>>2]|0;
      $18 = ($17|0)==(0|0);
      if (!($18)) {
       $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
       $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
       $21 = ($20|0)==(8);
       if ($21) {
        $22 = ((($19)) + 4|0);
        $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
        $24 = ((($23)) + 4|0);
        $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $26 = ($25|0)==(88|0);
        if ($26) {
         label = 11;
         break;
        }
       }
      }
      $30 = (_mb_get_var($0,$1,$4,1)|0);
      $31 = ($30|0)==(0);
      if (!($31)) {
       $$3$ph = $30;
       label = 23;
       break;
      }
      $32 = HEAP32[$4>>2]|0;
      $33 = ($32|0)==(0|0);
      if ($33) {
       label = 15;
       break;
      }
      $34 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $35 = ($34|0)==(9);
      if (!($35)) {
       label = 15;
       break;
      }
      $56 = ((($32)) + 4|0);
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = ((($57)) + 8|0);
      $59 = HEAP8[$58>>0]|0;
      $60 = $59 & 3;
      HEAP32[$3>>2] = 0;
      $61 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $62 = (__create_var($3,$61,0)|0);
      $63 = ((($62)) + 8|0);
      $64 = HEAP8[$63>>0]|0;
      $65 = $64 & -4;
      $66 = $65 | $60;
      HEAP8[$63>>0] = $66;
      $67 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
      $68 = ((($67)) + 8|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $70 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $71 = HEAP32[$3>>2]|0;
      __ht_set_or_insert($69,$70,$71);
      $72 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
      (__ls_pushback($72,$62)|0);
      $73 = HEAP32[$1>>2]|0;
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      $76 = ($75|0)==(8);
      if ($76) {
       $77 = ((($74)) + 4|0);
       $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
       $79 = ((($78)) + 4|0);
       $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
       $81 = ($80|0)==(23|0);
       if ($81) {
        label = 24;
        break;
       }
      }
      $82 = (_mb_has_arg($0,$1)|0);
      $83 = ($82|0)==(0);
      if ($83) {
       break L6;
      }
     }
     do {
      if ((label|0) == 11) {
       (__ls_pushback($27,8964)|0);
       $28 = ((($17)) + 8|0);
       $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
       HEAP32[$1>>2] = $29;
       label = 24;
      }
      else if ((label|0) == 15) {
       $36 = HEAP32[$1>>2]|0;
       $37 = ($36|0)==(0|0);
       if (!($37)) {
        $38 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
        $39 = ($38|0)==(0|0);
        if (!($39)) {
         $40 = ((($0)) + 67|0);
         $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
         $42 = (__set_current_error($0,58,$41)|0);
         $43 = ($42<<24>>24)==(0);
         if ($43) {
          $$3$ph = 0;
          label = 23;
          break;
         }
         $44 = HEAP32[$1>>2]|0;
         $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
         $46 = ((($45)) + 9|0);
         $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
         $48 = ((($45)) + 13|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8);
         $50 = ((($45)) + 15|0);
         $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8);
         __set_error_pos($0,$47,$49,$51);
         $$3$ph = 3;
         label = 23;
         break;
        }
       }
       $52 = ((($0)) + 67|0);
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = (__set_current_error($0,58,$53)|0);
       $55 = ($54<<24>>24)==(0);
       if ($55) {
        $$3$ph = 0;
        label = 23;
       } else {
        __set_error_pos($0,0,0,0);
        $$3$ph = 3;
        label = 23;
       }
      }
     } while(0);
     if ((label|0) == 23) {
      __pop_scope($0,0);
      $$4161163 = $$3$ph;
      label = 52;
      break L4;
     }
     else if ((label|0) == 24) {
      break;
     }
    }
   } while(0);
   $84 = (_mb_attempt_close_bracket($0,$1)|0);
   $85 = ($84|0)==(0);
   if ($85) {
    $86 = HEAP32[$1>>2]|0;
    $87 = ($86|0)==(0|0);
    if ($87) {
     $$0145 = 0;
    } else {
     $88 = ((($86)) + 4|0);
     $$pre = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
     $$0145 = $$pre;
    }
    while(1) {
     $89 = ($$0145|0)==(0|0);
     if ($89) {
      break;
     }
     $90 = ((($$0145)) + 8|0);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
     $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
     $93 = ($92|0)==(0|0);
     if ($93) {
      break;
     }
     $94 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     $95 = ($94|0)==(22);
     if ($95) {
      $$0145 = $91;
     } else {
      break;
     }
    }
    HEAP32[$1>>2] = $$0145;
    $96 = (_mb_attempt_open_bracket($0,$1)|0);
    $97 = ($96|0)==(0);
    if ($97) {
     $98 = HEAP32[$1>>2]|0;
     $99 = ((($7)) + 37|0);
     HEAP8[$99>>0]=$98&255;HEAP8[$99+1>>0]=($98>>8)&255;HEAP8[$99+2>>0]=($98>>16)&255;HEAP8[$99+3>>0]=$98>>24;
     $100 = ($98|0)==(0|0);
     L45: do {
      if ($100) {
       $$1146$lcssa = 0;
      } else {
       $$0144181 = 0;$$1146180 = $98;
       while(1) {
        $101 = ($$0144181|0)==(0);
        $102 = HEAPU8[$$1146180>>0]|(HEAPU8[$$1146180+1>>0]<<8)|(HEAPU8[$$1146180+2>>0]<<16)|(HEAPU8[$$1146180+3>>0]<<24);
        $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
        $104 = ($103|0)==(8);
        if ($101) {
         if ($104) {
          $105 = ((($102)) + 4|0);
          $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
          $107 = ((($106)) + 4|0);
          $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
          $109 = ($108|0)==(23|0);
          if ($109) {
           $$1146$lcssa = $$1146180;
           break L45;
          } else {
           label = 38;
          }
         } else {
          $$1 = 0;
         }
        } else {
         if ($104) {
          label = 38;
         } else {
          $$1 = $$0144181;
         }
        }
        do {
         if ((label|0) == 38) {
          label = 0;
          $110 = ((($102)) + 4|0);
          $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
          $112 = ((($111)) + 4|0);
          $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
          $114 = ($113|0)==(22|0);
          if ($114) {
           $115 = (($$0144181) + 1)|0;
           $$1 = $115;
           break;
          } else {
           $116 = ((($102)) + 4|0);
           $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
           $118 = ((($117)) + 4|0);
           $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
           $120 = ($119|0)==(23|0);
           $121 = $120 << 31 >> 31;
           $$$0144 = (($$0144181) + ($121))|0;
           $$1 = $$$0144;
           break;
          }
         }
        } while(0);
        $122 = (__is_valid_lambda_body_node($102)|0);
        $123 = ($122<<24>>24)==(0);
        if ($123) {
         break;
        }
        __try_mark_upvalue($0,$7,$102);
        $144 = ((($$1146180)) + 8|0);
        $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
        $146 = ($145|0)==(0|0);
        if ($146) {
         $$1146$lcssa = 0;
         break L45;
        } else {
         $$0144181 = $$1;$$1146180 = $145;
        }
       }
       $124 = HEAP32[$1>>2]|0;
       $125 = ($124|0)==(0|0);
       if (!($125)) {
        $126 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
        $127 = ($126|0)==(0|0);
        if (!($127)) {
         $128 = ((($0)) + 67|0);
         $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
         $130 = (__set_current_error($0,58,$129)|0);
         $131 = ($130<<24>>24)==(0);
         if ($131) {
          $$4$ph = 0;
          label = 51;
          break L4;
         }
         $132 = HEAP32[$1>>2]|0;
         $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
         $134 = ((($133)) + 9|0);
         $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
         $136 = ((($133)) + 13|0);
         $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8);
         $138 = ((($133)) + 15|0);
         $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8);
         __set_error_pos($0,$135,$137,$139);
         $$4$ph = 3;
         label = 51;
         break L4;
        }
       }
       $140 = ((($0)) + 67|0);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = (__set_current_error($0,58,$141)|0);
       $143 = ($142<<24>>24)==(0);
       if ($143) {
        $$4$ph = 0;
        label = 51;
        break L4;
       }
       __set_error_pos($0,0,0,0);
       $$4$ph = 3;
       label = 51;
       break L4;
      }
     } while(0);
     HEAP32[$1>>2] = $$1146$lcssa;
     $147 = ((($7)) + 41|0);
     HEAP8[$147>>0]=$$1146$lcssa&255;HEAP8[$147+1>>0]=($$1146$lcssa>>8)&255;HEAP8[$147+2>>0]=($$1146$lcssa>>16)&255;HEAP8[$147+3>>0]=$$1146$lcssa>>24;
     $148 = (_mb_attempt_close_bracket($0,$1)|0);
     $149 = ($148|0)==(0);
     __pop_scope($0,0);
     if ($149) {
      HEAP32[$2>>2] = 8192;
      $150 = ((($2)) + 4|0);
      HEAP32[$150>>2] = $7;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
      $151 = (_mb_push_value($0,$1,$$byval_copy)|0);
      $152 = ($151|0)==(0);
      if ($152) {
       $$0149 = 0;
      } else {
       $$4161163 = $151;
       label = 52;
      }
     } else {
      $$4161163 = $148;
      label = 52;
     }
    } else {
     $$4$ph = $96;
     label = 51;
    }
   } else {
    $$4$ph = $84;
    label = 51;
   }
  } else {
   $$4$ph = $8;
   label = 51;
  }
 } while(0);
 if ((label|0) == 51) {
  __pop_scope($0,0);
  $153 = ($7|0)==(0|0);
  if ($153) {
   $$0149 = $$4$ph;
  } else {
   $$4161163 = $$4$ph;
   label = 52;
  }
 }
 if ((label|0) == 52) {
  __destroy_routine($0,$7);
  $$0149 = $$4161163;
 }
 STACKTOP = sp;return ($$0149|0);
}
function __core_mem($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$3 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16907,(11644|0));
  // unreachable;
 }
 $4 = (_mb_attempt_func_begin($0,$1)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (_mb_attempt_func_end($0,$1)|0);
  $7 = ($6|0)==(0);
  if ($7) {
   $8 = HEAP32[3907]|0;
   $9 = (_mb_push_int($0,$1,$8)|0);
   return ($9|0);
  } else {
   $$3 = $6;
  }
 } else {
  $$3 = $4;
 }
 return ($$3|0);
}
function __core_type($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$05668 = 0, $$057 = 0, $$057$ph = 0, $$4 = 0, $$byval_copy = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16926,(11633|0));
  // unreachable;
 }
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$2>>2] = 0;
 $6 = (_mb_attempt_open_bracket($0,$1)|0);
 $7 = ($6|0)==(0);
 do {
  if ($7) {
   $8 = (_mb_pop_value($0,$1,$2)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = HEAP32[$2>>2]|0;
    $11 = ($10|0)==(8);
    L7: do {
     if ($11) {
      $12 = HEAP32[$5>>2]|0;
      $$05668 = 0;
      while(1) {
       $15 = (356 + ($$05668<<2)|0);
       $16 = HEAP32[$15>>2]|0;
       $17 = (_mb_get_type_string($16)|0);
       $18 = (_strcasecmp($17,$12)|0);
       $19 = ($18|0)==(0);
       $13 = (($$05668) + 1)|0;
       if ($19) {
        $$057$ph = 0;$$sink = $16;
        label = 11;
        break L7;
       }
       $14 = ($13>>>0)<(18);
       if ($14) {
        $$05668 = $13;
       } else {
        label = 9;
        break;
       }
      }
     } else {
      label = 9;
     }
    } while(0);
    if ((label|0) == 9) {
     $20 = (__try_overridden($0,$1,$2,10251,128)|0);
     $21 = $20 & 1;
     $22 = ($21|0)==(0);
     if ($22) {
      $23 = HEAP32[$2>>2]|0;
      $$057$ph = $20;$$sink = $23;
      label = 11;
     } else {
      $$057 = $20;
     }
    }
    if ((label|0) == 11) {
     HEAP32[$5>>2] = $$sink;
     HEAP32[$2>>2] = 16;
     $$057 = $$057$ph;
    }
    $24 = (_mb_attempt_close_bracket($0,$1)|0);
    $25 = ($24|0)==(0);
    if ($25) {
     $26 = $$057 & 2;
     $27 = ($26|0)==(0);
     if ($27) {
      ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
      $28 = (_mb_push_value($0,$1,$$byval_copy)|0);
      $29 = ($28|0)==(0);
      if (!($29)) {
       $$4 = $28;
       break;
      }
     }
     $$4 = 0;
    } else {
     $$4 = $24;
    }
   } else {
    $$4 = $8;
   }
  } else {
   $$4 = $6;
  }
 } while(0);
 STACKTOP = sp;return ($$4|0);
}
function __core_import($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((2222|0),(1578|0),16990,(11620|0));
  // unreachable;
 }
 $4 = (_mb_attempt_func_begin($0,$1)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (_mb_attempt_func_end($0,$1)|0);
  return ($6|0);
 } else {
  return ($4|0);
 }
 return (0)|0;
}
function __init_lambda($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  ___assert_fail((11756|0),(1578|0),8865,(11769|0));
  // unreachable;
 }
 __init_routine($0,$1,0,0);
 $4 = ((($1)) + 58|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(2);
 if ($6) {
  $7 = (__create_running_context(1)|0);
  $8 = ((($1)) + 17|0);
  HEAP8[$8>>0]=$7&255;HEAP8[$8+1>>0]=($7>>8)&255;HEAP8[$8+2>>0]=($7>>16)&255;HEAP8[$8+3>>0]=$7>>24;
  (__push_scope_by_routine($0,$7)|0);
  return;
 } else {
  ___assert_fail((2986|0),(1578|0),8868,(11769|0));
  // unreachable;
 }
}
function _mb_get_var($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$026 = 0, $$027 = 0, $$1$ph35 = 0, $$2 = 0, $$pr33 = 0, $$pr3336 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 if ($or$cond) {
  $7 = ($2|0)!=(0|0);
  if ($7) {
   HEAP32[$2>>2] = 0;
  }
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  L6: do {
   if ($9) {
    $$2 = 0;
   } else {
    $10 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    HEAP32[$4>>2] = $10;
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $12 = ($11|0)==(19);
    do {
     if ($12) {
      $13 = ((($10)) + 4|0);
      $14 = HEAP8[$13>>0]|0;
      $15 = ($14<<24>>24)==(44);
      $16 = ((($8)) + 8|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      if (!($15)) {
       $$pr3336 = $10;$44 = $17;$45 = $17;
       label = 12;
       break;
      }
      $18 = ($17|0)==(0|0);
      if ($18) {
       HEAP32[$4>>2] = 0;
       $$2 = 0;
       break L6;
      } else {
       $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
       HEAP32[$4>>2] = $19;
       $20 = $19;
       $$027 = $17;$$pr33 = $20;
       label = 11;
       break;
      }
     } else {
      $$027 = $8;$$pr33 = $10;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $21 = ((($$027)) + 8|0);
     $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
     $23 = ($$pr33|0)==(0|0);
     if ($23) {
      $$1$ph35 = $22;$36 = $22;
     } else {
      $$pr3336 = $$pr33;$44 = $22;$45 = $22;
      label = 12;
     }
    }
    if ((label|0) == 12) {
     $24 = HEAPU8[$$pr3336>>0]|(HEAPU8[$$pr3336+1>>0]<<8)|(HEAPU8[$$pr3336+2>>0]<<16)|(HEAPU8[$$pr3336+3>>0]<<24);
     $25 = ($24|0)==(9);
     if ($25) {
      $26 = ($3<<24>>24)==(0);
      if (!($26)) {
       $27 = ((($$pr3336)) + 4|0);
       $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
       $29 = ((($28)) + 8|0);
       $30 = HEAP8[$29>>0]|0;
       $31 = $30 & 3;
       $32 = ($31<<24>>24)==(0);
       if (!($32)) {
        (__search_var_in_scope_chain($0,$28,$4)|0);
       }
      }
      if ($7) {
       $33 = HEAP32[$4>>2]|0;
       HEAP32[$2>>2] = $33;
       $$1$ph35 = $45;$36 = $44;
      } else {
       $$1$ph35 = $45;$36 = $44;
      }
     } else {
      $$1$ph35 = $45;$36 = $44;
     }
    }
    $34 = ($$1$ph35|0)==(0|0);
    if ($34) {
     $$2 = 0;
    } else {
     $35 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     $37 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $38 = ($37|0)==(19);
     if ($38) {
      $39 = ((($35)) + 4|0);
      $40 = HEAP8[$39>>0]|0;
      $41 = ($40<<24>>24)==(44);
      if ($41) {
       $42 = ((($$1$ph35)) + 8|0);
       $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
       $$2 = $43;
      } else {
       $$2 = $$1$ph35;
      }
     } else {
      $$2 = $$1$ph35;
     }
    }
   }
  } while(0);
  HEAP32[$1>>2] = $$2;
  $$026 = 0;
 } else {
  $$026 = 3;
 }
 STACKTOP = sp;return ($$026|0);
}
function __is_valid_lambda_body_node($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond6 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $2 = ($1|0)==(8);
 if ($2) {
  $3 = ((($0)) + 4|0);
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  $5 = ((($4)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ($6|0)==(86|0);
  $8 = ($6|0)==(87|0);
  $or$cond = $7 | $8;
  $9 = ($6|0)==(89|0);
  $or$cond6 = $or$cond | $9;
  $10 = ($6|0)==(90|0);
  $or$cond7 = $or$cond6 | $10;
  if ($or$cond7) {
   $11 = 0;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $11 = 1;
 }
 return ($11|0);
}
function __try_mark_upvalue($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $cond = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $5;
 if (!($or$cond5)) {
  ___assert_fail((11667|0),(1578|0),8965,(11681|0));
  // unreachable;
 }
 $6 = ((($1)) + 58|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(2);
 if (!($8)) {
  ___assert_fail((11699|0),(1578|0),8966,(11681|0));
  // unreachable;
 }
 $9 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $cond = ($9|0)==(9);
 do {
  if ($cond) {
   $10 = ((($1)) + 17|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = ((($11)) + 8|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ((($2)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = (__ht_find($13,$16)|0);
   $18 = ($17|0)==(0|0);
   if (!($18)) {
    $19 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     break;
    }
   }
   $21 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   __mark_upvalue($0,$1,$2,$22);
  }
 } while(0);
 return;
}
function __mark_upvalue($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)!=(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $5 & $6;
 $7 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $7;
 if (!($or$cond5)) {
  ___assert_fail((11723|0),(1578|0),8940,(11742|0));
  // unreachable;
 }
 $8 = ((($0)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = (__search_identifier_in_scope_chain($0,$9,$3,1,0,$4)|0);
 $11 = ($10|0)!=(0|0);
 $12 = HEAP32[$4>>2]|0;
 $13 = ($12|0)!=(0|0);
 $or$cond7 = $11 & $13;
 L4: do {
  if ($or$cond7) {
   $14 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $15 = ($14|0)==(0|0);
   L6: do {
    if (!($15)) {
     $16 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
     switch ($16|0) {
     case 17:  {
      break;
     }
     case 9:  {
      $17 = ((($14)) + 4|0);
      $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
      $19 = ((($18)) + 4|0);
      $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
      $21 = ($20|0)==(0|0);
      if ($21) {
       break L6;
      }
      $22 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
      $23 = ($22|0)==(17);
      if (!($23)) {
       break L6;
      }
      break;
     }
     default: {
      break L6;
     }
     }
     $24 = ((($1)) + 17|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ($25|0)==(0|0);
     if (!($26)) {
      $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
      $28 = ($27|0)==($12|0);
      if (!($28)) {
       break L4;
      }
     }
    }
   } while(0);
   $29 = ((($12)) + 32|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = ($30|0)==(0|0);
   if ($31) {
    $32 = (__ls_create()|0);
    $33 = HEAP32[$4>>2]|0;
    $34 = ((($33)) + 32|0);
    HEAP8[$34>>0]=$32&255;HEAP8[$34+1>>0]=($32>>8)&255;HEAP8[$34+2>>0]=($32>>16)&255;HEAP8[$34+3>>0]=$32>>24;
    $35 = $32;
   } else {
    $35 = $30;
   }
   $36 = (__ls_find($35,$1,126,0)|0);
   $37 = ($36|0)==(0|0);
   if ($37) {
    $38 = HEAP32[$4>>2]|0;
    $39 = ((($38)) + 32|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    (__ls_pushback($40,$1)|0);
    label = 14;
   } else {
    label = 14;
   }
  } else {
   label = 14;
  }
 } while(0);
 if ((label|0) == 14) {
  $41 = ((($1)) + 33|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)==(0|0);
  if ($43) {
   $44 = (__ht_create(119,120,0)|0);
   HEAP8[$41>>0]=$44&255;HEAP8[$41+1>>0]=($44>>8)&255;HEAP8[$41+2>>0]=($44>>16)&255;HEAP8[$41+3>>0]=$44>>24;
   $48 = $44;
  } else {
   $48 = $42;
  }
  $45 = ((($2)) + 4|0);
  $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  __ht_set_or_insert($48,$47,$2);
 }
 STACKTOP = sp;return;
}
function __init_routine($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 if (!($or$cond)) {
  ___assert_fail((11756|0),(1578|0),8694,(11782|0));
  // unreachable;
 }
 dest=$1; stop=dest+62|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $6 = ((($1)) + 45|0);
 HEAP8[$6>>0]=$2&255;HEAP8[$6+1>>0]=($2>>8)&255;HEAP8[$6+2>>0]=($2>>16)&255;HEAP8[$6+3>>0]=$2>>24;
 $7 = ($2|0)!=(0|0);
 $8 = ($3|0)!=(0|0);
 $or$cond3 = $7 & $8;
 do {
  if ($or$cond3) {
   $13 = ((($1)) + 58|0);
   HEAP8[$13>>0]=3&255;HEAP8[$13+1>>0]=(3>>8)&255;HEAP8[$13+2>>0]=(3>>16)&255;HEAP8[$13+3>>0]=3>>24;
   HEAP8[$1>>0]=$3&255;HEAP8[$1+1>>0]=($3>>8)&255;HEAP8[$1+2>>0]=($3>>16)&255;HEAP8[$1+3>>0]=$3>>24;
  } else {
   $9 = ($2|0)==(0|0);
   $or$cond5 = $9 | $8;
   if (!($or$cond5)) {
    $10 = ((($1)) + 58|0);
    HEAP8[$10>>0]=1&255;HEAP8[$10+1>>0]=(1>>8)&255;HEAP8[$10+2>>0]=(1>>16)&255;HEAP8[$10+3>>0]=1>>24;
    $11 = (__create_running_context(1)|0);
    HEAP8[$1>>0]=$11&255;HEAP8[$1+1>>0]=($11>>8)&255;HEAP8[$1+2>>0]=($11>>16)&255;HEAP8[$1+3>>0]=$11>>24;
    break;
   }
   $or$cond7 = $7 | $8;
   if (!($or$cond7)) {
    $12 = ((($1)) + 58|0);
    HEAP8[$12>>0]=2&255;HEAP8[$12+1>>0]=(2>>8)&255;HEAP8[$12+2>>0]=(2>>16)&255;HEAP8[$12+3>>0]=2>>24;
    __create_ref($1,159,17,$0);
    __ref($1,$1);
   }
  }
 } while(0);
 $14 = ((($0)) + 67|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  $17 = (_mb_strdup($15,0)|0);
  $18 = ((($1)) + 49|0);
  HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
 }
 return;
}
function __unref_routine($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((4270|0),(1578|0),8878,(11796|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 if ($5) {
  $6 = ((($0)) + 13|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  __destroy_routine($7,$1);
 }
 return;
}
function __reflect_string_to_class($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
 $4 = ($3|0)==(0|0);
 L1: do {
  if ($4) {
   $$0 = 0;
  } else {
   $5 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
   $6 = ($5|0)==(0|0);
   if ($6) {
    $$0 = 0;
   } else {
    $7 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    switch ($7|0) {
    case 16:  {
     $16 = $5;
     break;
    }
    case 9:  {
     $8 = ((($5)) + 4|0);
     $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
     $10 = ((($9)) + 4|0);
     $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
     $12 = ($11|0)==(0|0);
     if ($12) {
      $$0 = 0;
      break L1;
     }
     $13 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
     $14 = ($13|0)==(16);
     if ($14) {
      $16 = $11;
     } else {
      $$0 = 0;
      break L1;
     }
     break;
    }
    default: {
     $$0 = 0;
     break L1;
    }
    }
    $15 = ($2|0)==(0|0);
    if (!($15)) {
     (__internal_object_to_public_value($16,$2)|0);
    }
    $17 = ((($16)) + 4|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $$0 = $18;
   }
  }
 } while(0);
 return ($$0|0);
}
function __reflect_class_field($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp + 24|0;
 $4 = sp + 16|0;
 $5 = sp + 48|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = ($0|0)!=(0|0);
 $9 = ($2|0)!=(0|0);
 $or$cond = $8 & $9;
 if (!($or$cond)) {
  ___assert_fail((11825|0),(1578|0),8575,(11835|0));
  // unreachable;
 }
 $10 = ((($3)) + 4|0);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;HEAP8[$10+12>>0]=0|0;
 HEAP32[$3>>2] = 4;
 $11 = (__is_internal_object($0)|0);
 $12 = ($11<<24>>24)==(0);
 L4: do {
  if ($12) {
   $13 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
   switch ($13|0) {
   case 9:  {
    $14 = ((($0)) + 4|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = ((($3)) + 4|0);
    HEAP32[$17>>2] = $16;
    $18 = ((($2)) + 19|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = (__ht_find($19,$3)|0);
    $21 = ($20|0)==(0|0);
    if (!($21)) {
     break L4;
    }
    $22 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $23 = ((($4)) + 4|0);
    HEAP32[$23>>2] = $22;
    HEAP32[$4>>2] = 8;
    (__internal_object_to_public_value($0,$5)|0);
    (__set_dict($2,$4,$5,0,0)|0);
    break L4;
    break;
   }
   case 17:  {
    $24 = ((($0)) + 4|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ((($25)) + 45|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = ((($3)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = ((($2)) + 19|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = (__ht_find($30,$3)|0);
    $32 = ($31|0)==(0|0);
    if (!($32)) {
     break L4;
    }
    $33 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $34 = ((($6)) + 4|0);
    HEAP32[$34>>2] = $33;
    HEAP32[$6>>2] = 8;
    $35 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
    $36 = (__internal_type_to_public_type($35)|0);
    $37 = ((($7)) + 4|0);
    HEAP32[$37>>2] = $36;
    HEAP32[$7>>2] = 16;
    (__set_dict($2,$6,$7,0,0)|0);
    break L4;
    break;
   }
   default: {
    break L4;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return 0;
}
function __destroy_memory($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),10107,(11926|0));
  // unreachable;
 } else {
  _mb_free($0);
  return 0;
 }
 return (0)|0;
}
function __end_of_file($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = ((($0)) + 150|0);
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 }
 return;
}
function __ls_destroy_module_func($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((2651|0),(1578|0),11696,(11971|0));
  // unreachable;
 }
 $3 = HEAPU8[$0>>0]|(HEAPU8[$0+1>>0]<<8)|(HEAPU8[$0+2>>0]<<16)|(HEAPU8[$0+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if ($4) {
  ___assert_fail((1713|0),(1578|0),11699,(11971|0));
  // unreachable;
 } else {
  _mb_free($3);
  HEAP8[$0>>0]=0&255;HEAP8[$0+1>>0]=(0>>8)&255;HEAP8[$0+2>>0]=(0>>16)&255;HEAP8[$0+3>>0]=0>>24;
  _mb_free($0);
  return -1;
 }
 return (0)|0;
}
function _mb_close($0) {
 $0 = $0|0;
 var $$0 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = 3;
  } else {
   $2 = HEAP32[$0>>2]|0;
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$0 = 3;
   } else {
    $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $5 = ($4|0)==(0|0);
    if (!($5)) {
     $6 = (_mb_join($0)|0);
     $$0 = $6;
     break;
    }
    $7 = ((($2)) + 12|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = $8 & -2;
    HEAP8[$7>>0] = $9;
    $10 = HEAP32[$0>>2]|0;
    __close_coll_lib($10);
    $11 = HEAP32[$0>>2]|0;
    __close_std_lib($11);
    $12 = HEAP32[$0>>2]|0;
    __close_core_lib($12);
    $13 = HEAP32[$0>>2]|0;
    $14 = ((($13)) + 17|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    (__ls_foreach($15,135)|0);
    __ls_destroy($15);
    $16 = HEAP32[$0>>2]|0;
    $17 = ((($16)) + 102|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    __ls_destroy($18);
    $19 = HEAP32[$0>>2]|0;
    $20 = ((($19)) + 122|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    __ls_destroy($21);
    $22 = HEAP32[$0>>2]|0;
    $23 = ((($22)) + 126|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    __ls_destroy($24);
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + 130|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    __ls_destroy($27);
    $28 = HEAP32[$0>>2]|0;
    __tidy_scope_chain($28);
    $29 = HEAP32[$0>>2]|0;
    __dispose_scope_chain($29);
    $30 = HEAP32[$0>>2]|0;
    $31 = ((($30)) + 38|0);
    $32 = HEAP8[$31>>0]|0;
    $33 = $32 & -2;
    HEAP8[$31>>0] = $33;
    $34 = HEAP32[$0>>2]|0;
    __gc_collect_garbage($34,-1);
    $35 = HEAP32[$0>>2]|0;
    $36 = ((($35)) + 21|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    __ht_destroy($37);
    $38 = HEAP32[$0>>2]|0;
    $39 = ((($38)) + 25|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    __ht_destroy($40);
    $41 = HEAP32[$0>>2]|0;
    $42 = ((($41)) + 29|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    __ht_destroy($43);
    $44 = HEAP32[$0>>2]|0;
    $45 = ((($44)) + 21|0);
    HEAP8[$45>>0]=0&255;HEAP8[$45+1>>0]=(0>>8)&255;HEAP8[$45+2>>0]=(0>>16)&255;HEAP8[$45+3>>0]=0>>24;
    $46 = HEAP32[$0>>2]|0;
    $47 = ((($46)) + 25|0);
    HEAP8[$47>>0]=0&255;HEAP8[$47+1>>0]=(0>>8)&255;HEAP8[$47+2>>0]=(0>>16)&255;HEAP8[$47+3>>0]=0>>24;
    $48 = HEAP32[$0>>2]|0;
    $49 = ((($48)) + 29|0);
    HEAP8[$49>>0]=0&255;HEAP8[$49+1>>0]=(0>>8)&255;HEAP8[$49+2>>0]=(0>>16)&255;HEAP8[$49+3>>0]=0>>24;
    $50 = HEAP32[$0>>2]|0;
    $51 = ((($50)) + 8|0);
    $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
    $53 = ($52|0)==(0|0);
    do {
     if ($53) {
      $63 = $50;
     } else {
      (__ls_count($52)|0);
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 8|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = (__ls_count($56)|0);
      $58 = ($57|0)==(0);
      if ($58) {
       $59 = HEAP32[$0>>2]|0;
       $60 = ((($59)) + 8|0);
       $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
       __ls_destroy($61);
       $$pre = HEAP32[$0>>2]|0;
       $63 = $$pre;
       break;
      } else {
       ___assert_fail((12032|0),(1578|0),12189,(12065|0));
       // unreachable;
      }
     }
    } while(0);
    $62 = ((($63)) + 39|0);
    $64 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    (__ls_foreach($64,135)|0);
    $65 = HEAP32[$0>>2]|0;
    $66 = ((($65)) + 39|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    __ls_destroy($67);
    $68 = HEAP32[$0>>2]|0;
    $69 = ((($68)) + 43|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    (__ls_foreach($70,135)|0);
    $71 = HEAP32[$0>>2]|0;
    $72 = ((($71)) + 43|0);
    $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
    __ls_destroy($73);
    $74 = HEAP32[$0>>2]|0;
    $75 = ((($74)) + 71|0);
    __destroy_parsing_context($75);
    $76 = HEAP32[$0>>2]|0;
    $77 = ((($76)) + 55|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    __ht_foreach($78,122);
    __ht_destroy($78);
    $79 = HEAP32[$0>>2]|0;
    $80 = ((($79)) + 63|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    (__ls_foreach($81,129)|0);
    $82 = HEAP32[$0>>2]|0;
    $83 = ((($82)) + 63|0);
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    __ls_destroy($84);
    $85 = HEAP32[$0>>2]|0;
    $86 = ((($85)) + 51|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    __ht_foreach($87,121);
    __ht_destroy($87);
    $88 = HEAP32[$0>>2]|0;
    $89 = ((($88)) + 47|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    __ht_foreach($90,121);
    __ht_destroy($90);
    $91 = HEAP32[$0>>2]|0;
    __close_constant($91);
    $92 = HEAP32[$0>>2]|0;
    $93 = ($92|0)==(0|0);
    if ($93) {
     ___assert_fail((1713|0),(1578|0),12219,(12065|0));
     // unreachable;
    } else {
     _mb_free($92);
     HEAP32[$0>>2] = 0;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _mb_join($0) {
 $0 = $0|0;
 var $$0 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = 0;
 $2 = ($0|0)==(0|0);
 do {
  if ($2) {
   $$0 = 3;
  } else {
   $3 = HEAP32[$0>>2]|0;
   $4 = ($3|0)==(0|0);
   if ($4) {
    $$0 = 3;
   } else {
    $5 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
    $6 = ($5|0)==(0|0);
    if ($6) {
     $$0 = 3;
    } else {
     HEAP32[$1>>2] = $3;
     $7 = (_mb_get_forked_from($3,$1)|0);
     $8 = ($7|0)==(0);
     if ($8) {
      while(1) {
       $$pre = HEAP32[$1>>2]|0;
       $9 = (_mb_get_forked_from($$pre,$1)|0);
       $10 = ($9|0)==(0);
       if (!($10)) {
        break;
       }
      }
     }
     $11 = HEAP32[$0>>2]|0;
     $12 = ((($11)) + 12|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = $13 & -2;
     HEAP8[$12>>0] = $14;
     $15 = HEAP32[$0>>2]|0;
     $16 = ((($15)) + 102|0);
     $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
     __ls_destroy($17);
     $18 = HEAP32[$0>>2]|0;
     $19 = ((($18)) + 122|0);
     $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
     __ls_destroy($20);
     $21 = HEAP32[$0>>2]|0;
     $22 = ((($21)) + 126|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     __ls_destroy($23);
     $24 = HEAP32[$0>>2]|0;
     $25 = ((($24)) + 130|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     __ls_destroy($26);
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 4|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     HEAP8[$29>>0]=0&255;HEAP8[$29+1>>0]=(0>>8)&255;HEAP8[$29+2>>0]=(0>>16)&255;HEAP8[$29+3>>0]=0>>24;
     $30 = HEAP32[$0>>2]|0;
     $31 = ((($30)) + 4|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = ((($30)) + 75|0);
     HEAP8[$33>>0]=$32&255;HEAP8[$33+1>>0]=($32>>8)&255;HEAP8[$33+2>>0]=($32>>16)&255;HEAP8[$33+3>>0]=$32>>24;
     $34 = HEAP32[$0>>2]|0;
     __dispose_scope_chain($34);
     $35 = HEAP32[$0>>2]|0;
     $36 = ((($35)) + 39|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     (__ls_foreach($37,135)|0);
     $38 = HEAP32[$0>>2]|0;
     $39 = ((($38)) + 39|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     __ls_destroy($40);
     $41 = HEAP32[$0>>2]|0;
     $42 = ((($41)) + 43|0);
     $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
     (__ls_foreach($43,135)|0);
     $44 = HEAP32[$0>>2]|0;
     $45 = ((($44)) + 43|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     __ls_destroy($46);
     $47 = HEAP32[$1>>2]|0;
     $48 = ((($47)) + 8|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = ($49|0)==(0|0);
     if (!($50)) {
      $51 = HEAP32[$0>>2]|0;
      (__ls_try_remove($49,$51,154,0)|0);
     }
     $52 = HEAP32[$0>>2]|0;
     $53 = ($52|0)==(0|0);
     if ($53) {
      ___assert_fail((1713|0),(1578|0),12393,(12255|0));
      // unreachable;
     } else {
      _mb_free($52);
      HEAP32[$0>>2] = 0;
      $$0 = 0;
      break;
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __close_coll_lib($0) {
 $0 = $0|0;
 var $$01 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11987,(12239|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 while(1) {
  $2 = (1912 + ($$01<<3)|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  (__remove_func($0,$3,1)|0);
  $4 = (($$01) + 1)|0;
  $exitcond = ($4|0)==(15);
  if ($exitcond) {
   break;
  } else {
   $$01 = $4;
  }
 }
 return;
}
function __close_std_lib($0) {
 $0 = $0|0;
 var $$01 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11960,(12224|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 while(1) {
  $2 = (9638 + ($$01<<3)|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  (__remove_func($0,$3,1)|0);
  $4 = (($$01) + 1)|0;
  $exitcond = ($4|0)==(29);
  if ($exitcond) {
   break;
  } else {
   $$01 = $4;
  }
 }
 return;
}
function __close_core_lib($0) {
 $0 = $0|0;
 var $$01 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11934,(12195|0));
  // unreachable;
 } else {
  $$01 = 0;
 }
 while(1) {
  $2 = (10983 + ($$01<<3)|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  (__remove_func($0,$3,1)|0);
  $4 = (($$01) + 1)|0;
  $exitcond = ($4|0)==(54);
  if ($exitcond) {
   break;
  } else {
   $$01 = $4;
  }
 }
 return;
}
function __tidy_scope_chain($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),10723,(12153|0));
  // unreachable;
 }
 $2 = ((($0)) + 71|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 $5 = ((($0)) + 75|0);
 L4: do {
  if ($4) {
   $9 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)==(0|0);
   if (!($11)) {
    while(1) {
     __pop_scope($0,0);
     $12 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
     $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $14 = ($13|0)==(0|0);
     if ($14) {
      break;
     }
    }
   }
  } else {
   $6 = ((($3)) + 160|0);
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8);
   $8 = ($7<<16>>16)==(0);
   L9: do {
    if (!($8)) {
     while(1) {
      $15 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
      $16 = ((($15)) + 4|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      $18 = ($17|0)==(1);
      if ($18) {
       break L9;
      }
      $19 = (__end_routine($0)|0);
      $20 = ($19<<24>>24)==(0);
      if (!($20)) {
       $21 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
       $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
       $23 = ($22|0)==(0|0);
       if ($23) {
        break L9;
       }
       __pop_scope($0,0);
      }
      $27 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8);
      $28 = ($27<<16>>16)==(0);
      if ($28) {
       break;
      }
     }
    }
   } while(0);
   $24 = ((($3)) + 158|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8);
   $26 = ($25<<16>>16)==(0);
   if (!($26)) {
    while(1) {
     $29 = (__end_class($0)|0);
     $30 = ($29<<24>>24)==(0);
     if (!($30)) {
      $31 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
      $33 = ($32|0)==(0|0);
      if ($33) {
       break L4;
      }
      __pop_scope($0,0);
     }
     $34 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8);
     $35 = ($34<<16>>16)==(0);
     if ($35) {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function __dispose_scope_chain($0) {
 $0 = $0|0;
 var $$byval_copy = 0, $$in = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),10691,(12115|0));
  // unreachable;
 }
 $2 = ((($0)) + 75|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $$in = $3;
  while(1) {
   $5 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8)|(HEAPU8[$$in+2>>0]<<16)|(HEAPU8[$$in+3>>0]<<24);
   $6 = ((($$in)) + 8|0);
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   __ht_foreach($7,135);
   $8 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   __ht_clear($8);
   $9 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   __ht_destroy($9);
   $10 = ((($$in)) + 32|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    __ls_clear($11);
    $13 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    __ls_destroy($13);
    HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
   }
   HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
   $14 = ((($$in)) + 20|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$14>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$14+4>>2]|0;
   (_mb_dispose_value($0,$$byval_copy)|0);
   _mb_free($$in);
   $15 = ($5|0)==(0|0);
   if ($15) {
    break;
   } else {
    $$in = $5;
   }
  }
 }
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __destroy_parsing_context($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
   $5 = ($4|0)==(0|0);
   if ($5) {
    $9 = $2;
   } else {
    (__ls_foreach($4,129)|0);
    $6 = HEAP32[$0>>2]|0;
    $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
    __ls_destroy($7);
    $$pre = HEAP32[$0>>2]|0;
    $8 = ($$pre|0)==(0|0);
    if ($8) {
     ___assert_fail((1713|0),(1578|0),11667,(12090|0));
     // unreachable;
    } else {
     $9 = $$pre;
    }
   }
   _mb_free($9);
   HEAP32[$0>>2] = 0;
  }
 }
 return;
}
function __close_constant($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),11911,(12074|0));
  // unreachable;
 } else {
  return;
 }
}
function _mb_dispose_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 3;
 } else {
  $3 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
  $4 = ($3|0)==(8);
  do {
   if ($4) {
    $5 = ((($1)) + 4|0);
    $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $7 = ($6|0)==(0|0);
    if ($7) {
     ___assert_fail((1713|0),(1578|0),14028,(12136|0));
     // unreachable;
    } else {
     _mb_free($6);
     HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
     break;
    }
   }
  } while(0);
  __assign_public_value($0,$1,0,0);
  $$0 = 0;
 }
 return ($$0|0);
}
function __end_routine($0) {
 $0 = $0|0;
 var $$0 = 0, $$sink = 0, $$sink35 = 0, $$sink4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8759,(12182|0));
  // unreachable;
 }
 $2 = ((($0)) + 71|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ((($3)) + 160|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8);
 $6 = ($5<<16>>16)==(0);
 if ($6) {
  $7 = ((($0)) + 67|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  (__set_current_error($0,51,$8)|0);
  $9 = ((($0)) + 159|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $$0 = 0;
  } else {
   $12 = ((($0)) + 134|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   if ($15) {
    $16 = $13 | 1;
    HEAP8[$12>>0] = $16;
    $17 = ((($0)) + 135|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = (_mb_get_error_desc($18)|0);
    $20 = ((($0)) + 139|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $23 = ($22|0)==(0|0);
    if ($23) {
     $24 = ((($0)) + 143|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($0)) + 147|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     $49 = $27;$50 = $25;
     label = 10;
    } else {
     $28 = ((($0)) + 79|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = ($29|0)==(0);
     $31 = ((($0)) + 143|0);
     $32 = ((($22)) + 164|0);
     $$sink = $30 ? $32 : $31;
     $33 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
     $34 = ((($0)) + 79|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ($35|0)==(0);
     $37 = ((($0)) + 147|0);
     $38 = ((($22)) + 168|0);
     $$sink35 = $36 ? $38 : $37;
     $39 = HEAPU8[$$sink35>>0]|(HEAPU8[$$sink35+1>>0]<<8);
     $40 = ((($0)) + 79|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ($41|0)==(0);
     if ($42) {
      $43 = ((($22)) + 170|0);
      $$sink4 = $43;$46 = $33;$47 = $39;
     } else {
      $49 = $39;$50 = $33;
      label = 10;
     }
    }
    if ((label|0) == 10) {
     $44 = ((($0)) + 149|0);
     $$sink4 = $44;$46 = $50;$47 = $49;
    }
    $45 = HEAPU8[$$sink4>>0]|(HEAPU8[$$sink4+1>>0]<<8);
    FUNCTION_TABLE_viiiiiiii[$10 & 127]($0,$18,$19,$21,$46,$47,$45,3);
    $$0 = 0;
   } else {
    $$0 = 0;
   }
  }
 } else {
  $48 = (($5) + -1)<<16>>16;
  HEAP8[$4>>0]=$48&255;HEAP8[$4+1>>0]=$48>>8;
  $$0 = 1;
 }
 return ($$0|0);
}
function __end_class($0) {
 $0 = $0|0;
 var $$0 = 0, $$sink = 0, $$sink4 = 0, $$sink68 = 0, $$sink69 = 0, $$sink70 = 0, $$sink9 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8278,(12171|0));
  // unreachable;
 }
 $2 = ((($0)) + 71|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ((($3)) + 160|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8);
 $6 = ($5<<16>>16)==(0);
 if (!($6)) {
  $7 = ((($0)) + 67|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  (__set_current_error($0,51,$8)|0);
  $9 = ((($0)) + 159|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   $12 = ((($0)) + 134|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   if ($15) {
    $16 = $13 | 1;
    HEAP8[$12>>0] = $16;
    $17 = ((($0)) + 135|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = (_mb_get_error_desc($18)|0);
    $20 = ((($0)) + 139|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $23 = ($22|0)==(0|0);
    if ($23) {
     $24 = ((($0)) + 143|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($0)) + 147|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     $93 = $27;$94 = $25;
     label = 10;
    } else {
     $28 = ((($0)) + 79|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = ($29|0)==(0);
     $31 = ((($0)) + 143|0);
     $32 = ((($22)) + 164|0);
     $$sink = $30 ? $32 : $31;
     $33 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
     $34 = ((($0)) + 79|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ($35|0)==(0);
     $37 = ((($0)) + 147|0);
     $38 = ((($22)) + 168|0);
     $$sink68 = $36 ? $38 : $37;
     $39 = HEAPU8[$$sink68>>0]|(HEAPU8[$$sink68+1>>0]<<8);
     $40 = ((($0)) + 79|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ($41|0)==(0);
     if ($42) {
      $43 = ((($22)) + 170|0);
      $$sink4 = $43;$46 = $33;$47 = $39;
     } else {
      $93 = $39;$94 = $33;
      label = 10;
     }
    }
    if ((label|0) == 10) {
     $44 = ((($0)) + 149|0);
     $$sink4 = $44;$46 = $94;$47 = $93;
    }
    $45 = HEAPU8[$$sink4>>0]|(HEAPU8[$$sink4+1>>0]<<8);
    FUNCTION_TABLE_viiiiiiii[$10 & 127]($0,$18,$19,$21,$46,$47,$45,3);
   }
  }
 }
 $48 = ((($3)) + 158|0);
 $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8);
 $50 = ($49<<16>>16)==(0);
 if ($50) {
  $51 = ((($0)) + 67|0);
  $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
  (__set_current_error($0,54,$52)|0);
  $53 = ((($0)) + 159|0);
  $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
  $55 = ($54|0)==(0|0);
  if ($55) {
   $$0 = 0;
  } else {
   $56 = ((($0)) + 134|0);
   $57 = HEAP8[$56>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $60 = $57 | 1;
    HEAP8[$56>>0] = $60;
    $61 = ((($0)) + 135|0);
    $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
    $63 = (_mb_get_error_desc($62)|0);
    $64 = ((($0)) + 139|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $67 = ($66|0)==(0|0);
    if ($67) {
     $68 = ((($0)) + 143|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = ((($0)) + 147|0);
     $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8);
     $95 = $71;$96 = $69;
     label = 19;
    } else {
     $72 = ((($0)) + 79|0);
     $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
     $74 = ($73|0)==(0);
     $75 = ((($0)) + 143|0);
     $76 = ((($66)) + 164|0);
     $$sink69 = $74 ? $76 : $75;
     $77 = HEAPU8[$$sink69>>0]|(HEAPU8[$$sink69+1>>0]<<8)|(HEAPU8[$$sink69+2>>0]<<16)|(HEAPU8[$$sink69+3>>0]<<24);
     $78 = ((($0)) + 79|0);
     $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
     $80 = ($79|0)==(0);
     $81 = ((($0)) + 147|0);
     $82 = ((($66)) + 168|0);
     $$sink70 = $80 ? $82 : $81;
     $83 = HEAPU8[$$sink70>>0]|(HEAPU8[$$sink70+1>>0]<<8);
     $84 = ((($0)) + 79|0);
     $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     $86 = ($85|0)==(0);
     if ($86) {
      $87 = ((($66)) + 170|0);
      $$sink9 = $87;$90 = $77;$91 = $83;
     } else {
      $95 = $83;$96 = $77;
      label = 19;
     }
    }
    if ((label|0) == 19) {
     $88 = ((($0)) + 149|0);
     $$sink9 = $88;$90 = $96;$91 = $95;
    }
    $89 = HEAPU8[$$sink9>>0]|(HEAPU8[$$sink9+1>>0]<<8);
    FUNCTION_TABLE_viiiiiiii[$54 & 127]($0,$62,$63,$65,$90,$91,$89,3);
    $$0 = 0;
   } else {
    $$0 = 0;
   }
  }
 } else {
  HEAP8[$48>>0]=0&255;HEAP8[$48+1>>0]=0>>8;
  $92 = ((($0)) + 93|0);
  HEAP8[$92>>0]=0&255;HEAP8[$92+1>>0]=(0>>8)&255;HEAP8[$92+2>>0]=(0>>16)&255;HEAP8[$92+3>>0]=0>>24;
  $$0 = 1;
 }
 return ($$0|0);
}
function __remove_func($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$046 = 0, $$047 = 0, $$1 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1649|0),(1578|0),11812,(12211|0));
  // unreachable;
 }
 $4 = ($1|0)==(0|0);
 do {
  if ($4) {
   $$047 = 0;
  } else {
   $5 = (_strlen($1)|0);
   $6 = (($5) + 1)|0;
   $7 = (_mb_strdup($1,$6)|0);
   (_mb_strupr($7)|0);
   $8 = ($2<<24>>24)!=(0);
   $9 = ((($0)) + 51|0);
   $10 = ((($0)) + 47|0);
   $$sink = $8 ? $10 : $9;
   $11 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
   $12 = ((($0)) + 59|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)==(0|0);
   if ($14) {
    label = 6;
   } else {
    $15 = (__generate_func_name($0,$7,1)|0);
    $16 = ($15|0)==(0|0);
    if ($16) {
     label = 6;
    } else {
     $$1 = $15;
    }
   }
   if ((label|0) == 6) {
    $17 = (_strlen($7)|0);
    $18 = (($17) + 1)|0;
    $19 = (_mb_strdup($7,$18)|0);
    $$1 = $19;
   }
   $20 = (__ht_find($11,$$1)|0);
   $21 = ($20|0)==(0|0);
   if ($21) {
    (__set_current_error($0,2,0)|0);
    $$046 = 0;
   } else {
    $22 = (__ht_remove($11,$$1,160)|0);
    $$046 = $22;
   }
   $23 = ($$1|0)==(0|0);
   if ($23) {
    ___assert_fail((1713|0),(1578|0),11832,(12211|0));
    // unreachable;
   }
   _mb_free($$1);
   $24 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $25 = ($24|0)==(0|0);
   if (!($25)) {
    $26 = ((($0)) + 55|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = (__ht_find($27,$7)|0);
    $29 = ($28|0)==(0|0);
    if (!($29)) {
     $30 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $31 = (__ls_find($30,$0,130,0)|0);
     $32 = ($31|0)==(0|0);
     if (!($32)) {
      __ls_remove($30,$31,128);
     }
    }
   }
   $33 = ($7|0)==(0|0);
   if ($33) {
    ___assert_fail((1713|0),(1578|0),11847,(12211|0));
    // unreachable;
   } else {
    _mb_free($7);
    $$047 = $$046;
    break;
   }
  }
 } while(0);
 return ($$047|0);
}
function __ls_cmp_extra_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = (_strcmp($3,$1)|0);
 return ($4|0);
}
function _mb_register_func($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0|0);
 $or$cond3 = $or$cond & $5;
 if ($or$cond3) {
  $6 = (__register_func($0,$1,$2,0)|0);
  $$0 = $6;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function _mb_load_string($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0114124 = 0, $$0114125 = 0, $$0115 = 0, $$0116140 = 0, $$0119139 = 0, $$0121138 = 0, $$2113 = 0, $$2118 = 0, $$in = 0, $$in178 = 0, $$phi$trans$insert = 0, $$phi$trans$insert146 = 0, $$phi$trans$insert148 = 0, $$pr = 0, $$pr159 = 0, $$pre = 0, $$pre147 = 0, $$pre149 = 0, $$sink10 = 0, $$sink5 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond123 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $1;
 $4 = ($0|0)!=(0|0);
 $5 = ($1|0)!=(0|0);
 $or$cond = $4 & $5;
 L1: do {
  if ($or$cond) {
   $6 = ((($0)) + 79|0);
   HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
   $7 = ((($0)) + 71|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $10 = (__reset_parsing_context(0)|0);
    HEAP8[$7>>0]=$10&255;HEAP8[$7+1>>0]=($10>>8)&255;HEAP8[$7+2>>0]=($10>>16)&255;HEAP8[$7+3>>0]=$10>>24;
    $14 = $10;
   } else {
    $14 = $8;
   }
   (_mb_uu_getbom($3)|0);
   $11 = HEAP32[$3>>2]|0;
   $12 = HEAP8[$11>>0]|0;
   $13 = ($12<<24>>24)==(0);
   L6: do {
    if ($13) {
     $$phi$trans$insert = ((($14)) + 164|0);
     $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
     $$phi$trans$insert146 = ((($14)) + 168|0);
     $$pre147 = HEAPU8[$$phi$trans$insert146>>0]|(HEAPU8[$$phi$trans$insert146+1>>0]<<8);
     $$phi$trans$insert148 = ((($14)) + 170|0);
     $$pre149 = HEAPU8[$$phi$trans$insert148>>0]|(HEAPU8[$$phi$trans$insert148+1>>0]<<8);
     $105 = $$pre;$106 = $$pre147;$107 = $$pre149;
    } else {
     $15 = ((($14)) + 150|0);
     $16 = ((($14)) + 168|0);
     $17 = ((($14)) + 170|0);
     $18 = ((($14)) + 164|0);
     $$0116140 = 0;$$0119139 = 0;$$0121138 = 0;$21 = $11;$24 = $12;
     L9: while(1) {
      $19 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
      $20 = ($19|0)==(0);
      if ($20) {
       $22 = (_mb_uu_ischar($21)|0);
       $23 = ($22|0)==(1);
       if ($23) {
        label = 9;
       } else {
        $$0114125 = $22;
        label = 21;
       }
      } else {
       label = 9;
      }
      L13: do {
       if ((label|0) == 9) {
        label = 0;
        switch ($24<<24>>24) {
        case 13: case 10:  {
         break;
        }
        default: {
         $$0114125 = 1;
         label = 21;
         break L13;
        }
        }
        $25 = ($$0116140<<24>>24)==(0);
        $26 = ($$0116140<<24>>24)==($24<<24>>24);
        $or$cond123 = $25 | $26;
        if ($or$cond123) {
         $27 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8);
         $28 = (($27) + 1)<<16>>16;
         HEAP8[$16>>0]=$28&255;HEAP8[$16+1>>0]=$28>>8;
         HEAP8[$17>>0]=0&255;HEAP8[$17+1>>0]=0>>8;
         $29 = ($27<<16>>16)==(-1);
         if ($29) {
          label = 12;
          break L9;
         } else {
          $$0114124 = 1;$$2118 = $24;
         }
        } else {
         $$0114125 = 1;
         label = 21;
        }
       }
      } while(0);
      if ((label|0) == 21) {
       label = 0;
       $60 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8);
       $61 = (($60) + 1)<<16>>16;
       HEAP8[$17>>0]=$61&255;HEAP8[$17+1>>0]=$61>>8;
       $$0114124 = $$0114125;$$2118 = 0;
      }
      $62 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
      $63 = (__parse_char($0,$21,$$0114124,$62,$$0121138,$$0119139)|0);
      $64 = ($63|0)==(0);
      if (!($64)) {
       label = 23;
       break;
      }
      $97 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8);
      $98 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8);
      $99 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
      $100 = (($99) + 1)|0;
      HEAP8[$18>>0]=$100&255;HEAP8[$18+1>>0]=($100>>8)&255;HEAP8[$18+2>>0]=($100>>16)&255;HEAP8[$18+3>>0]=$100>>24;
      $101 = HEAP32[$3>>2]|0;
      $102 = (($101) + ($$0114124)|0);
      HEAP32[$3>>2] = $102;
      $103 = HEAP8[$102>>0]|0;
      $104 = ($103<<24>>24)==(0);
      if ($104) {
       $105 = $100;$106 = $97;$107 = $98;
       break L6;
      } else {
       $$0116140 = $$2118;$$0119139 = $98;$$0121138 = $97;$21 = $102;$24 = $103;
      }
     }
     if ((label|0) == 12) {
      HEAP8[$17>>0]=1&255;HEAP8[$17+1>>0]=1>>8;
      $30 = ((($0)) + 139|0);
      $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
      (__set_current_error($0,9,$31)|0);
      $32 = ((($0)) + 159|0);
      $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
      $34 = ($33|0)==(0|0);
      if ($34) {
       $$0115 = $14;$$2113 = 0;
       break L1;
      }
      $35 = ((($0)) + 134|0);
      $36 = HEAP8[$35>>0]|0;
      $37 = $36 & 1;
      $38 = ($37<<24>>24)==(0);
      if (!($38)) {
       $$0115 = $14;$$2113 = 0;
       break L1;
      }
      $39 = $36 | 1;
      HEAP8[$35>>0] = $39;
      $40 = ((($0)) + 135|0);
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = (_mb_get_error_desc($41)|0);
      $43 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
      $44 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $45 = ($44|0)==(0|0);
      if ($45) {
       label = 18;
      } else {
       $46 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
       $47 = ($46|0)==(0);
       if ($47) {
        $48 = ((($44)) + 164|0);
        $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
        $$pr = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
        $50 = ($$pr|0)==(0);
        if ($50) {
         $51 = ((($44)) + 168|0);
         $52 = ((($44)) + 170|0);
         $$in178 = $51;$$sink5 = $52;$59 = $49;
        } else {
         $110 = $49;
         label = 19;
        }
       } else {
        label = 18;
       }
      }
      if ((label|0) == 18) {
       $53 = ((($0)) + 143|0);
       $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
       $110 = $54;
       label = 19;
      }
      if ((label|0) == 19) {
       $55 = ((($0)) + 147|0);
       $56 = ((($0)) + 149|0);
       $$in178 = $55;$$sink5 = $56;$59 = $110;
      }
      $57 = HEAPU8[$$in178>>0]|(HEAPU8[$$in178+1>>0]<<8);
      $58 = HEAPU8[$$sink5>>0]|(HEAPU8[$$sink5+1>>0]<<8);
      FUNCTION_TABLE_viiiiiiii[$33 & 127]($0,$41,$42,$43,$59,$57,$58,3);
      $$0115 = $14;$$2113 = 0;
      break L1;
     }
     else if ((label|0) == 23) {
      $65 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
      __set_error_pos($0,$65,$$0121138,$$0119139);
      $66 = ((($0)) + 135|0);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = ((($0)) + 139|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      (__set_current_error($0,$67,$69)|0);
      $70 = ((($0)) + 159|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = ($71|0)==(0|0);
      if ($72) {
       $$0115 = $14;$$2113 = $63;
       break L1;
      }
      $73 = ((($0)) + 134|0);
      $74 = HEAP8[$73>>0]|0;
      $75 = $74 & 1;
      $76 = ($75<<24>>24)==(0);
      if (!($76)) {
       $$0115 = $14;$$2113 = $63;
       break L1;
      }
      $77 = $74 | 1;
      HEAP8[$73>>0] = $77;
      $78 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $79 = (_mb_get_error_desc($78)|0);
      $80 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $81 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $82 = ($81|0)==(0|0);
      if ($82) {
       label = 29;
      } else {
       $83 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
       $84 = ($83|0)==(0);
       if ($84) {
        $85 = ((($81)) + 164|0);
        $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
        $$pr159 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
        $87 = ($$pr159|0)==(0);
        if ($87) {
         $88 = ((($81)) + 168|0);
         $89 = ((($81)) + 170|0);
         $$in = $88;$$sink10 = $89;$96 = $86;
        } else {
         $111 = $86;
         label = 30;
        }
       } else {
        label = 29;
       }
      }
      if ((label|0) == 29) {
       $90 = ((($0)) + 143|0);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $111 = $91;
       label = 30;
      }
      if ((label|0) == 30) {
       $92 = ((($0)) + 147|0);
       $93 = ((($0)) + 149|0);
       $$in = $92;$$sink10 = $93;$96 = $111;
      }
      $94 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8);
      $95 = HEAPU8[$$sink10>>0]|(HEAPU8[$$sink10+1>>0]<<8);
      FUNCTION_TABLE_viiiiiiii[$71 & 127]($0,$78,$79,$80,$96,$94,$95,$63);
      $$0115 = $14;$$2113 = $63;
      break L1;
     }
    }
   } while(0);
   $108 = (__parse_char($0,0,1,$105,$106,$107)|0);
   $$0115 = $14;$$2113 = $108;
  } else {
   $$0115 = 0;$$2113 = 3;
  }
 } while(0);
 $109 = ($2<<24>>24)==(0);
 if (!($109)) {
  __end_of_file($$0115);
 }
 STACKTOP = sp;return ($$2113|0);
}
function _mb_uu_getbom($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  _llvm_trap();
  // unreachable;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP8[$2>>0]|0;
 switch ($3<<24>>24) {
 case -17:  {
  $4 = ((($2)) + 1|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = ($5<<24>>24)==(-69);
  if ($6) {
   $7 = ((($2)) + 2|0);
   $8 = HEAP8[$7>>0]|0;
   $9 = ($8<<24>>24)==(-65);
   if ($9) {
    $10 = ((($2)) + 3|0);
    HEAP32[$0>>2] = $10;
    $$0 = 3;
   } else {
    $$0 = 0;
   }
  } else {
   $$0 = 0;
  }
  break;
 }
 case -2:  {
  $11 = ((($2)) + 1|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(-1);
  if ($13) {
   $14 = ((($2)) + 2|0);
   HEAP32[$0>>2] = $14;
   $$0 = 2;
  } else {
   $$0 = 0;
  }
  break;
 }
 default: {
  $$0 = 0;
 }
 }
 return ($$0|0);
}
function __parse_char($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$$0$ = 0, $$0$off = 0, $$0163 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $or$cond166 = 0, $sext$mask = 0, $sext$mask164 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 HEAP32[$6>>2] = 0;
 $7 = ($0|0)==(0|0);
 if (!($7)) {
  $8 = ((($0)) + 71|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   $11 = ($1|0)==(0|0);
   do {
    if ($11) {
     $$0 = 10;
    } else {
     $12 = ($2|0)==(1);
     if ($12) {
      $13 = HEAP8[$1>>0]|0;
      $$0 = $13;
      break;
     } else {
      _memcpy(($6|0),($1|0),($2|0))|0;
      $$0 = 0;
      break;
     }
    }
   } while(0);
   $14 = ((($9)) + 4|0);
   $15 = HEAP8[$14>>0]|0;
   HEAP8[$14>>0] = $$0;
   $16 = ((($9)) + 150|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   L10: do {
    switch ($17|0) {
    case 0:  {
     $$0$$0$ = HEAP32[$6>>2]|0;
     $18 = ($$0$$0$|0)==(0);
     if (!($18)) {
      $19 = ((($9)) + 154|0);
      $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
      switch ($20|0) {
      case 0:  {
       $21 = (__append_uu_char_to_symbol($0,$1,$2)|0);
       $$0163 = $21;
       break L10;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       $$0163 = 0;
       break L10;
      }
      }
      HEAP8[$19>>0]=0&255;HEAP8[$19+1>>0]=(0>>8)&255;HEAP8[$19+2>>0]=(0>>16)&255;HEAP8[$19+3>>0]=0>>24;
      $22 = (__cut_symbol($0,$3,$4,$5)|0);
      $23 = ($22|0)==(0);
      if (!($23)) {
       $$0163 = $22;
       break L10;
      }
      $24 = (__append_uu_char_to_symbol($0,$1,$2)|0);
      $$0163 = $24;
      break L10;
     }
     $25 = $$0 << 24 >> 24;
     $$0$off = (($$0) + -97)<<24>>24;
     $26 = ($$0$off&255)<(26);
     $27 = (($25) + -32)|0;
     $28 = $26 ? $27 : $25;
     $29 = $28&255;
     $30 = (__is_blank_char($29)|0);
     $31 = ($30<<24>>24)==(0);
     if (!($31)) {
      $32 = (__cut_symbol($0,$3,$4,$5)|0);
      $$0163 = $32;
      break L10;
     }
     $33 = (__is_newline_char($29)|0);
     $34 = ($33<<24>>24)==(0);
     if (!($34)) {
      $35 = (__cut_symbol($0,$3,$4,$5)|0);
      $36 = ($35|0)==(0);
      if (!($36)) {
       $$0163 = $35;
       break L10;
      }
      $37 = (__append_char_to_symbol($0,10)|0);
      $38 = ($37|0)==(0);
      if (!($38)) {
       $$0163 = $37;
       break L10;
      }
      $39 = (__cut_symbol($0,$3,$4,$5)|0);
      $$0163 = $39;
      break L10;
     }
     $40 = (__is_separator_char($29)|0);
     $41 = ($40<<24>>24)==(0);
     if ($41) {
      $42 = (__is_bracket_char($29)|0);
      $43 = ($42<<24>>24)==(0);
      if ($43) {
       $49 = (__is_quotation_char($29)|0);
       $50 = ($49<<24>>24)==(0);
       if (!($50)) {
        $51 = (__cut_symbol($0,$3,$4,$5)|0);
        $52 = ($51|0)==(0);
        if (!($52)) {
         $$0163 = $51;
         break L10;
        }
        $53 = (__append_char_to_symbol($0,$29)|0);
        $54 = ($53|0)==(0);
        if (!($54)) {
         $$0163 = $53;
         break L10;
        }
        HEAP8[$16>>0]=1&255;HEAP8[$16+1>>0]=(1>>8)&255;HEAP8[$16+2>>0]=(1>>16)&255;HEAP8[$16+3>>0]=1>>24;
        $$0163 = 0;
        break L10;
       }
       $55 = (__is_comment_char($29)|0);
       $56 = ($55<<24>>24)==(0);
       if (!($56)) {
        $57 = (__cut_symbol($0,$3,$4,$5)|0);
        $58 = ($57|0)==(0);
        if (!($58)) {
         $$0163 = $57;
         break L10;
        }
        $59 = (__append_char_to_symbol($0,10)|0);
        $60 = ($59|0)==(0);
        if (!($60)) {
         $$0163 = $59;
         break L10;
        }
        $61 = (__cut_symbol($0,$3,$4,$5)|0);
        $62 = ($61|0)==(0);
        if (!($62)) {
         $$0163 = $61;
         break L10;
        }
        HEAP8[$16>>0]=2&255;HEAP8[$16+1>>0]=(2>>8)&255;HEAP8[$16+2>>0]=(2>>16)&255;HEAP8[$16+3>>0]=2>>24;
        $63 = ((($9)) + 146|0);
        HEAP8[$63>>0]=1&255;HEAP8[$63+1>>0]=(1>>8)&255;HEAP8[$63+2>>0]=(1>>16)&255;HEAP8[$63+3>>0]=1>>24;
        $$0163 = 0;
        break L10;
       }
       $64 = ((($9)) + 154|0);
       $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
       switch ($65|0) {
       case 0:  {
        $66 = (__is_identifier_char($29)|0);
        $67 = ($66<<24>>24)==(0);
        if (!($67)) {
         $68 = (__append_char_to_symbol($0,$29)|0);
         $$0163 = $68;
         break L10;
        }
        $69 = (__is_operator_char($29)|0);
        $70 = ($69<<24>>24)==(0);
        if ($70) {
         $84 = ((($0)) + 67|0);
         $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
         $86 = (__set_current_error($0,6,$85)|0);
         $87 = ($86<<24>>24)==(0);
         if ($87) {
          $$0163 = 0;
          break L10;
         }
         __set_error_pos($0,$3,$4,$5);
         $$0163 = 3;
         break L10;
        }
        $71 = ((($9)) + 5|0);
        $72 = ((($9)) + 134|0);
        $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
        $74 = (($73) + -2)|0;
        $75 = (__is_exponent_prefix($71,$74)|0);
        $76 = ($75<<24>>24)==(0);
        if (!($76)) {
         $77 = (__is_exponential_char($15)|0);
         $78 = ($77<<24>>24)!=(0);
         $sext$mask164 = $28 & 255;
         $79 = ($sext$mask164|0)==(45);
         $or$cond166 = $79 & $78;
         if ($or$cond166) {
          $80 = (__append_char_to_symbol($0,$29)|0);
          $$0163 = $80;
          break L10;
         }
        }
        HEAP8[$64>>0]=1&255;HEAP8[$64+1>>0]=(1>>8)&255;HEAP8[$64+2>>0]=(1>>16)&255;HEAP8[$64+3>>0]=1>>24;
        $81 = (__cut_symbol($0,$3,$4,$5)|0);
        $82 = ($81|0)==(0);
        if (!($82)) {
         $$0163 = $81;
         break L10;
        }
        $83 = (__append_char_to_symbol($0,$29)|0);
        $$0163 = $83;
        break L10;
        break;
       }
       case 1:  {
        $88 = (__is_identifier_char($29)|0);
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         HEAP8[$64>>0]=0&255;HEAP8[$64+1>>0]=(0>>8)&255;HEAP8[$64+2>>0]=(0>>16)&255;HEAP8[$64+3>>0]=0>>24;
         $90 = (__cut_symbol($0,$3,$4,$5)|0);
         $91 = ($90|0)==(0);
         if (!($91)) {
          $$0163 = $90;
          break L10;
         }
         $92 = (__append_char_to_symbol($0,$29)|0);
         $$0163 = $92;
         break L10;
        }
        $93 = (__is_operator_char($29)|0);
        $94 = ($93<<24>>24)==(0);
        if ($94) {
         $99 = ((($0)) + 67|0);
         $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
         $101 = (__set_current_error($0,6,$100)|0);
         $102 = ($101<<24>>24)==(0);
         if ($102) {
          $$0163 = 0;
          break L10;
         }
         __set_error_pos($0,$3,$4,$5);
         $$0163 = 3;
         break L10;
        }
        $sext$mask = $28 & 255;
        $95 = ($sext$mask|0)==(45);
        if ($95) {
         $96 = (__cut_symbol($0,$3,$4,$5)|0);
         $97 = ($96|0)==(0);
         if (!($97)) {
          $$0163 = $96;
          break L10;
         }
        }
        $98 = (__append_char_to_symbol($0,$29)|0);
        $$0163 = $98;
        break L10;
        break;
       }
       default: {
        ___assert_fail((3896|0),(1578|0),5904,(12287|0));
        // unreachable;
       }
       }
      }
     }
     $44 = (__cut_symbol($0,$3,$4,$5)|0);
     $45 = ($44|0)==(0);
     if ($45) {
      $46 = (__append_char_to_symbol($0,$29)|0);
      $47 = ($46|0)==(0);
      if ($47) {
       $48 = (__cut_symbol($0,$3,$4,$5)|0);
       $$0163 = $48;
      } else {
       $$0163 = $46;
      }
     } else {
      $$0163 = $44;
     }
     break;
    }
    case 1:  {
     $103 = (__is_quotation_char($$0)|0);
     $104 = ($103<<24>>24)==(0);
     $105 = (__append_char_to_symbol($0,$$0)|0);
     $106 = ($105|0)!=(0);
     $brmerge = $104 | $106;
     if ($brmerge) {
      $$0163 = $105;
     } else {
      $107 = (__cut_symbol($0,$3,$4,$5)|0);
      $108 = ($107|0)==(0);
      if ($108) {
       HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
       $$0163 = 0;
      } else {
       $$0163 = $107;
      }
     }
     break;
    }
    case 2:  {
     $109 = (__is_eof_char($$0)|0);
     $110 = ($109<<24>>24)==(0);
     if (!($110)) {
      HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
      $$0163 = 0;
      break L10;
     }
     $111 = ((($9)) + 146|0);
     $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
     $113 = ($112|0)==(0);
     if (!($113)) {
      $114 = (($112) + 1)|0;
      HEAP8[$111>>0]=$114&255;HEAP8[$111+1>>0]=($114>>8)&255;HEAP8[$111+2>>0]=($114>>16)&255;HEAP8[$111+3>>0]=$114>>24;
      $115 = (12299 + ($112)|0);
      $116 = HEAP8[$115>>0]|0;
      $117 = ($$0<<24>>24)==($116<<24>>24);
      if ($117) {
       $118 = ($114>>>0)>(1);
       if (!($118)) {
        $$0163 = 0;
        break L10;
       }
       HEAP8[$16>>0]=3&255;HEAP8[$16+1>>0]=(3>>8)&255;HEAP8[$16+2>>0]=(3>>16)&255;HEAP8[$16+3>>0]=3>>24;
       HEAP8[$111>>0]=0&255;HEAP8[$111+1>>0]=(0>>8)&255;HEAP8[$111+2>>0]=(0>>16)&255;HEAP8[$111+3>>0]=0>>24;
       $$0163 = 0;
       break L10;
      }
     }
     HEAP8[$111>>0]=0&255;HEAP8[$111+1>>0]=(0>>8)&255;HEAP8[$111+2>>0]=(0>>16)&255;HEAP8[$111+3>>0]=0>>24;
     $119 = (__is_newline_char($$0)|0);
     $120 = ($119<<24>>24)==(0);
     if ($120) {
      $$0163 = 0;
     } else {
      HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
      $$0163 = 0;
     }
     break;
    }
    case 3:  {
     $121 = (__is_eof_char($$0)|0);
     $122 = ($121<<24>>24)==(0);
     if (!($122)) {
      HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
      $$0163 = 0;
      break L10;
     }
     $123 = (__is_comment_char($$0)|0);
     $124 = ($123<<24>>24)==(0);
     $$phi$trans$insert = ((($9)) + 146|0);
     $$pre = HEAPU8[$$phi$trans$insert>>0]|(HEAPU8[$$phi$trans$insert+1>>0]<<8)|(HEAPU8[$$phi$trans$insert+2>>0]<<16)|(HEAPU8[$$phi$trans$insert+3>>0]<<24);
     $125 = ($$pre|0)==(0);
     if ($124) {
      if (!($125)) {
       label = 72;
      }
     } else {
      if ($125) {
       HEAP8[$$phi$trans$insert>>0]=1&255;HEAP8[$$phi$trans$insert+1>>0]=(1>>8)&255;HEAP8[$$phi$trans$insert+2>>0]=(1>>16)&255;HEAP8[$$phi$trans$insert+3>>0]=1>>24;
       $$0163 = 0;
       break L10;
      } else {
       label = 72;
      }
     }
     if ((label|0) == 72) {
      $126 = (($$pre) + 1)|0;
      HEAP8[$$phi$trans$insert>>0]=$126&255;HEAP8[$$phi$trans$insert+1>>0]=($126>>8)&255;HEAP8[$$phi$trans$insert+2>>0]=($126>>16)&255;HEAP8[$$phi$trans$insert+3>>0]=$126>>24;
      $127 = (12302 + ($$pre)|0);
      $128 = HEAP8[$127>>0]|0;
      $129 = ($$0<<24>>24)==($128<<24>>24);
      if ($129) {
       $130 = ($126>>>0)>(1);
       if (!($130)) {
        $$0163 = 0;
        break L10;
       }
       HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
      }
     }
     HEAP8[$$phi$trans$insert>>0]=0&255;HEAP8[$$phi$trans$insert+1>>0]=(0>>8)&255;HEAP8[$$phi$trans$insert+2>>0]=(0>>16)&255;HEAP8[$$phi$trans$insert+3>>0]=0>>24;
     $$0163 = 0;
     break;
    }
    default: {
     ___assert_fail((12305|0),(1578|0),5960,(12287|0));
     // unreachable;
    }
    }
   } while(0);
   STACKTOP = sp;return ($$0163|0);
  }
 }
 ___assert_fail((12263|0),(1578|0),5819,(12287|0));
 // unreachable;
 return (0)|0;
}
function __append_uu_char_to_symbol($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  ___assert_fail((1649|0),(1578|0),5106,(12654|0));
  // unreachable;
 }
 $4 = ((($0)) + 71|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($5)) + 134|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (($7) + ($2))|0;
 $9 = ($8|0)>(127);
 if ($9) {
  (__set_current_error($0,5,0)|0);
  $$0 = 3;
 } else {
  $10 = (((($5)) + 5|0) + ($7)|0);
  _memcpy(($10|0),($1|0),($2|0))|0;
  $11 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $12 = (($11) + ($2))|0;
  HEAP8[$6>>0]=$12&255;HEAP8[$6+1>>0]=($12>>8)&255;HEAP8[$6+2>>0]=($12>>16)&255;HEAP8[$6+3>>0]=$12>>24;
  $$0 = 0;
 }
 return ($$0|0);
}
function __cut_symbol($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP8[$4>>0] = 0;
 $5 = ($0|0)==(0|0);
 if ($5) {
  ___assert_fail((1649|0),(1578|0),5130,(12378|0));
  // unreachable;
 }
 $6 = ((($0)) + 71|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($7)) + 134|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(0);
 $$pre = ((($7)) + 5|0);
 do {
  if ($10) {
   $$0 = 0;
  } else {
   $11 = HEAP8[$$pre>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$0 = 0;
   } else {
    $13 = (($9) + 1)|0;
    $14 = (_mb_malloc($13)|0);
    $15 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $16 = (($15) + 1)|0;
    _memcpy(($14|0),($$pre|0),($16|0))|0;
    $17 = (__append_symbol($0,$14,$4,$1,$2,$3)|0);
    $18 = ($17|0)==(0);
    $19 = HEAP8[$4>>0]|0;
    $20 = ($19<<24>>24)==(0);
    $or$cond = $18 & $20;
    if ($or$cond) {
     $$0 = 0;
    } else {
     $21 = ($14|0)==(0|0);
     if ($21) {
      ___assert_fail((1713|0),(1578|0),5139,(12378|0));
      // unreachable;
     } else {
      _mb_free($14);
      $$0 = $17;
      break;
     }
    }
   }
  }
 } while(0);
 _memset(($$pre|0),0,129)|0;
 HEAP8[$8>>0]=0&255;HEAP8[$8+1>>0]=(0>>8)&255;HEAP8[$8+2>>0]=(0>>16)&255;HEAP8[$8+3>>0]=0>>24;
 $22 = ((($7)) + 138|0);
 HEAP8[$22>>0]=0&255;HEAP8[$22+1>>0]=(0>>8)&255;HEAP8[$22+2>>0]=(0>>16)&255;HEAP8[$22+3>>0]=0>>24;
 STACKTOP = sp;return ($$0|0);
}
function __is_blank_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0<<24>>24)==(32);
 $2 = ($0<<24>>24)==(9);
 $narrow = $1 | $2;
 $3 = $narrow&1;
 return ($3|0);
}
function __is_newline_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($0<<24>>24) {
 case 10: case 13:  {
  $3 = 1;
  break;
 }
 default: {
  $1 = (__is_eof_char($0)|0);
  $2 = ($1<<24>>24)!=(0);
  $phitmp = $2&1;
  $3 = $phitmp;
 }
 }
 return ($3|0);
}
function __append_char_to_symbol($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),5081,(12355|0));
  // unreachable;
 }
 $3 = ((($0)) + 71|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = (__is_accessor_char($1)|0);
 $6 = ($5<<24>>24)==(0);
 if (!($6)) {
  $7 = ((($4)) + 138|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = (($8) + 1)|0;
  HEAP8[$7>>0]=$9&255;HEAP8[$7+1>>0]=($9>>8)&255;HEAP8[$7+2>>0]=($9>>16)&255;HEAP8[$7+3>>0]=$9>>24;
 }
 $10 = ((($4)) + 134|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)>(126);
 if ($12) {
  (__set_current_error($0,5,0)|0);
  $$0 = 3;
 } else {
  $13 = (((($4)) + 5|0) + ($11)|0);
  HEAP8[$13>>0] = $1;
  $14 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $15 = (($14) + 1)|0;
  HEAP8[$10>>0]=$15&255;HEAP8[$10+1>>0]=($15>>8)&255;HEAP8[$10+2>>0]=($15>>16)&255;HEAP8[$10+3>>0]=$15>>24;
  $$0 = 0;
 }
 return ($$0|0);
}
function __is_separator_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($0<<24>>24) {
 case 59: case 44:  {
  $2 = 1;
  break;
 }
 default: {
  $1 = ($0<<24>>24)==(58);
  $phitmp = $1&1;
  $2 = $phitmp;
 }
 }
 return ($2|0);
}
function __is_bracket_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 | 1;
 $2 = ($1<<24>>24)==(41);
 $3 = $2&1;
 return ($3|0);
}
function __is_quotation_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0<<24>>24)==(34);
 $2 = $1&1;
 return ($2|0);
}
function __is_comment_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0<<24>>24)==(39);
 $2 = $1&1;
 return ($2|0);
}
function __is_identifier_char($0) {
 $0 = $0|0;
 var $$off = 0, $$off9 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $narrow = 0, $or$cond8 = 0, $phitmp$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$off = (($0) + -97)<<24>>24;
 $1 = ($$off&255)<(26);
 if (!($1)) {
  $$off9 = (($0) + -65)<<24>>24;
  $2 = ($$off9&255)<(26);
  $3 = ($0<<24>>24)==(95);
  $or$cond8 = $3 | $2;
  if (!($or$cond8)) {
   $4 = (__is_numeric_char($0)|0);
   $5 = ($4<<24>>24)!=(0);
   $6 = ($0<<24>>24)==(36);
   $narrow = $6 | $5;
   $phitmp$ = $narrow&1;
   return ($phitmp$|0);
  }
 }
 return 1;
}
function __is_operator_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($0<<24>>24) {
 case 62: case 61: case 41: case 40: case 94: case 47: case 42: case 45: case 43:  {
  $2 = 1;
  break;
 }
 default: {
  $1 = ($0<<24>>24)==(60);
  $phitmp = $1&1;
  $2 = $phitmp;
 }
 }
 return ($2|0);
}
function __is_exponent_prefix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$01 = 0, $$010 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  ___assert_fail((1649|0),(1578|0),5063,(12335|0));
  // unreachable;
 }
 $3 = ($1|0)<(0);
 L4: do {
  if ($3) {
   $$010 = 0;
  } else {
   $$01 = 0;
   while(1) {
    $6 = (($0) + ($$01)|0);
    $7 = HEAP8[$6>>0]|0;
    $8 = (__is_numeric_char($7)|0);
    $9 = ($8<<24>>24)==(0);
    if ($9) {
     $$010 = 0;
     break L4;
    }
    $4 = (($$01) + 1)|0;
    $5 = ($$01|0)<($1|0);
    if ($5) {
     $$01 = $4;
    } else {
     $$010 = 1;
     break;
    }
   }
  }
 } while(0);
 return ($$010|0);
}
function __is_exponential_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 | 32;
 $2 = ($1<<24>>24)==(101);
 $3 = $2&1;
 return ($3|0);
}
function __is_eof_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0<<24>>24)==(-1);
 $2 = $1&1;
 return ($2|0);
}
function __is_numeric_char($0) {
 $0 = $0|0;
 var $$off = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$off = (($0) + -48)<<24>>24;
 $1 = ($$off&255)<(10);
 if ($1) {
  $4 = 1;
 } else {
  $2 = (__is_accessor_char($0)|0);
  $3 = ($2<<24>>24)!=(0);
  $phitmp = $3&1;
  $4 = $phitmp;
 }
 return ($4|0);
}
function __append_symbol($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 4|0;
 $7 = sp;
 HEAP32[$6>>2] = 0;
 HEAP32[$7>>2] = 0;
 $8 = ($0|0)!=(0|0);
 $9 = ($1|0)!=(0|0);
 $or$cond = $8 & $9;
 if (!($or$cond)) {
  ___assert_fail((12390|0),(1578|0),5158,(12399|0));
  // unreachable;
 }
 $10 = ((($0)) + 17|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = (__create_symbol($0,$1,$6,$7,$2)|0);
 $13 = HEAP32[$6>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  $15 = ((($13)) + 9|0);
  HEAP8[$15>>0]=$3&255;HEAP8[$15+1>>0]=($3>>8)&255;HEAP8[$15+2>>0]=($3>>16)&255;HEAP8[$15+3>>0]=$3>>24;
  $16 = ((($13)) + 13|0);
  HEAP8[$16>>0]=$4&255;HEAP8[$16+1>>0]=$4>>8;
  $17 = ((($13)) + 15|0);
  HEAP8[$17>>0]=$5&255;HEAP8[$17+1>>0]=$5>>8;
  $18 = (__ls_pushback($11,$13)|0);
  $19 = HEAP32[$7>>2]|0;
  $20 = ($19|0)==(0|0);
  if (!($20)) {
   HEAP32[$19>>2] = $18;
  }
  $21 = ((($0)) + 71|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = HEAP32[$6>>2]|0;
  $24 = ((($22)) + 142|0);
  HEAP8[$24>>0]=$23&255;HEAP8[$24+1>>0]=($23>>8)&255;HEAP8[$24+2>>0]=($23>>16)&255;HEAP8[$24+3>>0]=$23>>24;
 }
 STACKTOP = sp;return ($12|0);
}
function __create_symbol($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0285 = 0, $$sink = 0, $$sink11 = 0, $$sink15 = 0, $$sink16 = 0, $$sink8 = 0, $$sroa$0$0$copyload112 = 0, $$sroa$0$0$copyload115 = 0, $$sroa$0$0$copyload12 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond4 = 0, $or$cond5 = 0, $or$cond7 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 $6 = ($0|0)!=(0|0);
 $7 = ($1|0)!=(0|0);
 $or$cond = $6 & $7;
 $8 = ($2|0)!=(0|0);
 $or$cond5 = $or$cond & $8;
 if (!($or$cond5)) {
  ___assert_fail((12414|0),(1578|0),5204,(12430|0));
  // unreachable;
 }
 HEAP32[$5>>2] = 0;
 $9 = ((($0)) + 71|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ((($0)) + 75|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = (__create_object()|0);
 HEAP32[$2>>2] = $13;
 $14 = ((($13)) + 9|0);
 $15 = $14;
 $16 = $15;
 HEAP8[$16>>0]=-1&255;HEAP8[$16+1>>0]=(-1>>8)&255;HEAP8[$16+2>>0]=(-1>>16)&255;HEAP8[$16+3>>0]=-1>>24;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP8[$18>>0]=-1&255;HEAP8[$18+1>>0]=(-1>>8)&255;HEAP8[$18+2>>0]=(-1>>16)&255;HEAP8[$18+3>>0]=-1>>24;
 $19 = (__get_symbol_type($0,$1,$5)|0);
 $20 = ((($0)) + 135|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ($21|0)==(0);
 L4: do {
  if ($22) {
   $23 = HEAP32[$2>>2]|0;
   HEAP8[$23>>0]=$19&255;HEAP8[$23+1>>0]=($19>>8)&255;HEAP8[$23+2>>0]=($19>>16)&255;HEAP8[$23+3>>0]=$19>>24;
   do {
    switch ($19|0) {
    case 0:  {
     $$sroa$0$0$copyload115 = HEAP32[$5>>2]|0;
     $24 = ($$sroa$0$0$copyload115|0)==(0);
     do {
      if ($24) {
       $25 = ($23|0)==(0|0);
       if ($25) {
        ___assert_fail((1713|0),(1578|0),5232,(12430|0));
        // unreachable;
       } else {
        _mb_free($23);
        HEAP32[$2>>2] = 0;
        break;
       }
      } else {
       HEAP8[$23>>0]=0&255;HEAP8[$23+1>>0]=(0>>8)&255;HEAP8[$23+2>>0]=(0>>16)&255;HEAP8[$23+3>>0]=0>>24;
      }
     } while(0);
     _mb_free($1);
     $$0285 = 0;
     break L4;
     break;
    }
    case 2:  {
     $$sroa$0$0$copyload112 = HEAP32[$5>>2]|0;
     $26 = ((($23)) + 4|0);
     HEAP8[$26>>0]=$$sroa$0$0$copyload112&255;HEAP8[$26+1>>0]=($$sroa$0$0$copyload112>>8)&255;HEAP8[$26+2>>0]=($$sroa$0$0$copyload112>>16)&255;HEAP8[$26+3>>0]=$$sroa$0$0$copyload112>>24;
     _mb_free($1);
     $$0285 = 0;
     break L4;
     break;
    }
    case 3:  {
     $$sroa$0$0$copyload12 = HEAP32[$5>>2]|0;
     $27 = ((($23)) + 4|0);
     HEAP8[$27>>0]=$$sroa$0$0$copyload12&255;HEAP8[$27+1>>0]=($$sroa$0$0$copyload12>>8)&255;HEAP8[$27+2>>0]=($$sroa$0$0$copyload12>>16)&255;HEAP8[$27+3>>0]=$$sroa$0$0$copyload12>>24;
     _mb_free($1);
     $$0285 = 0;
     break L4;
     break;
    }
    case 4:  {
     $28 = (_strlen($1)|0);
     $29 = (($28) + -2)|0;
     $30 = (($28) + -1)|0;
     $31 = (_mb_malloc($30)|0);
     $32 = HEAP32[$2>>2]|0;
     $33 = ((($32)) + 4|0);
     HEAP8[$33>>0]=$31&255;HEAP8[$33+1>>0]=($31>>8)&255;HEAP8[$33+2>>0]=($31>>16)&255;HEAP8[$33+3>>0]=$31>>24;
     $34 = HEAP32[$2>>2]|0;
     $35 = ((($34)) + 4|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ((($1)) + 1|0);
     _memcpy(($36|0),($37|0),($29|0))|0;
     $38 = HEAP32[$2>>2]|0;
     $39 = ((($38)) + 4|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = (($40) + ($29)|0);
     HEAP8[$41>>0] = 0;
     HEAP8[$4>>0] = 1;
     $$0285 = 0;
     break L4;
     break;
    }
    case 8:  {
     $42 = (_mb_malloc(8)|0);
     HEAP8[$42>>0]=$1&255;HEAP8[$42+1>>0]=($1>>8)&255;HEAP8[$42+2>>0]=($1>>16)&255;HEAP8[$42+3>>0]=$1>>24;
     $43 = ((($42)) + 4|0);
     $44 = HEAP32[$5>>2]|0;
     HEAP8[$43>>0]=$44&255;HEAP8[$43+1>>0]=($44>>8)&255;HEAP8[$43+2>>0]=($44>>16)&255;HEAP8[$43+3>>0]=$44>>24;
     $45 = HEAP32[$2>>2]|0;
     $46 = ((($45)) + 4|0);
     HEAP8[$46>>0]=$42&255;HEAP8[$46+1>>0]=($42>>8)&255;HEAP8[$46+2>>0]=($42>>16)&255;HEAP8[$46+3>>0]=$42>>24;
     $$0285 = 0;
     break L4;
     break;
    }
    case 10:  {
     $47 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
     $48 = ($47|0)==(0|0);
     if (!($48)) {
      $49 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
      $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
      $51 = ($50|0)==(10);
      if ($51) {
       $52 = ((($49)) + 4|0);
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = HEAP32[$2>>2]|0;
       $55 = ((($54)) + 4|0);
       HEAP8[$55>>0]=$53&255;HEAP8[$55+1>>0]=($53>>8)&255;HEAP8[$55+2>>0]=($53>>16)&255;HEAP8[$55+3>>0]=$53>>24;
       $56 = HEAP32[$2>>2]|0;
       $57 = ((($56)) + 8|0);
       $58 = HEAP8[$57>>0]|0;
       $59 = $58 | 1;
       HEAP8[$57>>0] = $59;
       HEAP8[$4>>0] = 1;
       $$0285 = 0;
       break L4;
      }
     }
     $60 = (__create_array($0,$1,1)|0);
     $61 = ((($60)) + 21|0);
     $62 = HEAP32[$5>>2]|0;
     HEAP8[$61>>0]=$62&255;HEAP8[$61+1>>0]=($62>>8)&255;HEAP8[$61+2>>0]=($62>>16)&255;HEAP8[$61+3>>0]=$62>>24;
     $63 = HEAP32[$2>>2]|0;
     $64 = ((($63)) + 4|0);
     HEAP8[$64>>0]=$60&255;HEAP8[$64+1>>0]=($60>>8)&255;HEAP8[$64+2>>0]=($60>>16)&255;HEAP8[$64+3>>0]=$60>>24;
     $65 = ((($12)) + 8|0);
     $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
     $67 = HEAP32[$2>>2]|0;
     __ht_set_or_insert($66,$1,$67);
     $68 = (__create_object()|0);
     HEAP32[$2>>2] = $68;
     HEAP8[$68>>0]=10&255;HEAP8[$68+1>>0]=(10>>8)&255;HEAP8[$68+2>>0]=(10>>16)&255;HEAP8[$68+3>>0]=10>>24;
     $69 = ((($68)) + 4|0);
     HEAP8[$69>>0]=$60&255;HEAP8[$69+1>>0]=($60>>8)&255;HEAP8[$69+2>>0]=($60>>16)&255;HEAP8[$69+3>>0]=$60>>24;
     $70 = HEAP32[$2>>2]|0;
     $71 = ((($70)) + 8|0);
     $72 = HEAP8[$71>>0]|0;
     $73 = $72 | 1;
     HEAP8[$71>>0] = $73;
     $$0285 = 0;
     break L4;
     break;
    }
    case 16:  {
     $74 = HEAP8[$1>>0]|0;
     $75 = (__is_identifier_char($74)|0);
     $76 = ($75<<24>>24)==(0);
     if ($76) {
      HEAP8[$1>>0] = 24;
     }
     $77 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
     $78 = ($77|0)==(0|0);
     if (!($78)) {
      $79 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
      $81 = ($80|0)==(16);
      if ($81) {
       $82 = ((($79)) + 4|0);
       $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
       $84 = HEAP32[$2>>2]|0;
       $85 = ((($84)) + 4|0);
       HEAP8[$85>>0]=$83&255;HEAP8[$85+1>>0]=($83>>8)&255;HEAP8[$85+2>>0]=($83>>16)&255;HEAP8[$85+3>>0]=$83>>24;
       $86 = HEAP32[$2>>2]|0;
       $87 = ((($86)) + 8|0);
       $88 = HEAP8[$87>>0]|0;
       $89 = $88 | 1;
       HEAP8[$87>>0] = $89;
       HEAP8[$4>>0] = 1;
       $90 = HEAP32[$2>>2]|0;
       $91 = ((($90)) + 4|0);
       $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
       $93 = ((($92)) + 29|0);
       $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
       $95 = ($12|0)==($94|0);
       if ($95) {
        $$0285 = 0;
        break L4;
       }
       $96 = ((($10)) + 158|0);
       $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8);
       $98 = ($97<<16>>16)==(0);
       if ($98) {
        $$0285 = 0;
        break L4;
       }
       $99 = ((($10)) + 142|0);
       $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
       $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
       $102 = ($101|0)==(8);
       if (!($102)) {
        $$0285 = 0;
        break L4;
       }
       $103 = ((($100)) + 4|0);
       $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
       $105 = ((($104)) + 4|0);
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = ($106|0)==(89|0);
       if (!($107)) {
        $$0285 = 0;
        break L4;
       }
       __push_scope_by_class($0,$94);
       $$0285 = 0;
       break L4;
      }
     }
     $108 = (_mb_malloc(45)|0);
     __init_class($0,$108,$1);
     $109 = ((($108)) + 29|0);
     $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
     __push_scope_by_class($0,$110);
     $111 = ((($0)) + 93|0);
     HEAP8[$111>>0]=$108&255;HEAP8[$111+1>>0]=($108>>8)&255;HEAP8[$111+2>>0]=($108>>16)&255;HEAP8[$111+3>>0]=$108>>24;
     $112 = HEAP32[$2>>2]|0;
     $113 = ((($112)) + 4|0);
     HEAP8[$113>>0]=$108&255;HEAP8[$113+1>>0]=($108>>8)&255;HEAP8[$113+2>>0]=($108>>16)&255;HEAP8[$113+3>>0]=$108>>24;
     $114 = ((($12)) + 8|0);
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
     $116 = HEAP32[$2>>2]|0;
     __ht_set_or_insert($115,$1,$116);
     $117 = (__create_object()|0);
     HEAP32[$2>>2] = $117;
     HEAP8[$117>>0]=16&255;HEAP8[$117+1>>0]=(16>>8)&255;HEAP8[$117+2>>0]=(16>>16)&255;HEAP8[$117+3>>0]=16>>24;
     $118 = ((($117)) + 4|0);
     HEAP8[$118>>0]=$108&255;HEAP8[$118+1>>0]=($108>>8)&255;HEAP8[$118+2>>0]=($108>>16)&255;HEAP8[$118+3>>0]=$108>>24;
     $119 = HEAP32[$2>>2]|0;
     $120 = ((($119)) + 8|0);
     $121 = HEAP8[$120>>0]|0;
     $122 = $121 | 1;
     HEAP8[$120>>0] = $122;
     $$0285 = 0;
     break L4;
     break;
    }
    case 17:  {
     $123 = HEAP8[$1>>0]|0;
     $124 = (__is_identifier_char($123)|0);
     $125 = ($124<<24>>24)==(0);
     if ($125) {
      HEAP8[$1>>0] = 27;
     }
     $126 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
     $127 = ($126|0)==(0|0);
     if (!($127)) {
      $128 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
      $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
      $130 = ($129|0)==(17);
      if ($130) {
       $131 = ((($128)) + 4|0);
       $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
       $133 = HEAP32[$2>>2]|0;
       $134 = ((($133)) + 4|0);
       HEAP8[$134>>0]=$132&255;HEAP8[$134+1>>0]=($132>>8)&255;HEAP8[$134+2>>0]=($132>>16)&255;HEAP8[$134+3>>0]=$132>>24;
       $135 = HEAP32[$2>>2]|0;
       $136 = ((($135)) + 8|0);
       $137 = HEAP8[$136>>0]|0;
       $138 = $137 | 1;
       HEAP8[$136>>0] = $138;
       HEAP8[$4>>0] = 1;
       $139 = HEAP32[$2>>2]|0;
       $140 = ((($139)) + 4|0);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
       $143 = ($12|0)==($142|0);
       if ($143) {
        $$0285 = 0;
        break L4;
       }
       $144 = ((($10)) + 160|0);
       $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8);
       $146 = ($145<<16>>16)==(0);
       if ($146) {
        $$0285 = 0;
        break L4;
       }
       $147 = ((($10)) + 142|0);
       $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
       $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
       $150 = ($149|0)==(8);
       if (!($150)) {
        $$0285 = 0;
        break L4;
       }
       $151 = ((($148)) + 4|0);
       $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
       $153 = ((($152)) + 4|0);
       $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
       $155 = ($154|0)==(86|0);
       if (!($155)) {
        $$0285 = 0;
        break L4;
       }
       (__push_scope_by_routine($0,$142)|0);
       $$0285 = 0;
       break L4;
      }
     }
     $156 = (_mb_malloc(62)|0);
     __init_routine($0,$156,$1,0);
     $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
     (__push_scope_by_routine($0,$157)|0);
     $158 = HEAP32[$2>>2]|0;
     $159 = ((($158)) + 4|0);
     HEAP8[$159>>0]=$156&255;HEAP8[$159+1>>0]=($156>>8)&255;HEAP8[$159+2>>0]=($156>>16)&255;HEAP8[$159+3>>0]=$156>>24;
     $160 = (__get_scope_to_add_routine($0)|0);
     $161 = ((($160)) + 8|0);
     $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
     $163 = HEAP32[$2>>2]|0;
     __ht_set_or_insert($162,$1,$163);
     $164 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
     $165 = ($164|0)==(0|0);
     $166 = $165 ? $12 : $164;
     $167 = ($160|0)==($166|0);
     $168 = ($160|0)==($12|0);
     $or$cond4 = $168 | $167;
     if (!($or$cond4)) {
      __pop_scope($0,0);
     }
     $169 = (__create_object()|0);
     HEAP32[$2>>2] = $169;
     HEAP8[$169>>0]=17&255;HEAP8[$169+1>>0]=(17>>8)&255;HEAP8[$169+2>>0]=(17>>16)&255;HEAP8[$169+3>>0]=17>>24;
     $170 = ((($169)) + 4|0);
     HEAP8[$170>>0]=$156&255;HEAP8[$170+1>>0]=($156>>8)&255;HEAP8[$170+2>>0]=($156>>16)&255;HEAP8[$170+3>>0]=$156>>24;
     $171 = HEAP32[$2>>2]|0;
     $172 = ((($171)) + 8|0);
     $173 = HEAP8[$172>>0]|0;
     $174 = $173 | 1;
     HEAP8[$172>>0] = $174;
     $175 = ((($0)) + 93|0);
     $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
     $177 = ((($156)) + 53|0);
     HEAP8[$177>>0]=$176&255;HEAP8[$177+1>>0]=($176>>8)&255;HEAP8[$177+2>>0]=($176>>16)&255;HEAP8[$177+3>>0]=$176>>24;
     $$0285 = 0;
     break L4;
     break;
    }
    case 9:  {
     $178 = ((($10)) + 162|0);
     $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8);
     $180 = ($179<<16>>16)==(2);
     if ($180) {
      $181 = ((($12)) + 8|0);
      $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
      $183 = (__ht_find($182,$1)|0);
      $$0 = $183;
     } else {
      $184 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
      $$0 = $184;
     }
     $185 = ((($10)) + 142|0);
     $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
     $187 = ($186|0)==(0|0);
     if ($187) {
      $196 = 1;
     } else {
      $188 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
      $189 = ($188|0)==(8);
      if ($189) {
       $190 = ((($186)) + 4|0);
       $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
       $192 = ((($191)) + 4|0);
       $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
       $194 = ($193|0)!=(92|0);
       $196 = $194;
      } else {
       $196 = 1;
      }
     }
     $195 = ($$0|0)!=(0|0);
     $or$cond7 = $195 & $196;
     if ($or$cond7) {
      $197 = HEAPU8[$$0>>0]|(HEAPU8[$$0+1>>0]<<8)|(HEAPU8[$$0+2>>0]<<16)|(HEAPU8[$$0+3>>0]<<24);
      $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
      $199 = ($198|0)==(9);
      if ($199) {
       $200 = ((($197)) + 4|0);
       $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
       $202 = HEAP32[$2>>2]|0;
       $203 = ((($202)) + 4|0);
       HEAP8[$203>>0]=$201&255;HEAP8[$203+1>>0]=($201>>8)&255;HEAP8[$203+2>>0]=($201>>16)&255;HEAP8[$203+3>>0]=$201>>24;
       $204 = HEAP32[$2>>2]|0;
       $205 = ((($204)) + 8|0);
       $206 = HEAP8[$205>>0]|0;
       $207 = $206 | 1;
       HEAP8[$205>>0] = $207;
       HEAP8[$4>>0] = 1;
       $$0285 = 0;
       break L4;
      }
     }
     $208 = (_strcmp($1,4267)|0);
     $209 = ($208|0)==(0);
     if (!($209)) {
      $254 = (_mb_malloc(9)|0);
      $255 = ((($254)) + 4|0);
      ;HEAP8[$255>>0]=0|0;HEAP8[$255+1>>0]=0|0;HEAP8[$255+2>>0]=0|0;HEAP8[$255+3>>0]=0|0;HEAP8[$255+4>>0]=0|0;
      HEAP8[$254>>0]=$1&255;HEAP8[$254+1>>0]=($1>>8)&255;HEAP8[$254+2>>0]=($1>>16)&255;HEAP8[$254+3>>0]=$1>>24;
      $256 = (__create_object()|0);
      $257 = ((($254)) + 4|0);
      HEAP8[$257>>0]=$256&255;HEAP8[$257+1>>0]=($256>>8)&255;HEAP8[$257+2>>0]=($256>>16)&255;HEAP8[$257+3>>0]=$256>>24;
      $258 = (_strlen($1)|0);
      $259 = (($258) + -1)|0;
      $260 = (($1) + ($259)|0);
      $261 = HEAP8[$260>>0]|0;
      $262 = ($261<<24>>24)==(36);
      $263 = $262 ? 4 : 2;
      HEAP8[$256>>0]=$263&255;HEAP8[$256+1>>0]=($263>>8)&255;HEAP8[$256+2>>0]=($263>>16)&255;HEAP8[$256+3>>0]=$263>>24;
      $264 = ((($256)) + 4|0);
      HEAP8[$264>>0]=0&255;HEAP8[$264+1>>0]=(0>>8)&255;HEAP8[$264+2>>0]=(0>>16)&255;HEAP8[$264+3>>0]=0>>24;
      $265 = ((($10)) + 158|0);
      $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8);
      $267 = ($266<<16>>16)==(0);
      if ($267) {
       if ($196) {
        $268 = ((($10)) + 138|0);
        $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
        $270 = ($269|0)!=(0);
        $271 = $270&1;
        $$sink15 = $271;
        label = 63;
       }
      } else {
       $$sink15 = 1;
       label = 63;
      }
      if ((label|0) == 63) {
       $272 = ((($254)) + 8|0);
       $$sink16 = HEAP8[$272>>0]|0;
       $273 = $$sink16 & -4;
       $274 = $273 | $$sink15;
       HEAP8[$272>>0] = $274;
      }
      $275 = HEAP32[$2>>2]|0;
      $276 = ((($275)) + 4|0);
      HEAP8[$276>>0]=$254&255;HEAP8[$276+1>>0]=($254>>8)&255;HEAP8[$276+2>>0]=($254>>16)&255;HEAP8[$276+3>>0]=$254>>24;
      $277 = ((($12)) + 8|0);
      $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
      $279 = HEAP32[$2>>2]|0;
      __ht_set_or_insert($278,$1,$279);
      $280 = (__create_object()|0);
      HEAP32[$2>>2] = $280;
      HEAP8[$280>>0]=9&255;HEAP8[$280+1>>0]=(9>>8)&255;HEAP8[$280+2>>0]=(9>>16)&255;HEAP8[$280+3>>0]=9>>24;
      $281 = ((($280)) + 4|0);
      HEAP8[$281>>0]=$254&255;HEAP8[$281+1>>0]=($254>>8)&255;HEAP8[$281+2>>0]=($254>>16)&255;HEAP8[$281+3>>0]=$254>>24;
      $282 = HEAP32[$2>>2]|0;
      $283 = ((($282)) + 8|0);
      $284 = HEAP8[$283>>0]|0;
      $285 = $284 | 1;
      HEAP8[$283>>0] = $285;
      $$0285 = 0;
      break L4;
     }
     $210 = ((($0)) + 67|0);
     $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
     (__set_current_error($0,23,$211)|0);
     $212 = ((($0)) + 159|0);
     $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8)|(HEAPU8[$212+2>>0]<<16)|(HEAPU8[$212+3>>0]<<24);
     $214 = ($213|0)==(0|0);
     if (!($214)) {
      $215 = ((($0)) + 134|0);
      $216 = HEAP8[$215>>0]|0;
      $217 = $216 & 1;
      $218 = ($217<<24>>24)==(0);
      if ($218) {
       $219 = $216 | 1;
       HEAP8[$215>>0] = $219;
       $220 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
       $221 = (_mb_get_error_desc($220)|0);
       $222 = ((($0)) + 139|0);
       $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
       $224 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
       $225 = ($224|0)==(0|0);
       if ($225) {
        $226 = ((($0)) + 143|0);
        $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
        $228 = ((($0)) + 147|0);
        $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8);
        $329 = $229;$330 = $227;
        label = 57;
       } else {
        $230 = ((($0)) + 79|0);
        $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
        $232 = ($231|0)==(0);
        $233 = ((($0)) + 143|0);
        $234 = ((($224)) + 164|0);
        $$sink = $232 ? $234 : $233;
        $235 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
        $236 = ((($0)) + 79|0);
        $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
        $238 = ($237|0)==(0);
        $239 = ((($0)) + 147|0);
        $240 = ((($224)) + 168|0);
        $$sink8 = $238 ? $240 : $239;
        $241 = HEAPU8[$$sink8>>0]|(HEAPU8[$$sink8+1>>0]<<8);
        $242 = ((($0)) + 79|0);
        $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
        $244 = ($243|0)==(0);
        if ($244) {
         $245 = ((($224)) + 170|0);
         $$sink11 = $245;$248 = $235;$249 = $241;
        } else {
         $329 = $241;$330 = $235;
         label = 57;
        }
       }
       if ((label|0) == 57) {
        $246 = ((($0)) + 149|0);
        $$sink11 = $246;$248 = $330;$249 = $329;
       }
       $247 = HEAPU8[$$sink11>>0]|(HEAPU8[$$sink11+1>>0]<<8);
       FUNCTION_TABLE_viiiiiiii[$213 & 127]($0,$220,$221,$223,$248,$249,$247,3);
      }
     }
     $250 = HEAP32[$2>>2]|0;
     $251 = ((($250)) + 8|0);
     $252 = HEAP8[$251>>0]|0;
     $253 = $252 | 1;
     HEAP8[$251>>0] = $253;
     HEAP8[$4>>0] = 1;
     $$0285 = 0;
     break L4;
     break;
    }
    case 15:  {
     $286 = ((($10)) + 4|0);
     $287 = HEAP8[$286>>0]|0;
     $288 = ($287<<24>>24)==(58);
     if (!($288)) {
      $314 = (_mb_malloc(8)|0);
      $315 = HEAP32[$2>>2]|0;
      $316 = ((($315)) + 4|0);
      HEAP8[$316>>0]=$314&255;HEAP8[$316+1>>0]=($314>>8)&255;HEAP8[$316+2>>0]=($314>>16)&255;HEAP8[$316+3>>0]=$314>>24;
      $317 = HEAP32[$2>>2]|0;
      $318 = ((($317)) + 4|0);
      $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
      $320 = $319;
      $321 = $320;
      HEAP8[$321>>0]=0&255;HEAP8[$321+1>>0]=(0>>8)&255;HEAP8[$321+2>>0]=(0>>16)&255;HEAP8[$321+3>>0]=0>>24;
      $322 = (($320) + 4)|0;
      $323 = $322;
      HEAP8[$323>>0]=0&255;HEAP8[$323+1>>0]=(0>>8)&255;HEAP8[$323+2>>0]=(0>>16)&255;HEAP8[$323+3>>0]=0>>24;
      $324 = HEAP32[$2>>2]|0;
      $325 = ((($324)) + 4|0);
      $326 = HEAPU8[$325>>0]|(HEAPU8[$325+1>>0]<<8)|(HEAPU8[$325+2>>0]<<16)|(HEAPU8[$325+3>>0]<<24);
      HEAP8[$326>>0]=$1&255;HEAP8[$326+1>>0]=($1>>8)&255;HEAP8[$326+2>>0]=($1>>16)&255;HEAP8[$326+3>>0]=$1>>24;
      $$0285 = 0;
      break L4;
     }
     $289 = (_mb_memtest($5)|0);
     $290 = ($289|0)==(0);
     if ($290) {
      $297 = (_mb_malloc(8)|0);
      $298 = $297;
      $299 = $298;
      HEAP8[$299>>0]=0&255;HEAP8[$299+1>>0]=(0>>8)&255;HEAP8[$299+2>>0]=(0>>16)&255;HEAP8[$299+3>>0]=0>>24;
      $300 = (($298) + 4)|0;
      $301 = $300;
      HEAP8[$301>>0]=0&255;HEAP8[$301+1>>0]=(0>>8)&255;HEAP8[$301+2>>0]=(0>>16)&255;HEAP8[$301+3>>0]=0>>24;
      HEAP8[$297>>0]=$1&255;HEAP8[$297+1>>0]=($1>>8)&255;HEAP8[$297+2>>0]=($1>>16)&255;HEAP8[$297+3>>0]=$1>>24;
      $302 = ((($297)) + 4|0);
      HEAP32[$3>>2] = $302;
      $303 = HEAP32[$2>>2]|0;
      $304 = ((($303)) + 4|0);
      HEAP8[$304>>0]=$297&255;HEAP8[$304+1>>0]=($297>>8)&255;HEAP8[$304+2>>0]=($297>>16)&255;HEAP8[$304+3>>0]=$297>>24;
      $305 = ((($12)) + 8|0);
      $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
      $307 = HEAP32[$2>>2]|0;
      __ht_set_or_insert($306,$1,$307);
      $308 = (__create_object()|0);
      HEAP32[$2>>2] = $308;
      HEAP8[$308>>0]=15&255;HEAP8[$308+1>>0]=(15>>8)&255;HEAP8[$308+2>>0]=(15>>16)&255;HEAP8[$308+3>>0]=15>>24;
      $309 = ((($308)) + 4|0);
      HEAP8[$309>>0]=$297&255;HEAP8[$309+1>>0]=($297>>8)&255;HEAP8[$309+2>>0]=($297>>16)&255;HEAP8[$309+3>>0]=$297>>24;
      $310 = HEAP32[$2>>2]|0;
      $311 = ((($310)) + 8|0);
      $312 = HEAP8[$311>>0]|0;
      $313 = $312 | 1;
      HEAP8[$311>>0] = $313;
      $$0285 = 0;
      break L4;
     } else {
      $291 = ((($23)) + 4|0);
      $292 = HEAP32[$5>>2]|0;
      HEAP8[$291>>0]=$292&255;HEAP8[$291+1>>0]=($292>>8)&255;HEAP8[$291+2>>0]=($292>>16)&255;HEAP8[$291+3>>0]=$292>>24;
      $293 = HEAP32[$2>>2]|0;
      $294 = ((($293)) + 8|0);
      $295 = HEAP8[$294>>0]|0;
      $296 = $295 | 1;
      HEAP8[$294>>0] = $296;
      HEAP8[$4>>0] = 1;
      $$0285 = 0;
      break L4;
     }
     break;
    }
    case 19:  {
     $327 = HEAP8[$1>>0]|0;
     $328 = ((($23)) + 4|0);
     HEAP8[$328>>0] = $327;
     _mb_free($1);
     $$0285 = 0;
     break L4;
     break;
    }
    case 22:  {
     _mb_free($1);
     $$0285 = 0;
     break L4;
     break;
    }
    default: {
     $$0285 = 0;
     break L4;
    }
    }
   } while(0);
  } else {
   $$0285 = 3;
  }
 } while(0);
 STACKTOP = sp;return ($$0285|0);
}
function __get_symbol_type($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pr466 = 0, $$pr469 = 0, $$sink = 0, $$sink12 = 0, $$sink17 = 0, $$sink22 = 0, $$sink27 = 0, $$sink32 = 0, $$sink37 = 0, $$sink42 = 0, $$sink508 = 0, $$sink509 = 0, $$sink510 = 0, $$sink511 = 0, $$sink512 = 0, $$sink513 = 0, $$sink514 = 0, $$sink515 = 0, $$sink516 = 0;
 var $$sink517 = 0, $$sink518 = 0, $$sink519 = 0, $$sink520 = 0, $$sink521 = 0, $$sink522 = 0, $$sink7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0.0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0;
 var $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0;
 var $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0;
 var $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0;
 var $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0;
 var $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond44 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $3 = sp + 8|0;
 $4 = sp + 149|0;
 $5 = sp + 20|0;
 $6 = sp + 4|0;
 $7 = sp + 18|0;
 $8 = sp + 16|0;
 $9 = sp;
 $10 = sp + 14|0;
 $11 = sp + 12|0;
 HEAP32[$3>>2] = 0;
 HEAP8[$4>>0] = 0;
 $12 = ($0|0)!=(0|0);
 $13 = ($1|0)!=(0|0);
 $or$cond = $12 & $13;
 if (!($or$cond)) {
  ___assert_fail((12390|0),(1578|0),5461,(12471|0));
  // unreachable;
 }
 $14 = (_strlen($1)|0);
 $15 = ($14|0)==(0);
 if ($15) {
  ___assert_fail((12488|0),(1578|0),5463,(12471|0));
  // unreachable;
 }
 $16 = ((($0)) + 71|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = (_strtol($1,$3,0)|0);
 $19 = HEAP32[$3>>2]|0;
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)==(0);
 L7: do {
  if ($21) {
   HEAP8[$2>>0]=$18&255;HEAP8[$2+1>>0]=($18>>8)&255;HEAP8[$2+2>>0]=($18>>16)&255;HEAP8[$2+3>>0]=$18>>24;
   $$0 = 2;
  } else {
   $22 = (+_strtod($1,$3));
   $23 = HEAP32[$3>>2]|0;
   $24 = HEAP8[$23>>0]|0;
   $25 = ($24<<24>>24)==(0);
   if ($25) {
    $26 = $22;
    HEAPF32[tempDoublePtr>>2]=$26;HEAP8[$2>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$2+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$2+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$2+3>>0]=HEAP8[tempDoublePtr+3>>0];
    $$0 = 3;
    break;
   }
   $27 = HEAP8[$1>>0]|0;
   $28 = (__is_quotation_char($27)|0);
   $29 = ($28<<24>>24)==(0);
   if (!($29)) {
    $30 = (($14) + -1)|0;
    $31 = (($1) + ($30)|0);
    $32 = HEAP8[$31>>0]|0;
    $33 = (__is_quotation_char($32)|0);
    $34 = ($33<<24>>24)!=(0);
    $35 = ($14>>>0)>(1);
    $or$cond3 = $35 & $34;
    if ($or$cond3) {
     $36 = ((($17)) + 142|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     $38 = ($37|0)==(0|0);
     if ($38) {
      $$0 = 4;
      break;
     }
     $39 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $40 = ($39|0)==(8);
     if (!($40)) {
      $$0 = 4;
      break;
     }
     $41 = ((($37)) + 4|0);
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $43 = ((($42)) + 4|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $45 = ($44|0)==(97|0);
     if (!($45)) {
      $$0 = 4;
      break;
     }
     $46 = ((($17)) + 134|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $48 = ((($17)) + 5|0);
     _memcpy(($5|0),($48|0),129)|0;
     HEAP8[$36>>0]=0&255;HEAP8[$36+1>>0]=(0>>8)&255;HEAP8[$36+2>>0]=(0>>16)&255;HEAP8[$36+3>>0]=0>>24;
     _memset(($48|0),0,133)|0;
     HEAP8[$31>>0] = 0;
     $49 = ((($17)) + 150|0);
     HEAP8[$49>>0]=0&255;HEAP8[$49+1>>0]=(0>>8)&255;HEAP8[$49+2>>0]=(0>>16)&255;HEAP8[$49+3>>0]=0>>24;
     $50 = ((($1)) + 1|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = (__is_using_at_char($51)|0);
     $53 = ($52<<24>>24)==(0);
     do {
      if ($53) {
       $64 = (__load_file($0,$50,12496,1)|0);
       $65 = ($64|0)==(0|0);
       if (!($65)) {
        $66 = ($64|0)==($50|0);
        if ($66) {
         break;
        }
        $67 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
        $68 = (__ls_back($67)|0);
        $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
        $70 = (__prev_import($0,$69,$6,$7,$8)|0);
        (_mb_load_string($0,$64,1)|0);
        _mb_free($64);
        __post_import($0,$70,$6,$7,$8);
        break;
       }
       $71 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
       $72 = (__ls_find($71,$50,119,0)|0);
       $73 = ($72|0)==(0|0);
       if ($73) {
        $74 = ((($0)) + 171|0);
        $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
        $76 = ($75|0)==(0|0);
        if ($76) {
         $147 = ((($0)) + 67|0);
         $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
         (__set_current_error($0,4,$148)|0);
         $149 = ((($0)) + 159|0);
         $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
         $151 = ($150|0)==(0|0);
         if ($151) {
          break;
         }
         $152 = ((($0)) + 134|0);
         $153 = HEAP8[$152>>0]|0;
         $154 = $153 & 1;
         $155 = ($154<<24>>24)==(0);
         if (!($155)) {
          break;
         }
         $156 = $153 | 1;
         HEAP8[$152>>0] = $156;
         $157 = ((($0)) + 135|0);
         $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
         $159 = (_mb_get_error_desc($158)|0);
         $160 = ((($0)) + 139|0);
         $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
         $162 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
         $163 = ($162|0)==(0|0);
         do {
          if ($163) {
           $164 = ((($0)) + 143|0);
           $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
           $166 = ((($0)) + 147|0);
           $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8);
           $639 = $167;$640 = $165;
           label = 43;
          } else {
           $168 = ((($0)) + 79|0);
           $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
           $170 = ($169|0)==(0);
           $171 = ((($0)) + 143|0);
           $172 = ((($162)) + 164|0);
           $$sink509 = $170 ? $172 : $171;
           $173 = HEAPU8[$$sink509>>0]|(HEAPU8[$$sink509+1>>0]<<8)|(HEAPU8[$$sink509+2>>0]<<16)|(HEAPU8[$$sink509+3>>0]<<24);
           $174 = ((($0)) + 79|0);
           $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
           $176 = ($175|0)==(0);
           $177 = ((($0)) + 147|0);
           $178 = ((($162)) + 168|0);
           $$sink510 = $176 ? $178 : $177;
           $179 = HEAPU8[$$sink510>>0]|(HEAPU8[$$sink510+1>>0]<<8);
           $180 = ((($0)) + 79|0);
           $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
           $182 = ($181|0)==(0);
           if (!($182)) {
            $639 = $179;$640 = $173;
            label = 43;
            break;
           }
           $183 = ((($162)) + 170|0);
           $$sink12 = $183;$186 = $173;$187 = $179;
          }
         } while(0);
         if ((label|0) == 43) {
          $184 = ((($0)) + 149|0);
          $$sink12 = $184;$186 = $640;$187 = $639;
         }
         $185 = HEAPU8[$$sink12>>0]|(HEAPU8[$$sink12+1>>0]<<8);
         FUNCTION_TABLE_viiiiiiii[$150 & 127]($0,$158,$159,$161,$186,$187,$185,3);
         break;
        }
        $77 = (__create_object()|0);
        HEAP8[$77>>0]=19&255;HEAP8[$77+1>>0]=(19>>8)&255;HEAP8[$77+2>>0]=(19>>16)&255;HEAP8[$77+3>>0]=19>>24;
        $78 = ((($77)) + 4|0);
        HEAP8[$78>>0] = 58;
        $79 = ((($0)) + 17|0);
        $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
        (__ls_pushback($80,$77)|0);
        $81 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
        $82 = (_strlen($50)|0);
        $83 = (($82) + 1)|0;
        $84 = (_mb_strdup($50,$83)|0);
        (__ls_pushback($81,$84)|0);
        $85 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
        $86 = (__ls_back($85)|0);
        $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
        $88 = (__prev_import($0,$87,$9,$10,$11)|0);
        $89 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
        $90 = (FUNCTION_TABLE_iii[$89 & 255]($0,$50)|0);
        $91 = ($90|0)==(0);
        if (!($91)) {
         $92 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
         $93 = (__ls_back($92)|0);
         $94 = ((($0)) + 135|0);
         $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
         $96 = ($95|0)==(0);
         do {
          if ($96) {
           $97 = HEAP32[$9>>2]|0;
           $98 = ((($17)) + 164|0);
           HEAP8[$98>>0]=$97&255;HEAP8[$98+1>>0]=($97>>8)&255;HEAP8[$98+2>>0]=($97>>16)&255;HEAP8[$98+3>>0]=$97>>24;
           $99 = HEAP16[$10>>1]|0;
           $100 = ((($17)) + 168|0);
           HEAP8[$100>>0]=$99&255;HEAP8[$100+1>>0]=$99>>8;
           $101 = HEAP16[$11>>1]|0;
           $102 = ((($17)) + 170|0);
           HEAP8[$102>>0]=$101&255;HEAP8[$102+1>>0]=$101>>8;
           $103 = ((($0)) + 67|0);
           $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
           (__set_current_error($0,4,$104)|0);
           $105 = ((($0)) + 159|0);
           $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
           $107 = ($106|0)==(0|0);
           if ($107) {
            break;
           }
           $108 = ((($0)) + 134|0);
           $109 = HEAP8[$108>>0]|0;
           $110 = $109 & 1;
           $111 = ($110<<24>>24)==(0);
           if (!($111)) {
            break;
           }
           $112 = $109 | 1;
           HEAP8[$108>>0] = $112;
           $113 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
           $114 = (_mb_get_error_desc($113)|0);
           $115 = ((($0)) + 139|0);
           $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
           $117 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
           $118 = ($117|0)==(0|0);
           do {
            if ($118) {
             $119 = ((($0)) + 143|0);
             $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
             $121 = ((($0)) + 147|0);
             $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8);
             $637 = $122;$638 = $120;
             label = 33;
            } else {
             $123 = ((($0)) + 79|0);
             $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
             $125 = ($124|0)==(0);
             $126 = ((($0)) + 143|0);
             $127 = ((($117)) + 164|0);
             $$sink = $125 ? $127 : $126;
             $128 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
             $129 = ((($0)) + 79|0);
             $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
             $131 = ($130|0)==(0);
             $132 = ((($0)) + 147|0);
             $133 = ((($117)) + 168|0);
             $$sink508 = $131 ? $133 : $132;
             $134 = HEAPU8[$$sink508>>0]|(HEAPU8[$$sink508+1>>0]<<8);
             $135 = ((($0)) + 79|0);
             $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
             $137 = ($136|0)==(0);
             if (!($137)) {
              $637 = $134;$638 = $128;
              label = 33;
              break;
             }
             $138 = ((($117)) + 170|0);
             $$sink7 = $138;$141 = $128;$142 = $134;
            }
           } while(0);
           if ((label|0) == 33) {
            $139 = ((($0)) + 149|0);
            $$sink7 = $139;$141 = $638;$142 = $637;
           }
           $140 = HEAPU8[$$sink7>>0]|(HEAPU8[$$sink7+1>>0]<<8);
           FUNCTION_TABLE_viiiiiiii[$106 & 127]($0,$113,$114,$116,$141,$142,$140,3);
          }
         } while(0);
         $143 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
         $144 = ((($93)) + 12|0);
         $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
         (__destroy_memory($143,$145)|0);
         $146 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
         (__ls_popback($146)|0);
        }
        __post_import($0,$88,$9,$10,$11);
       }
      } else {
       $54 = ((($1)) + 2|0);
       $55 = (_strlen($54)|0);
       $56 = (($55) + 1)|0;
       $57 = (_mb_strdup($54,$56)|0);
       (_mb_strupr($57)|0);
       $58 = ((($0)) + 63|0);
       $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
       $60 = (__ls_find($59,$57,119,0)|0);
       $61 = ($60|0)==(0|0);
       if ($61) {
        $63 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
        (__ls_pushback($63,$57)|0);
        break;
       }
       $62 = ($57|0)==(0|0);
       if ($62) {
        ___assert_fail((1713|0),(1578|0),5507,(12471|0));
        // unreachable;
       } else {
        _mb_free($57);
        break;
       }
      }
     } while(0);
     HEAP8[$49>>0]=1&255;HEAP8[$49+1>>0]=(1>>8)&255;HEAP8[$49+2>>0]=(1>>16)&255;HEAP8[$49+3>>0]=1>>24;
     HEAP8[$31>>0] = 34;
     HEAP8[$46>>0]=$47&255;HEAP8[$46+1>>0]=($47>>8)&255;HEAP8[$46+2>>0]=($47>>16)&255;HEAP8[$46+3>>0]=$47>>24;
     _memcpy(($48|0),($5|0),129)|0;
     $$0 = 0;
     break;
    }
   }
   $188 = (_strcmp($1,10079)|0);
   $189 = ($188|0)==(0);
   if ($189) {
    HEAP8[$2>>0]=-1&255;HEAP8[$2+1>>0]=(-1>>8)&255;HEAP8[$2+2>>0]=(-1>>16)&255;HEAP8[$2+3>>0]=-1>>24;
    $$0 = 0;
    break;
   }
   $190 = (_strcmp($1,12498)|0);
   $191 = ($190|0)==(0);
   if ($191) {
    $192 = ((($17)) + 150|0);
    HEAP8[$192>>0]=2&255;HEAP8[$192+1>>0]=(2>>8)&255;HEAP8[$192+2>>0]=(2>>16)&255;HEAP8[$192+3>>0]=2>>24;
    $$0 = 22;
    break;
   }
   $193 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
   $194 = ($193|0)==(0|0);
   if (!($194)) {
    $195 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
    $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
    $197 = ($196|0)==(10);
    if ($197) {
     $198 = ((($195)) + 4|0);
     $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
     $200 = ((($199)) + 21|0);
     $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
     HEAP8[$2>>0]=$201&255;HEAP8[$2+1>>0]=($201>>8)&255;HEAP8[$2+2>>0]=($201>>16)&255;HEAP8[$2+3>>0]=$201>>24;
     $$0 = 10;
     break;
    }
   }
   $202 = ((($17)) + 142|0);
   $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
   $204 = ($203|0)==(0|0);
   do {
    if ($204) {
     label = 143;
    } else {
     $205 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
     $206 = ($205|0)==(8);
     if ($206) {
      $207 = ((($203)) + 4|0);
      $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
      $209 = ((($208)) + 4|0);
      $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
      $211 = ($210|0)==(66|0);
      if ($211) {
       $212 = (($14) + -1)|0;
       $213 = (($1) + ($212)|0);
       $214 = HEAP8[$213>>0]|0;
       $215 = ($214<<24>>24)==(36);
       $216 = $215 ? 4 : 3;
       HEAP8[$2>>0]=$216&255;HEAP8[$2+1>>0]=($216>>8)&255;HEAP8[$2+2>>0]=($216>>16)&255;HEAP8[$2+3>>0]=$216>>24;
       $$0 = 10;
       break L7;
      }
     }
     $217 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
     $218 = ($217|0)!=(0|0);
     L78: do {
      if ($218) {
       $219 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
       $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
       switch ($220|0) {
       case 17:  {
        label = 104;
        break L78;
        break;
       }
       case 16:  {
        break;
       }
       default: {
        label = 69;
        break L78;
       }
       }
       $221 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
       $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
       $223 = ($222|0)==(8);
       if (!($223)) {
        $$0 = 16;
        break L7;
       }
       $224 = ((($221)) + 4|0);
       $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
       $226 = ((($225)) + 4|0);
       $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
       $228 = ($227|0)==(89|0);
       if (!($228)) {
        $$0 = 16;
        break L7;
       }
       $229 = ((($0)) + 67|0);
       $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
       (__set_current_error($0,56,$230)|0);
       $231 = ((($0)) + 159|0);
       $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
       $233 = ($232|0)==(0|0);
       if ($233) {
        $$0 = 16;
        break L7;
       }
       $234 = ((($0)) + 134|0);
       $235 = HEAP8[$234>>0]|0;
       $236 = $235 & 1;
       $237 = ($236<<24>>24)==(0);
       if (!($237)) {
        $$0 = 16;
        break L7;
       }
       $238 = $235 | 1;
       HEAP8[$234>>0] = $238;
       $239 = ((($0)) + 135|0);
       $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
       $241 = (_mb_get_error_desc($240)|0);
       $242 = ((($0)) + 139|0);
       $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
       $244 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
       $245 = ($244|0)==(0|0);
       do {
        if ($245) {
         $246 = ((($0)) + 143|0);
         $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
         $248 = ((($0)) + 147|0);
         $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8);
         $641 = $249;$642 = $247;
         label = 67;
        } else {
         $250 = ((($0)) + 79|0);
         $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
         $252 = ($251|0)==(0);
         $253 = ((($0)) + 143|0);
         $254 = ((($244)) + 164|0);
         $$sink511 = $252 ? $254 : $253;
         $255 = HEAPU8[$$sink511>>0]|(HEAPU8[$$sink511+1>>0]<<8)|(HEAPU8[$$sink511+2>>0]<<16)|(HEAPU8[$$sink511+3>>0]<<24);
         $256 = ((($0)) + 79|0);
         $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
         $258 = ($257|0)==(0);
         $259 = ((($0)) + 147|0);
         $260 = ((($244)) + 168|0);
         $$sink512 = $258 ? $260 : $259;
         $261 = HEAPU8[$$sink512>>0]|(HEAPU8[$$sink512+1>>0]<<8);
         $262 = ((($0)) + 79|0);
         $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
         $264 = ($263|0)==(0);
         if (!($264)) {
          $641 = $261;$642 = $255;
          label = 67;
          break;
         }
         $265 = ((($244)) + 170|0);
         $$sink17 = $265;$268 = $255;$269 = $261;
        }
       } while(0);
       if ((label|0) == 67) {
        $266 = ((($0)) + 149|0);
        $$sink17 = $266;$268 = $642;$269 = $641;
       }
       $267 = HEAPU8[$$sink17>>0]|(HEAPU8[$$sink17+1>>0]<<8);
       FUNCTION_TABLE_viiiiiiii[$232 & 127]($0,$240,$241,$243,$268,$269,$267,3);
       $$0 = 16;
       break L7;
      } else {
       label = 69;
      }
     } while(0);
     do {
      if ((label|0) == 69) {
       $270 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
       $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
       $272 = ($271|0)==(8);
       if ($272) {
        $273 = ((($270)) + 4|0);
        $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
        $275 = ((($274)) + 4|0);
        $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
        $277 = ($276|0)==(89|0);
        if (!($277)) {
         $415 = ((($270)) + 4|0);
         $416 = HEAPU8[$415>>0]|(HEAPU8[$415+1>>0]<<8)|(HEAPU8[$415+2>>0]<<16)|(HEAPU8[$415+3>>0]<<24);
         $417 = ((($416)) + 4|0);
         $418 = HEAPU8[$417>>0]|(HEAPU8[$417+1>>0]<<8)|(HEAPU8[$417+2>>0]<<16)|(HEAPU8[$417+3>>0]<<24);
         $419 = ($418|0)==(90|0);
         if (!($419)) {
          label = 104;
          break;
         }
         $420 = (__end_class($0)|0);
         $421 = ($420<<24>>24)==(0);
         if ($421) {
          label = 104;
          break;
         }
         __pop_scope($0,0);
         label = 104;
         break;
        }
        $278 = ((($0)) + 93|0);
        $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
        $280 = ($279|0)==(0|0);
        if (!($280)) {
         $281 = ((($0)) + 67|0);
         $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
         (__set_current_error($0,56,$282)|0);
         $283 = ((($0)) + 159|0);
         $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
         $285 = ($284|0)==(0|0);
         if ($285) {
          $$0 = 0;
          break L7;
         }
         $286 = ((($0)) + 134|0);
         $287 = HEAP8[$286>>0]|0;
         $288 = $287 & 1;
         $289 = ($288<<24>>24)==(0);
         if (!($289)) {
          $$0 = 0;
          break L7;
         }
         $290 = $287 | 1;
         HEAP8[$286>>0] = $290;
         $291 = ((($0)) + 135|0);
         $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
         $293 = (_mb_get_error_desc($292)|0);
         $294 = ((($0)) + 139|0);
         $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
         $296 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
         $297 = ($296|0)==(0|0);
         do {
          if ($297) {
           $298 = ((($0)) + 143|0);
           $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
           $300 = ((($0)) + 147|0);
           $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8);
           $643 = $301;$644 = $299;
           label = 78;
          } else {
           $302 = ((($0)) + 79|0);
           $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
           $304 = ($303|0)==(0);
           $305 = ((($0)) + 143|0);
           $306 = ((($296)) + 164|0);
           $$sink513 = $304 ? $306 : $305;
           $307 = HEAPU8[$$sink513>>0]|(HEAPU8[$$sink513+1>>0]<<8)|(HEAPU8[$$sink513+2>>0]<<16)|(HEAPU8[$$sink513+3>>0]<<24);
           $308 = ((($0)) + 79|0);
           $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
           $310 = ($309|0)==(0);
           $311 = ((($0)) + 147|0);
           $312 = ((($296)) + 168|0);
           $$sink514 = $310 ? $312 : $311;
           $313 = HEAPU8[$$sink514>>0]|(HEAPU8[$$sink514+1>>0]<<8);
           $314 = ((($0)) + 79|0);
           $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
           $316 = ($315|0)==(0);
           if (!($316)) {
            $643 = $313;$644 = $307;
            label = 78;
            break;
           }
           $317 = ((($296)) + 170|0);
           $$sink22 = $317;$320 = $307;$321 = $313;
          }
         } while(0);
         if ((label|0) == 78) {
          $318 = ((($0)) + 149|0);
          $$sink22 = $318;$320 = $644;$321 = $643;
         }
         $319 = HEAPU8[$$sink22>>0]|(HEAPU8[$$sink22+1>>0]<<8);
         FUNCTION_TABLE_viiiiiiii[$284 & 127]($0,$292,$293,$295,$320,$321,$319,3);
         $$0 = 0;
         break L7;
        }
        __begin_class($0);
        $322 = HEAP8[$1>>0]|0;
        $323 = (__is_identifier_char($322)|0);
        $324 = ($323<<24>>24)==(0);
        if ($324) {
         $325 = (_mb_uu_ischar($1)|0);
         $326 = ($325|0)==(0);
         if ($326) {
          $$0 = 0;
          break L7;
         }
        }
        do {
         if ($218) {
          $327 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
          $328 = HEAPU8[$327>>0]|(HEAPU8[$327+1>>0]<<8)|(HEAPU8[$327+2>>0]<<16)|(HEAPU8[$327+3>>0]<<24);
          $329 = ($328|0)==(9);
          if (!($329)) {
           break;
          }
          $330 = ((($0)) + 67|0);
          $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
          (__set_current_error($0,54,$331)|0);
          $332 = ((($0)) + 159|0);
          $333 = HEAPU8[$332>>0]|(HEAPU8[$332+1>>0]<<8)|(HEAPU8[$332+2>>0]<<16)|(HEAPU8[$332+3>>0]<<24);
          $334 = ($333|0)==(0|0);
          if ($334) {
           $$0 = 0;
           break L7;
          }
          $335 = ((($0)) + 134|0);
          $336 = HEAP8[$335>>0]|0;
          $337 = $336 & 1;
          $338 = ($337<<24>>24)==(0);
          if (!($338)) {
           $$0 = 0;
           break L7;
          }
          $339 = $336 | 1;
          HEAP8[$335>>0] = $339;
          $340 = ((($0)) + 135|0);
          $341 = HEAPU8[$340>>0]|(HEAPU8[$340+1>>0]<<8)|(HEAPU8[$340+2>>0]<<16)|(HEAPU8[$340+3>>0]<<24);
          $342 = (_mb_get_error_desc($341)|0);
          $343 = ((($0)) + 139|0);
          $344 = HEAPU8[$343>>0]|(HEAPU8[$343+1>>0]<<8)|(HEAPU8[$343+2>>0]<<16)|(HEAPU8[$343+3>>0]<<24);
          $345 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
          $346 = ($345|0)==(0|0);
          do {
           if ($346) {
            $347 = ((($0)) + 143|0);
            $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
            $349 = ((($0)) + 147|0);
            $350 = HEAPU8[$349>>0]|(HEAPU8[$349+1>>0]<<8);
            $645 = $350;$646 = $348;
            label = 90;
           } else {
            $351 = ((($0)) + 79|0);
            $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
            $353 = ($352|0)==(0);
            $354 = ((($0)) + 143|0);
            $355 = ((($345)) + 164|0);
            $$sink515 = $353 ? $355 : $354;
            $356 = HEAPU8[$$sink515>>0]|(HEAPU8[$$sink515+1>>0]<<8)|(HEAPU8[$$sink515+2>>0]<<16)|(HEAPU8[$$sink515+3>>0]<<24);
            $357 = ((($0)) + 79|0);
            $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8)|(HEAPU8[$357+2>>0]<<16)|(HEAPU8[$357+3>>0]<<24);
            $359 = ($358|0)==(0);
            $360 = ((($0)) + 147|0);
            $361 = ((($345)) + 168|0);
            $$sink516 = $359 ? $361 : $360;
            $362 = HEAPU8[$$sink516>>0]|(HEAPU8[$$sink516+1>>0]<<8);
            $363 = ((($0)) + 79|0);
            $364 = HEAPU8[$363>>0]|(HEAPU8[$363+1>>0]<<8)|(HEAPU8[$363+2>>0]<<16)|(HEAPU8[$363+3>>0]<<24);
            $365 = ($364|0)==(0);
            if (!($365)) {
             $645 = $362;$646 = $356;
             label = 90;
             break;
            }
            $366 = ((($345)) + 170|0);
            $$sink27 = $366;$369 = $356;$370 = $362;
           }
          } while(0);
          if ((label|0) == 90) {
           $367 = ((($0)) + 149|0);
           $$sink27 = $367;$369 = $646;$370 = $645;
          }
          $368 = HEAPU8[$$sink27>>0]|(HEAPU8[$$sink27+1>>0]<<8);
          FUNCTION_TABLE_viiiiiiii[$333 & 127]($0,$341,$342,$344,$369,$370,$368,3);
          $$0 = 0;
          break L7;
         }
        } while(0);
        $371 = ((($17)) + 160|0);
        $372 = HEAPU8[$371>>0]|(HEAPU8[$371+1>>0]<<8);
        $373 = ($372&65535)>(1);
        if (!($373)) {
         $$0 = 16;
         break L7;
        }
        $374 = ((($0)) + 67|0);
        $375 = HEAPU8[$374>>0]|(HEAPU8[$374+1>>0]<<8)|(HEAPU8[$374+2>>0]<<16)|(HEAPU8[$374+3>>0]<<24);
        (__set_current_error($0,54,$375)|0);
        $376 = ((($0)) + 159|0);
        $377 = HEAPU8[$376>>0]|(HEAPU8[$376+1>>0]<<8)|(HEAPU8[$376+2>>0]<<16)|(HEAPU8[$376+3>>0]<<24);
        $378 = ($377|0)==(0|0);
        if ($378) {
         $$0 = 0;
         break L7;
        }
        $379 = ((($0)) + 134|0);
        $380 = HEAP8[$379>>0]|0;
        $381 = $380 & 1;
        $382 = ($381<<24>>24)==(0);
        if (!($382)) {
         $$0 = 0;
         break L7;
        }
        $383 = $380 | 1;
        HEAP8[$379>>0] = $383;
        $384 = ((($0)) + 135|0);
        $385 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8)|(HEAPU8[$384+2>>0]<<16)|(HEAPU8[$384+3>>0]<<24);
        $386 = (_mb_get_error_desc($385)|0);
        $387 = ((($0)) + 139|0);
        $388 = HEAPU8[$387>>0]|(HEAPU8[$387+1>>0]<<8)|(HEAPU8[$387+2>>0]<<16)|(HEAPU8[$387+3>>0]<<24);
        $389 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
        $390 = ($389|0)==(0|0);
        do {
         if ($390) {
          $391 = ((($0)) + 143|0);
          $392 = HEAPU8[$391>>0]|(HEAPU8[$391+1>>0]<<8)|(HEAPU8[$391+2>>0]<<16)|(HEAPU8[$391+3>>0]<<24);
          $393 = ((($0)) + 147|0);
          $394 = HEAPU8[$393>>0]|(HEAPU8[$393+1>>0]<<8);
          $647 = $394;$648 = $392;
          label = 99;
         } else {
          $395 = ((($0)) + 79|0);
          $396 = HEAPU8[$395>>0]|(HEAPU8[$395+1>>0]<<8)|(HEAPU8[$395+2>>0]<<16)|(HEAPU8[$395+3>>0]<<24);
          $397 = ($396|0)==(0);
          $398 = ((($0)) + 143|0);
          $399 = ((($389)) + 164|0);
          $$sink517 = $397 ? $399 : $398;
          $400 = HEAPU8[$$sink517>>0]|(HEAPU8[$$sink517+1>>0]<<8)|(HEAPU8[$$sink517+2>>0]<<16)|(HEAPU8[$$sink517+3>>0]<<24);
          $401 = ((($0)) + 79|0);
          $402 = HEAPU8[$401>>0]|(HEAPU8[$401+1>>0]<<8)|(HEAPU8[$401+2>>0]<<16)|(HEAPU8[$401+3>>0]<<24);
          $403 = ($402|0)==(0);
          $404 = ((($0)) + 147|0);
          $405 = ((($389)) + 168|0);
          $$sink518 = $403 ? $405 : $404;
          $406 = HEAPU8[$$sink518>>0]|(HEAPU8[$$sink518+1>>0]<<8);
          $407 = ((($0)) + 79|0);
          $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
          $409 = ($408|0)==(0);
          if (!($409)) {
           $647 = $406;$648 = $400;
           label = 99;
           break;
          }
          $410 = ((($389)) + 170|0);
          $$sink32 = $410;$413 = $400;$414 = $406;
         }
        } while(0);
        if ((label|0) == 99) {
         $411 = ((($0)) + 149|0);
         $$sink32 = $411;$413 = $648;$414 = $647;
        }
        $412 = HEAPU8[$$sink32>>0]|(HEAPU8[$$sink32+1>>0]<<8);
        FUNCTION_TABLE_viiiiiiii[$377 & 127]($0,$385,$386,$388,$413,$414,$412,3);
        $$0 = 0;
        break L7;
       } else {
        $422 = $270;
       }
      }
     } while(0);
     if ((label|0) == 104) {
      $$pr466 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
      $422 = $$pr466;
     }
     $423 = ($422|0)==(0|0);
     if ($423) {
      label = 143;
     } else {
      $424 = HEAP8[$1>>0]|0;
      $425 = (__is_bracket_char($424)|0);
      $426 = ($425<<24>>24)==(0);
      if ($426) {
       $427 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
       $428 = ($427|0)!=(0|0);
       if ($428) {
        $429 = HEAPU8[$427>>0]|(HEAPU8[$427+1>>0]<<8)|(HEAPU8[$427+2>>0]<<16)|(HEAPU8[$427+3>>0]<<24);
        $430 = HEAPU8[$429>>0]|(HEAPU8[$429+1>>0]<<8)|(HEAPU8[$429+2>>0]<<16)|(HEAPU8[$429+3>>0]<<24);
        $431 = ($430|0)==(17);
        if ($431) {
         $432 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8)|(HEAPU8[$432+2>>0]<<16)|(HEAPU8[$432+3>>0]<<24);
         $434 = ($433|0)==(8);
         do {
          if ($434) {
           $435 = ((($432)) + 4|0);
           $436 = HEAPU8[$435>>0]|(HEAPU8[$435+1>>0]<<8)|(HEAPU8[$435+2>>0]<<16)|(HEAPU8[$435+3>>0]<<24);
           $437 = ((($436)) + 4|0);
           $438 = HEAPU8[$437>>0]|(HEAPU8[$437+1>>0]<<8)|(HEAPU8[$437+2>>0]<<16)|(HEAPU8[$437+3>>0]<<24);
           $439 = ($438|0)==(86|0);
           if (!($439)) {
            break;
           }
           $440 = (__begin_routine($0)|0);
           $441 = ($440|0)==(0);
           if (!($441)) {
            $$0 = 0;
            break L7;
           }
          }
         } while(0);
         $$0 = 17;
         break L7;
        }
       }
       $442 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
       $443 = HEAPU8[$442>>0]|(HEAPU8[$442+1>>0]<<8)|(HEAPU8[$442+2>>0]<<16)|(HEAPU8[$442+3>>0]<<24);
       $444 = ($443|0)==(8);
       if ($444) {
        $445 = ((($442)) + 4|0);
        $446 = HEAPU8[$445>>0]|(HEAPU8[$445+1>>0]<<8)|(HEAPU8[$445+2>>0]<<16)|(HEAPU8[$445+3>>0]<<24);
        $447 = ((($446)) + 4|0);
        $448 = HEAPU8[$447>>0]|(HEAPU8[$447+1>>0]<<8)|(HEAPU8[$447+2>>0]<<16)|(HEAPU8[$447+3>>0]<<24);
        $449 = ($448|0)==(86|0);
        if ($449) {
         $455 = (__begin_routine($0)|0);
         $456 = ($455|0)==(0);
         if (!($456)) {
          $$0 = 0;
          break L7;
         }
        } else {
         $450 = ((($442)) + 4|0);
         $451 = HEAPU8[$450>>0]|(HEAPU8[$450+1>>0]<<8)|(HEAPU8[$450+2>>0]<<16)|(HEAPU8[$450+3>>0]<<24);
         $452 = ((($451)) + 4|0);
         $453 = HEAPU8[$452>>0]|(HEAPU8[$452+1>>0]<<8)|(HEAPU8[$452+2>>0]<<16)|(HEAPU8[$452+3>>0]<<24);
         $454 = ($453|0)==(85|0);
         if (!($454)) {
          $558 = ((($442)) + 4|0);
          $559 = HEAPU8[$558>>0]|(HEAPU8[$558+1>>0]<<8)|(HEAPU8[$558+2>>0]<<16)|(HEAPU8[$558+3>>0]<<24);
          $560 = ((($559)) + 4|0);
          $561 = HEAPU8[$560>>0]|(HEAPU8[$560+1>>0]<<8)|(HEAPU8[$560+2>>0]<<16)|(HEAPU8[$560+3>>0]<<24);
          $562 = ($561|0)==(87|0);
          if (!($562)) {
           label = 143;
           break;
          }
          $563 = (__end_routine($0)|0);
          $564 = ($563<<24>>24)==(0);
          if ($564) {
           label = 143;
           break;
          }
          __pop_scope($0,0);
          label = 143;
          break;
         }
        }
        $457 = HEAP8[$1>>0]|0;
        $458 = (__is_identifier_char($457)|0);
        $459 = ($458<<24>>24)==(0);
        if ($459) {
         $460 = (_mb_uu_ischar($1)|0);
         $461 = ($460|0)==(0);
         if ($461) {
          $$0 = 0;
          break L7;
         }
        }
        do {
         if ($428) {
          $462 = HEAPU8[$427>>0]|(HEAPU8[$427+1>>0]<<8)|(HEAPU8[$427+2>>0]<<16)|(HEAPU8[$427+3>>0]<<24);
          $463 = HEAPU8[$462>>0]|(HEAPU8[$462+1>>0]<<8)|(HEAPU8[$462+2>>0]<<16)|(HEAPU8[$462+3>>0]<<24);
          $464 = ($463|0)==(9);
          if (!($464)) {
           break;
          }
          $465 = ((($0)) + 67|0);
          $466 = HEAPU8[$465>>0]|(HEAPU8[$465+1>>0]<<8)|(HEAPU8[$465+2>>0]<<16)|(HEAPU8[$465+3>>0]<<24);
          (__set_current_error($0,51,$466)|0);
          $467 = ((($0)) + 159|0);
          $468 = HEAPU8[$467>>0]|(HEAPU8[$467+1>>0]<<8)|(HEAPU8[$467+2>>0]<<16)|(HEAPU8[$467+3>>0]<<24);
          $469 = ($468|0)==(0|0);
          if ($469) {
           $$0 = 0;
           break L7;
          }
          $470 = ((($0)) + 134|0);
          $471 = HEAP8[$470>>0]|0;
          $472 = $471 & 1;
          $473 = ($472<<24>>24)==(0);
          if (!($473)) {
           $$0 = 0;
           break L7;
          }
          $474 = $471 | 1;
          HEAP8[$470>>0] = $474;
          $475 = ((($0)) + 135|0);
          $476 = HEAPU8[$475>>0]|(HEAPU8[$475+1>>0]<<8)|(HEAPU8[$475+2>>0]<<16)|(HEAPU8[$475+3>>0]<<24);
          $477 = (_mb_get_error_desc($476)|0);
          $478 = ((($0)) + 139|0);
          $479 = HEAPU8[$478>>0]|(HEAPU8[$478+1>>0]<<8)|(HEAPU8[$478+2>>0]<<16)|(HEAPU8[$478+3>>0]<<24);
          $480 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
          $481 = ($480|0)==(0|0);
          do {
           if ($481) {
            $482 = ((($0)) + 143|0);
            $483 = HEAPU8[$482>>0]|(HEAPU8[$482+1>>0]<<8)|(HEAPU8[$482+2>>0]<<16)|(HEAPU8[$482+3>>0]<<24);
            $484 = ((($0)) + 147|0);
            $485 = HEAPU8[$484>>0]|(HEAPU8[$484+1>>0]<<8);
            $649 = $485;$650 = $483;
            label = 127;
           } else {
            $486 = ((($0)) + 79|0);
            $487 = HEAPU8[$486>>0]|(HEAPU8[$486+1>>0]<<8)|(HEAPU8[$486+2>>0]<<16)|(HEAPU8[$486+3>>0]<<24);
            $488 = ($487|0)==(0);
            $489 = ((($0)) + 143|0);
            $490 = ((($480)) + 164|0);
            $$sink519 = $488 ? $490 : $489;
            $491 = HEAPU8[$$sink519>>0]|(HEAPU8[$$sink519+1>>0]<<8)|(HEAPU8[$$sink519+2>>0]<<16)|(HEAPU8[$$sink519+3>>0]<<24);
            $492 = ((($0)) + 79|0);
            $493 = HEAPU8[$492>>0]|(HEAPU8[$492+1>>0]<<8)|(HEAPU8[$492+2>>0]<<16)|(HEAPU8[$492+3>>0]<<24);
            $494 = ($493|0)==(0);
            $495 = ((($0)) + 147|0);
            $496 = ((($480)) + 168|0);
            $$sink520 = $494 ? $496 : $495;
            $497 = HEAPU8[$$sink520>>0]|(HEAPU8[$$sink520+1>>0]<<8);
            $498 = ((($0)) + 79|0);
            $499 = HEAPU8[$498>>0]|(HEAPU8[$498+1>>0]<<8)|(HEAPU8[$498+2>>0]<<16)|(HEAPU8[$498+3>>0]<<24);
            $500 = ($499|0)==(0);
            if (!($500)) {
             $649 = $497;$650 = $491;
             label = 127;
             break;
            }
            $501 = ((($480)) + 170|0);
            $$sink37 = $501;$504 = $491;$505 = $497;
           }
          } while(0);
          if ((label|0) == 127) {
           $502 = ((($0)) + 149|0);
           $$sink37 = $502;$504 = $650;$505 = $649;
          }
          $503 = HEAPU8[$$sink37>>0]|(HEAPU8[$$sink37+1>>0]<<8);
          FUNCTION_TABLE_viiiiiiii[$468 & 127]($0,$476,$477,$479,$504,$505,$503,3);
          $$0 = 0;
          break L7;
         }
        } while(0);
        $506 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
        $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8)|(HEAPU8[$506+2>>0]<<16)|(HEAPU8[$506+3>>0]<<24);
        $508 = ($507|0)==(8);
        if (!($508)) {
         $$0 = 17;
         break L7;
        }
        $509 = ((($506)) + 4|0);
        $510 = HEAPU8[$509>>0]|(HEAPU8[$509+1>>0]<<8)|(HEAPU8[$509+2>>0]<<16)|(HEAPU8[$509+3>>0]<<24);
        $511 = ((($510)) + 4|0);
        $512 = HEAPU8[$511>>0]|(HEAPU8[$511+1>>0]<<8)|(HEAPU8[$511+2>>0]<<16)|(HEAPU8[$511+3>>0]<<24);
        $513 = ($512|0)==(86|0);
        if (!($513)) {
         $$0 = 17;
         break L7;
        }
        $514 = ((($17)) + 160|0);
        $515 = HEAPU8[$514>>0]|(HEAPU8[$514+1>>0]<<8);
        $516 = ($515&65535)>(1);
        if (!($516)) {
         $$0 = 17;
         break L7;
        }
        $517 = ((($0)) + 67|0);
        $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
        (__set_current_error($0,51,$518)|0);
        $519 = ((($0)) + 159|0);
        $520 = HEAPU8[$519>>0]|(HEAPU8[$519+1>>0]<<8)|(HEAPU8[$519+2>>0]<<16)|(HEAPU8[$519+3>>0]<<24);
        $521 = ($520|0)==(0|0);
        if ($521) {
         $$0 = 0;
         break L7;
        }
        $522 = ((($0)) + 134|0);
        $523 = HEAP8[$522>>0]|0;
        $524 = $523 & 1;
        $525 = ($524<<24>>24)==(0);
        if (!($525)) {
         $$0 = 0;
         break L7;
        }
        $526 = $523 | 1;
        HEAP8[$522>>0] = $526;
        $527 = ((($0)) + 135|0);
        $528 = HEAPU8[$527>>0]|(HEAPU8[$527+1>>0]<<8)|(HEAPU8[$527+2>>0]<<16)|(HEAPU8[$527+3>>0]<<24);
        $529 = (_mb_get_error_desc($528)|0);
        $530 = ((($0)) + 139|0);
        $531 = HEAPU8[$530>>0]|(HEAPU8[$530+1>>0]<<8)|(HEAPU8[$530+2>>0]<<16)|(HEAPU8[$530+3>>0]<<24);
        $532 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
        $533 = ($532|0)==(0|0);
        do {
         if ($533) {
          $534 = ((($0)) + 143|0);
          $535 = HEAPU8[$534>>0]|(HEAPU8[$534+1>>0]<<8)|(HEAPU8[$534+2>>0]<<16)|(HEAPU8[$534+3>>0]<<24);
          $536 = ((($0)) + 147|0);
          $537 = HEAPU8[$536>>0]|(HEAPU8[$536+1>>0]<<8);
          $651 = $537;$652 = $535;
          label = 138;
         } else {
          $538 = ((($0)) + 79|0);
          $539 = HEAPU8[$538>>0]|(HEAPU8[$538+1>>0]<<8)|(HEAPU8[$538+2>>0]<<16)|(HEAPU8[$538+3>>0]<<24);
          $540 = ($539|0)==(0);
          $541 = ((($0)) + 143|0);
          $542 = ((($532)) + 164|0);
          $$sink521 = $540 ? $542 : $541;
          $543 = HEAPU8[$$sink521>>0]|(HEAPU8[$$sink521+1>>0]<<8)|(HEAPU8[$$sink521+2>>0]<<16)|(HEAPU8[$$sink521+3>>0]<<24);
          $544 = ((($0)) + 79|0);
          $545 = HEAPU8[$544>>0]|(HEAPU8[$544+1>>0]<<8)|(HEAPU8[$544+2>>0]<<16)|(HEAPU8[$544+3>>0]<<24);
          $546 = ($545|0)==(0);
          $547 = ((($0)) + 147|0);
          $548 = ((($532)) + 168|0);
          $$sink522 = $546 ? $548 : $547;
          $549 = HEAPU8[$$sink522>>0]|(HEAPU8[$$sink522+1>>0]<<8);
          $550 = ((($0)) + 79|0);
          $551 = HEAPU8[$550>>0]|(HEAPU8[$550+1>>0]<<8)|(HEAPU8[$550+2>>0]<<16)|(HEAPU8[$550+3>>0]<<24);
          $552 = ($551|0)==(0);
          if (!($552)) {
           $651 = $549;$652 = $543;
           label = 138;
           break;
          }
          $553 = ((($532)) + 170|0);
          $$sink42 = $553;$556 = $543;$557 = $549;
         }
        } while(0);
        if ((label|0) == 138) {
         $554 = ((($0)) + 149|0);
         $$sink42 = $554;$556 = $652;$557 = $651;
        }
        $555 = HEAPU8[$$sink42>>0]|(HEAPU8[$$sink42+1>>0]<<8);
        FUNCTION_TABLE_viiiiiiii[$520 & 127]($0,$528,$529,$531,$556,$557,$555,3);
        $$0 = 0;
        break L7;
       } else {
        $565 = $442;
       }
      } else {
       label = 143;
      }
     }
    }
   } while(0);
   if ((label|0) == 143) {
    $$pr469 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
    $565 = $$pr469;
   }
   $566 = ($565|0)==(0|0);
   L190: do {
    if ($566) {
     label = 147;
    } else {
     $567 = HEAPU8[$565>>0]|(HEAPU8[$565+1>>0]<<8)|(HEAPU8[$565+2>>0]<<16)|(HEAPU8[$565+3>>0]<<24);
     switch ($567|0) {
     case 22: case 19:  {
      label = 147;
      break L190;
      break;
     }
     case 8:  {
      break;
     }
     default: {
      break L190;
     }
     }
     $568 = ((($565)) + 4|0);
     $569 = HEAPU8[$568>>0]|(HEAPU8[$568+1>>0]<<8)|(HEAPU8[$568+2>>0]<<16)|(HEAPU8[$568+3>>0]<<24);
     $570 = ((($569)) + 4|0);
     $571 = HEAPU8[$570>>0]|(HEAPU8[$570+1>>0]<<8)|(HEAPU8[$570+2>>0]<<16)|(HEAPU8[$570+3>>0]<<24);
     $572 = ($571|0)==(23|0);
     if (!($572)) {
      label = 147;
     }
    }
   } while(0);
   if ((label|0) == 147) {
    $573 = (_strcmp(11417,$1)|0);
    $574 = ($573|0)==(0);
    if ($574) {
     HEAP8[$2>>0]=(34)&255;HEAP8[$2+1>>0]=((34)>>8)&255;HEAP8[$2+2>>0]=((34)>>16)&255;HEAP8[$2+3>>0]=(34)>>24;
     $$0 = 8;
     break;
    }
   }
   $575 = (__find_func($0,$1,$4)|0);
   $576 = ($575|0)==(0|0);
   if (!($576)) {
    $577 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
    $578 = ($577|0)==(0|0);
    if ($578) {
     label = 156;
    } else {
     $579 = HEAPU8[$577>>0]|(HEAPU8[$577+1>>0]<<8)|(HEAPU8[$577+2>>0]<<16)|(HEAPU8[$577+3>>0]<<24);
     $580 = ($579|0)==(17);
     if ($580) {
      $581 = ($14|0)==(1);
      if ($581) {
       $582 = HEAP8[$1>>0]|0;
       $583 = ($582<<24>>24)==(40);
       if ($583) {
        $584 = ((($17)) + 162|0);
        $585 = HEAPU8[$584>>0]|(HEAPU8[$584+1>>0]<<8);
        $586 = ($585<<16>>16)==(1);
        if ($586) {
         __begin_routine_parameter_list($0);
        }
       }
      }
     } else {
      label = 156;
     }
    }
    if ((label|0) == 156) {
     $587 = ((($17)) + 162|0);
     $588 = HEAPU8[$587>>0]|(HEAPU8[$587+1>>0]<<8);
     $589 = ($588<<16>>16)==(2);
     $590 = ($14|0)==(1);
     $or$cond44 = $590 & $589;
     if ($or$cond44) {
      $591 = HEAP8[$1>>0]|0;
      $592 = ($591<<24>>24)==(41);
      if ($592) {
       __end_routine_parameter_list($0);
      }
     }
    }
    $593 = HEAP8[$4>>0]|0;
    $594 = ($593<<24>>24)==(0);
    if (!($594)) {
     $595 = HEAPU8[$575>>0]|(HEAPU8[$575+1>>0]<<8)|(HEAPU8[$575+2>>0]<<16)|(HEAPU8[$575+3>>0]<<24);
     $596 = ((($595)) + 4|0);
     $597 = HEAPU8[$596>>0]|(HEAPU8[$596+1>>0]<<8)|(HEAPU8[$596+2>>0]<<16)|(HEAPU8[$596+3>>0]<<24);
     HEAP8[$2>>0]=$597&255;HEAP8[$2+1>>0]=($597>>8)&255;HEAP8[$2+2>>0]=($597>>16)&255;HEAP8[$2+3>>0]=$597>>24;
     $$0 = 8;
     break;
    }
    $598 = HEAPU8[$575>>0]|(HEAPU8[$575+1>>0]<<8)|(HEAPU8[$575+2>>0]<<16)|(HEAPU8[$575+3>>0]<<24);
    HEAP8[$2>>0]=$598&255;HEAP8[$2+1>>0]=($598>>8)&255;HEAP8[$2+2>>0]=($598>>16)&255;HEAP8[$2+3>>0]=$598>>24;
    $599 = ($598|0)==((86)|0);
    if (!($599)) {
     $$0 = 8;
     break;
    }
    __begin_routine_definition($0);
    $$0 = 8;
    break;
   }
   $600 = ($14|0)==(1);
   do {
    if ($600) {
     $601 = HEAP8[$1>>0]|0;
     $602 = ($601<<24>>24)==(10);
     if (!($602)) {
      $607 = (__is_separator_char($601)|0);
      $608 = ($607<<24>>24)==(0);
      if ($608) {
       break;
      } else {
       $$0 = 19;
       break L7;
      }
     }
     $603 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
     $604 = ($603|0)==(0|0);
     if (!($604)) {
      $605 = HEAPU8[$603>>0]|(HEAPU8[$603+1>>0]<<8)|(HEAPU8[$603+2>>0]<<16)|(HEAPU8[$603+3>>0]<<24);
      $606 = ($605|0)==(22);
      if ($606) {
       $$0 = 0;
       break L7;
      }
     }
     $$0 = 22;
     break L7;
    }
   } while(0);
   $609 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
   $610 = ($609|0)==(0|0);
   if (!($610)) {
    $611 = HEAPU8[$609>>0]|(HEAPU8[$609+1>>0]<<8)|(HEAPU8[$609+2>>0]<<16)|(HEAPU8[$609+3>>0]<<24);
    $612 = HEAPU8[$611>>0]|(HEAPU8[$611+1>>0]<<8)|(HEAPU8[$611+2>>0]<<16)|(HEAPU8[$611+3>>0]<<24);
    $613 = ($612|0)==(15);
    if (!($613)) {
     $614 = $611;
     HEAP8[$2>>0]=$614&255;HEAP8[$2+1>>0]=($614>>8)&255;HEAP8[$2+2>>0]=($614>>16)&255;HEAP8[$2+3>>0]=$614>>24;
     $$0 = 9;
     break;
    }
   }
   $615 = ((($17)) + 4|0);
   $616 = HEAP8[$615>>0]|0;
   $617 = ($616<<24>>24)==(58);
   $618 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
   $619 = ($618|0)==(0|0);
   do {
    if ($617) {
     if (!($619)) {
      $620 = HEAPU8[$618>>0]|(HEAPU8[$618+1>>0]<<8)|(HEAPU8[$618+2>>0]<<16)|(HEAPU8[$618+3>>0]<<24);
      $621 = ($620|0)==(22);
      if (!($621)) {
       label = 178;
       break;
      }
     }
     $622 = (__search_identifier_in_scope_chain($0,0,$1,0,0,0)|0);
     $623 = ($622|0)==(0|0);
     if ($623) {
      $$0 = 15;
      break L7;
     }
     $624 = HEAPU8[$622>>0]|(HEAPU8[$622+1>>0]<<8)|(HEAPU8[$622+2>>0]<<16)|(HEAPU8[$622+3>>0]<<24);
     HEAP8[$2>>0]=$624&255;HEAP8[$2+1>>0]=($624>>8)&255;HEAP8[$2+2>>0]=($624>>16)&255;HEAP8[$2+3>>0]=$624>>24;
     $$0 = 15;
     break L7;
    } else {
     if (!($619)) {
      label = 178;
     }
    }
   } while(0);
   if ((label|0) == 178) {
    $625 = HEAPU8[$618>>0]|(HEAPU8[$618+1>>0]<<8)|(HEAPU8[$618+2>>0]<<16)|(HEAPU8[$618+3>>0]<<24);
    $626 = ($625|0)==(8);
    if ($626) {
     $627 = ((($618)) + 4|0);
     $628 = HEAPU8[$627>>0]|(HEAPU8[$627+1>>0]<<8)|(HEAPU8[$627+2>>0]<<16)|(HEAPU8[$627+3>>0]<<24);
     $629 = ((($628)) + 4|0);
     $630 = HEAPU8[$629>>0]|(HEAPU8[$629+1>>0]<<8)|(HEAPU8[$629+2>>0]<<16)|(HEAPU8[$629+3>>0]<<24);
     $631 = ($630|0)==(82|0);
     if ($631) {
      $$0 = 15;
      break;
     }
     $632 = ((($618)) + 4|0);
     $633 = HEAPU8[$632>>0]|(HEAPU8[$632+1>>0]<<8)|(HEAPU8[$632+2>>0]<<16)|(HEAPU8[$632+3>>0]<<24);
     $634 = ((($633)) + 4|0);
     $635 = HEAPU8[$634>>0]|(HEAPU8[$634+1>>0]<<8)|(HEAPU8[$634+2>>0]<<16)|(HEAPU8[$634+3>>0]<<24);
     $636 = ($635|0)==(83|0);
     if ($636) {
      $$0 = 15;
      break;
     }
    }
   }
   $$0 = 9;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __get_scope_to_add_routine($0) {
 $0 = $0|0;
 var $$016 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),9476,(12445|0));
  // unreachable;
 }
 $2 = ((($0)) + 71|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ((($0)) + 75|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ((($3)) + 158|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8);
 $8 = ($7<<16>>16)==(0);
 $9 = ($5|0)==(0|0);
 L4: do {
  if ($8) {
   if ($9) {
    $$1 = 0;
   } else {
    $$016 = $5;
    while(1) {
     $11 = ((($$016)) + 4|0);
     $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
     $13 = ($12|0)==(1);
     if ($13) {
      $$1 = $$016;
      break L4;
     }
     $14 = HEAPU8[$$016>>0]|(HEAPU8[$$016+1>>0]<<8)|(HEAPU8[$$016+2>>0]<<16)|(HEAPU8[$$016+3>>0]<<24);
     $15 = ($14|0)==(0|0);
     if ($15) {
      $$1 = 0;
      break;
     } else {
      $$016 = $14;
     }
    }
   }
  } else {
   if ($9) {
    $$1 = 0;
   } else {
    $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
    $$1 = $10;
   }
  }
 } while(0);
 return ($$1|0);
}
function _mb_memtest($0) {
 $0 = $0|0;
 var $$02 = 0, $$091 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$02 = 0;$$091 = 0;
 while(1) {
  $1 = (($0) + ($$02)|0);
  $2 = HEAP8[$1>>0]|0;
  $3 = $2&255;
  $4 = (($$091) + ($3))|0;
  $5 = (($$02) + 1)|0;
  $exitcond = ($5|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$02 = $5;$$091 = $4;
  }
 }
 return ($4|0);
}
function __is_using_at_char($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0<<24>>24)==(64);
 $2 = $1&1;
 return ($2|0);
}
function __load_file($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$062 = 0, $$063 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==(0|0);
 if ($5) {
  ___assert_fail((1649|0),(1578|0),4915,(12640|0));
  // unreachable;
 }
 $6 = ((($0)) + 71|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__ls_find($8,$1,119,0)|0);
 $10 = ($9|0)==(0|0);
 if ($10) {
  $11 = (_fopen($1,12651)|0);
  $12 = ($11|0)==(0|0);
  if ($12) {
   $$063 = 0;
  } else {
   $13 = ($3<<24>>24)==(0);
   if (!($13)) {
    $14 = (_strlen($1)|0);
    $15 = (($14) + 1)|0;
    $16 = (_mb_strdup($1,$15)|0);
    $17 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    (__ls_pushback($17,$16)|0);
   }
   $18 = (_ftell($11)|0);
   (_fseek($11,0,2)|0);
   $19 = (_ftell($11)|0);
   (_fseek($11,$18,0)|0);
   $20 = ($2|0)!=(0|0);
   if ($20) {
    $21 = (_strlen($2)|0);
    $22 = (($21) + ($19))|0;
    $$0 = $21;$$062 = $22;
   } else {
    $$0 = 0;$$062 = $19;
   }
   $23 = (($$062) + 1)|0;
   $24 = (_mb_malloc($23)|0);
   $25 = ($24|0)==(0|0);
   if ($25) {
    ___assert_fail((10291|0),(1578|0),4939,(12640|0));
    // unreachable;
   }
   if ($20) {
    _memcpy(($24|0),($2|0),($$0|0))|0;
   }
   $26 = (($24) + ($$0)|0);
   (_fread($26,1,$$062,$11)|0);
   HEAP32[$4>>2] = $26;
   $27 = (_mb_uu_getbom($4)|0);
   $28 = ($27|0)==(0);
   $29 = (($$062) - ($27))|0;
   if (!($28)) {
    $30 = (($24) + ($29)|0);
    $31 = (($29) - ($$0))|0;
    $32 = (($26) + ($27)|0);
    _memmove(($26|0),($32|0),($31|0))|0;
    HEAP8[$30>>0] = 0;
   }
   (_fclose($11)|0);
   $33 = (($24) + ($$062)|0);
   HEAP8[$33>>0] = 0;
   $$063 = $24;
  }
 } else {
  $$063 = $1;
 }
 STACKTOP = sp;return ($$063|0);
}
function __prev_import($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)==(0|0);
 if ($5) {
  ___assert_fail((1649|0),(1578|0),5986,(12627|0));
  // unreachable;
 }
 $6 = ((($0)) + 71|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $9 = ($2|0)==(0|0);
  if (!($9)) {
   $10 = ((($7)) + 164|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   HEAP32[$2>>2] = $11;
  }
  $12 = ($3|0)==(0|0);
  if (!($12)) {
   $13 = ((($7)) + 168|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
   HEAP16[$3>>1] = $14;
  }
  $15 = ($4|0)==(0|0);
  $$pre = ((($7)) + 170|0);
  if (!($15)) {
   $16 = HEAPU8[$$pre>>0]|(HEAPU8[$$pre+1>>0]<<8);
   HEAP16[$4>>1] = $16;
  }
  $17 = ((($7)) + 164|0);
  HEAP8[$17>>0]=0&255;HEAP8[$17+1>>0]=(0>>8)&255;HEAP8[$17+2>>0]=(0>>16)&255;HEAP8[$17+3>>0]=0>>24;
  $18 = ((($7)) + 168|0);
  HEAP8[$18>>0]=1&255;HEAP8[$18+1>>0]=1>>8;
  HEAP8[$$pre>>0]=0&255;HEAP8[$$pre+1>>0]=0>>8;
 }
 $19 = ((($0)) + 67|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 HEAP8[$19>>0]=$1&255;HEAP8[$19+1>>0]=($1>>8)&255;HEAP8[$19+2>>0]=($1>>16)&255;HEAP8[$19+3>>0]=$1>>24;
 $21 = (__create_object()|0);
 HEAP8[$21>>0]=22&255;HEAP8[$21+1>>0]=(22>>8)&255;HEAP8[$21+2>>0]=(22>>16)&255;HEAP8[$21+3>>0]=22>>24;
 $22 = ((($21)) + 8|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23 & -2;
 HEAP8[$22>>0] = $24;
 $25 = ((($0)) + 17|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 (__ls_pushback($26,$21)|0);
 $27 = (_mb_malloc(4)|0);
 $28 = ($1|0)==(0|0);
 if ($28) {
  $32 = 0;
 } else {
  $29 = (_strlen($1)|0);
  $30 = (($29) + 1)|0;
  $31 = (_mb_strdup($1,$30)|0);
  $32 = $31;
 }
 HEAP8[$27>>0]=$32&255;HEAP8[$27+1>>0]=($32>>8)&255;HEAP8[$27+2>>0]=($32>>16)&255;HEAP8[$27+3>>0]=$32>>24;
 $33 = (__create_object()|0);
 HEAP8[$33>>0]=20&255;HEAP8[$33+1>>0]=(20>>8)&255;HEAP8[$33+2>>0]=(20>>16)&255;HEAP8[$33+3>>0]=20>>24;
 $34 = ((($33)) + 8|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = $35 & -2;
 HEAP8[$34>>0] = $36;
 $37 = ((($33)) + 4|0);
 HEAP8[$37>>0]=$27&255;HEAP8[$37+1>>0]=($27>>8)&255;HEAP8[$37+2>>0]=($27>>16)&255;HEAP8[$37+3>>0]=$27>>24;
 $38 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 (__ls_pushback($38,$33)|0);
 return ($20|0);
}
function __post_import($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)==(0|0);
 if ($5) {
  ___assert_fail((1649|0),(1578|0),6034,(12614|0));
  // unreachable;
 }
 $6 = ((($0)) + 71|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $9 = ($2|0)==(0|0);
  if (!($9)) {
   $10 = HEAP32[$2>>2]|0;
   $11 = ((($7)) + 164|0);
   HEAP8[$11>>0]=$10&255;HEAP8[$11+1>>0]=($10>>8)&255;HEAP8[$11+2>>0]=($10>>16)&255;HEAP8[$11+3>>0]=$10>>24;
  }
  $12 = ($3|0)==(0|0);
  if (!($12)) {
   $13 = HEAP16[$3>>1]|0;
   $14 = ((($7)) + 168|0);
   HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=$13>>8;
  }
  $15 = ($4|0)==(0|0);
  if (!($15)) {
   $16 = HEAP16[$4>>1]|0;
   $17 = ((($7)) + 170|0);
   HEAP8[$17>>0]=$16&255;HEAP8[$17+1>>0]=$16>>8;
  }
 }
 $18 = ((($0)) + 67|0);
 HEAP8[$18>>0]=$1&255;HEAP8[$18+1>>0]=($1>>8)&255;HEAP8[$18+2>>0]=($1>>16)&255;HEAP8[$18+3>>0]=$1>>24;
 $19 = (_mb_malloc(4)|0);
 $20 = ($1|0)==(0|0);
 if ($20) {
  $24 = 0;
 } else {
  $21 = (_strlen($1)|0);
  $22 = (($21) + 1)|0;
  $23 = (_mb_strdup($1,$22)|0);
  $24 = $23;
 }
 HEAP8[$19>>0]=$24&255;HEAP8[$19+1>>0]=($24>>8)&255;HEAP8[$19+2>>0]=($24>>16)&255;HEAP8[$19+3>>0]=$24>>24;
 $25 = (__create_object()|0);
 HEAP8[$25>>0]=21&255;HEAP8[$25+1>>0]=(21>>8)&255;HEAP8[$25+2>>0]=(21>>16)&255;HEAP8[$25+3>>0]=21>>24;
 $26 = ((($25)) + 8|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = $27 & -2;
 HEAP8[$26>>0] = $28;
 $29 = ((($25)) + 4|0);
 HEAP8[$29>>0]=$19&255;HEAP8[$29+1>>0]=($19>>8)&255;HEAP8[$29+2>>0]=($19>>16)&255;HEAP8[$29+3>>0]=$19>>24;
 $30 = ((($0)) + 17|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 (__ls_pushback($31,$25)|0);
 return;
}
function __begin_class($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8268,(12601|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 71|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($3)) + 158|0);
  HEAP8[$4>>0]=1&255;HEAP8[$4+1>>0]=1>>8;
  return;
 }
}
function __begin_routine($0) {
 $0 = $0|0;
 var $$0 = 0, $$sink = 0, $$sink4 = 0, $$sink42 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8742,(12586|0));
  // unreachable;
 }
 $2 = ((($0)) + 71|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = ((($3)) + 160|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8);
 $6 = (($5) + 1)<<16>>16;
 HEAP8[$4>>0]=$6&255;HEAP8[$4+1>>0]=$6>>8;
 $7 = ($5<<16>>16)==(-1);
 if ($7) {
  HEAP8[$4>>0]=-1&255;HEAP8[$4+1>>0]=-1>>8;
  $8 = ((($0)) + 139|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  (__set_current_error($0,51,$9)|0);
  $10 = ((($0)) + 159|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)==(0|0);
  if ($12) {
   $$0 = 3;
  } else {
   $13 = ((($0)) + 134|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14 & 1;
   $16 = ($15<<24>>24)==(0);
   if ($16) {
    $17 = $14 | 1;
    HEAP8[$13>>0] = $17;
    $18 = ((($0)) + 135|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = (_mb_get_error_desc($19)|0);
    $21 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    $22 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
    $23 = ($22|0)==(0|0);
    if ($23) {
     $24 = ((($0)) + 143|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($0)) + 147|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
     $48 = $27;$49 = $25;
     label = 10;
    } else {
     $28 = ((($0)) + 79|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = ($29|0)==(0);
     $31 = ((($0)) + 143|0);
     $32 = ((($22)) + 164|0);
     $$sink = $30 ? $32 : $31;
     $33 = HEAPU8[$$sink>>0]|(HEAPU8[$$sink+1>>0]<<8)|(HEAPU8[$$sink+2>>0]<<16)|(HEAPU8[$$sink+3>>0]<<24);
     $34 = ((($0)) + 79|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ($35|0)==(0);
     $37 = ((($0)) + 147|0);
     $38 = ((($22)) + 168|0);
     $$sink42 = $36 ? $38 : $37;
     $39 = HEAPU8[$$sink42>>0]|(HEAPU8[$$sink42+1>>0]<<8);
     $40 = ((($0)) + 79|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ($41|0)==(0);
     if ($42) {
      $43 = ((($22)) + 170|0);
      $$sink4 = $43;$46 = $33;$47 = $39;
     } else {
      $48 = $39;$49 = $33;
      label = 10;
     }
    }
    if ((label|0) == 10) {
     $44 = ((($0)) + 149|0);
     $$sink4 = $44;$46 = $49;$47 = $48;
    }
    $45 = HEAPU8[$$sink4>>0]|(HEAPU8[$$sink4+1>>0]<<8);
    FUNCTION_TABLE_viiiiiiii[$11 & 127]($0,$19,$20,$21,$46,$47,$45,3);
    $$0 = 3;
   } else {
    $$0 = 3;
   }
  }
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __begin_routine_parameter_list($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8786,(12556|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 71|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($3)) + 162|0);
  HEAP8[$4>>0]=2&255;HEAP8[$4+1>>0]=2>>8;
  return;
 }
}
function __end_routine_parameter_list($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8796,(12528|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 71|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($3)) + 162|0);
  HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=0>>8;
  return;
 }
}
function __begin_routine_definition($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  ___assert_fail((1649|0),(1578|0),8776,(12502|0));
  // unreachable;
 } else {
  $2 = ((($0)) + 71|0);
  $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
  $4 = ((($3)) + 162|0);
  HEAP8[$4>>0]=1&255;HEAP8[$4+1>>0]=1>>8;
  return;
 }
}
function _mb_run($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0151 = 0, $$0152 = 0, $$in = 0, $$in202 = 0, $$in203 = 0, $$in204 = 0, $$pr = 0, $$pr167 = 0, $$pr175 = 0, $$pr183 = 0, $$pre = 0, $$sink14 = 0, $$sink20 = 0, $$sink4 = 0, $$sink9 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = ($0|0)==(0|0);
 if ($3) {
  $$0151 = 3;
 } else {
  $4 = ((($0)) + 79|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = (($5) + 1)|0;
  HEAP8[$4>>0]=$6&255;HEAP8[$4+1>>0]=($6>>8)&255;HEAP8[$4+2>>0]=($6>>16)&255;HEAP8[$4+3>>0]=$6>>24;
  $7 = ((($0)) + 71|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)==(0|0);
  do {
   if ($9) {
    label = 25;
   } else {
    $10 = ((($8)) + 160|0);
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8);
    $12 = ($11<<16>>16)==(0);
    if (!($12)) {
     HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=0>>8;
     $13 = ((($0)) + 67|0);
     $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
     (__set_current_error($0,25,$14)|0);
     $15 = ((($0)) + 159|0);
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ($16|0)==(0|0);
     if (!($17)) {
      $18 = ((($0)) + 134|0);
      $19 = HEAP8[$18>>0]|0;
      $20 = $19 & 1;
      $21 = ($20<<24>>24)==(0);
      if ($21) {
       $22 = $19 | 1;
       HEAP8[$18>>0] = $22;
       $23 = ((($0)) + 135|0);
       $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
       $25 = (_mb_get_error_desc($24)|0);
       $26 = ((($0)) + 139|0);
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       $28 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
       $29 = ($28|0)==(0|0);
       if ($29) {
        label = 10;
       } else {
        $30 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
        $31 = ($30|0)==(0);
        if ($31) {
         $32 = ((($28)) + 164|0);
         $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $$pr = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
         $34 = ($$pr|0)==(0);
         if ($34) {
          $35 = ((($28)) + 168|0);
          $36 = ((($28)) + 170|0);
          $$in = $35;$$sink4 = $36;$43 = $33;
         } else {
          $181 = $33;
          label = 11;
         }
        } else {
         label = 10;
        }
       }
       if ((label|0) == 10) {
        $37 = ((($0)) + 143|0);
        $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
        $181 = $38;
        label = 11;
       }
       if ((label|0) == 11) {
        $39 = ((($0)) + 147|0);
        $40 = ((($0)) + 149|0);
        $$in = $39;$$sink4 = $40;$43 = $181;
       }
       $41 = HEAPU8[$$in>>0]|(HEAPU8[$$in+1>>0]<<8);
       $42 = HEAPU8[$$sink4>>0]|(HEAPU8[$$sink4+1>>0]<<8);
       FUNCTION_TABLE_viiiiiiii[$16 & 127]($0,$24,$25,$27,$43,$41,$42,3);
      }
     }
     __tidy_scope_chain($0);
     $$0152 = 3;
     break;
    }
    $44 = ((($8)) + 158|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8);
    $46 = ($45<<16>>16)==(0);
    if ($46) {
     label = 25;
    } else {
     HEAP8[$44>>0]=0&255;HEAP8[$44+1>>0]=0>>8;
     $47 = ((($0)) + 67|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
     (__set_current_error($0,25,$48)|0);
     $49 = ((($0)) + 159|0);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     $51 = ($50|0)==(0|0);
     if (!($51)) {
      $52 = ((($0)) + 134|0);
      $53 = HEAP8[$52>>0]|0;
      $54 = $53 & 1;
      $55 = ($54<<24>>24)==(0);
      if ($55) {
       $56 = $53 | 1;
       HEAP8[$52>>0] = $56;
       $57 = ((($0)) + 135|0);
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = (_mb_get_error_desc($58)|0);
       $60 = ((($0)) + 139|0);
       $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
       $62 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
       $63 = ($62|0)==(0|0);
       if ($63) {
        label = 21;
       } else {
        $64 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
        $65 = ($64|0)==(0);
        if ($65) {
         $66 = ((($62)) + 164|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
         $$pr167 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
         $68 = ($$pr167|0)==(0);
         if ($68) {
          $69 = ((($62)) + 168|0);
          $70 = ((($62)) + 170|0);
          $$in202 = $69;$$sink9 = $70;$77 = $67;
         } else {
          $182 = $67;
          label = 22;
         }
        } else {
         label = 21;
        }
       }
       if ((label|0) == 21) {
        $71 = ((($0)) + 143|0);
        $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
        $182 = $72;
        label = 22;
       }
       if ((label|0) == 22) {
        $73 = ((($0)) + 147|0);
        $74 = ((($0)) + 149|0);
        $$in202 = $73;$$sink9 = $74;$77 = $182;
       }
       $75 = HEAPU8[$$in202>>0]|(HEAPU8[$$in202+1>>0]<<8);
       $76 = HEAPU8[$$sink9>>0]|(HEAPU8[$$sink9+1>>0]<<8);
       FUNCTION_TABLE_viiiiiiii[$50 & 127]($0,$58,$59,$61,$77,$75,$76,3);
      }
     }
     __tidy_scope_chain($0);
     $$0152 = 3;
    }
   }
  } while(0);
  L35: do {
   if ((label|0) == 25) {
    $78 = ($1<<24>>24)==(0);
    if (!($78)) {
     __destroy_parsing_context($7);
    }
    $79 = ((($0)) + 134|0);
    $80 = HEAP8[$79>>0]|0;
    $81 = $80 & -2;
    HEAP8[$79>>0] = $81;
    $82 = ((($0)) + 106|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = ($83|0)==(0|0);
    if ($84) {
     $87 = ((($0)) + 67|0);
     HEAP8[$87>>0]=0&255;HEAP8[$87+1>>0]=(0>>8)&255;HEAP8[$87+2>>0]=(0>>16)&255;HEAP8[$87+3>>0]=0>>24;
     $88 = ((($0)) + 93|0);
     HEAP8[$88>>0]=0&255;HEAP8[$88+1>>0]=(0>>8)&255;HEAP8[$88+2>>0]=(0>>16)&255;HEAP8[$88+3>>0]=0>>24;
     $89 = ((($0)) + 97|0);
     $90 = HEAP8[$89>>0]|0;
     $91 = $90 & -2;
     HEAP8[$89>>0] = $91;
     $92 = ((($0)) + 98|0);
     HEAP8[$92>>0]=0&255;HEAP8[$92+1>>0]=(0>>8)&255;HEAP8[$92+2>>0]=(0>>16)&255;HEAP8[$92+3>>0]=0>>24;
     $93 = ((($0)) + 130|0);
     $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
     __ls_clear($94);
     $95 = ((($0)) + 114|0);
     $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
     $97 = ($96|0)==(0);
     if (!($97)) {
      ___assert_fail((12680|0),(1578|0),14338,(12702|0));
      // unreachable;
     }
     $98 = ((($0)) + 75|0);
     $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
     $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
     $101 = ($100|0)==(0|0);
     if (!($101)) {
      $103 = $100;
      while(1) {
       $102 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
       $104 = ($102|0)==(0|0);
       if ($104) {
        break;
       } else {
        $103 = $102;
       }
      }
      HEAP8[$98>>0]=$103&255;HEAP8[$98+1>>0]=($103>>8)&255;HEAP8[$98+2>>0]=($103>>16)&255;HEAP8[$98+3>>0]=$103>>24;
     }
     $105 = ((($0)) + 17|0);
     $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
     $107 = ((($106)) + 8|0);
     $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
     HEAP32[$2>>2] = $108;
     $109 = ($108|0)==(0|0);
     if ($109) {
      __set_error_pos($0,0,0,0);
      $110 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
      (__set_current_error($0,8,$110)|0);
      $111 = ((($0)) + 159|0);
      $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
      $113 = ($112|0)==(0|0);
      if ($113) {
       $$0152 = 3;
       break;
      }
      $114 = HEAP8[$79>>0]|0;
      $115 = $114 & 1;
      $116 = ($115<<24>>24)==(0);
      if (!($116)) {
       $$0152 = 3;
       break;
      }
      $117 = $114 | 1;
      HEAP8[$79>>0] = $117;
      $118 = ((($0)) + 135|0);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = (_mb_get_error_desc($119)|0);
      $121 = ((($0)) + 139|0);
      $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
      $123 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $124 = ($123|0)==(0|0);
      if ($124) {
       label = 41;
      } else {
       $125 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
       $126 = ($125|0)==(0);
       if ($126) {
        $127 = ((($123)) + 164|0);
        $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
        $$pr175 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
        $129 = ($$pr175|0)==(0);
        if ($129) {
         $130 = ((($123)) + 168|0);
         $131 = ((($123)) + 170|0);
         $$in204 = $130;$$sink14 = $131;$138 = $128;
        } else {
         $183 = $128;
         label = 42;
        }
       } else {
        label = 41;
       }
      }
      if ((label|0) == 41) {
       $132 = ((($0)) + 143|0);
       $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
       $183 = $133;
       label = 42;
      }
      if ((label|0) == 42) {
       $134 = ((($0)) + 147|0);
       $135 = ((($0)) + 149|0);
       $$in204 = $134;$$sink14 = $135;$138 = $183;
      }
      $136 = HEAPU8[$$in204>>0]|(HEAPU8[$$in204+1>>0]<<8);
      $137 = HEAPU8[$$sink14>>0]|(HEAPU8[$$sink14+1>>0]<<8);
      FUNCTION_TABLE_viiiiiiii[$112 & 127]($0,$119,$120,$122,$138,$136,$137,3);
      $$0152 = 3;
      break;
     }
    } else {
     $85 = ((($83)) + 8|0);
     $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
     HEAP32[$2>>2] = $86;
     HEAP8[$82>>0]=0&255;HEAP8[$82+1>>0]=(0>>8)&255;HEAP8[$82+2>>0]=(0>>16)&255;HEAP8[$82+3>>0]=0>>24;
    }
    L63: while(1) {
     $139 = (__execute_statement($0,$2,1)|0);
     switch ($139|0) {
     case 5:  {
      $$0152 = 5;
      break L35;
      break;
     }
     case 0: case 103:  {
      break;
     }
     default: {
      break L63;
     }
     }
     $171 = HEAP32[$2>>2]|0;
     $172 = ($171|0)==(0|0);
     if ($172) {
      $$0152 = $139;
      break L35;
     }
    }
    $140 = ($139|0)>(200);
    $141 = ((($0)) + 135|0);
    if ($140) {
     HEAP8[$141>>0]=66&255;HEAP8[$141+1>>0]=(66>>8)&255;HEAP8[$141+2>>0]=(66>>16)&255;HEAP8[$141+3>>0]=66>>24;
     $144 = 66;
    } else {
     $$pre = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $144 = $$pre;
    }
    $142 = ((($0)) + 139|0);
    $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
    (__set_current_error($0,$144,$143)|0);
    $145 = ((($0)) + 159|0);
    $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
    $147 = ($146|0)==(0|0);
    if ($147) {
     $$0152 = $139;
    } else {
     $148 = HEAP8[$79>>0]|0;
     $149 = $148 & 1;
     $150 = ($149<<24>>24)==(0);
     if ($150) {
      $151 = $148 | 1;
      HEAP8[$79>>0] = $151;
      $152 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
      $153 = (_mb_get_error_desc($152)|0);
      $154 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
      $155 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $156 = ($155|0)==(0|0);
      if ($156) {
       label = 54;
      } else {
       $157 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
       $158 = ($157|0)==(0);
       if ($158) {
        $159 = ((($155)) + 164|0);
        $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
        $$pr183 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
        $161 = ($$pr183|0)==(0);
        if ($161) {
         $162 = ((($155)) + 168|0);
         $163 = ((($155)) + 170|0);
         $$in203 = $162;$$sink20 = $163;$170 = $160;
        } else {
         $184 = $160;
         label = 55;
        }
       } else {
        label = 54;
       }
      }
      if ((label|0) == 54) {
       $164 = ((($0)) + 143|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $184 = $165;
       label = 55;
      }
      if ((label|0) == 55) {
       $166 = ((($0)) + 147|0);
       $167 = ((($0)) + 149|0);
       $$in203 = $166;$$sink20 = $167;$170 = $184;
      }
      $168 = HEAPU8[$$in203>>0]|(HEAPU8[$$in203+1>>0]<<8);
      $169 = HEAPU8[$$sink20>>0]|(HEAPU8[$$sink20+1>>0]<<8);
      FUNCTION_TABLE_viiiiiiii[$146 & 127]($0,$152,$153,$154,$170,$168,$169,$139);
      $$0152 = $139;
     } else {
      $$0152 = $139;
     }
    }
   }
  } while(0);
  $173 = ((($0)) + 106|0);
  $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
  $175 = ($174|0)==(0|0);
  if ($175) {
   $176 = ((($0)) + 67|0);
   HEAP8[$176>>0]=0&255;HEAP8[$176+1>>0]=(0>>8)&255;HEAP8[$176+2>>0]=(0>>16)&255;HEAP8[$176+3>>0]=0>>24;
  }
  $177 = ($1<<24>>24)==(0);
  if (!($177)) {
   __destroy_parsing_context($7);
  }
  __destroy_edge_objects($0);
  $178 = ((($0)) + 83|0);
  $179 = HEAP8[$178>>0]|0;
  $180 = $179 | 1;
  HEAP8[$178>>0] = $180;
  $$0151 = $$0152;
 }
 STACKTOP = sp;return ($$0151|0);
}
function _mb_debug_get_stack_trace($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$032 = 0, $$032$in = 0, $$032$in38 = 0, $$03239 = 0, $$03242 = 0, $$033 = 0, $$034 = 0, $$041 = 0, $$1$ph = 0, $$135$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond340 = 0, $or$cond36 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$033 = 3;
 } else {
  $5 = ($2|0)!=(0|0);
  $6 = ($3|0)!=(0);
  $or$cond = $5 & $6;
  L3: do {
   if ($or$cond) {
    $7 = ((($0)) + 126|0);
    $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $9 = (__ls_count($8)|0);
    $10 = ($9>>>0)>($3>>>0);
    $11 = (($3) + -1)|0;
    if ($10) {
     $12 = (($2) + ($11<<2)|0);
     HEAP32[$12>>2] = 9031;
     $$034 = $11;
    } else {
     $$034 = $3;
    }
    $13 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
    $$032$in38 = ((($13)) + 4|0);
    $$03239 = HEAPU8[$$032$in38>>0]|(HEAPU8[$$032$in38+1>>0]<<8)|(HEAPU8[$$032$in38+2>>0]<<16)|(HEAPU8[$$032$in38+3>>0]<<24);
    $14 = ($$03239|0)!=($13|0);
    $15 = ($$03239|0)!=(0|0);
    $or$cond340 = $15 & $14;
    if ($or$cond340) {
     $$03242 = $$03239;$$041 = 0;
     while(1) {
      $16 = HEAPU8[$$03242>>0]|(HEAPU8[$$03242+1>>0]<<8)|(HEAPU8[$$03242+2>>0]<<16)|(HEAPU8[$$03242+3>>0]<<24);
      $17 = ($16|0)!=(0|0);
      $18 = ($$041>>>0)<($$034>>>0);
      $or$cond36 = $18 & $17;
      if (!($or$cond36)) {
       $$1$ph = $$041;$$135$ph = $$034;
       break L3;
      }
      $22 = (($$041) + 1)|0;
      $23 = (($2) + ($$041<<2)|0);
      HEAP32[$23>>2] = $16;
      $$032$in = ((($$03242)) + 4|0);
      $$032 = HEAPU8[$$032$in>>0]|(HEAPU8[$$032$in+1>>0]<<8)|(HEAPU8[$$032$in+2>>0]<<16)|(HEAPU8[$$032$in+3>>0]<<24);
      $24 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
      $25 = ($$032|0)!=($24|0);
      $26 = ($$032|0)!=(0|0);
      $or$cond3 = $26 & $25;
      if ($or$cond3) {
       $$03242 = $$032;$$041 = $22;
      } else {
       $$1$ph = $22;$$135$ph = $$034;
       break;
      }
     }
    } else {
     $$1$ph = 0;$$135$ph = $$034;
    }
   } else {
    $$1$ph = 0;$$135$ph = $3;
   }
  } while(0);
  $19 = ($$135$ph>>>0)>($$1$ph>>>0);
  if ($19) {
   $scevgep = (($2) + ($$1$ph<<2)|0);
   $20 = (($$135$ph) - ($$1$ph))|0;
   $21 = $20 << 2;
   _memset(($scevgep|0),0,($21|0))|0;
   $$033 = 0;
  } else {
   $$033 = 0;
  }
 }
 return ($$033|0);
}
function _mb_debug_set_stepped_handler($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 3;
 } else {
  $3 = ((($0)) + 155|0);
  HEAP8[$3>>0]=$1&255;HEAP8[$3+1>>0]=($1>>8)&255;HEAP8[$3+2>>0]=($1>>16)&255;HEAP8[$3+3>>0]=$1>>24;
  $$0 = 0;
 }
 return ($$0|0);
}
function _mb_raise_error($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$26 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 do {
  if ($4) {
   $$0 = 3;
  } else {
   $5 = ($1|0)==(0|0);
   if (!($5)) {
    $6 = HEAP32[$1>>2]|0;
    $7 = ($6|0)==(0|0);
    if (!($7)) {
     $8 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
     $9 = ($8|0)==(0|0);
     if (!($9)) {
      $10 = ((($0)) + 67|0);
      $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
      $12 = (__set_current_error($0,$2,$11)|0);
      $13 = ($12<<24>>24)==(0);
      if ($13) {
       $$0 = 3;
       break;
      }
      $14 = HEAP32[$1>>2]|0;
      $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
      $16 = ((($15)) + 9|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      $18 = ((($15)) + 13|0);
      $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
      $20 = ((($15)) + 15|0);
      $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
      __set_error_pos($0,$17,$19,$21);
      $22 = ($3|0)==(2);
      $$ = $22 ? 3 : $3;
      $$0 = $$;
      break;
     }
    }
   }
   $23 = ((($0)) + 67|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = (__set_current_error($0,$2,$24)|0);
   $26 = ($25<<24>>24)==(0);
   if ($26) {
    $$0 = 3;
   } else {
    __set_error_pos($0,0,0,0);
    $27 = ($3|0)==(2);
    $$26 = $27 ? 3 : $3;
    return ($$26|0);
   }
  }
 } while(0);
 return ($$0|0);
}
function _mb_set_error_handler($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 3;
 } else {
  $3 = ((($0)) + 159|0);
  HEAP8[$3>>0]=$1&255;HEAP8[$3+1>>0]=($1>>8)&255;HEAP8[$3+2>>0]=($1>>16)&255;HEAP8[$3+3>>0]=$1>>24;
  $$0 = 0;
 }
 return ($$0|0);
}
function _mb_set_inputer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 3;
 } else {
  $3 = ((($0)) + 167|0);
  HEAP8[$3>>0]=$1&255;HEAP8[$3+1>>0]=($1>>8)&255;HEAP8[$3+2>>0]=($1>>16)&255;HEAP8[$3+3>>0]=$1>>24;
  $$0 = 0;
 }
 return ($$0|0);
}
function _mb_set_import_handler($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 3;
 } else {
  $3 = ((($0)) + 171|0);
  HEAP8[$3>>0]=$1&255;HEAP8[$3+1>>0]=($1>>8)&255;HEAP8[$3+2>>0]=($1>>16)&255;HEAP8[$3+3>>0]=$1>>24;
  $$0 = 0;
 }
 return ($$0|0);
}
function _mb_set_memory_manager($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[3906] = $0;
 HEAP32[3908] = $1;
 return 0;
}
function _mb_gc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 3;
 } else {
  $3 = HEAP32[3907]|0;
  __gc_collect_garbage($0,1);
  $4 = HEAP32[3907]|0;
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$0 = 0;
  } else {
   $6 = (($4) - ($3))|0;
   HEAP32[$1>>2] = $6;
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0172$i = 0, $$$0173$i = 0, $$$4236$i = 0, $$$4329$i = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$0172$lcssa$i = 0, $$01724$i = 0, $$0173$lcssa$i = 0, $$01733$i = 0, $$0192 = 0, $$0194 = 0, $$0201$i$i = 0, $$0202$i$i = 0, $$0206$i$i = 0, $$0207$i$i = 0;
 var $$024367$i = 0, $$0260$i$i = 0, $$0261$i$i = 0, $$0262$i$i = 0, $$0268$i$i = 0, $$0269$i$i = 0, $$0320$i = 0, $$0322$i = 0, $$0323$i = 0, $$0325$i = 0, $$0331$i = 0, $$0336$i = 0, $$0337$$i = 0, $$0337$i = 0, $$0339$i = 0, $$0340$i = 0, $$0345$i = 0, $$1176$i = 0, $$1178$i = 0, $$124466$i = 0;
 var $$1264$i$i = 0, $$1266$i$i = 0, $$1321$i = 0, $$1326$i = 0, $$1341$i = 0, $$1347$i = 0, $$1351$i = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2333$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i199 = 0, $$3328$i = 0, $$3349$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$4236$i = 0, $$4329$lcssa$i = 0;
 var $$43298$i = 0, $$4335$$4$i = 0, $$4335$ph$i = 0, $$43357$i = 0, $$49$i = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i17$i = 0, $$pre$i195 = 0, $$pre$i207 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i18$iZ2D = 0, $$pre$phi$i208Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink1$i = 0, $$sink1$i$i = 0;
 var $$sink12$i = 0, $$sink2$i = 0, $$sink2$i202 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0;
 var $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0;
 var $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0;
 var $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0;
 var $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0;
 var $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0;
 var $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0;
 var $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0;
 var $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0;
 var $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0;
 var $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0;
 var $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0;
 var $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0;
 var $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0;
 var $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i206 = 0, $not$$i = 0, $not$3$i = 0;
 var $or$cond$i = 0, $or$cond$i200 = 0, $or$cond1$i = 0, $or$cond1$i198 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond49$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[3909]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (15676 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($16|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[3909] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(15644)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (15676 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69|0)==($65|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[3909] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($67) + ($75)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(15656)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (15676 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[3909] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(15644)>>2] = $76;
     HEAP32[(15656)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(15640)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (15940 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $129 = ((($124)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($130|0)==(0|0);
     $$sink12$i = $131&1;
     $132 = (((($124)) + 16|0) + ($$sink12$i<<2)|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($133|0)==(0|0);
     if ($134) {
      $$0172$lcssa$i = $124;$$0173$lcssa$i = $128;
     } else {
      $$01724$i = $124;$$01733$i = $128;$136 = $133;
      while(1) {
       $135 = ((($136)) + 4|0);
       $137 = HEAP32[$135>>2]|0;
       $138 = $137 & -8;
       $139 = (($138) - ($6))|0;
       $140 = ($139>>>0)<($$01733$i>>>0);
       $$$0173$i = $140 ? $139 : $$01733$i;
       $$$0172$i = $140 ? $136 : $$01724$i;
       $141 = ((($136)) + 16|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = ($142|0)==(0|0);
       $$sink1$i = $143&1;
       $144 = (((($136)) + 16|0) + ($$sink1$i<<2)|0);
       $145 = HEAP32[$144>>2]|0;
       $146 = ($145|0)==(0|0);
       if ($146) {
        $$0172$lcssa$i = $$$0172$i;$$0173$lcssa$i = $$$0173$i;
        break;
       } else {
        $$01724$i = $$$0172$i;$$01733$i = $$$0173$i;$136 = $145;
       }
      }
     }
     $147 = (($$0172$lcssa$i) + ($6)|0);
     $148 = ($147>>>0)>($$0172$lcssa$i>>>0);
     if ($148) {
      $149 = ((($$0172$lcssa$i)) + 24|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ((($$0172$lcssa$i)) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($152|0)==($$0172$lcssa$i|0);
      do {
       if ($153) {
        $158 = ((($$0172$lcssa$i)) + 20|0);
        $159 = HEAP32[$158>>2]|0;
        $160 = ($159|0)==(0|0);
        if ($160) {
         $161 = ((($$0172$lcssa$i)) + 16|0);
         $162 = HEAP32[$161>>2]|0;
         $163 = ($162|0)==(0|0);
         if ($163) {
          $$3$i = 0;
          break;
         } else {
          $$1176$i = $162;$$1178$i = $161;
         }
        } else {
         $$1176$i = $159;$$1178$i = $158;
        }
        while(1) {
         $164 = ((($$1176$i)) + 20|0);
         $165 = HEAP32[$164>>2]|0;
         $166 = ($165|0)==(0|0);
         if (!($166)) {
          $$1176$i = $165;$$1178$i = $164;
          continue;
         }
         $167 = ((($$1176$i)) + 16|0);
         $168 = HEAP32[$167>>2]|0;
         $169 = ($168|0)==(0|0);
         if ($169) {
          break;
         } else {
          $$1176$i = $168;$$1178$i = $167;
         }
        }
        HEAP32[$$1178$i>>2] = 0;
        $$3$i = $$1176$i;
       } else {
        $154 = ((($$0172$lcssa$i)) + 8|0);
        $155 = HEAP32[$154>>2]|0;
        $156 = ((($155)) + 12|0);
        HEAP32[$156>>2] = $152;
        $157 = ((($152)) + 8|0);
        HEAP32[$157>>2] = $155;
        $$3$i = $152;
       }
      } while(0);
      $170 = ($150|0)==(0|0);
      do {
       if (!($170)) {
        $171 = ((($$0172$lcssa$i)) + 28|0);
        $172 = HEAP32[$171>>2]|0;
        $173 = (15940 + ($172<<2)|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($$0172$lcssa$i|0)==($174|0);
        if ($175) {
         HEAP32[$173>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $176 = 1 << $172;
          $177 = $176 ^ -1;
          $178 = $98 & $177;
          HEAP32[(15640)>>2] = $178;
          break;
         }
        } else {
         $179 = ((($150)) + 16|0);
         $180 = HEAP32[$179>>2]|0;
         $181 = ($180|0)!=($$0172$lcssa$i|0);
         $$sink2$i = $181&1;
         $182 = (((($150)) + 16|0) + ($$sink2$i<<2)|0);
         HEAP32[$182>>2] = $$3$i;
         $183 = ($$3$i|0)==(0|0);
         if ($183) {
          break;
         }
        }
        $184 = ((($$3$i)) + 24|0);
        HEAP32[$184>>2] = $150;
        $185 = ((($$0172$lcssa$i)) + 16|0);
        $186 = HEAP32[$185>>2]|0;
        $187 = ($186|0)==(0|0);
        if (!($187)) {
         $188 = ((($$3$i)) + 16|0);
         HEAP32[$188>>2] = $186;
         $189 = ((($186)) + 24|0);
         HEAP32[$189>>2] = $$3$i;
        }
        $190 = ((($$0172$lcssa$i)) + 20|0);
        $191 = HEAP32[$190>>2]|0;
        $192 = ($191|0)==(0|0);
        if (!($192)) {
         $193 = ((($$3$i)) + 20|0);
         HEAP32[$193>>2] = $191;
         $194 = ((($191)) + 24|0);
         HEAP32[$194>>2] = $$3$i;
        }
       }
      } while(0);
      $195 = ($$0173$lcssa$i>>>0)<(16);
      if ($195) {
       $196 = (($$0173$lcssa$i) + ($6))|0;
       $197 = $196 | 3;
       $198 = ((($$0172$lcssa$i)) + 4|0);
       HEAP32[$198>>2] = $197;
       $199 = (($$0172$lcssa$i) + ($196)|0);
       $200 = ((($199)) + 4|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = $201 | 1;
       HEAP32[$200>>2] = $202;
      } else {
       $203 = $6 | 3;
       $204 = ((($$0172$lcssa$i)) + 4|0);
       HEAP32[$204>>2] = $203;
       $205 = $$0173$lcssa$i | 1;
       $206 = ((($147)) + 4|0);
       HEAP32[$206>>2] = $205;
       $207 = (($147) + ($$0173$lcssa$i)|0);
       HEAP32[$207>>2] = $$0173$lcssa$i;
       $208 = ($33|0)==(0);
       if (!($208)) {
        $209 = HEAP32[(15656)>>2]|0;
        $210 = $33 >>> 3;
        $211 = $210 << 1;
        $212 = (15676 + ($211<<2)|0);
        $213 = 1 << $210;
        $214 = $8 & $213;
        $215 = ($214|0)==(0);
        if ($215) {
         $216 = $8 | $213;
         HEAP32[3909] = $216;
         $$pre$i = ((($212)) + 8|0);
         $$0$i = $212;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $217 = ((($212)) + 8|0);
         $218 = HEAP32[$217>>2]|0;
         $$0$i = $218;$$pre$phi$iZ2D = $217;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $209;
        $219 = ((($$0$i)) + 12|0);
        HEAP32[$219>>2] = $209;
        $220 = ((($209)) + 8|0);
        HEAP32[$220>>2] = $$0$i;
        $221 = ((($209)) + 12|0);
        HEAP32[$221>>2] = $212;
       }
       HEAP32[(15644)>>2] = $$0173$lcssa$i;
       HEAP32[(15656)>>2] = $147;
      }
      $222 = ((($$0172$lcssa$i)) + 8|0);
      $$0 = $222;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $223 = ($0>>>0)>(4294967231);
   if ($223) {
    $$0192 = -1;
   } else {
    $224 = (($0) + 11)|0;
    $225 = $224 & -8;
    $226 = HEAP32[(15640)>>2]|0;
    $227 = ($226|0)==(0);
    if ($227) {
     $$0192 = $225;
    } else {
     $228 = (0 - ($225))|0;
     $229 = $224 >>> 8;
     $230 = ($229|0)==(0);
     if ($230) {
      $$0336$i = 0;
     } else {
      $231 = ($225>>>0)>(16777215);
      if ($231) {
       $$0336$i = 31;
      } else {
       $232 = (($229) + 1048320)|0;
       $233 = $232 >>> 16;
       $234 = $233 & 8;
       $235 = $229 << $234;
       $236 = (($235) + 520192)|0;
       $237 = $236 >>> 16;
       $238 = $237 & 4;
       $239 = $238 | $234;
       $240 = $235 << $238;
       $241 = (($240) + 245760)|0;
       $242 = $241 >>> 16;
       $243 = $242 & 2;
       $244 = $239 | $243;
       $245 = (14 - ($244))|0;
       $246 = $240 << $243;
       $247 = $246 >>> 15;
       $248 = (($245) + ($247))|0;
       $249 = $248 << 1;
       $250 = (($248) + 7)|0;
       $251 = $225 >>> $250;
       $252 = $251 & 1;
       $253 = $252 | $249;
       $$0336$i = $253;
      }
     }
     $254 = (15940 + ($$0336$i<<2)|0);
     $255 = HEAP32[$254>>2]|0;
     $256 = ($255|0)==(0|0);
     L74: do {
      if ($256) {
       $$2333$i = 0;$$3$i199 = 0;$$3328$i = $228;
       label = 57;
      } else {
       $257 = ($$0336$i|0)==(31);
       $258 = $$0336$i >>> 1;
       $259 = (25 - ($258))|0;
       $260 = $257 ? 0 : $259;
       $261 = $225 << $260;
       $$0320$i = 0;$$0325$i = $228;$$0331$i = $255;$$0337$i = $261;$$0340$i = 0;
       while(1) {
        $262 = ((($$0331$i)) + 4|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = $263 & -8;
        $265 = (($264) - ($225))|0;
        $266 = ($265>>>0)<($$0325$i>>>0);
        if ($266) {
         $267 = ($265|0)==(0);
         if ($267) {
          $$43298$i = 0;$$43357$i = $$0331$i;$$49$i = $$0331$i;
          label = 61;
          break L74;
         } else {
          $$1321$i = $$0331$i;$$1326$i = $265;
         }
        } else {
         $$1321$i = $$0320$i;$$1326$i = $$0325$i;
        }
        $268 = ((($$0331$i)) + 20|0);
        $269 = HEAP32[$268>>2]|0;
        $270 = $$0337$i >>> 31;
        $271 = (((($$0331$i)) + 16|0) + ($270<<2)|0);
        $272 = HEAP32[$271>>2]|0;
        $273 = ($269|0)==(0|0);
        $274 = ($269|0)==($272|0);
        $or$cond1$i198 = $273 | $274;
        $$1341$i = $or$cond1$i198 ? $$0340$i : $269;
        $275 = ($272|0)==(0|0);
        $not$3$i = $275 ^ 1;
        $276 = $not$3$i&1;
        $$0337$$i = $$0337$i << $276;
        if ($275) {
         $$2333$i = $$1341$i;$$3$i199 = $$1321$i;$$3328$i = $$1326$i;
         label = 57;
         break;
        } else {
         $$0320$i = $$1321$i;$$0325$i = $$1326$i;$$0331$i = $272;$$0337$i = $$0337$$i;$$0340$i = $$1341$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 57) {
      $277 = ($$2333$i|0)==(0|0);
      $278 = ($$3$i199|0)==(0|0);
      $or$cond$i200 = $277 & $278;
      if ($or$cond$i200) {
       $279 = 2 << $$0336$i;
       $280 = (0 - ($279))|0;
       $281 = $279 | $280;
       $282 = $226 & $281;
       $283 = ($282|0)==(0);
       if ($283) {
        $$0192 = $225;
        break;
       }
       $284 = (0 - ($282))|0;
       $285 = $282 & $284;
       $286 = (($285) + -1)|0;
       $287 = $286 >>> 12;
       $288 = $287 & 16;
       $289 = $286 >>> $288;
       $290 = $289 >>> 5;
       $291 = $290 & 8;
       $292 = $291 | $288;
       $293 = $289 >>> $291;
       $294 = $293 >>> 2;
       $295 = $294 & 4;
       $296 = $292 | $295;
       $297 = $293 >>> $295;
       $298 = $297 >>> 1;
       $299 = $298 & 2;
       $300 = $296 | $299;
       $301 = $297 >>> $299;
       $302 = $301 >>> 1;
       $303 = $302 & 1;
       $304 = $300 | $303;
       $305 = $301 >>> $303;
       $306 = (($304) + ($305))|0;
       $307 = (15940 + ($306<<2)|0);
       $308 = HEAP32[$307>>2]|0;
       $$4$ph$i = 0;$$4335$ph$i = $308;
      } else {
       $$4$ph$i = $$3$i199;$$4335$ph$i = $$2333$i;
      }
      $309 = ($$4335$ph$i|0)==(0|0);
      if ($309) {
       $$4$lcssa$i = $$4$ph$i;$$4329$lcssa$i = $$3328$i;
      } else {
       $$43298$i = $$3328$i;$$43357$i = $$4335$ph$i;$$49$i = $$4$ph$i;
       label = 61;
      }
     }
     if ((label|0) == 61) {
      while(1) {
       label = 0;
       $310 = ((($$43357$i)) + 4|0);
       $311 = HEAP32[$310>>2]|0;
       $312 = $311 & -8;
       $313 = (($312) - ($225))|0;
       $314 = ($313>>>0)<($$43298$i>>>0);
       $$$4329$i = $314 ? $313 : $$43298$i;
       $$4335$$4$i = $314 ? $$43357$i : $$49$i;
       $315 = ((($$43357$i)) + 16|0);
       $316 = HEAP32[$315>>2]|0;
       $317 = ($316|0)==(0|0);
       $$sink2$i202 = $317&1;
       $318 = (((($$43357$i)) + 16|0) + ($$sink2$i202<<2)|0);
       $319 = HEAP32[$318>>2]|0;
       $320 = ($319|0)==(0|0);
       if ($320) {
        $$4$lcssa$i = $$4335$$4$i;$$4329$lcssa$i = $$$4329$i;
        break;
       } else {
        $$43298$i = $$$4329$i;$$43357$i = $319;$$49$i = $$4335$$4$i;
        label = 61;
       }
      }
     }
     $321 = ($$4$lcssa$i|0)==(0|0);
     if ($321) {
      $$0192 = $225;
     } else {
      $322 = HEAP32[(15644)>>2]|0;
      $323 = (($322) - ($225))|0;
      $324 = ($$4329$lcssa$i>>>0)<($323>>>0);
      if ($324) {
       $325 = (($$4$lcssa$i) + ($225)|0);
       $326 = ($325>>>0)>($$4$lcssa$i>>>0);
       if (!($326)) {
        $$0 = 0;
        STACKTOP = sp;return ($$0|0);
       }
       $327 = ((($$4$lcssa$i)) + 24|0);
       $328 = HEAP32[$327>>2]|0;
       $329 = ((($$4$lcssa$i)) + 12|0);
       $330 = HEAP32[$329>>2]|0;
       $331 = ($330|0)==($$4$lcssa$i|0);
       do {
        if ($331) {
         $336 = ((($$4$lcssa$i)) + 20|0);
         $337 = HEAP32[$336>>2]|0;
         $338 = ($337|0)==(0|0);
         if ($338) {
          $339 = ((($$4$lcssa$i)) + 16|0);
          $340 = HEAP32[$339>>2]|0;
          $341 = ($340|0)==(0|0);
          if ($341) {
           $$3349$i = 0;
           break;
          } else {
           $$1347$i = $340;$$1351$i = $339;
          }
         } else {
          $$1347$i = $337;$$1351$i = $336;
         }
         while(1) {
          $342 = ((($$1347$i)) + 20|0);
          $343 = HEAP32[$342>>2]|0;
          $344 = ($343|0)==(0|0);
          if (!($344)) {
           $$1347$i = $343;$$1351$i = $342;
           continue;
          }
          $345 = ((($$1347$i)) + 16|0);
          $346 = HEAP32[$345>>2]|0;
          $347 = ($346|0)==(0|0);
          if ($347) {
           break;
          } else {
           $$1347$i = $346;$$1351$i = $345;
          }
         }
         HEAP32[$$1351$i>>2] = 0;
         $$3349$i = $$1347$i;
        } else {
         $332 = ((($$4$lcssa$i)) + 8|0);
         $333 = HEAP32[$332>>2]|0;
         $334 = ((($333)) + 12|0);
         HEAP32[$334>>2] = $330;
         $335 = ((($330)) + 8|0);
         HEAP32[$335>>2] = $333;
         $$3349$i = $330;
        }
       } while(0);
       $348 = ($328|0)==(0|0);
       do {
        if ($348) {
         $431 = $226;
        } else {
         $349 = ((($$4$lcssa$i)) + 28|0);
         $350 = HEAP32[$349>>2]|0;
         $351 = (15940 + ($350<<2)|0);
         $352 = HEAP32[$351>>2]|0;
         $353 = ($$4$lcssa$i|0)==($352|0);
         if ($353) {
          HEAP32[$351>>2] = $$3349$i;
          $cond$i206 = ($$3349$i|0)==(0|0);
          if ($cond$i206) {
           $354 = 1 << $350;
           $355 = $354 ^ -1;
           $356 = $226 & $355;
           HEAP32[(15640)>>2] = $356;
           $431 = $356;
           break;
          }
         } else {
          $357 = ((($328)) + 16|0);
          $358 = HEAP32[$357>>2]|0;
          $359 = ($358|0)!=($$4$lcssa$i|0);
          $$sink3$i = $359&1;
          $360 = (((($328)) + 16|0) + ($$sink3$i<<2)|0);
          HEAP32[$360>>2] = $$3349$i;
          $361 = ($$3349$i|0)==(0|0);
          if ($361) {
           $431 = $226;
           break;
          }
         }
         $362 = ((($$3349$i)) + 24|0);
         HEAP32[$362>>2] = $328;
         $363 = ((($$4$lcssa$i)) + 16|0);
         $364 = HEAP32[$363>>2]|0;
         $365 = ($364|0)==(0|0);
         if (!($365)) {
          $366 = ((($$3349$i)) + 16|0);
          HEAP32[$366>>2] = $364;
          $367 = ((($364)) + 24|0);
          HEAP32[$367>>2] = $$3349$i;
         }
         $368 = ((($$4$lcssa$i)) + 20|0);
         $369 = HEAP32[$368>>2]|0;
         $370 = ($369|0)==(0|0);
         if ($370) {
          $431 = $226;
         } else {
          $371 = ((($$3349$i)) + 20|0);
          HEAP32[$371>>2] = $369;
          $372 = ((($369)) + 24|0);
          HEAP32[$372>>2] = $$3349$i;
          $431 = $226;
         }
        }
       } while(0);
       $373 = ($$4329$lcssa$i>>>0)<(16);
       do {
        if ($373) {
         $374 = (($$4329$lcssa$i) + ($225))|0;
         $375 = $374 | 3;
         $376 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$376>>2] = $375;
         $377 = (($$4$lcssa$i) + ($374)|0);
         $378 = ((($377)) + 4|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = $379 | 1;
         HEAP32[$378>>2] = $380;
        } else {
         $381 = $225 | 3;
         $382 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$382>>2] = $381;
         $383 = $$4329$lcssa$i | 1;
         $384 = ((($325)) + 4|0);
         HEAP32[$384>>2] = $383;
         $385 = (($325) + ($$4329$lcssa$i)|0);
         HEAP32[$385>>2] = $$4329$lcssa$i;
         $386 = $$4329$lcssa$i >>> 3;
         $387 = ($$4329$lcssa$i>>>0)<(256);
         if ($387) {
          $388 = $386 << 1;
          $389 = (15676 + ($388<<2)|0);
          $390 = HEAP32[3909]|0;
          $391 = 1 << $386;
          $392 = $390 & $391;
          $393 = ($392|0)==(0);
          if ($393) {
           $394 = $390 | $391;
           HEAP32[3909] = $394;
           $$pre$i207 = ((($389)) + 8|0);
           $$0345$i = $389;$$pre$phi$i208Z2D = $$pre$i207;
          } else {
           $395 = ((($389)) + 8|0);
           $396 = HEAP32[$395>>2]|0;
           $$0345$i = $396;$$pre$phi$i208Z2D = $395;
          }
          HEAP32[$$pre$phi$i208Z2D>>2] = $325;
          $397 = ((($$0345$i)) + 12|0);
          HEAP32[$397>>2] = $325;
          $398 = ((($325)) + 8|0);
          HEAP32[$398>>2] = $$0345$i;
          $399 = ((($325)) + 12|0);
          HEAP32[$399>>2] = $389;
          break;
         }
         $400 = $$4329$lcssa$i >>> 8;
         $401 = ($400|0)==(0);
         if ($401) {
          $$0339$i = 0;
         } else {
          $402 = ($$4329$lcssa$i>>>0)>(16777215);
          if ($402) {
           $$0339$i = 31;
          } else {
           $403 = (($400) + 1048320)|0;
           $404 = $403 >>> 16;
           $405 = $404 & 8;
           $406 = $400 << $405;
           $407 = (($406) + 520192)|0;
           $408 = $407 >>> 16;
           $409 = $408 & 4;
           $410 = $409 | $405;
           $411 = $406 << $409;
           $412 = (($411) + 245760)|0;
           $413 = $412 >>> 16;
           $414 = $413 & 2;
           $415 = $410 | $414;
           $416 = (14 - ($415))|0;
           $417 = $411 << $414;
           $418 = $417 >>> 15;
           $419 = (($416) + ($418))|0;
           $420 = $419 << 1;
           $421 = (($419) + 7)|0;
           $422 = $$4329$lcssa$i >>> $421;
           $423 = $422 & 1;
           $424 = $423 | $420;
           $$0339$i = $424;
          }
         }
         $425 = (15940 + ($$0339$i<<2)|0);
         $426 = ((($325)) + 28|0);
         HEAP32[$426>>2] = $$0339$i;
         $427 = ((($325)) + 16|0);
         $428 = ((($427)) + 4|0);
         HEAP32[$428>>2] = 0;
         HEAP32[$427>>2] = 0;
         $429 = 1 << $$0339$i;
         $430 = $431 & $429;
         $432 = ($430|0)==(0);
         if ($432) {
          $433 = $431 | $429;
          HEAP32[(15640)>>2] = $433;
          HEAP32[$425>>2] = $325;
          $434 = ((($325)) + 24|0);
          HEAP32[$434>>2] = $425;
          $435 = ((($325)) + 12|0);
          HEAP32[$435>>2] = $325;
          $436 = ((($325)) + 8|0);
          HEAP32[$436>>2] = $325;
          break;
         }
         $437 = HEAP32[$425>>2]|0;
         $438 = ($$0339$i|0)==(31);
         $439 = $$0339$i >>> 1;
         $440 = (25 - ($439))|0;
         $441 = $438 ? 0 : $440;
         $442 = $$4329$lcssa$i << $441;
         $$0322$i = $442;$$0323$i = $437;
         while(1) {
          $443 = ((($$0323$i)) + 4|0);
          $444 = HEAP32[$443>>2]|0;
          $445 = $444 & -8;
          $446 = ($445|0)==($$4329$lcssa$i|0);
          if ($446) {
           label = 97;
           break;
          }
          $447 = $$0322$i >>> 31;
          $448 = (((($$0323$i)) + 16|0) + ($447<<2)|0);
          $449 = $$0322$i << 1;
          $450 = HEAP32[$448>>2]|0;
          $451 = ($450|0)==(0|0);
          if ($451) {
           label = 96;
           break;
          } else {
           $$0322$i = $449;$$0323$i = $450;
          }
         }
         if ((label|0) == 96) {
          HEAP32[$448>>2] = $325;
          $452 = ((($325)) + 24|0);
          HEAP32[$452>>2] = $$0323$i;
          $453 = ((($325)) + 12|0);
          HEAP32[$453>>2] = $325;
          $454 = ((($325)) + 8|0);
          HEAP32[$454>>2] = $325;
          break;
         }
         else if ((label|0) == 97) {
          $455 = ((($$0323$i)) + 8|0);
          $456 = HEAP32[$455>>2]|0;
          $457 = ((($456)) + 12|0);
          HEAP32[$457>>2] = $325;
          HEAP32[$455>>2] = $325;
          $458 = ((($325)) + 8|0);
          HEAP32[$458>>2] = $456;
          $459 = ((($325)) + 12|0);
          HEAP32[$459>>2] = $$0323$i;
          $460 = ((($325)) + 24|0);
          HEAP32[$460>>2] = 0;
          break;
         }
        }
       } while(0);
       $461 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $461;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0192 = $225;
      }
     }
    }
   }
  }
 } while(0);
 $462 = HEAP32[(15644)>>2]|0;
 $463 = ($462>>>0)<($$0192>>>0);
 if (!($463)) {
  $464 = (($462) - ($$0192))|0;
  $465 = HEAP32[(15656)>>2]|0;
  $466 = ($464>>>0)>(15);
  if ($466) {
   $467 = (($465) + ($$0192)|0);
   HEAP32[(15656)>>2] = $467;
   HEAP32[(15644)>>2] = $464;
   $468 = $464 | 1;
   $469 = ((($467)) + 4|0);
   HEAP32[$469>>2] = $468;
   $470 = (($465) + ($462)|0);
   HEAP32[$470>>2] = $464;
   $471 = $$0192 | 3;
   $472 = ((($465)) + 4|0);
   HEAP32[$472>>2] = $471;
  } else {
   HEAP32[(15644)>>2] = 0;
   HEAP32[(15656)>>2] = 0;
   $473 = $462 | 3;
   $474 = ((($465)) + 4|0);
   HEAP32[$474>>2] = $473;
   $475 = (($465) + ($462)|0);
   $476 = ((($475)) + 4|0);
   $477 = HEAP32[$476>>2]|0;
   $478 = $477 | 1;
   HEAP32[$476>>2] = $478;
  }
  $479 = ((($465)) + 8|0);
  $$0 = $479;
  STACKTOP = sp;return ($$0|0);
 }
 $480 = HEAP32[(15648)>>2]|0;
 $481 = ($480>>>0)>($$0192>>>0);
 if ($481) {
  $482 = (($480) - ($$0192))|0;
  HEAP32[(15648)>>2] = $482;
  $483 = HEAP32[(15660)>>2]|0;
  $484 = (($483) + ($$0192)|0);
  HEAP32[(15660)>>2] = $484;
  $485 = $482 | 1;
  $486 = ((($484)) + 4|0);
  HEAP32[$486>>2] = $485;
  $487 = $$0192 | 3;
  $488 = ((($483)) + 4|0);
  HEAP32[$488>>2] = $487;
  $489 = ((($483)) + 8|0);
  $$0 = $489;
  STACKTOP = sp;return ($$0|0);
 }
 $490 = HEAP32[4027]|0;
 $491 = ($490|0)==(0);
 if ($491) {
  HEAP32[(16116)>>2] = 4096;
  HEAP32[(16112)>>2] = 4096;
  HEAP32[(16120)>>2] = -1;
  HEAP32[(16124)>>2] = -1;
  HEAP32[(16128)>>2] = 0;
  HEAP32[(16080)>>2] = 0;
  $492 = $1;
  $493 = $492 & -16;
  $494 = $493 ^ 1431655768;
  HEAP32[4027] = $494;
  $498 = 4096;
 } else {
  $$pre$i195 = HEAP32[(16116)>>2]|0;
  $498 = $$pre$i195;
 }
 $495 = (($$0192) + 48)|0;
 $496 = (($$0192) + 47)|0;
 $497 = (($498) + ($496))|0;
 $499 = (0 - ($498))|0;
 $500 = $497 & $499;
 $501 = ($500>>>0)>($$0192>>>0);
 if (!($501)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $502 = HEAP32[(16076)>>2]|0;
 $503 = ($502|0)==(0);
 if (!($503)) {
  $504 = HEAP32[(16068)>>2]|0;
  $505 = (($504) + ($500))|0;
  $506 = ($505>>>0)<=($504>>>0);
  $507 = ($505>>>0)>($502>>>0);
  $or$cond1$i = $506 | $507;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $508 = HEAP32[(16080)>>2]|0;
 $509 = $508 & 4;
 $510 = ($509|0)==(0);
 L167: do {
  if ($510) {
   $511 = HEAP32[(15660)>>2]|0;
   $512 = ($511|0)==(0|0);
   L169: do {
    if ($512) {
     label = 118;
    } else {
     $$0$i20$i = (16084);
     while(1) {
      $513 = HEAP32[$$0$i20$i>>2]|0;
      $514 = ($513>>>0)>($511>>>0);
      if (!($514)) {
       $515 = ((($$0$i20$i)) + 4|0);
       $516 = HEAP32[$515>>2]|0;
       $517 = (($513) + ($516)|0);
       $518 = ($517>>>0)>($511>>>0);
       if ($518) {
        break;
       }
      }
      $519 = ((($$0$i20$i)) + 8|0);
      $520 = HEAP32[$519>>2]|0;
      $521 = ($520|0)==(0|0);
      if ($521) {
       label = 118;
       break L169;
      } else {
       $$0$i20$i = $520;
      }
     }
     $544 = (($497) - ($480))|0;
     $545 = $544 & $499;
     $546 = ($545>>>0)<(2147483647);
     if ($546) {
      $547 = (_sbrk(($545|0))|0);
      $548 = HEAP32[$$0$i20$i>>2]|0;
      $549 = HEAP32[$515>>2]|0;
      $550 = (($548) + ($549)|0);
      $551 = ($547|0)==($550|0);
      if ($551) {
       $552 = ($547|0)==((-1)|0);
       if ($552) {
        $$2234243136$i = $545;
       } else {
        $$723947$i = $545;$$748$i = $547;
        label = 135;
        break L167;
       }
      } else {
       $$2247$ph$i = $547;$$2253$ph$i = $545;
       label = 126;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 118) {
     $522 = (_sbrk(0)|0);
     $523 = ($522|0)==((-1)|0);
     if ($523) {
      $$2234243136$i = 0;
     } else {
      $524 = $522;
      $525 = HEAP32[(16112)>>2]|0;
      $526 = (($525) + -1)|0;
      $527 = $526 & $524;
      $528 = ($527|0)==(0);
      $529 = (($526) + ($524))|0;
      $530 = (0 - ($525))|0;
      $531 = $529 & $530;
      $532 = (($531) - ($524))|0;
      $533 = $528 ? 0 : $532;
      $$$i = (($533) + ($500))|0;
      $534 = HEAP32[(16068)>>2]|0;
      $535 = (($$$i) + ($534))|0;
      $536 = ($$$i>>>0)>($$0192>>>0);
      $537 = ($$$i>>>0)<(2147483647);
      $or$cond$i = $536 & $537;
      if ($or$cond$i) {
       $538 = HEAP32[(16076)>>2]|0;
       $539 = ($538|0)==(0);
       if (!($539)) {
        $540 = ($535>>>0)<=($534>>>0);
        $541 = ($535>>>0)>($538>>>0);
        $or$cond2$i = $540 | $541;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $542 = (_sbrk(($$$i|0))|0);
       $543 = ($542|0)==($522|0);
       if ($543) {
        $$723947$i = $$$i;$$748$i = $522;
        label = 135;
        break L167;
       } else {
        $$2247$ph$i = $542;$$2253$ph$i = $$$i;
        label = 126;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 126) {
     $553 = (0 - ($$2253$ph$i))|0;
     $554 = ($$2247$ph$i|0)!=((-1)|0);
     $555 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $555 & $554;
     $556 = ($495>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $556 & $or$cond7$i;
     if (!($or$cond10$i)) {
      $566 = ($$2247$ph$i|0)==((-1)|0);
      if ($566) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 135;
       break L167;
      }
     }
     $557 = HEAP32[(16116)>>2]|0;
     $558 = (($496) - ($$2253$ph$i))|0;
     $559 = (($558) + ($557))|0;
     $560 = (0 - ($557))|0;
     $561 = $559 & $560;
     $562 = ($561>>>0)<(2147483647);
     if (!($562)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 135;
      break L167;
     }
     $563 = (_sbrk(($561|0))|0);
     $564 = ($563|0)==((-1)|0);
     if ($564) {
      (_sbrk(($553|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $565 = (($561) + ($$2253$ph$i))|0;
      $$723947$i = $565;$$748$i = $$2247$ph$i;
      label = 135;
      break L167;
     }
    }
   } while(0);
   $567 = HEAP32[(16080)>>2]|0;
   $568 = $567 | 4;
   HEAP32[(16080)>>2] = $568;
   $$4236$i = $$2234243136$i;
   label = 133;
  } else {
   $$4236$i = 0;
   label = 133;
  }
 } while(0);
 if ((label|0) == 133) {
  $569 = ($500>>>0)<(2147483647);
  if ($569) {
   $570 = (_sbrk(($500|0))|0);
   $571 = (_sbrk(0)|0);
   $572 = ($570|0)!=((-1)|0);
   $573 = ($571|0)!=((-1)|0);
   $or$cond5$i = $572 & $573;
   $574 = ($570>>>0)<($571>>>0);
   $or$cond11$i = $574 & $or$cond5$i;
   $575 = $571;
   $576 = $570;
   $577 = (($575) - ($576))|0;
   $578 = (($$0192) + 40)|0;
   $579 = ($577>>>0)>($578>>>0);
   $$$4236$i = $579 ? $577 : $$4236$i;
   $or$cond11$not$i = $or$cond11$i ^ 1;
   $580 = ($570|0)==((-1)|0);
   $not$$i = $579 ^ 1;
   $581 = $580 | $not$$i;
   $or$cond49$i = $581 | $or$cond11$not$i;
   if (!($or$cond49$i)) {
    $$723947$i = $$$4236$i;$$748$i = $570;
    label = 135;
   }
  }
 }
 if ((label|0) == 135) {
  $582 = HEAP32[(16068)>>2]|0;
  $583 = (($582) + ($$723947$i))|0;
  HEAP32[(16068)>>2] = $583;
  $584 = HEAP32[(16072)>>2]|0;
  $585 = ($583>>>0)>($584>>>0);
  if ($585) {
   HEAP32[(16072)>>2] = $583;
  }
  $586 = HEAP32[(15660)>>2]|0;
  $587 = ($586|0)==(0|0);
  do {
   if ($587) {
    $588 = HEAP32[(15652)>>2]|0;
    $589 = ($588|0)==(0|0);
    $590 = ($$748$i>>>0)<($588>>>0);
    $or$cond12$i = $589 | $590;
    if ($or$cond12$i) {
     HEAP32[(15652)>>2] = $$748$i;
    }
    HEAP32[(16084)>>2] = $$748$i;
    HEAP32[(16088)>>2] = $$723947$i;
    HEAP32[(16096)>>2] = 0;
    $591 = HEAP32[4027]|0;
    HEAP32[(15672)>>2] = $591;
    HEAP32[(15668)>>2] = -1;
    HEAP32[(15688)>>2] = (15676);
    HEAP32[(15684)>>2] = (15676);
    HEAP32[(15696)>>2] = (15684);
    HEAP32[(15692)>>2] = (15684);
    HEAP32[(15704)>>2] = (15692);
    HEAP32[(15700)>>2] = (15692);
    HEAP32[(15712)>>2] = (15700);
    HEAP32[(15708)>>2] = (15700);
    HEAP32[(15720)>>2] = (15708);
    HEAP32[(15716)>>2] = (15708);
    HEAP32[(15728)>>2] = (15716);
    HEAP32[(15724)>>2] = (15716);
    HEAP32[(15736)>>2] = (15724);
    HEAP32[(15732)>>2] = (15724);
    HEAP32[(15744)>>2] = (15732);
    HEAP32[(15740)>>2] = (15732);
    HEAP32[(15752)>>2] = (15740);
    HEAP32[(15748)>>2] = (15740);
    HEAP32[(15760)>>2] = (15748);
    HEAP32[(15756)>>2] = (15748);
    HEAP32[(15768)>>2] = (15756);
    HEAP32[(15764)>>2] = (15756);
    HEAP32[(15776)>>2] = (15764);
    HEAP32[(15772)>>2] = (15764);
    HEAP32[(15784)>>2] = (15772);
    HEAP32[(15780)>>2] = (15772);
    HEAP32[(15792)>>2] = (15780);
    HEAP32[(15788)>>2] = (15780);
    HEAP32[(15800)>>2] = (15788);
    HEAP32[(15796)>>2] = (15788);
    HEAP32[(15808)>>2] = (15796);
    HEAP32[(15804)>>2] = (15796);
    HEAP32[(15816)>>2] = (15804);
    HEAP32[(15812)>>2] = (15804);
    HEAP32[(15824)>>2] = (15812);
    HEAP32[(15820)>>2] = (15812);
    HEAP32[(15832)>>2] = (15820);
    HEAP32[(15828)>>2] = (15820);
    HEAP32[(15840)>>2] = (15828);
    HEAP32[(15836)>>2] = (15828);
    HEAP32[(15848)>>2] = (15836);
    HEAP32[(15844)>>2] = (15836);
    HEAP32[(15856)>>2] = (15844);
    HEAP32[(15852)>>2] = (15844);
    HEAP32[(15864)>>2] = (15852);
    HEAP32[(15860)>>2] = (15852);
    HEAP32[(15872)>>2] = (15860);
    HEAP32[(15868)>>2] = (15860);
    HEAP32[(15880)>>2] = (15868);
    HEAP32[(15876)>>2] = (15868);
    HEAP32[(15888)>>2] = (15876);
    HEAP32[(15884)>>2] = (15876);
    HEAP32[(15896)>>2] = (15884);
    HEAP32[(15892)>>2] = (15884);
    HEAP32[(15904)>>2] = (15892);
    HEAP32[(15900)>>2] = (15892);
    HEAP32[(15912)>>2] = (15900);
    HEAP32[(15908)>>2] = (15900);
    HEAP32[(15920)>>2] = (15908);
    HEAP32[(15916)>>2] = (15908);
    HEAP32[(15928)>>2] = (15916);
    HEAP32[(15924)>>2] = (15916);
    HEAP32[(15936)>>2] = (15924);
    HEAP32[(15932)>>2] = (15924);
    $592 = (($$723947$i) + -40)|0;
    $593 = ((($$748$i)) + 8|0);
    $594 = $593;
    $595 = $594 & 7;
    $596 = ($595|0)==(0);
    $597 = (0 - ($594))|0;
    $598 = $597 & 7;
    $599 = $596 ? 0 : $598;
    $600 = (($$748$i) + ($599)|0);
    $601 = (($592) - ($599))|0;
    HEAP32[(15660)>>2] = $600;
    HEAP32[(15648)>>2] = $601;
    $602 = $601 | 1;
    $603 = ((($600)) + 4|0);
    HEAP32[$603>>2] = $602;
    $604 = (($$748$i) + ($592)|0);
    $605 = ((($604)) + 4|0);
    HEAP32[$605>>2] = 40;
    $606 = HEAP32[(16124)>>2]|0;
    HEAP32[(15664)>>2] = $606;
   } else {
    $$024367$i = (16084);
    while(1) {
     $607 = HEAP32[$$024367$i>>2]|0;
     $608 = ((($$024367$i)) + 4|0);
     $609 = HEAP32[$608>>2]|0;
     $610 = (($607) + ($609)|0);
     $611 = ($$748$i|0)==($610|0);
     if ($611) {
      label = 143;
      break;
     }
     $612 = ((($$024367$i)) + 8|0);
     $613 = HEAP32[$612>>2]|0;
     $614 = ($613|0)==(0|0);
     if ($614) {
      break;
     } else {
      $$024367$i = $613;
     }
    }
    if ((label|0) == 143) {
     $615 = ((($$024367$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($607>>>0)<=($586>>>0);
      $620 = ($$748$i>>>0)>($586>>>0);
      $or$cond50$i = $620 & $619;
      if ($or$cond50$i) {
       $621 = (($609) + ($$723947$i))|0;
       HEAP32[$608>>2] = $621;
       $622 = HEAP32[(15648)>>2]|0;
       $623 = (($622) + ($$723947$i))|0;
       $624 = ((($586)) + 8|0);
       $625 = $624;
       $626 = $625 & 7;
       $627 = ($626|0)==(0);
       $628 = (0 - ($625))|0;
       $629 = $628 & 7;
       $630 = $627 ? 0 : $629;
       $631 = (($586) + ($630)|0);
       $632 = (($623) - ($630))|0;
       HEAP32[(15660)>>2] = $631;
       HEAP32[(15648)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($631)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($586) + ($623)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(16124)>>2]|0;
       HEAP32[(15664)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(15652)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(15652)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124466$i = (16084);
    while(1) {
     $641 = HEAP32[$$124466$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 151;
      break;
     }
     $643 = ((($$124466$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      $$0$i$i$i = (16084);
      break;
     } else {
      $$124466$i = $644;
     }
    }
    if ((label|0) == 151) {
     $646 = ((($$124466$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124466$i>>2] = $$748$i;
      $650 = ((($$124466$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($586|0)==($668|0);
      do {
       if ($676) {
        $677 = HEAP32[(15648)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(15648)>>2] = $678;
        HEAP32[(15660)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(15656)>>2]|0;
        $682 = ($681|0)==($668|0);
        if ($682) {
         $683 = HEAP32[(15644)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(15644)>>2] = $684;
         HEAP32[(15656)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L234: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[3909]|0;
            $703 = $702 & $701;
            HEAP32[3909] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1264$i$i = $719;$$1266$i$i = $715;
              }
             } else {
              $$1264$i$i = $717;$$1266$i$i = $716;
             }
             while(1) {
              $721 = ((($$1264$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if (!($723)) {
               $$1264$i$i = $722;$$1266$i$i = $721;
               continue;
              }
              $724 = ((($$1264$i$i)) + 16|0);
              $725 = HEAP32[$724>>2]|0;
              $726 = ($725|0)==(0|0);
              if ($726) {
               break;
              } else {
               $$1264$i$i = $725;$$1266$i$i = $724;
              }
             }
             HEAP32[$$1266$i$i>>2] = 0;
             $$3$i$i = $$1264$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (15940 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($731|0)==($668|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(15640)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(15640)>>2] = $736;
             break L234;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $739 = ($738|0)!=($668|0);
             $$sink1$i$i = $739&1;
             $740 = (((($707)) + 16|0) + ($$sink1$i$i<<2)|0);
             HEAP32[$740>>2] = $$3$i$i;
             $741 = ($$3$i$i|0)==(0|0);
             if ($741) {
              break L234;
             }
            }
           } while(0);
           $742 = ((($$3$i$i)) + 24|0);
           HEAP32[$742>>2] = $707;
           $743 = ((($668)) + 16|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = ($744|0)==(0|0);
           if (!($745)) {
            $746 = ((($$3$i$i)) + 16|0);
            HEAP32[$746>>2] = $744;
            $747 = ((($744)) + 24|0);
            HEAP32[$747>>2] = $$3$i$i;
           }
           $748 = ((($743)) + 4|0);
           $749 = HEAP32[$748>>2]|0;
           $750 = ($749|0)==(0|0);
           if ($750) {
            break;
           }
           $751 = ((($$3$i$i)) + 20|0);
           HEAP32[$751>>2] = $749;
           $752 = ((($749)) + 24|0);
           HEAP32[$752>>2] = $$3$i$i;
          }
         } while(0);
         $753 = (($668) + ($692)|0);
         $754 = (($692) + ($673))|0;
         $$0$i$i = $753;$$0260$i$i = $754;
        } else {
         $$0$i$i = $668;$$0260$i$i = $673;
        }
        $755 = ((($$0$i$i)) + 4|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = $756 & -2;
        HEAP32[$755>>2] = $757;
        $758 = $$0260$i$i | 1;
        $759 = ((($672)) + 4|0);
        HEAP32[$759>>2] = $758;
        $760 = (($672) + ($$0260$i$i)|0);
        HEAP32[$760>>2] = $$0260$i$i;
        $761 = $$0260$i$i >>> 3;
        $762 = ($$0260$i$i>>>0)<(256);
        if ($762) {
         $763 = $761 << 1;
         $764 = (15676 + ($763<<2)|0);
         $765 = HEAP32[3909]|0;
         $766 = 1 << $761;
         $767 = $765 & $766;
         $768 = ($767|0)==(0);
         if ($768) {
          $769 = $765 | $766;
          HEAP32[3909] = $769;
          $$pre$i17$i = ((($764)) + 8|0);
          $$0268$i$i = $764;$$pre$phi$i18$iZ2D = $$pre$i17$i;
         } else {
          $770 = ((($764)) + 8|0);
          $771 = HEAP32[$770>>2]|0;
          $$0268$i$i = $771;$$pre$phi$i18$iZ2D = $770;
         }
         HEAP32[$$pre$phi$i18$iZ2D>>2] = $672;
         $772 = ((($$0268$i$i)) + 12|0);
         HEAP32[$772>>2] = $672;
         $773 = ((($672)) + 8|0);
         HEAP32[$773>>2] = $$0268$i$i;
         $774 = ((($672)) + 12|0);
         HEAP32[$774>>2] = $764;
         break;
        }
        $775 = $$0260$i$i >>> 8;
        $776 = ($775|0)==(0);
        do {
         if ($776) {
          $$0269$i$i = 0;
         } else {
          $777 = ($$0260$i$i>>>0)>(16777215);
          if ($777) {
           $$0269$i$i = 31;
           break;
          }
          $778 = (($775) + 1048320)|0;
          $779 = $778 >>> 16;
          $780 = $779 & 8;
          $781 = $775 << $780;
          $782 = (($781) + 520192)|0;
          $783 = $782 >>> 16;
          $784 = $783 & 4;
          $785 = $784 | $780;
          $786 = $781 << $784;
          $787 = (($786) + 245760)|0;
          $788 = $787 >>> 16;
          $789 = $788 & 2;
          $790 = $785 | $789;
          $791 = (14 - ($790))|0;
          $792 = $786 << $789;
          $793 = $792 >>> 15;
          $794 = (($791) + ($793))|0;
          $795 = $794 << 1;
          $796 = (($794) + 7)|0;
          $797 = $$0260$i$i >>> $796;
          $798 = $797 & 1;
          $799 = $798 | $795;
          $$0269$i$i = $799;
         }
        } while(0);
        $800 = (15940 + ($$0269$i$i<<2)|0);
        $801 = ((($672)) + 28|0);
        HEAP32[$801>>2] = $$0269$i$i;
        $802 = ((($672)) + 16|0);
        $803 = ((($802)) + 4|0);
        HEAP32[$803>>2] = 0;
        HEAP32[$802>>2] = 0;
        $804 = HEAP32[(15640)>>2]|0;
        $805 = 1 << $$0269$i$i;
        $806 = $804 & $805;
        $807 = ($806|0)==(0);
        if ($807) {
         $808 = $804 | $805;
         HEAP32[(15640)>>2] = $808;
         HEAP32[$800>>2] = $672;
         $809 = ((($672)) + 24|0);
         HEAP32[$809>>2] = $800;
         $810 = ((($672)) + 12|0);
         HEAP32[$810>>2] = $672;
         $811 = ((($672)) + 8|0);
         HEAP32[$811>>2] = $672;
         break;
        }
        $812 = HEAP32[$800>>2]|0;
        $813 = ($$0269$i$i|0)==(31);
        $814 = $$0269$i$i >>> 1;
        $815 = (25 - ($814))|0;
        $816 = $813 ? 0 : $815;
        $817 = $$0260$i$i << $816;
        $$0261$i$i = $817;$$0262$i$i = $812;
        while(1) {
         $818 = ((($$0262$i$i)) + 4|0);
         $819 = HEAP32[$818>>2]|0;
         $820 = $819 & -8;
         $821 = ($820|0)==($$0260$i$i|0);
         if ($821) {
          label = 192;
          break;
         }
         $822 = $$0261$i$i >>> 31;
         $823 = (((($$0262$i$i)) + 16|0) + ($822<<2)|0);
         $824 = $$0261$i$i << 1;
         $825 = HEAP32[$823>>2]|0;
         $826 = ($825|0)==(0|0);
         if ($826) {
          label = 191;
          break;
         } else {
          $$0261$i$i = $824;$$0262$i$i = $825;
         }
        }
        if ((label|0) == 191) {
         HEAP32[$823>>2] = $672;
         $827 = ((($672)) + 24|0);
         HEAP32[$827>>2] = $$0262$i$i;
         $828 = ((($672)) + 12|0);
         HEAP32[$828>>2] = $672;
         $829 = ((($672)) + 8|0);
         HEAP32[$829>>2] = $672;
         break;
        }
        else if ((label|0) == 192) {
         $830 = ((($$0262$i$i)) + 8|0);
         $831 = HEAP32[$830>>2]|0;
         $832 = ((($831)) + 12|0);
         HEAP32[$832>>2] = $672;
         HEAP32[$830>>2] = $672;
         $833 = ((($672)) + 8|0);
         HEAP32[$833>>2] = $831;
         $834 = ((($672)) + 12|0);
         HEAP32[$834>>2] = $$0262$i$i;
         $835 = ((($672)) + 24|0);
         HEAP32[$835>>2] = 0;
         break;
        }
       }
      } while(0);
      $960 = ((($660)) + 8|0);
      $$0 = $960;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0$i$i$i = (16084);
     }
    }
    while(1) {
     $836 = HEAP32[$$0$i$i$i>>2]|0;
     $837 = ($836>>>0)>($586>>>0);
     if (!($837)) {
      $838 = ((($$0$i$i$i)) + 4|0);
      $839 = HEAP32[$838>>2]|0;
      $840 = (($836) + ($839)|0);
      $841 = ($840>>>0)>($586>>>0);
      if ($841) {
       break;
      }
     }
     $842 = ((($$0$i$i$i)) + 8|0);
     $843 = HEAP32[$842>>2]|0;
     $$0$i$i$i = $843;
    }
    $844 = ((($840)) + -47|0);
    $845 = ((($844)) + 8|0);
    $846 = $845;
    $847 = $846 & 7;
    $848 = ($847|0)==(0);
    $849 = (0 - ($846))|0;
    $850 = $849 & 7;
    $851 = $848 ? 0 : $850;
    $852 = (($844) + ($851)|0);
    $853 = ((($586)) + 16|0);
    $854 = ($852>>>0)<($853>>>0);
    $855 = $854 ? $586 : $852;
    $856 = ((($855)) + 8|0);
    $857 = ((($855)) + 24|0);
    $858 = (($$723947$i) + -40)|0;
    $859 = ((($$748$i)) + 8|0);
    $860 = $859;
    $861 = $860 & 7;
    $862 = ($861|0)==(0);
    $863 = (0 - ($860))|0;
    $864 = $863 & 7;
    $865 = $862 ? 0 : $864;
    $866 = (($$748$i) + ($865)|0);
    $867 = (($858) - ($865))|0;
    HEAP32[(15660)>>2] = $866;
    HEAP32[(15648)>>2] = $867;
    $868 = $867 | 1;
    $869 = ((($866)) + 4|0);
    HEAP32[$869>>2] = $868;
    $870 = (($$748$i) + ($858)|0);
    $871 = ((($870)) + 4|0);
    HEAP32[$871>>2] = 40;
    $872 = HEAP32[(16124)>>2]|0;
    HEAP32[(15664)>>2] = $872;
    $873 = ((($855)) + 4|0);
    HEAP32[$873>>2] = 27;
    ;HEAP32[$856>>2]=HEAP32[(16084)>>2]|0;HEAP32[$856+4>>2]=HEAP32[(16084)+4>>2]|0;HEAP32[$856+8>>2]=HEAP32[(16084)+8>>2]|0;HEAP32[$856+12>>2]=HEAP32[(16084)+12>>2]|0;
    HEAP32[(16084)>>2] = $$748$i;
    HEAP32[(16088)>>2] = $$723947$i;
    HEAP32[(16096)>>2] = 0;
    HEAP32[(16092)>>2] = $856;
    $875 = $857;
    while(1) {
     $874 = ((($875)) + 4|0);
     HEAP32[$874>>2] = 7;
     $876 = ((($875)) + 8|0);
     $877 = ($876>>>0)<($840>>>0);
     if ($877) {
      $875 = $874;
     } else {
      break;
     }
    }
    $878 = ($855|0)==($586|0);
    if (!($878)) {
     $879 = $855;
     $880 = $586;
     $881 = (($879) - ($880))|0;
     $882 = HEAP32[$873>>2]|0;
     $883 = $882 & -2;
     HEAP32[$873>>2] = $883;
     $884 = $881 | 1;
     $885 = ((($586)) + 4|0);
     HEAP32[$885>>2] = $884;
     HEAP32[$855>>2] = $881;
     $886 = $881 >>> 3;
     $887 = ($881>>>0)<(256);
     if ($887) {
      $888 = $886 << 1;
      $889 = (15676 + ($888<<2)|0);
      $890 = HEAP32[3909]|0;
      $891 = 1 << $886;
      $892 = $890 & $891;
      $893 = ($892|0)==(0);
      if ($893) {
       $894 = $890 | $891;
       HEAP32[3909] = $894;
       $$pre$i$i = ((($889)) + 8|0);
       $$0206$i$i = $889;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $895 = ((($889)) + 8|0);
       $896 = HEAP32[$895>>2]|0;
       $$0206$i$i = $896;$$pre$phi$i$iZ2D = $895;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $586;
      $897 = ((($$0206$i$i)) + 12|0);
      HEAP32[$897>>2] = $586;
      $898 = ((($586)) + 8|0);
      HEAP32[$898>>2] = $$0206$i$i;
      $899 = ((($586)) + 12|0);
      HEAP32[$899>>2] = $889;
      break;
     }
     $900 = $881 >>> 8;
     $901 = ($900|0)==(0);
     if ($901) {
      $$0207$i$i = 0;
     } else {
      $902 = ($881>>>0)>(16777215);
      if ($902) {
       $$0207$i$i = 31;
      } else {
       $903 = (($900) + 1048320)|0;
       $904 = $903 >>> 16;
       $905 = $904 & 8;
       $906 = $900 << $905;
       $907 = (($906) + 520192)|0;
       $908 = $907 >>> 16;
       $909 = $908 & 4;
       $910 = $909 | $905;
       $911 = $906 << $909;
       $912 = (($911) + 245760)|0;
       $913 = $912 >>> 16;
       $914 = $913 & 2;
       $915 = $910 | $914;
       $916 = (14 - ($915))|0;
       $917 = $911 << $914;
       $918 = $917 >>> 15;
       $919 = (($916) + ($918))|0;
       $920 = $919 << 1;
       $921 = (($919) + 7)|0;
       $922 = $881 >>> $921;
       $923 = $922 & 1;
       $924 = $923 | $920;
       $$0207$i$i = $924;
      }
     }
     $925 = (15940 + ($$0207$i$i<<2)|0);
     $926 = ((($586)) + 28|0);
     HEAP32[$926>>2] = $$0207$i$i;
     $927 = ((($586)) + 20|0);
     HEAP32[$927>>2] = 0;
     HEAP32[$853>>2] = 0;
     $928 = HEAP32[(15640)>>2]|0;
     $929 = 1 << $$0207$i$i;
     $930 = $928 & $929;
     $931 = ($930|0)==(0);
     if ($931) {
      $932 = $928 | $929;
      HEAP32[(15640)>>2] = $932;
      HEAP32[$925>>2] = $586;
      $933 = ((($586)) + 24|0);
      HEAP32[$933>>2] = $925;
      $934 = ((($586)) + 12|0);
      HEAP32[$934>>2] = $586;
      $935 = ((($586)) + 8|0);
      HEAP32[$935>>2] = $586;
      break;
     }
     $936 = HEAP32[$925>>2]|0;
     $937 = ($$0207$i$i|0)==(31);
     $938 = $$0207$i$i >>> 1;
     $939 = (25 - ($938))|0;
     $940 = $937 ? 0 : $939;
     $941 = $881 << $940;
     $$0201$i$i = $941;$$0202$i$i = $936;
     while(1) {
      $942 = ((($$0202$i$i)) + 4|0);
      $943 = HEAP32[$942>>2]|0;
      $944 = $943 & -8;
      $945 = ($944|0)==($881|0);
      if ($945) {
       label = 213;
       break;
      }
      $946 = $$0201$i$i >>> 31;
      $947 = (((($$0202$i$i)) + 16|0) + ($946<<2)|0);
      $948 = $$0201$i$i << 1;
      $949 = HEAP32[$947>>2]|0;
      $950 = ($949|0)==(0|0);
      if ($950) {
       label = 212;
       break;
      } else {
       $$0201$i$i = $948;$$0202$i$i = $949;
      }
     }
     if ((label|0) == 212) {
      HEAP32[$947>>2] = $586;
      $951 = ((($586)) + 24|0);
      HEAP32[$951>>2] = $$0202$i$i;
      $952 = ((($586)) + 12|0);
      HEAP32[$952>>2] = $586;
      $953 = ((($586)) + 8|0);
      HEAP32[$953>>2] = $586;
      break;
     }
     else if ((label|0) == 213) {
      $954 = ((($$0202$i$i)) + 8|0);
      $955 = HEAP32[$954>>2]|0;
      $956 = ((($955)) + 12|0);
      HEAP32[$956>>2] = $586;
      HEAP32[$954>>2] = $586;
      $957 = ((($586)) + 8|0);
      HEAP32[$957>>2] = $955;
      $958 = ((($586)) + 12|0);
      HEAP32[$958>>2] = $$0202$i$i;
      $959 = ((($586)) + 24|0);
      HEAP32[$959>>2] = 0;
      break;
     }
    }
   }
  } while(0);
  $961 = HEAP32[(15648)>>2]|0;
  $962 = ($961>>>0)>($$0192>>>0);
  if ($962) {
   $963 = (($961) - ($$0192))|0;
   HEAP32[(15648)>>2] = $963;
   $964 = HEAP32[(15660)>>2]|0;
   $965 = (($964) + ($$0192)|0);
   HEAP32[(15660)>>2] = $965;
   $966 = $963 | 1;
   $967 = ((($965)) + 4|0);
   HEAP32[$967>>2] = $966;
   $968 = $$0192 | 3;
   $969 = ((($964)) + 4|0);
   HEAP32[$969>>2] = $968;
   $970 = ((($964)) + 8|0);
   $$0 = $970;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $971 = (___errno_location()|0);
 HEAP32[$971>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0195$i = 0, $$0195$in$i = 0, $$0348 = 0, $$0349 = 0, $$0361 = 0, $$0368 = 0, $$1 = 0, $$1347 = 0, $$1352 = 0, $$1355 = 0, $$1363 = 0, $$1367 = 0, $$2 = 0, $$3 = 0, $$3365 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond373 = 0;
 var $cond374 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(15652)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(15656)>>2]|0;
   $18 = ($17|0)==($14|0);
   if ($18) {
    $79 = ((($7)) + 4|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = $80 & 3;
    $82 = ($81|0)==(3);
    if (!($82)) {
     $$1 = $14;$$1347 = $15;$87 = $14;
     break;
    }
    HEAP32[(15644)>>2] = $15;
    $83 = $80 & -2;
    HEAP32[$79>>2] = $83;
    $84 = $15 | 1;
    $85 = ((($14)) + 4|0);
    HEAP32[$85>>2] = $84;
    $86 = (($14) + ($15)|0);
    HEAP32[$86>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[3909]|0;
     $29 = $28 & $27;
     HEAP32[3909] = $29;
     $$1 = $14;$$1347 = $15;$87 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1347 = $15;$87 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1352 = $45;$$1355 = $41;
      }
     } else {
      $$1352 = $43;$$1355 = $42;
     }
     while(1) {
      $47 = ((($$1352)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if (!($49)) {
       $$1352 = $48;$$1355 = $47;
       continue;
      }
      $50 = ((($$1352)) + 16|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = ($51|0)==(0|0);
      if ($52) {
       break;
      } else {
       $$1352 = $51;$$1355 = $50;
      }
     }
     HEAP32[$$1355>>2] = 0;
     $$3 = $$1352;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1347 = $15;$87 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (15940 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($57|0)==($14|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond373 = ($$3|0)==(0|0);
     if ($cond373) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(15640)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(15640)>>2] = $62;
      $$1 = $14;$$1347 = $15;$87 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ($64|0)!=($14|0);
     $$sink3 = $65&1;
     $66 = (((($33)) + 16|0) + ($$sink3<<2)|0);
     HEAP32[$66>>2] = $$3;
     $67 = ($$3|0)==(0|0);
     if ($67) {
      $$1 = $14;$$1347 = $15;$87 = $14;
      break;
     }
    }
    $68 = ((($$3)) + 24|0);
    HEAP32[$68>>2] = $33;
    $69 = ((($14)) + 16|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = ((($$3)) + 16|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
    }
    $74 = ((($69)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($75|0)==(0|0);
    if ($76) {
     $$1 = $14;$$1347 = $15;$87 = $14;
    } else {
     $77 = ((($$3)) + 20|0);
     HEAP32[$77>>2] = $75;
     $78 = ((($75)) + 24|0);
     HEAP32[$78>>2] = $$3;
     $$1 = $14;$$1347 = $15;$87 = $14;
    }
   }
  } else {
   $$1 = $2;$$1347 = $6;$87 = $2;
  }
 } while(0);
 $88 = ($87>>>0)<($7>>>0);
 if (!($88)) {
  return;
 }
 $89 = ((($7)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $90 & 1;
 $92 = ($91|0)==(0);
 if ($92) {
  return;
 }
 $93 = $90 & 2;
 $94 = ($93|0)==(0);
 if ($94) {
  $95 = HEAP32[(15660)>>2]|0;
  $96 = ($95|0)==($7|0);
  if ($96) {
   $97 = HEAP32[(15648)>>2]|0;
   $98 = (($97) + ($$1347))|0;
   HEAP32[(15648)>>2] = $98;
   HEAP32[(15660)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = HEAP32[(15656)>>2]|0;
   $102 = ($$1|0)==($101|0);
   if (!($102)) {
    return;
   }
   HEAP32[(15656)>>2] = 0;
   HEAP32[(15644)>>2] = 0;
   return;
  }
  $103 = HEAP32[(15656)>>2]|0;
  $104 = ($103|0)==($7|0);
  if ($104) {
   $105 = HEAP32[(15644)>>2]|0;
   $106 = (($105) + ($$1347))|0;
   HEAP32[(15644)>>2] = $106;
   HEAP32[(15656)>>2] = $87;
   $107 = $106 | 1;
   $108 = ((($$1)) + 4|0);
   HEAP32[$108>>2] = $107;
   $109 = (($87) + ($106)|0);
   HEAP32[$109>>2] = $106;
   return;
  }
  $110 = $90 & -8;
  $111 = (($110) + ($$1347))|0;
  $112 = $90 >>> 3;
  $113 = ($90>>>0)<(256);
  do {
   if ($113) {
    $114 = ((($7)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($7)) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ($117|0)==($115|0);
    if ($118) {
     $119 = 1 << $112;
     $120 = $119 ^ -1;
     $121 = HEAP32[3909]|0;
     $122 = $121 & $120;
     HEAP32[3909] = $122;
     break;
    } else {
     $123 = ((($115)) + 12|0);
     HEAP32[$123>>2] = $117;
     $124 = ((($117)) + 8|0);
     HEAP32[$124>>2] = $115;
     break;
    }
   } else {
    $125 = ((($7)) + 24|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($7)) + 12|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($128|0)==($7|0);
    do {
     if ($129) {
      $134 = ((($7)) + 16|0);
      $135 = ((($134)) + 4|0);
      $136 = HEAP32[$135>>2]|0;
      $137 = ($136|0)==(0|0);
      if ($137) {
       $138 = HEAP32[$134>>2]|0;
       $139 = ($138|0)==(0|0);
       if ($139) {
        $$3365 = 0;
        break;
       } else {
        $$1363 = $138;$$1367 = $134;
       }
      } else {
       $$1363 = $136;$$1367 = $135;
      }
      while(1) {
       $140 = ((($$1363)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if (!($142)) {
        $$1363 = $141;$$1367 = $140;
        continue;
       }
       $143 = ((($$1363)) + 16|0);
       $144 = HEAP32[$143>>2]|0;
       $145 = ($144|0)==(0|0);
       if ($145) {
        break;
       } else {
        $$1363 = $144;$$1367 = $143;
       }
      }
      HEAP32[$$1367>>2] = 0;
      $$3365 = $$1363;
     } else {
      $130 = ((($7)) + 8|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = ((($131)) + 12|0);
      HEAP32[$132>>2] = $128;
      $133 = ((($128)) + 8|0);
      HEAP32[$133>>2] = $131;
      $$3365 = $128;
     }
    } while(0);
    $146 = ($126|0)==(0|0);
    if (!($146)) {
     $147 = ((($7)) + 28|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = (15940 + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($7|0);
     if ($151) {
      HEAP32[$149>>2] = $$3365;
      $cond374 = ($$3365|0)==(0|0);
      if ($cond374) {
       $152 = 1 << $148;
       $153 = $152 ^ -1;
       $154 = HEAP32[(15640)>>2]|0;
       $155 = $154 & $153;
       HEAP32[(15640)>>2] = $155;
       break;
      }
     } else {
      $156 = ((($126)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($157|0)!=($7|0);
      $$sink5 = $158&1;
      $159 = (((($126)) + 16|0) + ($$sink5<<2)|0);
      HEAP32[$159>>2] = $$3365;
      $160 = ($$3365|0)==(0|0);
      if ($160) {
       break;
      }
     }
     $161 = ((($$3365)) + 24|0);
     HEAP32[$161>>2] = $126;
     $162 = ((($7)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($163|0)==(0|0);
     if (!($164)) {
      $165 = ((($$3365)) + 16|0);
      HEAP32[$165>>2] = $163;
      $166 = ((($163)) + 24|0);
      HEAP32[$166>>2] = $$3365;
     }
     $167 = ((($162)) + 4|0);
     $168 = HEAP32[$167>>2]|0;
     $169 = ($168|0)==(0|0);
     if (!($169)) {
      $170 = ((($$3365)) + 20|0);
      HEAP32[$170>>2] = $168;
      $171 = ((($168)) + 24|0);
      HEAP32[$171>>2] = $$3365;
     }
    }
   }
  } while(0);
  $172 = $111 | 1;
  $173 = ((($$1)) + 4|0);
  HEAP32[$173>>2] = $172;
  $174 = (($87) + ($111)|0);
  HEAP32[$174>>2] = $111;
  $175 = HEAP32[(15656)>>2]|0;
  $176 = ($$1|0)==($175|0);
  if ($176) {
   HEAP32[(15644)>>2] = $111;
   return;
  } else {
   $$2 = $111;
  }
 } else {
  $177 = $90 & -2;
  HEAP32[$89>>2] = $177;
  $178 = $$1347 | 1;
  $179 = ((($$1)) + 4|0);
  HEAP32[$179>>2] = $178;
  $180 = (($87) + ($$1347)|0);
  HEAP32[$180>>2] = $$1347;
  $$2 = $$1347;
 }
 $181 = $$2 >>> 3;
 $182 = ($$2>>>0)<(256);
 if ($182) {
  $183 = $181 << 1;
  $184 = (15676 + ($183<<2)|0);
  $185 = HEAP32[3909]|0;
  $186 = 1 << $181;
  $187 = $185 & $186;
  $188 = ($187|0)==(0);
  if ($188) {
   $189 = $185 | $186;
   HEAP32[3909] = $189;
   $$pre = ((($184)) + 8|0);
   $$0368 = $184;$$pre$phiZ2D = $$pre;
  } else {
   $190 = ((($184)) + 8|0);
   $191 = HEAP32[$190>>2]|0;
   $$0368 = $191;$$pre$phiZ2D = $190;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $192 = ((($$0368)) + 12|0);
  HEAP32[$192>>2] = $$1;
  $193 = ((($$1)) + 8|0);
  HEAP32[$193>>2] = $$0368;
  $194 = ((($$1)) + 12|0);
  HEAP32[$194>>2] = $184;
  return;
 }
 $195 = $$2 >>> 8;
 $196 = ($195|0)==(0);
 if ($196) {
  $$0361 = 0;
 } else {
  $197 = ($$2>>>0)>(16777215);
  if ($197) {
   $$0361 = 31;
  } else {
   $198 = (($195) + 1048320)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 8;
   $201 = $195 << $200;
   $202 = (($201) + 520192)|0;
   $203 = $202 >>> 16;
   $204 = $203 & 4;
   $205 = $204 | $200;
   $206 = $201 << $204;
   $207 = (($206) + 245760)|0;
   $208 = $207 >>> 16;
   $209 = $208 & 2;
   $210 = $205 | $209;
   $211 = (14 - ($210))|0;
   $212 = $206 << $209;
   $213 = $212 >>> 15;
   $214 = (($211) + ($213))|0;
   $215 = $214 << 1;
   $216 = (($214) + 7)|0;
   $217 = $$2 >>> $216;
   $218 = $217 & 1;
   $219 = $218 | $215;
   $$0361 = $219;
  }
 }
 $220 = (15940 + ($$0361<<2)|0);
 $221 = ((($$1)) + 28|0);
 HEAP32[$221>>2] = $$0361;
 $222 = ((($$1)) + 16|0);
 $223 = ((($$1)) + 20|0);
 HEAP32[$223>>2] = 0;
 HEAP32[$222>>2] = 0;
 $224 = HEAP32[(15640)>>2]|0;
 $225 = 1 << $$0361;
 $226 = $224 & $225;
 $227 = ($226|0)==(0);
 do {
  if ($227) {
   $228 = $224 | $225;
   HEAP32[(15640)>>2] = $228;
   HEAP32[$220>>2] = $$1;
   $229 = ((($$1)) + 24|0);
   HEAP32[$229>>2] = $220;
   $230 = ((($$1)) + 12|0);
   HEAP32[$230>>2] = $$1;
   $231 = ((($$1)) + 8|0);
   HEAP32[$231>>2] = $$1;
  } else {
   $232 = HEAP32[$220>>2]|0;
   $233 = ($$0361|0)==(31);
   $234 = $$0361 >>> 1;
   $235 = (25 - ($234))|0;
   $236 = $233 ? 0 : $235;
   $237 = $$2 << $236;
   $$0348 = $237;$$0349 = $232;
   while(1) {
    $238 = ((($$0349)) + 4|0);
    $239 = HEAP32[$238>>2]|0;
    $240 = $239 & -8;
    $241 = ($240|0)==($$2|0);
    if ($241) {
     label = 73;
     break;
    }
    $242 = $$0348 >>> 31;
    $243 = (((($$0349)) + 16|0) + ($242<<2)|0);
    $244 = $$0348 << 1;
    $245 = HEAP32[$243>>2]|0;
    $246 = ($245|0)==(0|0);
    if ($246) {
     label = 72;
     break;
    } else {
     $$0348 = $244;$$0349 = $245;
    }
   }
   if ((label|0) == 72) {
    HEAP32[$243>>2] = $$1;
    $247 = ((($$1)) + 24|0);
    HEAP32[$247>>2] = $$0349;
    $248 = ((($$1)) + 12|0);
    HEAP32[$248>>2] = $$1;
    $249 = ((($$1)) + 8|0);
    HEAP32[$249>>2] = $$1;
    break;
   }
   else if ((label|0) == 73) {
    $250 = ((($$0349)) + 8|0);
    $251 = HEAP32[$250>>2]|0;
    $252 = ((($251)) + 12|0);
    HEAP32[$252>>2] = $$1;
    HEAP32[$250>>2] = $$1;
    $253 = ((($$1)) + 8|0);
    HEAP32[$253>>2] = $251;
    $254 = ((($$1)) + 12|0);
    HEAP32[$254>>2] = $$0349;
    $255 = ((($$1)) + 24|0);
    HEAP32[$255>>2] = 0;
    break;
   }
  }
 } while(0);
 $256 = HEAP32[(15668)>>2]|0;
 $257 = (($256) + -1)|0;
 HEAP32[(15668)>>2] = $257;
 $258 = ($257|0)==(0);
 if ($258) {
  $$0195$in$i = (16092);
 } else {
  return;
 }
 while(1) {
  $$0195$i = HEAP32[$$0195$in$i>>2]|0;
  $259 = ($$0195$i|0)==(0|0);
  $260 = ((($$0195$i)) + 8|0);
  if ($259) {
   break;
  } else {
   $$0195$in$i = $260;
  }
 }
 HEAP32[(15668)>>2] = -1;
 return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy_264($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 103;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16132|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$26 = $17;
   while(1) {
    $27 = ($26|0)<(0);
    if ($27) {
     break;
    }
    $35 = (($$04855) - ($26))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($26>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($26) - ($41))|0;
    $42 = HEAP32[$$150>>2]|0;
    $43 = (($42) + ($$0)|0);
    HEAP32[$$150>>2] = $43;
    $44 = ((($$150)) + 4|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) - ($$0))|0;
    HEAP32[$44>>2] = $46;
    $47 = HEAP32[$13>>2]|0;
    $48 = $$150;
    HEAP32[$vararg_buffer3>>2] = $47;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $48;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$26 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 | 32;
   HEAP32[$0>>2] = $30;
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$4>>2] = $25;
  HEAP32[$7>>2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function _dummy_264($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 HEAP32[$3>>2] = $1;
 $4 = ((($3)) + 4|0);
 $5 = ((($0)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)!=(0);
 $8 = $7&1;
 $9 = (($2) - ($8))|0;
 HEAP32[$4>>2] = $9;
 $10 = ((($3)) + 8|0);
 $11 = ((($0)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$10>>2] = $12;
 $13 = ((($3)) + 12|0);
 HEAP32[$13>>2] = $6;
 $14 = ((($0)) + 60|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $3;
 HEAP32[$vararg_buffer>>2] = $15;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $16;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $17 = (___syscall145(145,($vararg_buffer|0))|0);
 $18 = (___syscall_ret($17)|0);
 $19 = ($18|0)<(1);
 if ($19) {
  $20 = $18 & 48;
  $21 = $20 ^ 16;
  $22 = HEAP32[$0>>2]|0;
  $23 = $22 | $21;
  HEAP32[$0>>2] = $23;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4>>2]|0;
  $25 = ($18>>>0)>($24>>>0);
  if ($25) {
   $26 = (($18) - ($24))|0;
   $27 = HEAP32[$11>>2]|0;
   $28 = ((($0)) + 4|0);
   HEAP32[$28>>2] = $27;
   $$cast = $27;
   $29 = (($$cast) + ($26)|0);
   $30 = ((($0)) + 8|0);
   HEAP32[$30>>2] = $29;
   $31 = HEAP32[$5>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $$0 = $2;
   } else {
    $33 = ((($$cast)) + 1|0);
    HEAP32[$28>>2] = $33;
    $34 = HEAP8[$$cast>>0]|0;
    $35 = (($2) + -1)|0;
    $36 = (($1) + ($35)|0);
    HEAP8[$36>>0] = $34;
    $$0 = $2;
   }
  } else {
   $$0 = $18;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fgets($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$06266 = 0, $$063 = 0, $$064 = 0, $$1 = 0, $$old2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond3 = 0, $sext$mask = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(-1);
 if ($5) {
  $6 = (___lockfile($2)|0);
  $15 = $6;
 } else {
  $15 = 0;
 }
 $7 = (($1) + -1)|0;
 $8 = ($1|0)<(2);
 if ($8) {
  $9 = ((($2)) + 74|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10 << 24 >> 24;
  $12 = (($11) + 255)|0;
  $13 = $12 | $11;
  $14 = $13&255;
  HEAP8[$9>>0] = $14;
  $16 = ($15|0)==(0);
  if (!($16)) {
   ___unlockfile($2);
  }
  $17 = ($7|0)==(0);
  if ($17) {
   HEAP8[$0>>0] = 0;
   $$0 = $0;
  } else {
   $$0 = 0;
  }
 } else {
  $$old2 = ($7|0)==(0);
  L11: do {
   if ($$old2) {
    $$1 = $0;
    label = 17;
   } else {
    $18 = ((($2)) + 4|0);
    $19 = ((($2)) + 8|0);
    $$063 = $7;$$064 = $0;
    while(1) {
     $20 = HEAP32[$18>>2]|0;
     $21 = HEAP32[$19>>2]|0;
     $22 = $20;
     $23 = (($21) - ($22))|0;
     $24 = (_memchr($20,10,$23)|0);
     $25 = ($24|0)==(0|0);
     $26 = $24;
     $27 = (1 - ($22))|0;
     $28 = (($27) + ($26))|0;
     $29 = $25 ? $23 : $28;
     $30 = ($29>>>0)<($$063>>>0);
     $31 = $30 ? $29 : $$063;
     (_memcpy(($$064|0),($20|0),($31|0))|0);
     $32 = HEAP32[$18>>2]|0;
     $33 = (($32) + ($31)|0);
     HEAP32[$18>>2] = $33;
     $34 = (($$064) + ($31)|0);
     $35 = (($$063) - ($31))|0;
     $36 = ($35|0)!=(0);
     $or$cond = $25 & $36;
     if (!($or$cond)) {
      $$1 = $34;
      label = 17;
      break L11;
     }
     $37 = HEAP32[$19>>2]|0;
     $38 = ($33>>>0)<($37>>>0);
     if ($38) {
      $39 = ((($33)) + 1|0);
      HEAP32[$18>>2] = $39;
      $40 = HEAP8[$33>>0]|0;
      $41 = $40&255;
      $50 = $41;
     } else {
      $42 = (___uflow($2)|0);
      $43 = ($42|0)<(0);
      if ($43) {
       break;
      } else {
       $50 = $42;
      }
     }
     $48 = (($35) + -1)|0;
     $49 = $50&255;
     $51 = ((($34)) + 1|0);
     HEAP8[$34>>0] = $49;
     $sext$mask = $50 & 255;
     $52 = ($sext$mask|0)!=(10);
     $53 = ($48|0)!=(0);
     $or$cond3 = $53 & $52;
     if ($or$cond3) {
      $$063 = $48;$$064 = $51;
     } else {
      $$1 = $51;
      label = 17;
      break L11;
     }
    }
    $44 = ($34|0)==($0|0);
    if ($44) {
     $$06266 = 0;
    } else {
     $45 = HEAP32[$2>>2]|0;
     $46 = $45 & 16;
     $47 = ($46|0)==(0);
     if ($47) {
      $$06266 = 0;
     } else {
      $$1 = $34;
      label = 17;
     }
    }
   }
  } while(0);
  if ((label|0) == 17) {
   $54 = ($0|0)==(0|0);
   if ($54) {
    $$06266 = 0;
   } else {
    HEAP8[$$1>>0] = 0;
    $$06266 = $0;
   }
  }
  $55 = ($15|0)==(0);
  if ($55) {
   $$0 = $$06266;
  } else {
   ___unlockfile($2);
   $$0 = $$06266;
  }
 }
 return ($$0|0);
}
function _strchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___strchrnul($0,$1)|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = $1&255;
 $5 = ($3<<24>>24)==($4<<24>>24);
 $6 = $5 ? $2 : 0;
 return ($6|0);
}
function _isspace($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(32);
 $2 = (($0) + -9)|0;
 $3 = ($2>>>0)<(5);
 $narrow = $1 | $3;
 $4 = $narrow&1;
 return ($4|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01519 = $0;$23 = $1;
   while(1) {
    $4 = HEAP8[$$01519>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$sink = $23;
     break L1;
    }
    $6 = ((($$01519)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01519 = $6;$23 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn = $$0;
   while(1) {
    $19 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$sink = $21;
 }
 $22 = (($$sink) - ($1))|0;
 return ($22|0);
}
function _strtox($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $5 = sp;
 HEAP32[$5>>2] = 0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $0;
 $7 = ((($5)) + 44|0);
 HEAP32[$7>>2] = $0;
 $8 = ($0|0)<(0|0);
 $9 = ((($0)) + 2147483647|0);
 $$sink = $8 ? (-1) : $9;
 $10 = ((($5)) + 8|0);
 HEAP32[$10>>2] = $$sink;
 $11 = ((($5)) + 76|0);
 HEAP32[$11>>2] = -1;
 ___shlim($5,0);
 $12 = (___intscan($5,$2,1,$3,$4)|0);
 $13 = tempRet0;
 $14 = ($1|0)==(0|0);
 if (!($14)) {
  $15 = ((($5)) + 108|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$6>>2]|0;
  $18 = HEAP32[$10>>2]|0;
  $19 = (($17) + ($16))|0;
  $20 = (($19) - ($18))|0;
  $21 = (($0) + ($20)|0);
  HEAP32[$1>>2] = $21;
 }
 tempRet0 = ($13);
 STACKTOP = sp;return ($12|0);
}
function ___shlim($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 104|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ((($0)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1|0)!=(0);
 $10 = ($7|0)>($1|0);
 $or$cond = $9 & $10;
 $11 = $4;
 $12 = $6;
 $13 = (($12) + ($1)|0);
 $$sink = $or$cond ? $13 : $11;
 $14 = ((($0)) + 100|0);
 HEAP32[$14>>2] = $$sink;
 return;
}
function ___intscan($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0154222 = 0, $$0157 = 0, $$0157$ = 0, $$0159 = 0, $$1155192 = 0, $$1158 = 0, $$1160 = 0, $$1160169 = 0, $$1165 = 0, $$1165167 = 0, $$1165168 = 0, $$166 = 0, $$2156210 = 0, $$2161$be = 0, $$2161$lcssa = 0, $$3162$be = 0, $$3162215 = 0, $$4163$be = 0, $$4163$lcssa = 0, $$5$be = 0;
 var $$6$be = 0, $$6$lcssa = 0, $$7$be = 0, $$7198 = 0, $$8 = 0, $$9$be = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond187 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($1>>>0)>(36);
 L1: do {
  if ($5) {
   $8 = (___errno_location()|0);
   HEAP32[$8>>2] = 22;
   $289 = 0;$290 = 0;
  } else {
   $6 = ((($0)) + 4|0);
   $7 = ((($0)) + 100|0);
   while(1) {
    $9 = HEAP32[$6>>2]|0;
    $10 = HEAP32[$7>>2]|0;
    $11 = ($9>>>0)<($10>>>0);
    if ($11) {
     $12 = ((($9)) + 1|0);
     HEAP32[$6>>2] = $12;
     $13 = HEAP8[$9>>0]|0;
     $14 = $13&255;
     $16 = $14;
    } else {
     $15 = (___shgetc($0)|0);
     $16 = $15;
    }
    $17 = (_isspace($16)|0);
    $18 = ($17|0)==(0);
    if ($18) {
     break;
    }
   }
   L11: do {
    switch ($16|0) {
    case 43: case 45:  {
     $19 = ($16|0)==(45);
     $20 = $19 << 31 >> 31;
     $21 = HEAP32[$6>>2]|0;
     $22 = HEAP32[$7>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$6>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $$0157 = $20;$$0159 = $26;
      break L11;
     } else {
      $27 = (___shgetc($0)|0);
      $$0157 = $20;$$0159 = $27;
      break L11;
     }
     break;
    }
    default: {
     $$0157 = 0;$$0159 = $16;
    }
    }
   } while(0);
   $28 = ($1|0)==(0);
   $29 = $1 | 16;
   $30 = ($29|0)==(16);
   $31 = ($$0159|0)==(48);
   $or$cond5 = $30 & $31;
   do {
    if ($or$cond5) {
     $32 = HEAP32[$6>>2]|0;
     $33 = HEAP32[$7>>2]|0;
     $34 = ($32>>>0)<($33>>>0);
     if ($34) {
      $35 = ((($32)) + 1|0);
      HEAP32[$6>>2] = $35;
      $36 = HEAP8[$32>>0]|0;
      $37 = $36&255;
      $40 = $37;
     } else {
      $38 = (___shgetc($0)|0);
      $40 = $38;
     }
     $39 = $40 | 32;
     $41 = ($39|0)==(120);
     if (!($41)) {
      if ($28) {
       $$1160169 = $40;$$1165167 = 8;
       label = 46;
       break;
      } else {
       $$1160 = $40;$$1165 = $1;
       label = 32;
       break;
      }
     }
     $42 = HEAP32[$6>>2]|0;
     $43 = HEAP32[$7>>2]|0;
     $44 = ($42>>>0)<($43>>>0);
     if ($44) {
      $45 = ((($42)) + 1|0);
      HEAP32[$6>>2] = $45;
      $46 = HEAP8[$42>>0]|0;
      $47 = $46&255;
      $50 = $47;
     } else {
      $48 = (___shgetc($0)|0);
      $50 = $48;
     }
     $49 = ((12710) + ($50)|0);
     $51 = HEAP8[$49>>0]|0;
     $52 = ($51&255)>(15);
     if ($52) {
      $53 = HEAP32[$7>>2]|0;
      $54 = ($53|0)==(0|0);
      if (!($54)) {
       $55 = HEAP32[$6>>2]|0;
       $56 = ((($55)) + -1|0);
       HEAP32[$6>>2] = $56;
      }
      $57 = ($2|0)==(0);
      if ($57) {
       ___shlim($0,0);
       $289 = 0;$290 = 0;
       break L1;
      }
      if ($54) {
       $289 = 0;$290 = 0;
       break L1;
      }
      $58 = HEAP32[$6>>2]|0;
      $59 = ((($58)) + -1|0);
      HEAP32[$6>>2] = $59;
      $289 = 0;$290 = 0;
      break L1;
     } else {
      $$1160169 = $50;$$1165167 = 16;
      label = 46;
     }
    } else {
     $$166 = $28 ? 10 : $1;
     $60 = ((12710) + ($$0159)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = ($$166>>>0)>($62>>>0);
     if ($63) {
      $$1160 = $$0159;$$1165 = $$166;
      label = 32;
     } else {
      $64 = HEAP32[$7>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $66 = HEAP32[$6>>2]|0;
       $67 = ((($66)) + -1|0);
       HEAP32[$6>>2] = $67;
      }
      ___shlim($0,0);
      $68 = (___errno_location()|0);
      HEAP32[$68>>2] = 22;
      $289 = 0;$290 = 0;
      break L1;
     }
    }
   } while(0);
   L43: do {
    if ((label|0) == 32) {
     $69 = ($$1165|0)==(10);
     if ($69) {
      $70 = (($$1160) + -48)|0;
      $71 = ($70>>>0)<(10);
      if ($71) {
       $$0154222 = 0;$74 = $70;
       while(1) {
        $72 = ($$0154222*10)|0;
        $73 = (($72) + ($74))|0;
        $75 = HEAP32[$6>>2]|0;
        $76 = HEAP32[$7>>2]|0;
        $77 = ($75>>>0)<($76>>>0);
        if ($77) {
         $78 = ((($75)) + 1|0);
         HEAP32[$6>>2] = $78;
         $79 = HEAP8[$75>>0]|0;
         $80 = $79&255;
         $$2161$be = $80;
        } else {
         $81 = (___shgetc($0)|0);
         $$2161$be = $81;
        }
        $82 = (($$2161$be) + -48)|0;
        $83 = ($82>>>0)<(10);
        $84 = ($73>>>0)<(429496729);
        $85 = $83 & $84;
        if ($85) {
         $$0154222 = $73;$74 = $82;
        } else {
         break;
        }
       }
       $$2161$lcssa = $$2161$be;$291 = $73;$292 = 0;
      } else {
       $$2161$lcssa = $$1160;$291 = 0;$292 = 0;
      }
      $86 = (($$2161$lcssa) + -48)|0;
      $87 = ($86>>>0)<(10);
      if ($87) {
       $$3162215 = $$2161$lcssa;$88 = $291;$89 = $292;$92 = $86;
       while(1) {
        $90 = (___muldi3(($88|0),($89|0),10,0)|0);
        $91 = tempRet0;
        $93 = ($92|0)<(0);
        $94 = $93 << 31 >> 31;
        $95 = $92 ^ -1;
        $96 = $94 ^ -1;
        $97 = ($91>>>0)>($96>>>0);
        $98 = ($90>>>0)>($95>>>0);
        $99 = ($91|0)==($96|0);
        $100 = $99 & $98;
        $101 = $97 | $100;
        if ($101) {
         $$1165168 = 10;$$8 = $$3162215;$293 = $88;$294 = $89;
         label = 72;
         break L43;
        }
        $102 = (_i64Add(($90|0),($91|0),($92|0),($94|0))|0);
        $103 = tempRet0;
        $104 = HEAP32[$6>>2]|0;
        $105 = HEAP32[$7>>2]|0;
        $106 = ($104>>>0)<($105>>>0);
        if ($106) {
         $107 = ((($104)) + 1|0);
         HEAP32[$6>>2] = $107;
         $108 = HEAP8[$104>>0]|0;
         $109 = $108&255;
         $$3162$be = $109;
        } else {
         $110 = (___shgetc($0)|0);
         $$3162$be = $110;
        }
        $111 = (($$3162$be) + -48)|0;
        $112 = ($111>>>0)<(10);
        $113 = ($103>>>0)<(429496729);
        $114 = ($102>>>0)<(2576980378);
        $115 = ($103|0)==(429496729);
        $116 = $115 & $114;
        $117 = $113 | $116;
        $or$cond7 = $112 & $117;
        if ($or$cond7) {
         $$3162215 = $$3162$be;$88 = $102;$89 = $103;$92 = $111;
        } else {
         break;
        }
       }
       $118 = ($111>>>0)>(9);
       if ($118) {
        $$1158 = $$0157;$262 = $103;$264 = $102;
       } else {
        $$1165168 = 10;$$8 = $$3162$be;$293 = $102;$294 = $103;
        label = 72;
       }
      } else {
       $$1158 = $$0157;$262 = $292;$264 = $291;
      }
     } else {
      $$1160169 = $$1160;$$1165167 = $$1165;
      label = 46;
     }
    }
   } while(0);
   L63: do {
    if ((label|0) == 46) {
     $119 = (($$1165167) + -1)|0;
     $120 = $119 & $$1165167;
     $121 = ($120|0)==(0);
     if ($121) {
      $126 = ($$1165167*23)|0;
      $127 = $126 >>> 5;
      $128 = $127 & 7;
      $129 = (12966 + ($128)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130 << 24 >> 24;
      $132 = ((12710) + ($$1160169)|0);
      $133 = HEAP8[$132>>0]|0;
      $134 = $133&255;
      $135 = ($$1165167>>>0)>($134>>>0);
      if ($135) {
       $$1155192 = 0;$138 = $134;
       while(1) {
        $136 = $$1155192 << $131;
        $137 = $138 | $136;
        $139 = HEAP32[$6>>2]|0;
        $140 = HEAP32[$7>>2]|0;
        $141 = ($139>>>0)<($140>>>0);
        if ($141) {
         $142 = ((($139)) + 1|0);
         HEAP32[$6>>2] = $142;
         $143 = HEAP8[$139>>0]|0;
         $144 = $143&255;
         $$4163$be = $144;
        } else {
         $145 = (___shgetc($0)|0);
         $$4163$be = $145;
        }
        $146 = ((12710) + ($$4163$be)|0);
        $147 = HEAP8[$146>>0]|0;
        $148 = $147&255;
        $149 = ($$1165167>>>0)>($148>>>0);
        $150 = ($137>>>0)<(134217728);
        $151 = $150 & $149;
        if ($151) {
         $$1155192 = $137;$138 = $148;
        } else {
         break;
        }
       }
       $$4163$lcssa = $$4163$be;$155 = $147;$158 = 0;$160 = $137;
      } else {
       $$4163$lcssa = $$1160169;$155 = $133;$158 = 0;$160 = 0;
      }
      $152 = (_bitshift64Lshr(-1,-1,($131|0))|0);
      $153 = tempRet0;
      $154 = $155&255;
      $156 = ($$1165167>>>0)<=($154>>>0);
      $157 = ($153>>>0)<($158>>>0);
      $159 = ($152>>>0)<($160>>>0);
      $161 = ($153|0)==($158|0);
      $162 = $161 & $159;
      $163 = $157 | $162;
      $or$cond187 = $156 | $163;
      if ($or$cond187) {
       $$1165168 = $$1165167;$$8 = $$4163$lcssa;$293 = $160;$294 = $158;
       label = 72;
       break;
      } else {
       $164 = $160;$165 = $158;$169 = $155;
      }
      while(1) {
       $166 = (_bitshift64Shl(($164|0),($165|0),($131|0))|0);
       $167 = tempRet0;
       $168 = $169&255;
       $170 = $166 | $168;
       $171 = HEAP32[$6>>2]|0;
       $172 = HEAP32[$7>>2]|0;
       $173 = ($171>>>0)<($172>>>0);
       if ($173) {
        $174 = ((($171)) + 1|0);
        HEAP32[$6>>2] = $174;
        $175 = HEAP8[$171>>0]|0;
        $176 = $175&255;
        $$5$be = $176;
       } else {
        $177 = (___shgetc($0)|0);
        $$5$be = $177;
       }
       $178 = ((12710) + ($$5$be)|0);
       $179 = HEAP8[$178>>0]|0;
       $180 = $179&255;
       $181 = ($$1165167>>>0)<=($180>>>0);
       $182 = ($167>>>0)>($153>>>0);
       $183 = ($170>>>0)>($152>>>0);
       $184 = ($167|0)==($153|0);
       $185 = $184 & $183;
       $186 = $182 | $185;
       $or$cond = $181 | $186;
       if ($or$cond) {
        $$1165168 = $$1165167;$$8 = $$5$be;$293 = $170;$294 = $167;
        label = 72;
        break L63;
       } else {
        $164 = $170;$165 = $167;$169 = $179;
       }
      }
     }
     $122 = ((12710) + ($$1160169)|0);
     $123 = HEAP8[$122>>0]|0;
     $124 = $123&255;
     $125 = ($$1165167>>>0)>($124>>>0);
     if ($125) {
      $$2156210 = 0;$189 = $124;
      while(1) {
       $187 = Math_imul($$2156210, $$1165167)|0;
       $188 = (($189) + ($187))|0;
       $190 = HEAP32[$6>>2]|0;
       $191 = HEAP32[$7>>2]|0;
       $192 = ($190>>>0)<($191>>>0);
       if ($192) {
        $193 = ((($190)) + 1|0);
        HEAP32[$6>>2] = $193;
        $194 = HEAP8[$190>>0]|0;
        $195 = $194&255;
        $$6$be = $195;
       } else {
        $196 = (___shgetc($0)|0);
        $$6$be = $196;
       }
       $197 = ((12710) + ($$6$be)|0);
       $198 = HEAP8[$197>>0]|0;
       $199 = $198&255;
       $200 = ($$1165167>>>0)>($199>>>0);
       $201 = ($188>>>0)<(119304647);
       $202 = $201 & $200;
       if ($202) {
        $$2156210 = $188;$189 = $199;
       } else {
        break;
       }
      }
      $$6$lcssa = $$6$be;$204 = $198;$295 = $188;$296 = 0;
     } else {
      $$6$lcssa = $$1160169;$204 = $123;$295 = 0;$296 = 0;
     }
     $203 = $204&255;
     $205 = ($$1165167>>>0)>($203>>>0);
     if ($205) {
      $206 = (___udivdi3(-1,-1,($$1165167|0),0)|0);
      $207 = tempRet0;
      $$7198 = $$6$lcssa;$208 = $296;$210 = $295;$218 = $204;
      while(1) {
       $209 = ($208>>>0)>($207>>>0);
       $211 = ($210>>>0)>($206>>>0);
       $212 = ($208|0)==($207|0);
       $213 = $212 & $211;
       $214 = $209 | $213;
       if ($214) {
        $$1165168 = $$1165167;$$8 = $$7198;$293 = $210;$294 = $208;
        label = 72;
        break L63;
       }
       $215 = (___muldi3(($210|0),($208|0),($$1165167|0),0)|0);
       $216 = tempRet0;
       $217 = $218&255;
       $219 = $217 ^ -1;
       $220 = ($216>>>0)>(4294967295);
       $221 = ($215>>>0)>($219>>>0);
       $222 = ($216|0)==(-1);
       $223 = $222 & $221;
       $224 = $220 | $223;
       if ($224) {
        $$1165168 = $$1165167;$$8 = $$7198;$293 = $210;$294 = $208;
        label = 72;
        break L63;
       }
       $225 = (_i64Add(($215|0),($216|0),($217|0),0)|0);
       $226 = tempRet0;
       $227 = HEAP32[$6>>2]|0;
       $228 = HEAP32[$7>>2]|0;
       $229 = ($227>>>0)<($228>>>0);
       if ($229) {
        $230 = ((($227)) + 1|0);
        HEAP32[$6>>2] = $230;
        $231 = HEAP8[$227>>0]|0;
        $232 = $231&255;
        $$7$be = $232;
       } else {
        $233 = (___shgetc($0)|0);
        $$7$be = $233;
       }
       $234 = ((12710) + ($$7$be)|0);
       $235 = HEAP8[$234>>0]|0;
       $236 = $235&255;
       $237 = ($$1165167>>>0)>($236>>>0);
       if ($237) {
        $$7198 = $$7$be;$208 = $226;$210 = $225;$218 = $235;
       } else {
        $$1165168 = $$1165167;$$8 = $$7$be;$293 = $225;$294 = $226;
        label = 72;
        break;
       }
      }
     } else {
      $$1165168 = $$1165167;$$8 = $$6$lcssa;$293 = $295;$294 = $296;
      label = 72;
     }
    }
   } while(0);
   if ((label|0) == 72) {
    $238 = ((12710) + ($$8)|0);
    $239 = HEAP8[$238>>0]|0;
    $240 = $239&255;
    $241 = ($$1165168>>>0)>($240>>>0);
    if ($241) {
     while(1) {
      $242 = HEAP32[$6>>2]|0;
      $243 = HEAP32[$7>>2]|0;
      $244 = ($242>>>0)<($243>>>0);
      if ($244) {
       $245 = ((($242)) + 1|0);
       HEAP32[$6>>2] = $245;
       $246 = HEAP8[$242>>0]|0;
       $247 = $246&255;
       $$9$be = $247;
      } else {
       $248 = (___shgetc($0)|0);
       $$9$be = $248;
      }
      $249 = ((12710) + ($$9$be)|0);
      $250 = HEAP8[$249>>0]|0;
      $251 = $250&255;
      $252 = ($$1165168>>>0)>($251>>>0);
      if (!($252)) {
       break;
      }
     }
     $253 = (___errno_location()|0);
     HEAP32[$253>>2] = 34;
     $254 = $3 & 1;
     $255 = ($254|0)==(0);
     $256 = (0)==(0);
     $257 = $255 & $256;
     $$0157$ = $257 ? $$0157 : 0;
     $$1158 = $$0157$;$262 = $4;$264 = $3;
    } else {
     $$1158 = $$0157;$262 = $294;$264 = $293;
    }
   }
   $258 = HEAP32[$7>>2]|0;
   $259 = ($258|0)==(0|0);
   if (!($259)) {
    $260 = HEAP32[$6>>2]|0;
    $261 = ((($260)) + -1|0);
    HEAP32[$6>>2] = $261;
   }
   $263 = ($262>>>0)<($4>>>0);
   $265 = ($264>>>0)<($3>>>0);
   $266 = ($262|0)==($4|0);
   $267 = $266 & $265;
   $268 = $263 | $267;
   if (!($268)) {
    $269 = $3 & 1;
    $270 = ($269|0)!=(0);
    $271 = (0)!=(0);
    $272 = $270 | $271;
    $273 = ($$1158|0)!=(0);
    $or$cond12 = $272 | $273;
    if (!($or$cond12)) {
     $274 = (___errno_location()|0);
     HEAP32[$274>>2] = 34;
     $275 = (_i64Add(($3|0),($4|0),-1,-1)|0);
     $276 = tempRet0;
     $289 = $276;$290 = $275;
     break;
    }
    $277 = ($262>>>0)>($4>>>0);
    $278 = ($264>>>0)>($3>>>0);
    $279 = ($262|0)==($4|0);
    $280 = $279 & $278;
    $281 = $277 | $280;
    if ($281) {
     $282 = (___errno_location()|0);
     HEAP32[$282>>2] = 34;
     $289 = $4;$290 = $3;
     break;
    }
   }
   $283 = ($$1158|0)<(0);
   $284 = $283 << 31 >> 31;
   $285 = $264 ^ $$1158;
   $286 = $262 ^ $284;
   $287 = (_i64Subtract(($285|0),($286|0),($$1158|0),($284|0))|0);
   $288 = tempRet0;
   $289 = $288;$290 = $287;
  }
 } while(0);
 tempRet0 = ($289);
 return ($290|0);
}
function ___shgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert29 = 0, $$pre = 0, $$pre30 = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 104|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  label = 3;
 } else {
  $4 = ((($0)) + 108|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)<($2|0);
  if ($6) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $7 = (___uflow($0)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   label = 4;
  } else {
   $10 = HEAP32[$1>>2]|0;
   $11 = ($10|0)==(0);
   $$phi$trans$insert = ((($0)) + 8|0);
   if ($11) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $$sink = $$pre;$25 = $$pre;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($0)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $14;
    $16 = (($12) - ($15))|0;
    $17 = ((($0)) + 108|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($10) - ($18))|0;
    $20 = ($16|0)<($19|0);
    $21 = $12;
    if ($20) {
     $$sink = $21;$25 = $21;
    } else {
     $22 = (($19) + -1)|0;
     $23 = (($14) + ($22)|0);
     $$sink = $23;$25 = $21;
    }
   }
   $24 = ((($0)) + 100|0);
   HEAP32[$24>>2] = $$sink;
   $26 = ($25|0)==(0|0);
   $$phi$trans$insert29 = ((($0)) + 4|0);
   if ($26) {
    $$pre30 = HEAP32[$$phi$trans$insert29>>2]|0;
    $36 = $$pre30;
   } else {
    $27 = HEAP32[$$phi$trans$insert29>>2]|0;
    $28 = $25;
    $29 = ((($0)) + 108|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = (($28) + 1)|0;
    $32 = (($31) - ($27))|0;
    $33 = (($32) + ($30))|0;
    HEAP32[$29>>2] = $33;
    $34 = $27;
    $36 = $34;
   }
   $35 = ((($36)) + -1|0);
   $37 = HEAP8[$35>>0]|0;
   $38 = $37&255;
   $39 = ($7|0)==($38|0);
   if ($39) {
    $$0 = $7;
   } else {
    $40 = $7&255;
    HEAP8[$35>>0] = $40;
    $$0 = $7;
   }
  }
 }
 if ((label|0) == 4) {
  $9 = ((($0)) + 100|0);
  HEAP32[$9>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___uflow($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (___toread($0)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (FUNCTION_TABLE_iiii[$5 & 255]($0,$1,1)|0);
  $7 = ($6|0)==(1);
  if ($7) {
   $8 = HEAP8[$1>>0]|0;
   $9 = $8&255;
   $$0 = $9;
  } else {
   $$0 = -1;
  }
 } else {
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8>>>0)>($10>>>0);
 if ($11) {
  $12 = ((($0)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  (FUNCTION_TABLE_iiii[$13 & 255]($0,0,0)|0);
 }
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$9>>2] = 0;
 HEAP32[$7>>2] = 0;
 $15 = HEAP32[$0>>2]|0;
 $16 = $15 & 4;
 $17 = ($16|0)==(0);
 if ($17) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 8|0);
  HEAP32[$24>>2] = $23;
  $25 = ((($0)) + 4|0);
  HEAP32[$25>>2] = $23;
  $26 = $15 << 27;
  $sext = $26 >> 31;
  $$0 = $sext;
 } else {
  $18 = $15 | 32;
  HEAP32[$0>>2] = $18;
  $$0 = -1;
 }
 return ($$0|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   $$2 = $$035$lcssa;$$3 = 0;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;
   } else {
    $20 = Math_imul($3, 16843009)|0;
    $21 = ($$036$lcssa64>>>0)>(3);
    L11: do {
     if ($21) {
      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
      while(1) {
       $22 = HEAP32[$$046>>2]|0;
       $23 = $22 ^ $20;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        break;
       }
       $29 = ((($$046)) + 4|0);
       $30 = (($$13745) + -4)|0;
       $31 = ($30>>>0)>(3);
       if ($31) {
        $$046 = $29;$$13745 = $30;
       } else {
        $$0$lcssa = $29;$$137$lcssa = $30;
        label = 11;
        break L11;
       }
      }
      $$140 = $$046;$$23839 = $$13745;
     } else {
      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $32 = ($$137$lcssa|0)==(0);
     if ($32) {
      $$2 = $$0$lcssa;$$3 = 0;
      break;
     } else {
      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;
     }
    }
    while(1) {
     $33 = HEAP8[$$140>>0]|0;
     $34 = ($33<<24>>24)==($18<<24>>24);
     if ($34) {
      $$2 = $$140;$$3 = $$23839;
      break L8;
     }
     $35 = ((($$140)) + 1|0);
     $36 = (($$23839) + -1)|0;
     $37 = ($36|0)==(0);
     if ($37) {
      $$2 = $35;$$3 = 0;
      break;
     } else {
      $$140 = $35;$$23839 = $36;
     }
    }
   }
  }
 } while(0);
 $38 = ($$3|0)!=(0);
 $39 = $38 ? $$2 : 0;
 return ($39|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $8 = (_strlen($0)|0);
   $9 = (($0) + ($8)|0);
   $$0 = $9;
  } else {
   $4 = $0;
   $5 = $4 & 3;
   $6 = ($5|0)==(0);
   if ($6) {
    $$030$lcssa = $0;
   } else {
    $7 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = HEAP8[$$03039>>0]|0;
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($7<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = HEAP32[$$030$lcssa>>2]|0;
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = HEAP8[$$1>>0]|0;
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($0,$1)|0);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$029 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = HEAP8[$$02642>>0]|0;
     HEAP8[$$02741>>0] = $9;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      $$029 = $$02741;
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = HEAP32[$$026$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     HEAP32[$$02536>>2] = $24;
     $25 = HEAP32[$22>>2]|0;
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1$ph = $$0$lcssa;$$128$ph = $$025$lcssa;
   label = 8;
  } else {
   $$1$ph = $1;$$128$ph = $0;
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = HEAP8[$$1$ph>>0]|0;
  HEAP8[$$128$ph>>0] = $31;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $$029 = $$128$ph;
  } else {
   $$12834 = $$128$ph;$$135 = $$1$ph;
   while(1) {
    $33 = ((($$135)) + 1|0);
    $34 = ((($$12834)) + 1|0);
    $35 = HEAP8[$33>>0]|0;
    HEAP8[$34>>0] = $35;
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     $$029 = $34;
     break;
    } else {
     $$12834 = $34;$$135 = $33;
    }
   }
  }
 }
 return ($$029|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $4 = sp + 124|0;
 $5 = sp;
 dest=$5; src=816; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $$$015 = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $$$015;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($$$015)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($$$015|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $$1$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $3 = sp + 120|0;
 $4 = sp + 80|0;
 $5 = sp;
 $6 = sp + 136|0;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $39 = $12;
  } else {
   $39 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (FUNCTION_TABLE_iiii[$32 & 255]($0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $$ = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $$;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $$1$ = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $40 = ($39|0)==(0);
  if (!($40)) {
   ___unlockfile($0);
  }
  $$0 = $$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$ = 0, $$$0259 = 0, $$$0262 = 0, $$$4266 = 0, $$$5 = 0, $$0 = 0, $$0228 = 0, $$0228$ = 0, $$0229316 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240$lcssa = 0, $$0240$lcssa356 = 0, $$0240315 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0, $$0249303 = 0;
 var $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0254$$0254$ = 0, $$0259 = 0, $$0262$lcssa = 0, $$0262309 = 0, $$0269 = 0, $$0269$phi = 0, $$1 = 0, $$1230327 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241326 = 0, $$1244314 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0;
 var $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242$lcssa = 0, $$2242302 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2256$ = 0, $$2256$$$2256 = 0, $$2261 = 0, $$2271 = 0, $$279$ = 0, $$286 = 0, $$287 = 0, $$3257 = 0, $$3265 = 0;
 var $$3272 = 0, $$3300 = 0, $$4258354 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa291 = 0, $$lcssa292 = 0, $$pre = 0, $$pre342 = 0, $$pre344 = 0, $$pre345 = 0, $$pre345$pre = 0, $$pre346 = 0, $$pre348 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0.0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0;
 var $arglist_next3 = 0, $brmerge = 0, $brmerge308 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $or$cond = 0, $or$cond276 = 0, $or$cond278 = 0, $or$cond281 = 0, $storemerge274 = 0, $trunc = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 16|0;
 $6 = sp;
 $7 = sp + 24|0;
 $8 = sp + 8|0;
 $9 = sp + 20|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243 = 0;$$0247 = 0;$$0269 = 0;
 L1: while(1) {
  $15 = ($$0247|0)>(-1);
  do {
   if ($15) {
    $16 = (2147483647 - ($$0247))|0;
    $17 = ($$0243|0)>($16|0);
    if ($17) {
     $18 = (___errno_location()|0);
     HEAP32[$18>>2] = 75;
     $$1248 = -1;
     break;
    } else {
     $19 = (($$0243) + ($$0247))|0;
     $$1248 = $19;
     break;
    }
   } else {
    $$1248 = $$0247;
   }
  } while(0);
  $20 = HEAP32[$5>>2]|0;
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(0);
  if ($22) {
   label = 88;
   break;
  } else {
   $23 = $21;$25 = $20;
  }
  L9: while(1) {
   switch ($23<<24>>24) {
   case 37:  {
    $$0249303 = $25;$27 = $25;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$0249$lcssa = $25;
    break L9;
    break;
   }
   default: {
   }
   }
   $24 = ((($25)) + 1|0);
   HEAP32[$5>>2] = $24;
   $$pre = HEAP8[$24>>0]|0;
   $23 = $$pre;$25 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $26 = ((($27)) + 1|0);
     $28 = HEAP8[$26>>0]|0;
     $29 = ($28<<24>>24)==(37);
     if (!($29)) {
      $$0249$lcssa = $$0249303;
      break L12;
     }
     $30 = ((($$0249303)) + 1|0);
     $31 = ((($27)) + 2|0);
     HEAP32[$5>>2] = $31;
     $32 = HEAP8[$31>>0]|0;
     $33 = ($32<<24>>24)==(37);
     if ($33) {
      $$0249303 = $30;$27 = $31;
      label = 9;
     } else {
      $$0249$lcssa = $30;
      break;
     }
    }
   }
  } while(0);
  $34 = $$0249$lcssa;
  $35 = $20;
  $36 = (($34) - ($35))|0;
  if ($10) {
   _out_323($0,$20,$36);
  }
  $37 = ($36|0)==(0);
  if (!($37)) {
   $$0269$phi = $$0269;$$0243 = $36;$$0247 = $$1248;$$0269 = $$0269$phi;
   continue;
  }
  $38 = HEAP32[$5>>2]|0;
  $39 = ((($38)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $42 = (_isdigit($41)|0);
  $43 = ($42|0)==(0);
  $$pre342 = HEAP32[$5>>2]|0;
  if ($43) {
   $$0253 = -1;$$1270 = $$0269;$$sink = 1;
  } else {
   $44 = ((($$pre342)) + 2|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(36);
   if ($46) {
    $47 = ((($$pre342)) + 1|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 << 24 >> 24;
    $50 = (($49) + -48)|0;
    $$0253 = $50;$$1270 = 1;$$sink = 3;
   } else {
    $$0253 = -1;$$1270 = $$0269;$$sink = 1;
   }
  }
  $51 = (($$pre342) + ($$sink)|0);
  HEAP32[$5>>2] = $51;
  $52 = HEAP8[$51>>0]|0;
  $53 = $52 << 24 >> 24;
  $54 = (($53) + -32)|0;
  $55 = ($54>>>0)>(31);
  $56 = 1 << $54;
  $57 = $56 & 75913;
  $58 = ($57|0)==(0);
  $brmerge308 = $55 | $58;
  if ($brmerge308) {
   $$0262$lcssa = 0;$$lcssa291 = $52;$$lcssa292 = $51;
  } else {
   $$0262309 = 0;$60 = $52;$65 = $51;
   while(1) {
    $59 = $60 << 24 >> 24;
    $61 = (($59) + -32)|0;
    $62 = 1 << $61;
    $63 = $62 | $$0262309;
    $64 = ((($65)) + 1|0);
    HEAP32[$5>>2] = $64;
    $66 = HEAP8[$64>>0]|0;
    $67 = $66 << 24 >> 24;
    $68 = (($67) + -32)|0;
    $69 = ($68>>>0)>(31);
    $70 = 1 << $68;
    $71 = $70 & 75913;
    $72 = ($71|0)==(0);
    $brmerge = $69 | $72;
    if ($brmerge) {
     $$0262$lcssa = $63;$$lcssa291 = $66;$$lcssa292 = $64;
     break;
    } else {
     $$0262309 = $63;$60 = $66;$65 = $64;
    }
   }
  }
  $73 = ($$lcssa291<<24>>24)==(42);
  if ($73) {
   $74 = ((($$lcssa292)) + 1|0);
   $75 = HEAP8[$74>>0]|0;
   $76 = $75 << 24 >> 24;
   $77 = (_isdigit($76)|0);
   $78 = ($77|0)==(0);
   if ($78) {
    label = 23;
   } else {
    $79 = HEAP32[$5>>2]|0;
    $80 = ((($79)) + 2|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = ($81<<24>>24)==(36);
    if ($82) {
     $83 = ((($79)) + 1|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = $84 << 24 >> 24;
     $86 = (($85) + -48)|0;
     $87 = (($4) + ($86<<2)|0);
     HEAP32[$87>>2] = 10;
     $88 = HEAP8[$83>>0]|0;
     $89 = $88 << 24 >> 24;
     $90 = (($89) + -48)|0;
     $91 = (($3) + ($90<<3)|0);
     $92 = $91;
     $93 = $92;
     $94 = HEAP32[$93>>2]|0;
     $95 = (($92) + 4)|0;
     $96 = $95;
     $97 = HEAP32[$96>>2]|0;
     $98 = ((($79)) + 3|0);
     $$0259 = $94;$$2271 = 1;$storemerge274 = $98;
    } else {
     label = 23;
    }
   }
   if ((label|0) == 23) {
    label = 0;
    $99 = ($$1270|0)==(0);
    if (!($99)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $100 = $arglist_current;
     $101 = ((0) + 4|0);
     $expanded4 = $101;
     $expanded = (($expanded4) - 1)|0;
     $102 = (($100) + ($expanded))|0;
     $103 = ((0) + 4|0);
     $expanded8 = $103;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $104 = $102 & $expanded6;
     $105 = $104;
     $106 = HEAP32[$105>>2]|0;
     $arglist_next = ((($105)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $363 = $106;
    } else {
     $363 = 0;
    }
    $107 = HEAP32[$5>>2]|0;
    $108 = ((($107)) + 1|0);
    $$0259 = $363;$$2271 = 0;$storemerge274 = $108;
   }
   HEAP32[$5>>2] = $storemerge274;
   $109 = ($$0259|0)<(0);
   $110 = $$0262$lcssa | 8192;
   $111 = (0 - ($$0259))|0;
   $$$0262 = $109 ? $110 : $$0262$lcssa;
   $$$0259 = $109 ? $111 : $$0259;
   $$1260 = $$$0259;$$1263 = $$$0262;$$3272 = $$2271;$115 = $storemerge274;
  } else {
   $112 = (_getint_324($5)|0);
   $113 = ($112|0)<(0);
   if ($113) {
    $$0 = -1;
    break;
   }
   $$pre344 = HEAP32[$5>>2]|0;
   $$1260 = $112;$$1263 = $$0262$lcssa;$$3272 = $$1270;$115 = $$pre344;
  }
  $114 = HEAP8[$115>>0]|0;
  $116 = ($114<<24>>24)==(46);
  do {
   if ($116) {
    $117 = ((($115)) + 1|0);
    $118 = HEAP8[$117>>0]|0;
    $119 = ($118<<24>>24)==(42);
    if (!($119)) {
     $155 = ((($115)) + 1|0);
     HEAP32[$5>>2] = $155;
     $156 = (_getint_324($5)|0);
     $$pre345$pre = HEAP32[$5>>2]|0;
     $$0254 = $156;$$pre345 = $$pre345$pre;
     break;
    }
    $120 = ((($115)) + 2|0);
    $121 = HEAP8[$120>>0]|0;
    $122 = $121 << 24 >> 24;
    $123 = (_isdigit($122)|0);
    $124 = ($123|0)==(0);
    if (!($124)) {
     $125 = HEAP32[$5>>2]|0;
     $126 = ((($125)) + 3|0);
     $127 = HEAP8[$126>>0]|0;
     $128 = ($127<<24>>24)==(36);
     if ($128) {
      $129 = ((($125)) + 2|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130 << 24 >> 24;
      $132 = (($131) + -48)|0;
      $133 = (($4) + ($132<<2)|0);
      HEAP32[$133>>2] = 10;
      $134 = HEAP8[$129>>0]|0;
      $135 = $134 << 24 >> 24;
      $136 = (($135) + -48)|0;
      $137 = (($3) + ($136<<3)|0);
      $138 = $137;
      $139 = $138;
      $140 = HEAP32[$139>>2]|0;
      $141 = (($138) + 4)|0;
      $142 = $141;
      $143 = HEAP32[$142>>2]|0;
      $144 = ((($125)) + 4|0);
      HEAP32[$5>>2] = $144;
      $$0254 = $140;$$pre345 = $144;
      break;
     }
    }
    $145 = ($$3272|0)==(0);
    if (!($145)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $146 = $arglist_current2;
     $147 = ((0) + 4|0);
     $expanded11 = $147;
     $expanded10 = (($expanded11) - 1)|0;
     $148 = (($146) + ($expanded10))|0;
     $149 = ((0) + 4|0);
     $expanded15 = $149;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $150 = $148 & $expanded13;
     $151 = $150;
     $152 = HEAP32[$151>>2]|0;
     $arglist_next3 = ((($151)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $364 = $152;
    } else {
     $364 = 0;
    }
    $153 = HEAP32[$5>>2]|0;
    $154 = ((($153)) + 2|0);
    HEAP32[$5>>2] = $154;
    $$0254 = $364;$$pre345 = $154;
   } else {
    $$0254 = -1;$$pre345 = $115;
   }
  } while(0);
  $$0252 = 0;$158 = $$pre345;
  while(1) {
   $157 = HEAP8[$158>>0]|0;
   $159 = $157 << 24 >> 24;
   $160 = (($159) + -65)|0;
   $161 = ($160>>>0)>(57);
   if ($161) {
    $$0 = -1;
    break L1;
   }
   $162 = ((($158)) + 1|0);
   HEAP32[$5>>2] = $162;
   $163 = HEAP8[$158>>0]|0;
   $164 = $163 << 24 >> 24;
   $165 = (($164) + -65)|0;
   $166 = ((12975 + (($$0252*58)|0)|0) + ($165)|0);
   $167 = HEAP8[$166>>0]|0;
   $168 = $167&255;
   $169 = (($168) + -1)|0;
   $170 = ($169>>>0)<(8);
   if ($170) {
    $$0252 = $168;$158 = $162;
   } else {
    break;
   }
  }
  $171 = ($167<<24>>24)==(0);
  if ($171) {
   $$0 = -1;
   break;
  }
  $172 = ($167<<24>>24)==(19);
  $173 = ($$0253|0)>(-1);
  do {
   if ($172) {
    if ($173) {
     $$0 = -1;
     break L1;
    } else {
     label = 50;
    }
   } else {
    if ($173) {
     $174 = (($4) + ($$0253<<2)|0);
     HEAP32[$174>>2] = $168;
     $175 = (($3) + ($$0253<<3)|0);
     $176 = $175;
     $177 = $176;
     $178 = HEAP32[$177>>2]|0;
     $179 = (($176) + 4)|0;
     $180 = $179;
     $181 = HEAP32[$180>>2]|0;
     $182 = $6;
     $183 = $182;
     HEAP32[$183>>2] = $178;
     $184 = (($182) + 4)|0;
     $185 = $184;
     HEAP32[$185>>2] = $181;
     label = 50;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg_326($6,$168,$2);
    $$pre346 = HEAP32[$5>>2]|0;
    $187 = $$pre346;
   }
  } while(0);
  if ((label|0) == 50) {
   label = 0;
   if ($10) {
    $187 = $162;
   } else {
    $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
    continue;
   }
  }
  $186 = ((($187)) + -1|0);
  $188 = HEAP8[$186>>0]|0;
  $189 = $188 << 24 >> 24;
  $190 = ($$0252|0)!=(0);
  $191 = $189 & 15;
  $192 = ($191|0)==(3);
  $or$cond276 = $190 & $192;
  $193 = $189 & -33;
  $$0235 = $or$cond276 ? $193 : $189;
  $194 = $$1263 & 8192;
  $195 = ($194|0)==(0);
  $196 = $$1263 & -65537;
  $$1263$ = $195 ? $$1263 : $196;
  L73: do {
   switch ($$0235|0) {
   case 110:  {
    $trunc = $$0252&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $203 = HEAP32[$6>>2]|0;
     HEAP32[$203>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 1:  {
     $204 = HEAP32[$6>>2]|0;
     HEAP32[$204>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 2:  {
     $205 = ($$1248|0)<(0);
     $206 = $205 << 31 >> 31;
     $207 = HEAP32[$6>>2]|0;
     $208 = $207;
     $209 = $208;
     HEAP32[$209>>2] = $$1248;
     $210 = (($208) + 4)|0;
     $211 = $210;
     HEAP32[$211>>2] = $206;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 3:  {
     $212 = $$1248&65535;
     $213 = HEAP32[$6>>2]|0;
     HEAP16[$213>>1] = $212;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 4:  {
     $214 = $$1248&255;
     $215 = HEAP32[$6>>2]|0;
     HEAP8[$215>>0] = $214;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 6:  {
     $216 = HEAP32[$6>>2]|0;
     HEAP32[$216>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 7:  {
     $217 = ($$1248|0)<(0);
     $218 = $217 << 31 >> 31;
     $219 = HEAP32[$6>>2]|0;
     $220 = $219;
     $221 = $220;
     HEAP32[$221>>2] = $$1248;
     $222 = (($220) + 4)|0;
     $223 = $222;
     HEAP32[$223>>2] = $218;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    default: {
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $224 = ($$0254>>>0)>(8);
    $225 = $224 ? $$0254 : 8;
    $226 = $$1263$ | 8;
    $$1236 = 120;$$1255 = $225;$$3265 = $226;
    label = 62;
    break;
   }
   case 88: case 120:  {
    $$1236 = $$0235;$$1255 = $$0254;$$3265 = $$1263$;
    label = 62;
    break;
   }
   case 111:  {
    $242 = $6;
    $243 = $242;
    $244 = HEAP32[$243>>2]|0;
    $245 = (($242) + 4)|0;
    $246 = $245;
    $247 = HEAP32[$246>>2]|0;
    $248 = (_fmt_o($244,$247,$11)|0);
    $249 = $$1263$ & 8;
    $250 = ($249|0)==(0);
    $251 = $248;
    $252 = (($12) - ($251))|0;
    $253 = ($$0254|0)>($252|0);
    $254 = (($252) + 1)|0;
    $255 = $250 | $253;
    $$0254$$0254$ = $255 ? $$0254 : $254;
    $$0228 = $248;$$1233 = 0;$$1238 = 13439;$$2256 = $$0254$$0254$;$$4266 = $$1263$;$280 = $244;$282 = $247;
    label = 68;
    break;
   }
   case 105: case 100:  {
    $256 = $6;
    $257 = $256;
    $258 = HEAP32[$257>>2]|0;
    $259 = (($256) + 4)|0;
    $260 = $259;
    $261 = HEAP32[$260>>2]|0;
    $262 = ($261|0)<(0);
    if ($262) {
     $263 = (_i64Subtract(0,0,($258|0),($261|0))|0);
     $264 = tempRet0;
     $265 = $6;
     $266 = $265;
     HEAP32[$266>>2] = $263;
     $267 = (($265) + 4)|0;
     $268 = $267;
     HEAP32[$268>>2] = $264;
     $$0232 = 1;$$0237 = 13439;$275 = $263;$276 = $264;
     label = 67;
     break L73;
    } else {
     $269 = $$1263$ & 2048;
     $270 = ($269|0)==(0);
     $271 = $$1263$ & 1;
     $272 = ($271|0)==(0);
     $$ = $272 ? 13439 : (13441);
     $$$ = $270 ? $$ : (13440);
     $273 = $$1263$ & 2049;
     $274 = ($273|0)!=(0);
     $$279$ = $274&1;
     $$0232 = $$279$;$$0237 = $$$;$275 = $258;$276 = $261;
     label = 67;
     break L73;
    }
    break;
   }
   case 117:  {
    $197 = $6;
    $198 = $197;
    $199 = HEAP32[$198>>2]|0;
    $200 = (($197) + 4)|0;
    $201 = $200;
    $202 = HEAP32[$201>>2]|0;
    $$0232 = 0;$$0237 = 13439;$275 = $199;$276 = $202;
    label = 67;
    break;
   }
   case 99:  {
    $292 = $6;
    $293 = $292;
    $294 = HEAP32[$293>>2]|0;
    $295 = (($292) + 4)|0;
    $296 = $295;
    $297 = HEAP32[$296>>2]|0;
    $298 = $294&255;
    HEAP8[$13>>0] = $298;
    $$2 = $13;$$2234 = 0;$$2239 = 13439;$$2251 = $11;$$5 = 1;$$6268 = $196;
    break;
   }
   case 109:  {
    $299 = (___errno_location()|0);
    $300 = HEAP32[$299>>2]|0;
    $301 = (_strerror($300)|0);
    $$1 = $301;
    label = 72;
    break;
   }
   case 115:  {
    $302 = HEAP32[$6>>2]|0;
    $303 = ($302|0)!=(0|0);
    $304 = $303 ? $302 : 13449;
    $$1 = $304;
    label = 72;
    break;
   }
   case 67:  {
    $311 = $6;
    $312 = $311;
    $313 = HEAP32[$312>>2]|0;
    $314 = (($311) + 4)|0;
    $315 = $314;
    $316 = HEAP32[$315>>2]|0;
    HEAP32[$8>>2] = $313;
    HEAP32[$14>>2] = 0;
    HEAP32[$6>>2] = $8;
    $$4258354 = -1;$365 = $8;
    label = 76;
    break;
   }
   case 83:  {
    $$pre348 = HEAP32[$6>>2]|0;
    $317 = ($$0254|0)==(0);
    if ($317) {
     _pad_329($0,32,$$1260,0,$$1263$);
     $$0240$lcssa356 = 0;
     label = 85;
    } else {
     $$4258354 = $$0254;$365 = $$pre348;
     label = 76;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $339 = +HEAPF64[$6>>3];
    $340 = (_fmt_fp($0,$339,$$1260,$$0254,$$1263$,$$0235)|0);
    $$0243 = $340;$$0247 = $$1248;$$0269 = $$3272;
    continue L1;
    break;
   }
   default: {
    $$2 = $20;$$2234 = 0;$$2239 = 13439;$$2251 = $11;$$5 = $$0254;$$6268 = $$1263$;
   }
   }
  } while(0);
  L97: do {
   if ((label|0) == 62) {
    label = 0;
    $227 = $6;
    $228 = $227;
    $229 = HEAP32[$228>>2]|0;
    $230 = (($227) + 4)|0;
    $231 = $230;
    $232 = HEAP32[$231>>2]|0;
    $233 = $$1236 & 32;
    $234 = (_fmt_x($229,$232,$11,$233)|0);
    $235 = ($229|0)==(0);
    $236 = ($232|0)==(0);
    $237 = $235 & $236;
    $238 = $$3265 & 8;
    $239 = ($238|0)==(0);
    $or$cond278 = $239 | $237;
    $240 = $$1236 >> 4;
    $241 = (13439 + ($240)|0);
    $$286 = $or$cond278 ? 13439 : $241;
    $$287 = $or$cond278 ? 0 : 2;
    $$0228 = $234;$$1233 = $$287;$$1238 = $$286;$$2256 = $$1255;$$4266 = $$3265;$280 = $229;$282 = $232;
    label = 68;
   }
   else if ((label|0) == 67) {
    label = 0;
    $277 = (_fmt_u($275,$276,$11)|0);
    $$0228 = $277;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $$1263$;$280 = $275;$282 = $276;
    label = 68;
   }
   else if ((label|0) == 72) {
    label = 0;
    $305 = (_memchr($$1,0,$$0254)|0);
    $306 = ($305|0)==(0|0);
    $307 = $305;
    $308 = $$1;
    $309 = (($307) - ($308))|0;
    $310 = (($$1) + ($$0254)|0);
    $$3257 = $306 ? $$0254 : $309;
    $$1250 = $306 ? $310 : $305;
    $$2 = $$1;$$2234 = 0;$$2239 = 13439;$$2251 = $$1250;$$5 = $$3257;$$6268 = $196;
   }
   else if ((label|0) == 76) {
    label = 0;
    $$0229316 = $365;$$0240315 = 0;$$1244314 = 0;
    while(1) {
     $318 = HEAP32[$$0229316>>2]|0;
     $319 = ($318|0)==(0);
     if ($319) {
      $$0240$lcssa = $$0240315;$$2245 = $$1244314;
      break;
     }
     $320 = (_wctomb($9,$318)|0);
     $321 = ($320|0)<(0);
     $322 = (($$4258354) - ($$0240315))|0;
     $323 = ($320>>>0)>($322>>>0);
     $or$cond281 = $321 | $323;
     if ($or$cond281) {
      $$0240$lcssa = $$0240315;$$2245 = $320;
      break;
     }
     $324 = ((($$0229316)) + 4|0);
     $325 = (($320) + ($$0240315))|0;
     $326 = ($$4258354>>>0)>($325>>>0);
     if ($326) {
      $$0229316 = $324;$$0240315 = $325;$$1244314 = $320;
     } else {
      $$0240$lcssa = $325;$$2245 = $320;
      break;
     }
    }
    $327 = ($$2245|0)<(0);
    if ($327) {
     $$0 = -1;
     break L1;
    }
    _pad_329($0,32,$$1260,$$0240$lcssa,$$1263$);
    $328 = ($$0240$lcssa|0)==(0);
    if ($328) {
     $$0240$lcssa356 = 0;
     label = 85;
    } else {
     $$1230327 = $365;$$1241326 = 0;
     while(1) {
      $329 = HEAP32[$$1230327>>2]|0;
      $330 = ($329|0)==(0);
      if ($330) {
       $$0240$lcssa356 = $$0240$lcssa;
       label = 85;
       break L97;
      }
      $331 = (_wctomb($9,$329)|0);
      $332 = (($331) + ($$1241326))|0;
      $333 = ($332|0)>($$0240$lcssa|0);
      if ($333) {
       $$0240$lcssa356 = $$0240$lcssa;
       label = 85;
       break L97;
      }
      $334 = ((($$1230327)) + 4|0);
      _out_323($0,$9,$331);
      $335 = ($332>>>0)<($$0240$lcssa>>>0);
      if ($335) {
       $$1230327 = $334;$$1241326 = $332;
      } else {
       $$0240$lcssa356 = $$0240$lcssa;
       label = 85;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 68) {
   label = 0;
   $278 = ($$2256|0)>(-1);
   $279 = $$4266 & -65537;
   $$$4266 = $278 ? $279 : $$4266;
   $281 = ($280|0)!=(0);
   $283 = ($282|0)!=(0);
   $284 = $281 | $283;
   $285 = ($$2256|0)!=(0);
   $or$cond = $285 | $284;
   $286 = $$0228;
   $287 = (($12) - ($286))|0;
   $288 = $284 ^ 1;
   $289 = $288&1;
   $290 = (($287) + ($289))|0;
   $291 = ($$2256|0)>($290|0);
   $$2256$ = $291 ? $$2256 : $290;
   $$2256$$$2256 = $or$cond ? $$2256$ : $$2256;
   $$0228$ = $or$cond ? $$0228 : $11;
   $$2 = $$0228$;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $11;$$5 = $$2256$$$2256;$$6268 = $$$4266;
  }
  else if ((label|0) == 85) {
   label = 0;
   $336 = $$1263$ ^ 8192;
   _pad_329($0,32,$$1260,$$0240$lcssa356,$336);
   $337 = ($$1260|0)>($$0240$lcssa356|0);
   $338 = $337 ? $$1260 : $$0240$lcssa356;
   $$0243 = $338;$$0247 = $$1248;$$0269 = $$3272;
   continue;
  }
  $341 = $$2251;
  $342 = $$2;
  $343 = (($341) - ($342))|0;
  $344 = ($$5|0)<($343|0);
  $$$5 = $344 ? $343 : $$5;
  $345 = (($$$5) + ($$2234))|0;
  $346 = ($$1260|0)<($345|0);
  $$2261 = $346 ? $345 : $$1260;
  _pad_329($0,32,$$2261,$345,$$6268);
  _out_323($0,$$2239,$$2234);
  $347 = $$6268 ^ 65536;
  _pad_329($0,48,$$2261,$345,$347);
  _pad_329($0,48,$$$5,$343,0);
  _out_323($0,$$2,$343);
  $348 = $$6268 ^ 8192;
  _pad_329($0,32,$$2261,$345,$348);
  $$0243 = $$2261;$$0247 = $$1248;$$0269 = $$3272;
 }
 L116: do {
  if ((label|0) == 88) {
   $349 = ($0|0)==(0|0);
   if ($349) {
    $350 = ($$0269|0)==(0);
    if ($350) {
     $$0 = 0;
    } else {
     $$2242302 = 1;
     while(1) {
      $351 = (($4) + ($$2242302<<2)|0);
      $352 = HEAP32[$351>>2]|0;
      $353 = ($352|0)==(0);
      if ($353) {
       $$2242$lcssa = $$2242302;
       break;
      }
      $355 = (($3) + ($$2242302<<3)|0);
      _pop_arg_326($355,$352,$2);
      $356 = (($$2242302) + 1)|0;
      $357 = ($$2242302|0)<(9);
      if ($357) {
       $$2242302 = $356;
      } else {
       $$2242$lcssa = $356;
       break;
      }
     }
     $354 = ($$2242$lcssa|0)<(10);
     if ($354) {
      $$3300 = $$2242$lcssa;
      while(1) {
       $360 = (($4) + ($$3300<<2)|0);
       $361 = HEAP32[$360>>2]|0;
       $362 = ($361|0)==(0);
       if (!($362)) {
        $$0 = -1;
        break L116;
       }
       $358 = (($$3300) + 1)|0;
       $359 = ($$3300|0)<(9);
       if ($359) {
        $$3300 = $358;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _out_323($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint_324($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = HEAP32[$0>>2]|0;
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg_326($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (13487 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___uremdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = $10&255;
   $13 = $12 | 48;
   $14 = ((($$0914)) + -1|0);
   HEAP8[$14>>0] = $13;
   $15 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $16 = tempRet0;
   $17 = ($9>>>0)>(9);
   $18 = ($8>>>0)>(4294967295);
   $19 = ($9|0)==(9);
   $20 = $19 & $18;
   $21 = $17 | $20;
   if ($21) {
    $$0914 = $14;$8 = $15;$9 = $16;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $15;$$09$lcssa = $14;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $22 = ($$010$lcssa$off0|0)==(0);
 if ($22) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $23 = (($$012>>>0) % 10)&-1;
   $24 = $23 | 48;
   $25 = $24&255;
   $26 = ((($$111)) + -1|0);
   HEAP8[$26>>0] = $25;
   $27 = (($$012>>>0) / 10)&-1;
   $28 = ($$012>>>0)<(10);
   if ($28) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = $27;$$111 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_137()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function _pad_329($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out_323($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out_323($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$ = 0, $$$$564 = 0.0, $$$3484 = 0, $$$3484699 = 0, $$$3484700 = 0, $$$3501 = 0, $$$4502 = 0, $$$543 = 0.0, $$$564 = 0.0, $$0 = 0, $$0463$lcssa = 0, $$0463587 = 0, $$0464597 = 0, $$0471 = 0.0, $$0479 = 0, $$0487644 = 0, $$0488 = 0, $$0488655 = 0, $$0488657 = 0;
 var $$0496$$9 = 0, $$0497656 = 0, $$0498 = 0, $$0509585 = 0.0, $$0510 = 0, $$0511 = 0, $$0514639 = 0, $$0520 = 0, $$0521 = 0, $$0521$ = 0, $$0523 = 0, $$0527 = 0, $$0527$in633 = 0, $$0530638 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0;
 var $$1482663 = 0, $$1489643 = 0, $$1499$lcssa = 0, $$1499662 = 0, $$1508586 = 0, $$1512$lcssa = 0, $$1512610 = 0, $$1515 = 0, $$1524 = 0, $$1526 = 0, $$1528617 = 0, $$1531$lcssa = 0, $$1531632 = 0, $$1601 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2476$$549 = 0, $$2476$$551 = 0, $$2483$ph = 0;
 var $$2500 = 0, $$2513 = 0, $$2516621 = 0, $$2529 = 0, $$2532620 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484650 = 0, $$3501$lcssa = 0, $$3501649 = 0, $$3533616 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478593 = 0, $$4492 = 0, $$4502 = 0, $$4518 = 0, $$5$lcssa = 0, $$534$ = 0;
 var $$540 = 0, $$540$ = 0, $$543 = 0.0, $$548 = 0, $$5486$lcssa = 0, $$5486626 = 0, $$5493600 = 0, $$550 = 0, $$5519$ph = 0, $$557 = 0, $$5605 = 0, $$561 = 0, $$564 = 0.0, $$6 = 0, $$6494592 = 0, $$7495604 = 0, $$7505 = 0, $$7505$ = 0, $$7505$ph = 0, $$8 = 0;
 var $$9$ph = 0, $$lcssa675 = 0, $$neg = 0, $$neg568 = 0, $$pn = 0, $$pr = 0, $$pr566 = 0, $$pre = 0, $$pre$phi691Z2D = 0, $$pre$phi698Z2D = 0, $$pre690 = 0, $$pre693 = 0, $$pre697 = 0, $$sink = 0, $$sink547$lcssa = 0, $$sink547625 = 0, $$sink560 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0.0, $119 = 0.0, $12 = 0;
 var $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0.0, $232 = 0.0, $233 = 0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond542 = 0, $or$cond545 = 0, $or$cond556 = 0, $or$cond6 = 0, $scevgep686 = 0, $scevgep686687 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $6 = sp + 8|0;
 $7 = sp;
 $8 = sp + 524|0;
 $9 = $8;
 $10 = sp + 512|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 (___DOUBLE_BITS_330($1)|0);
 $12 = tempRet0;
 $13 = ($12|0)<(0);
 if ($13) {
  $14 = - $1;
  $$0471 = $14;$$0520 = 1;$$0521 = 13456;
 } else {
  $15 = $4 & 2048;
  $16 = ($15|0)==(0);
  $17 = $4 & 1;
  $18 = ($17|0)==(0);
  $$ = $18 ? (13457) : (13462);
  $$$ = $16 ? $$ : (13459);
  $19 = $4 & 2049;
  $20 = ($19|0)!=(0);
  $$534$ = $20&1;
  $$0471 = $1;$$0520 = $$534$;$$0521 = $$$;
 }
 (___DOUBLE_BITS_330($$0471)|0);
 $21 = tempRet0;
 $22 = $21 & 2146435072;
 $23 = (0)==(0);
 $24 = ($22|0)==(2146435072);
 $25 = $23 & $24;
 do {
  if ($25) {
   $26 = $5 & 32;
   $27 = ($26|0)!=(0);
   $28 = $27 ? 13475 : 13479;
   $29 = ($$0471 != $$0471) | (0.0 != 0.0);
   $30 = $27 ? 15406 : 13483;
   $$0510 = $29 ? $30 : $28;
   $31 = (($$0520) + 3)|0;
   $32 = $4 & -65537;
   _pad_329($0,32,$2,$31,$32);
   _out_323($0,$$0521,$$0520);
   _out_323($0,$$0510,3);
   $33 = $4 ^ 8192;
   _pad_329($0,32,$2,$31,$33);
   $$sink560 = $31;
  } else {
   $34 = (+_frexpl($$0471,$7));
   $35 = $34 * 2.0;
   $36 = $35 != 0.0;
   if ($36) {
    $37 = HEAP32[$7>>2]|0;
    $38 = (($37) + -1)|0;
    HEAP32[$7>>2] = $38;
   }
   $39 = $5 | 32;
   $40 = ($39|0)==(97);
   if ($40) {
    $41 = $5 & 32;
    $42 = ($41|0)==(0);
    $43 = ((($$0521)) + 9|0);
    $$0521$ = $42 ? $$0521 : $43;
    $44 = $$0520 | 2;
    $45 = ($3>>>0)>(11);
    $46 = (12 - ($3))|0;
    $47 = ($46|0)==(0);
    $48 = $45 | $47;
    do {
     if ($48) {
      $$1472 = $35;
     } else {
      $$0509585 = 8.0;$$1508586 = $46;
      while(1) {
       $49 = (($$1508586) + -1)|0;
       $50 = $$0509585 * 16.0;
       $51 = ($49|0)==(0);
       if ($51) {
        break;
       } else {
        $$0509585 = $50;$$1508586 = $49;
       }
      }
      $52 = HEAP8[$$0521$>>0]|0;
      $53 = ($52<<24>>24)==(45);
      if ($53) {
       $54 = - $35;
       $55 = $54 - $50;
       $56 = $50 + $55;
       $57 = - $56;
       $$1472 = $57;
       break;
      } else {
       $58 = $35 + $50;
       $59 = $58 - $50;
       $$1472 = $59;
       break;
      }
     }
    } while(0);
    $60 = HEAP32[$7>>2]|0;
    $61 = ($60|0)<(0);
    $62 = (0 - ($60))|0;
    $63 = $61 ? $62 : $60;
    $64 = ($63|0)<(0);
    $65 = $64 << 31 >> 31;
    $66 = (_fmt_u($63,$65,$11)|0);
    $67 = ($66|0)==($11|0);
    if ($67) {
     $68 = ((($10)) + 11|0);
     HEAP8[$68>>0] = 48;
     $$0511 = $68;
    } else {
     $$0511 = $66;
    }
    $69 = $60 >> 31;
    $70 = $69 & 2;
    $71 = (($70) + 43)|0;
    $72 = $71&255;
    $73 = ((($$0511)) + -1|0);
    HEAP8[$73>>0] = $72;
    $74 = (($5) + 15)|0;
    $75 = $74&255;
    $76 = ((($$0511)) + -2|0);
    HEAP8[$76>>0] = $75;
    $77 = ($3|0)<(1);
    $78 = $4 & 8;
    $79 = ($78|0)==(0);
    $$0523 = $8;$$2473 = $$1472;
    while(1) {
     $80 = (~~(($$2473)));
     $81 = (13487 + ($80)|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = $82&255;
     $84 = $41 | $83;
     $85 = $84&255;
     $86 = ((($$0523)) + 1|0);
     HEAP8[$$0523>>0] = $85;
     $87 = (+($80|0));
     $88 = $$2473 - $87;
     $89 = $88 * 16.0;
     $90 = $86;
     $91 = (($90) - ($9))|0;
     $92 = ($91|0)==(1);
     if ($92) {
      $93 = $89 == 0.0;
      $or$cond3$not = $77 & $93;
      $or$cond = $79 & $or$cond3$not;
      if ($or$cond) {
       $$1524 = $86;
      } else {
       $94 = ((($$0523)) + 2|0);
       HEAP8[$86>>0] = 46;
       $$1524 = $94;
      }
     } else {
      $$1524 = $86;
     }
     $95 = $89 != 0.0;
     if ($95) {
      $$0523 = $$1524;$$2473 = $89;
     } else {
      break;
     }
    }
    $96 = ($3|0)==(0);
    $$pre693 = $$1524;
    if ($96) {
     label = 24;
    } else {
     $97 = (-2 - ($9))|0;
     $98 = (($97) + ($$pre693))|0;
     $99 = ($98|0)<($3|0);
     if ($99) {
      $100 = (($3) + 2)|0;
      $$pre690 = (($$pre693) - ($9))|0;
      $$pre$phi691Z2D = $$pre690;$$sink = $100;
     } else {
      label = 24;
     }
    }
    if ((label|0) == 24) {
     $101 = (($$pre693) - ($9))|0;
     $$pre$phi691Z2D = $101;$$sink = $101;
    }
    $102 = $11;
    $103 = $76;
    $104 = (($102) - ($103))|0;
    $105 = (($104) + ($44))|0;
    $106 = (($105) + ($$sink))|0;
    _pad_329($0,32,$2,$106,$4);
    _out_323($0,$$0521$,$44);
    $107 = $4 ^ 65536;
    _pad_329($0,48,$2,$106,$107);
    _out_323($0,$8,$$pre$phi691Z2D);
    $108 = (($$sink) - ($$pre$phi691Z2D))|0;
    _pad_329($0,48,$108,0,0);
    _out_323($0,$76,$104);
    $109 = $4 ^ 8192;
    _pad_329($0,32,$2,$106,$109);
    $$sink560 = $106;
    break;
   }
   $110 = ($3|0)<(0);
   $$540 = $110 ? 6 : $3;
   if ($36) {
    $111 = $35 * 268435456.0;
    $112 = HEAP32[$7>>2]|0;
    $113 = (($112) + -28)|0;
    HEAP32[$7>>2] = $113;
    $$3 = $111;$$pr = $113;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $35;$$pr = $$pre;
   }
   $114 = ($$pr|0)<(0);
   $115 = ((($6)) + 288|0);
   $$561 = $114 ? $6 : $115;
   $$0498 = $$561;$$4 = $$3;
   while(1) {
    $116 = (~~(($$4))>>>0);
    HEAP32[$$0498>>2] = $116;
    $117 = ((($$0498)) + 4|0);
    $118 = (+($116>>>0));
    $119 = $$4 - $118;
    $120 = $119 * 1.0E+9;
    $121 = $120 != 0.0;
    if ($121) {
     $$0498 = $117;$$4 = $120;
    } else {
     break;
    }
   }
   $122 = ($$pr|0)>(0);
   if ($122) {
    $$1482663 = $$561;$$1499662 = $117;$123 = $$pr;
    while(1) {
     $124 = ($123|0)<(29);
     $125 = $124 ? $123 : 29;
     $$0488655 = ((($$1499662)) + -4|0);
     $126 = ($$0488655>>>0)<($$1482663>>>0);
     if ($126) {
      $$2483$ph = $$1482663;
     } else {
      $$0488657 = $$0488655;$$0497656 = 0;
      while(1) {
       $127 = HEAP32[$$0488657>>2]|0;
       $128 = (_bitshift64Shl(($127|0),0,($125|0))|0);
       $129 = tempRet0;
       $130 = (_i64Add(($128|0),($129|0),($$0497656|0),0)|0);
       $131 = tempRet0;
       $132 = (___uremdi3(($130|0),($131|0),1000000000,0)|0);
       $133 = tempRet0;
       HEAP32[$$0488657>>2] = $132;
       $134 = (___udivdi3(($130|0),($131|0),1000000000,0)|0);
       $135 = tempRet0;
       $$0488 = ((($$0488657)) + -4|0);
       $136 = ($$0488>>>0)<($$1482663>>>0);
       if ($136) {
        break;
       } else {
        $$0488657 = $$0488;$$0497656 = $134;
       }
      }
      $137 = ($134|0)==(0);
      if ($137) {
       $$2483$ph = $$1482663;
      } else {
       $138 = ((($$1482663)) + -4|0);
       HEAP32[$138>>2] = $134;
       $$2483$ph = $138;
      }
     }
     $$2500 = $$1499662;
     while(1) {
      $139 = ($$2500>>>0)>($$2483$ph>>>0);
      if (!($139)) {
       break;
      }
      $140 = ((($$2500)) + -4|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = ($141|0)==(0);
      if ($142) {
       $$2500 = $140;
      } else {
       break;
      }
     }
     $143 = HEAP32[$7>>2]|0;
     $144 = (($143) - ($125))|0;
     HEAP32[$7>>2] = $144;
     $145 = ($144|0)>(0);
     if ($145) {
      $$1482663 = $$2483$ph;$$1499662 = $$2500;$123 = $144;
     } else {
      $$1482$lcssa = $$2483$ph;$$1499$lcssa = $$2500;$$pr566 = $144;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$561;$$1499$lcssa = $117;$$pr566 = $$pr;
   }
   $146 = ($$pr566|0)<(0);
   if ($146) {
    $147 = (($$540) + 25)|0;
    $148 = (($147|0) / 9)&-1;
    $149 = (($148) + 1)|0;
    $150 = ($39|0)==(102);
    $$3484650 = $$1482$lcssa;$$3501649 = $$1499$lcssa;$152 = $$pr566;
    while(1) {
     $151 = (0 - ($152))|0;
     $153 = ($151|0)<(9);
     $154 = $153 ? $151 : 9;
     $155 = ($$3484650>>>0)<($$3501649>>>0);
     if ($155) {
      $159 = 1 << $154;
      $160 = (($159) + -1)|0;
      $161 = 1000000000 >>> $154;
      $$0487644 = 0;$$1489643 = $$3484650;
      while(1) {
       $162 = HEAP32[$$1489643>>2]|0;
       $163 = $162 & $160;
       $164 = $162 >>> $154;
       $165 = (($164) + ($$0487644))|0;
       HEAP32[$$1489643>>2] = $165;
       $166 = Math_imul($163, $161)|0;
       $167 = ((($$1489643)) + 4|0);
       $168 = ($167>>>0)<($$3501649>>>0);
       if ($168) {
        $$0487644 = $166;$$1489643 = $167;
       } else {
        break;
       }
      }
      $169 = HEAP32[$$3484650>>2]|0;
      $170 = ($169|0)==(0);
      $171 = ((($$3484650)) + 4|0);
      $$$3484 = $170 ? $171 : $$3484650;
      $172 = ($166|0)==(0);
      if ($172) {
       $$$3484700 = $$$3484;$$4502 = $$3501649;
      } else {
       $173 = ((($$3501649)) + 4|0);
       HEAP32[$$3501649>>2] = $166;
       $$$3484700 = $$$3484;$$4502 = $173;
      }
     } else {
      $156 = HEAP32[$$3484650>>2]|0;
      $157 = ($156|0)==(0);
      $158 = ((($$3484650)) + 4|0);
      $$$3484699 = $157 ? $158 : $$3484650;
      $$$3484700 = $$$3484699;$$4502 = $$3501649;
     }
     $174 = $150 ? $$561 : $$$3484700;
     $175 = $$4502;
     $176 = $174;
     $177 = (($175) - ($176))|0;
     $178 = $177 >> 2;
     $179 = ($178|0)>($149|0);
     $180 = (($174) + ($149<<2)|0);
     $$$4502 = $179 ? $180 : $$4502;
     $181 = HEAP32[$7>>2]|0;
     $182 = (($181) + ($154))|0;
     HEAP32[$7>>2] = $182;
     $183 = ($182|0)<(0);
     if ($183) {
      $$3484650 = $$$3484700;$$3501649 = $$$4502;$152 = $182;
     } else {
      $$3484$lcssa = $$$3484700;$$3501$lcssa = $$$4502;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$3501$lcssa = $$1499$lcssa;
   }
   $184 = ($$3484$lcssa>>>0)<($$3501$lcssa>>>0);
   $185 = $$561;
   if ($184) {
    $186 = $$3484$lcssa;
    $187 = (($185) - ($186))|0;
    $188 = $187 >> 2;
    $189 = ($188*9)|0;
    $190 = HEAP32[$$3484$lcssa>>2]|0;
    $191 = ($190>>>0)<(10);
    if ($191) {
     $$1515 = $189;
    } else {
     $$0514639 = $189;$$0530638 = 10;
     while(1) {
      $192 = ($$0530638*10)|0;
      $193 = (($$0514639) + 1)|0;
      $194 = ($190>>>0)<($192>>>0);
      if ($194) {
       $$1515 = $193;
       break;
      } else {
       $$0514639 = $193;$$0530638 = $192;
      }
     }
    }
   } else {
    $$1515 = 0;
   }
   $195 = ($39|0)!=(102);
   $196 = $195 ? $$1515 : 0;
   $197 = (($$540) - ($196))|0;
   $198 = ($39|0)==(103);
   $199 = ($$540|0)!=(0);
   $200 = $199 & $198;
   $$neg = $200 << 31 >> 31;
   $201 = (($197) + ($$neg))|0;
   $202 = $$3501$lcssa;
   $203 = (($202) - ($185))|0;
   $204 = $203 >> 2;
   $205 = ($204*9)|0;
   $206 = (($205) + -9)|0;
   $207 = ($201|0)<($206|0);
   if ($207) {
    $208 = ((($$561)) + 4|0);
    $209 = (($201) + 9216)|0;
    $210 = (($209|0) / 9)&-1;
    $211 = (($210) + -1024)|0;
    $212 = (($208) + ($211<<2)|0);
    $213 = (($209|0) % 9)&-1;
    $214 = ($213|0)<(8);
    if ($214) {
     $$0527$in633 = $213;$$1531632 = 10;
     while(1) {
      $$0527 = (($$0527$in633) + 1)|0;
      $215 = ($$1531632*10)|0;
      $216 = ($$0527$in633|0)<(7);
      if ($216) {
       $$0527$in633 = $$0527;$$1531632 = $215;
      } else {
       $$1531$lcssa = $215;
       break;
      }
     }
    } else {
     $$1531$lcssa = 10;
    }
    $217 = HEAP32[$212>>2]|0;
    $218 = (($217>>>0) % ($$1531$lcssa>>>0))&-1;
    $219 = ($218|0)==(0);
    $220 = ((($212)) + 4|0);
    $221 = ($220|0)==($$3501$lcssa|0);
    $or$cond542 = $221 & $219;
    if ($or$cond542) {
     $$4492 = $212;$$4518 = $$1515;$$8 = $$3484$lcssa;
    } else {
     $222 = (($217>>>0) / ($$1531$lcssa>>>0))&-1;
     $223 = $222 & 1;
     $224 = ($223|0)==(0);
     $$543 = $224 ? 9007199254740992.0 : 9007199254740994.0;
     $225 = (($$1531$lcssa|0) / 2)&-1;
     $226 = ($218>>>0)<($225>>>0);
     $227 = ($218|0)==($225|0);
     $or$cond545 = $221 & $227;
     $$564 = $or$cond545 ? 1.0 : 1.5;
     $$$564 = $226 ? 0.5 : $$564;
     $228 = ($$0520|0)==(0);
     if ($228) {
      $$1467 = $$$564;$$1469 = $$543;
     } else {
      $229 = HEAP8[$$0521>>0]|0;
      $230 = ($229<<24>>24)==(45);
      $231 = - $$543;
      $232 = - $$$564;
      $$$543 = $230 ? $231 : $$543;
      $$$$564 = $230 ? $232 : $$$564;
      $$1467 = $$$$564;$$1469 = $$$543;
     }
     $233 = (($217) - ($218))|0;
     HEAP32[$212>>2] = $233;
     $234 = $$1469 + $$1467;
     $235 = $234 != $$1469;
     if ($235) {
      $236 = (($233) + ($$1531$lcssa))|0;
      HEAP32[$212>>2] = $236;
      $237 = ($236>>>0)>(999999999);
      if ($237) {
       $$5486626 = $$3484$lcssa;$$sink547625 = $212;
       while(1) {
        $238 = ((($$sink547625)) + -4|0);
        HEAP32[$$sink547625>>2] = 0;
        $239 = ($238>>>0)<($$5486626>>>0);
        if ($239) {
         $240 = ((($$5486626)) + -4|0);
         HEAP32[$240>>2] = 0;
         $$6 = $240;
        } else {
         $$6 = $$5486626;
        }
        $241 = HEAP32[$238>>2]|0;
        $242 = (($241) + 1)|0;
        HEAP32[$238>>2] = $242;
        $243 = ($242>>>0)>(999999999);
        if ($243) {
         $$5486626 = $$6;$$sink547625 = $238;
        } else {
         $$5486$lcssa = $$6;$$sink547$lcssa = $238;
         break;
        }
       }
      } else {
       $$5486$lcssa = $$3484$lcssa;$$sink547$lcssa = $212;
      }
      $244 = $$5486$lcssa;
      $245 = (($185) - ($244))|0;
      $246 = $245 >> 2;
      $247 = ($246*9)|0;
      $248 = HEAP32[$$5486$lcssa>>2]|0;
      $249 = ($248>>>0)<(10);
      if ($249) {
       $$4492 = $$sink547$lcssa;$$4518 = $247;$$8 = $$5486$lcssa;
      } else {
       $$2516621 = $247;$$2532620 = 10;
       while(1) {
        $250 = ($$2532620*10)|0;
        $251 = (($$2516621) + 1)|0;
        $252 = ($248>>>0)<($250>>>0);
        if ($252) {
         $$4492 = $$sink547$lcssa;$$4518 = $251;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2516621 = $251;$$2532620 = $250;
        }
       }
      }
     } else {
      $$4492 = $212;$$4518 = $$1515;$$8 = $$3484$lcssa;
     }
    }
    $253 = ((($$4492)) + 4|0);
    $254 = ($$3501$lcssa>>>0)>($253>>>0);
    $$$3501 = $254 ? $253 : $$3501$lcssa;
    $$5519$ph = $$4518;$$7505$ph = $$$3501;$$9$ph = $$8;
   } else {
    $$5519$ph = $$1515;$$7505$ph = $$3501$lcssa;$$9$ph = $$3484$lcssa;
   }
   $$7505 = $$7505$ph;
   while(1) {
    $255 = ($$7505>>>0)>($$9$ph>>>0);
    if (!($255)) {
     $$lcssa675 = 0;
     break;
    }
    $256 = ((($$7505)) + -4|0);
    $257 = HEAP32[$256>>2]|0;
    $258 = ($257|0)==(0);
    if ($258) {
     $$7505 = $256;
    } else {
     $$lcssa675 = 1;
     break;
    }
   }
   $259 = (0 - ($$5519$ph))|0;
   do {
    if ($198) {
     $not$ = $199 ^ 1;
     $260 = $not$&1;
     $$540$ = (($$540) + ($260))|0;
     $261 = ($$540$|0)>($$5519$ph|0);
     $262 = ($$5519$ph|0)>(-5);
     $or$cond6 = $261 & $262;
     if ($or$cond6) {
      $263 = (($5) + -1)|0;
      $$neg568 = (($$540$) + -1)|0;
      $264 = (($$neg568) - ($$5519$ph))|0;
      $$0479 = $263;$$2476 = $264;
     } else {
      $265 = (($5) + -2)|0;
      $266 = (($$540$) + -1)|0;
      $$0479 = $265;$$2476 = $266;
     }
     $267 = $4 & 8;
     $268 = ($267|0)==(0);
     if ($268) {
      if ($$lcssa675) {
       $269 = ((($$7505)) + -4|0);
       $270 = HEAP32[$269>>2]|0;
       $271 = ($270|0)==(0);
       if ($271) {
        $$2529 = 9;
       } else {
        $272 = (($270>>>0) % 10)&-1;
        $273 = ($272|0)==(0);
        if ($273) {
         $$1528617 = 0;$$3533616 = 10;
         while(1) {
          $274 = ($$3533616*10)|0;
          $275 = (($$1528617) + 1)|0;
          $276 = (($270>>>0) % ($274>>>0))&-1;
          $277 = ($276|0)==(0);
          if ($277) {
           $$1528617 = $275;$$3533616 = $274;
          } else {
           $$2529 = $275;
           break;
          }
         }
        } else {
         $$2529 = 0;
        }
       }
      } else {
       $$2529 = 9;
      }
      $278 = $$0479 | 32;
      $279 = ($278|0)==(102);
      $280 = $$7505;
      $281 = (($280) - ($185))|0;
      $282 = $281 >> 2;
      $283 = ($282*9)|0;
      $284 = (($283) + -9)|0;
      if ($279) {
       $285 = (($284) - ($$2529))|0;
       $286 = ($285|0)>(0);
       $$548 = $286 ? $285 : 0;
       $287 = ($$2476|0)<($$548|0);
       $$2476$$549 = $287 ? $$2476 : $$548;
       $$1480 = $$0479;$$3477 = $$2476$$549;$$pre$phi698Z2D = 0;
       break;
      } else {
       $288 = (($284) + ($$5519$ph))|0;
       $289 = (($288) - ($$2529))|0;
       $290 = ($289|0)>(0);
       $$550 = $290 ? $289 : 0;
       $291 = ($$2476|0)<($$550|0);
       $$2476$$551 = $291 ? $$2476 : $$550;
       $$1480 = $$0479;$$3477 = $$2476$$551;$$pre$phi698Z2D = 0;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;$$pre$phi698Z2D = $267;
     }
    } else {
     $$pre697 = $4 & 8;
     $$1480 = $5;$$3477 = $$540;$$pre$phi698Z2D = $$pre697;
    }
   } while(0);
   $292 = $$3477 | $$pre$phi698Z2D;
   $293 = ($292|0)!=(0);
   $294 = $293&1;
   $295 = $$1480 | 32;
   $296 = ($295|0)==(102);
   if ($296) {
    $297 = ($$5519$ph|0)>(0);
    $298 = $297 ? $$5519$ph : 0;
    $$2513 = 0;$$pn = $298;
   } else {
    $299 = ($$5519$ph|0)<(0);
    $300 = $299 ? $259 : $$5519$ph;
    $301 = ($300|0)<(0);
    $302 = $301 << 31 >> 31;
    $303 = (_fmt_u($300,$302,$11)|0);
    $304 = $11;
    $305 = $303;
    $306 = (($304) - ($305))|0;
    $307 = ($306|0)<(2);
    if ($307) {
     $$1512610 = $303;
     while(1) {
      $308 = ((($$1512610)) + -1|0);
      HEAP8[$308>>0] = 48;
      $309 = $308;
      $310 = (($304) - ($309))|0;
      $311 = ($310|0)<(2);
      if ($311) {
       $$1512610 = $308;
      } else {
       $$1512$lcssa = $308;
       break;
      }
     }
    } else {
     $$1512$lcssa = $303;
    }
    $312 = $$5519$ph >> 31;
    $313 = $312 & 2;
    $314 = (($313) + 43)|0;
    $315 = $314&255;
    $316 = ((($$1512$lcssa)) + -1|0);
    HEAP8[$316>>0] = $315;
    $317 = $$1480&255;
    $318 = ((($$1512$lcssa)) + -2|0);
    HEAP8[$318>>0] = $317;
    $319 = $318;
    $320 = (($304) - ($319))|0;
    $$2513 = $318;$$pn = $320;
   }
   $321 = (($$0520) + 1)|0;
   $322 = (($321) + ($$3477))|0;
   $$1526 = (($322) + ($294))|0;
   $323 = (($$1526) + ($$pn))|0;
   _pad_329($0,32,$2,$323,$4);
   _out_323($0,$$0521,$$0520);
   $324 = $4 ^ 65536;
   _pad_329($0,48,$2,$323,$324);
   if ($296) {
    $325 = ($$9$ph>>>0)>($$561>>>0);
    $$0496$$9 = $325 ? $$561 : $$9$ph;
    $326 = ((($8)) + 9|0);
    $327 = $326;
    $328 = ((($8)) + 8|0);
    $$5493600 = $$0496$$9;
    while(1) {
     $329 = HEAP32[$$5493600>>2]|0;
     $330 = (_fmt_u($329,0,$326)|0);
     $331 = ($$5493600|0)==($$0496$$9|0);
     if ($331) {
      $337 = ($330|0)==($326|0);
      if ($337) {
       HEAP8[$328>>0] = 48;
       $$1465 = $328;
      } else {
       $$1465 = $330;
      }
     } else {
      $332 = ($330>>>0)>($8>>>0);
      if ($332) {
       $333 = $330;
       $334 = (($333) - ($9))|0;
       _memset(($8|0),48,($334|0))|0;
       $$0464597 = $330;
       while(1) {
        $335 = ((($$0464597)) + -1|0);
        $336 = ($335>>>0)>($8>>>0);
        if ($336) {
         $$0464597 = $335;
        } else {
         $$1465 = $335;
         break;
        }
       }
      } else {
       $$1465 = $330;
      }
     }
     $338 = $$1465;
     $339 = (($327) - ($338))|0;
     _out_323($0,$$1465,$339);
     $340 = ((($$5493600)) + 4|0);
     $341 = ($340>>>0)>($$561>>>0);
     if ($341) {
      break;
     } else {
      $$5493600 = $340;
     }
    }
    $342 = ($292|0)==(0);
    if (!($342)) {
     _out_323($0,13503,1);
    }
    $343 = ($340>>>0)<($$7505>>>0);
    $344 = ($$3477|0)>(0);
    $345 = $343 & $344;
    if ($345) {
     $$4478593 = $$3477;$$6494592 = $340;
     while(1) {
      $346 = HEAP32[$$6494592>>2]|0;
      $347 = (_fmt_u($346,0,$326)|0);
      $348 = ($347>>>0)>($8>>>0);
      if ($348) {
       $349 = $347;
       $350 = (($349) - ($9))|0;
       _memset(($8|0),48,($350|0))|0;
       $$0463587 = $347;
       while(1) {
        $351 = ((($$0463587)) + -1|0);
        $352 = ($351>>>0)>($8>>>0);
        if ($352) {
         $$0463587 = $351;
        } else {
         $$0463$lcssa = $351;
         break;
        }
       }
      } else {
       $$0463$lcssa = $347;
      }
      $353 = ($$4478593|0)<(9);
      $354 = $353 ? $$4478593 : 9;
      _out_323($0,$$0463$lcssa,$354);
      $355 = ((($$6494592)) + 4|0);
      $356 = (($$4478593) + -9)|0;
      $357 = ($355>>>0)<($$7505>>>0);
      $358 = ($$4478593|0)>(9);
      $359 = $357 & $358;
      if ($359) {
       $$4478593 = $356;$$6494592 = $355;
      } else {
       $$4478$lcssa = $356;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $360 = (($$4478$lcssa) + 9)|0;
    _pad_329($0,48,$360,9,0);
   } else {
    $361 = ((($$9$ph)) + 4|0);
    $$7505$ = $$lcssa675 ? $$7505 : $361;
    $362 = ($$3477|0)>(-1);
    if ($362) {
     $363 = ((($8)) + 9|0);
     $364 = ($$pre$phi698Z2D|0)==(0);
     $365 = $363;
     $366 = (0 - ($9))|0;
     $367 = ((($8)) + 8|0);
     $$5605 = $$3477;$$7495604 = $$9$ph;
     while(1) {
      $368 = HEAP32[$$7495604>>2]|0;
      $369 = (_fmt_u($368,0,$363)|0);
      $370 = ($369|0)==($363|0);
      if ($370) {
       HEAP8[$367>>0] = 48;
       $$0 = $367;
      } else {
       $$0 = $369;
      }
      $371 = ($$7495604|0)==($$9$ph|0);
      do {
       if ($371) {
        $375 = ((($$0)) + 1|0);
        _out_323($0,$$0,1);
        $376 = ($$5605|0)<(1);
        $or$cond556 = $364 & $376;
        if ($or$cond556) {
         $$2 = $375;
         break;
        }
        _out_323($0,13503,1);
        $$2 = $375;
       } else {
        $372 = ($$0>>>0)>($8>>>0);
        if (!($372)) {
         $$2 = $$0;
         break;
        }
        $scevgep686 = (($$0) + ($366)|0);
        $scevgep686687 = $scevgep686;
        _memset(($8|0),48,($scevgep686687|0))|0;
        $$1601 = $$0;
        while(1) {
         $373 = ((($$1601)) + -1|0);
         $374 = ($373>>>0)>($8>>>0);
         if ($374) {
          $$1601 = $373;
         } else {
          $$2 = $373;
          break;
         }
        }
       }
      } while(0);
      $377 = $$2;
      $378 = (($365) - ($377))|0;
      $379 = ($$5605|0)>($378|0);
      $380 = $379 ? $378 : $$5605;
      _out_323($0,$$2,$380);
      $381 = (($$5605) - ($378))|0;
      $382 = ((($$7495604)) + 4|0);
      $383 = ($382>>>0)<($$7505$>>>0);
      $384 = ($381|0)>(-1);
      $385 = $383 & $384;
      if ($385) {
       $$5605 = $381;$$7495604 = $382;
      } else {
       $$5$lcssa = $381;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $386 = (($$5$lcssa) + 18)|0;
    _pad_329($0,48,$386,18,0);
    $387 = $11;
    $388 = $$2513;
    $389 = (($387) - ($388))|0;
    _out_323($0,$$2513,$389);
   }
   $390 = $4 ^ 8192;
   _pad_329($0,32,$2,$323,$390);
   $$sink560 = $323;
  }
 } while(0);
 $391 = ($$sink560|0)<($2|0);
 $$557 = $391 ? $2 : $$sink560;
 STACKTOP = sp;return ($$557|0);
}
function ___DOUBLE_BITS_330($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_422()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     HEAP8[$0>>0] = $14;
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     HEAP32[$13>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $18;
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    HEAP8[$19>>0] = $22;
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $28;
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    HEAP8[$29>>0] = $33;
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    HEAP8[$34>>0] = $37;
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $42;
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    HEAP8[$43>>0] = $47;
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    HEAP8[$48>>0] = $52;
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    HEAP8[$53>>0] = $56;
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    HEAP32[$57>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_422() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (940|0);
}
function ___pthread_self_137() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $3 = (13505 + ($$016)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = $4&255;
  $6 = ($5|0)==($0|0);
  if ($6) {
   label = 2;
   break;
  }
  $7 = (($$016) + 1)|0;
  $8 = ($7|0)==(87);
  if ($8) {
   $$01214 = 13593;$$115 = 87;
   label = 5;
   break;
  } else {
   $$016 = $7;
  }
 }
 if ((label|0) == 2) {
  $2 = ($$016|0)==(0);
  if ($2) {
   $$012$lcssa = 13593;
  } else {
   $$01214 = 13593;$$115 = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
    label = 5;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)!=(0|0);
 $8 = $7 ? $$0 : $0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$191 = $63 ? $$090 : $26;
      if ($62) {
       $$4 = 0;
       break L1;
      } else {
       $$090 = $$191;$$094 = $$195;
      }
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $$ = $61 ? $57 : 0;
      $$4 = $$;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $$ = $2 ? $0 : $3;
 return ($$|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$038 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre47 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 255]($2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)>(-1);
   L10: do {
    if ($20) {
     $$038 = $1;
     while(1) {
      $21 = ($$038|0)==(0);
      if ($21) {
       $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
       break L10;
      }
      $22 = (($$038) + -1)|0;
      $23 = (($0) + ($22)|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = ($24<<24>>24)==(10);
      if ($25) {
       break;
      } else {
       $$038 = $22;
      }
     }
     $26 = ((($2)) + 36|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (FUNCTION_TABLE_iiii[$27 & 255]($2,$0,$$038)|0);
     $29 = ($28>>>0)<($$038>>>0);
     if ($29) {
      $$1 = $28;
      break L5;
     }
     $30 = (($0) + ($$038)|0);
     $$042 = (($1) - ($$038))|0;
     $$pre47 = HEAP32[$9>>2]|0;
     $$139 = $$038;$$141 = $30;$$143 = $$042;$31 = $$pre47;
    } else {
     $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
    }
   } while(0);
   (_memcpy(($31|0),($$141|0),($$143|0))|0);
   $32 = HEAP32[$9>>2]|0;
   $33 = (($32) + ($$143)|0);
   HEAP32[$9>>2] = $33;
   $34 = (($$139) + ($$143))|0;
   $$1 = $34;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $$ = $8 ? $2 : $7;
 $$cast = $6;
 (_memcpy(($$cast|0),($1|0),($$|0))|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($$)|0);
 HEAP32[$5>>2] = $10;
 return ($2|0);
}
function _sprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vsprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function _vsprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_vsnprintf($0,2147483647,$1,$2)|0);
 return ($3|0);
}
function _qsort($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$067$lcssa = 0, $$06772 = 0, $$068$lcssa = 0, $$06871 = 0, $$1 = 0, $$169 = 0, $$2 = 0, $$pre$pre = 0, $$pre76 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $15$phi = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $4 = sp + 8|0;
 $5 = sp;
 $6 = Math_imul($2, $1)|0;
 $7 = $5;
 $8 = $7;
 HEAP32[$8>>2] = 1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = 0;
 $11 = ($6|0)==(0);
 L1: do {
  if (!($11)) {
   $12 = (0 - ($2))|0;
   $13 = ((($4)) + 4|0);
   HEAP32[$13>>2] = $2;
   HEAP32[$4>>2] = $2;
   $$0 = 2;$15 = $2;$17 = $2;
   while(1) {
    $14 = (($15) + ($2))|0;
    $16 = (($14) + ($17))|0;
    $18 = (($4) + ($$0<<2)|0);
    HEAP32[$18>>2] = $16;
    $19 = ($16>>>0)<($6>>>0);
    $20 = (($$0) + 1)|0;
    if ($19) {
     $15$phi = $17;$$0 = $20;$17 = $16;$15 = $15$phi;
    } else {
     break;
    }
   }
   $21 = (($0) + ($6)|0);
   $22 = (($21) + ($12)|0);
   $23 = ($22>>>0)>($0>>>0);
   if ($23) {
    $24 = $22;
    $$06772 = 1;$$06871 = $0;$26 = 1;
    while(1) {
     $25 = $26 & 3;
     $27 = ($25|0)==(3);
     do {
      if ($27) {
       _sift($$06871,$2,$3,$$06772,$4);
       _shr($5,2);
       $28 = (($$06772) + 2)|0;
       $$1 = $28;
      } else {
       $29 = (($$06772) + -1)|0;
       $30 = (($4) + ($29<<2)|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = $$06871;
       $33 = (($24) - ($32))|0;
       $34 = ($31>>>0)<($33>>>0);
       if ($34) {
        _sift($$06871,$2,$3,$$06772,$4);
       } else {
        _trinkle($$06871,$2,$3,$5,$$06772,0,$4);
       }
       $35 = ($$06772|0)==(1);
       if ($35) {
        _shl($5,1);
        $$1 = 0;
        break;
       } else {
        _shl($5,$29);
        $$1 = 1;
        break;
       }
      }
     } while(0);
     $36 = HEAP32[$5>>2]|0;
     $37 = $36 | 1;
     HEAP32[$5>>2] = $37;
     $38 = (($$06871) + ($2)|0);
     $39 = ($38>>>0)<($22>>>0);
     if ($39) {
      $$06772 = $$1;$$06871 = $38;$26 = $37;
     } else {
      $$067$lcssa = $$1;$$068$lcssa = $38;$61 = $37;
      break;
     }
    }
   } else {
    $$067$lcssa = 1;$$068$lcssa = $0;$61 = 1;
   }
   _trinkle($$068$lcssa,$2,$3,$5,$$067$lcssa,0,$4);
   $40 = ((($5)) + 4|0);
   $$169 = $$068$lcssa;$$2 = $$067$lcssa;$42 = $61;
   while(1) {
    $41 = ($$2|0)==(1);
    $43 = ($42|0)==(1);
    $or$cond = $41 & $43;
    if ($or$cond) {
     $44 = HEAP32[$40>>2]|0;
     $45 = ($44|0)==(0);
     if ($45) {
      break L1;
     }
    } else {
     $46 = ($$2|0)<(2);
     if (!($46)) {
      _shl($5,2);
      $49 = (($$2) + -2)|0;
      $50 = HEAP32[$5>>2]|0;
      $51 = $50 ^ 7;
      HEAP32[$5>>2] = $51;
      _shr($5,1);
      $52 = (($4) + ($49<<2)|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = (0 - ($53))|0;
      $55 = (($$169) + ($54)|0);
      $56 = (($55) + ($12)|0);
      $57 = (($$2) + -1)|0;
      _trinkle($56,$2,$3,$5,$57,1,$4);
      _shl($5,1);
      $58 = HEAP32[$5>>2]|0;
      $59 = $58 | 1;
      HEAP32[$5>>2] = $59;
      $60 = (($$169) + ($12)|0);
      _trinkle($60,$2,$3,$5,$49,1,$4);
      $$169 = $60;$$2 = $49;$42 = $59;
      continue;
     }
    }
    $47 = (_pntz($5)|0);
    _shr($5,$47);
    $48 = (($47) + ($$2))|0;
    $$pre$pre = HEAP32[$5>>2]|0;
    $$pre76 = (($$169) + ($12)|0);
    $$169 = $$pre76;$$2 = $48;$42 = $$pre$pre;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _sift($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$029$be = 0, $$02932 = 0, $$030$be = 0, $$03031 = 0, $$033 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $5 = sp;
 HEAP32[$5>>2] = $0;
 $6 = ($3|0)>(1);
 L1: do {
  if ($6) {
   $7 = (0 - ($1))|0;
   $$02932 = $0;$$03031 = $3;$$033 = 1;$14 = $0;
   while(1) {
    $8 = (($$02932) + ($7)|0);
    $9 = (($$03031) + -2)|0;
    $10 = (($4) + ($9<<2)|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (0 - ($11))|0;
    $13 = (($8) + ($12)|0);
    $15 = (FUNCTION_TABLE_iii[$2 & 255]($14,$13)|0);
    $16 = ($15|0)>(-1);
    if ($16) {
     $17 = (FUNCTION_TABLE_iii[$2 & 255]($14,$8)|0);
     $18 = ($17|0)>(-1);
     if ($18) {
      $$0$lcssa = $$033;
      break L1;
     }
    }
    $19 = (FUNCTION_TABLE_iii[$2 & 255]($13,$8)|0);
    $20 = ($19|0)>(-1);
    $21 = (($$033) + 1)|0;
    $22 = (($5) + ($$033<<2)|0);
    if ($20) {
     HEAP32[$22>>2] = $13;
     $23 = (($$03031) + -1)|0;
     $$029$be = $13;$$030$be = $23;
    } else {
     HEAP32[$22>>2] = $8;
     $$029$be = $8;$$030$be = $9;
    }
    $24 = ($$030$be|0)>(1);
    if (!($24)) {
     $$0$lcssa = $21;
     break L1;
    }
    $$pre = HEAP32[$5>>2]|0;
    $$02932 = $$029$be;$$03031 = $$030$be;$$033 = $21;$14 = $$pre;
   }
  } else {
   $$0$lcssa = 1;
  }
 } while(0);
 _cycle($1,$5,$$0$lcssa);
 STACKTOP = sp;return;
}
function _shr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(31);
 $3 = ((($0)) + 4|0);
 if ($2) {
  $4 = (($1) + -32)|0;
  $5 = HEAP32[$3>>2]|0;
  HEAP32[$0>>2] = $5;
  HEAP32[$3>>2] = 0;
  $$0 = $4;$10 = 0;$7 = $5;
 } else {
  $$pre = HEAP32[$0>>2]|0;
  $$pre11 = HEAP32[$3>>2]|0;
  $$0 = $1;$10 = $$pre11;$7 = $$pre;
 }
 $6 = $7 >>> $$0;
 $8 = (32 - ($$0))|0;
 $9 = $10 << $8;
 $11 = $9 | $6;
 HEAP32[$0>>2] = $11;
 $12 = $10 >>> $$0;
 HEAP32[$3>>2] = $12;
 return;
}
function _trinkle($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0$lcssa = 0, $$045$lcssa = 0, $$04551 = 0, $$0455780 = 0, $$046$lcssa = 0, $$04653 = 0, $$0465681 = 0, $$047$lcssa = 0, $$0475582 = 0, $$049 = 0, $$05879 = 0, $$05879$phi = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $7 = sp + 232|0;
 $8 = sp;
 $9 = HEAP32[$3>>2]|0;
 HEAP32[$7>>2] = $9;
 $10 = ((($3)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($7)) + 4|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$8>>2] = $0;
 $13 = ($9|0)!=(1);
 $14 = ($11|0)!=(0);
 $15 = $13 | $14;
 L1: do {
  if ($15) {
   $16 = (0 - ($1))|0;
   $17 = (($6) + ($4<<2)|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (0 - ($18))|0;
   $20 = (($0) + ($19)|0);
   $21 = (FUNCTION_TABLE_iii[$2 & 255]($20,$0)|0);
   $22 = ($21|0)<(1);
   if ($22) {
    $$0$lcssa = $0;$$045$lcssa = 1;$$046$lcssa = $4;$$047$lcssa = $5;
    label = 9;
   } else {
    $phitmp = ($5|0)==(0);
    $$0455780 = 1;$$0465681 = $4;$$0475582 = $phitmp;$$05879 = $0;$28 = $20;
    while(1) {
     $23 = ($$0465681|0)>(1);
     $or$cond = $$0475582 & $23;
     if ($or$cond) {
      $24 = (($$05879) + ($16)|0);
      $25 = (($$0465681) + -2)|0;
      $26 = (($6) + ($25<<2)|0);
      $27 = HEAP32[$26>>2]|0;
      $29 = (FUNCTION_TABLE_iii[$2 & 255]($24,$28)|0);
      $30 = ($29|0)>(-1);
      if ($30) {
       $$04551 = $$0455780;$$04653 = $$0465681;$$049 = $$05879;
       label = 10;
       break L1;
      }
      $31 = (0 - ($27))|0;
      $32 = (($24) + ($31)|0);
      $33 = (FUNCTION_TABLE_iii[$2 & 255]($32,$28)|0);
      $34 = ($33|0)>(-1);
      if ($34) {
       $$04551 = $$0455780;$$04653 = $$0465681;$$049 = $$05879;
       label = 10;
       break L1;
      }
     }
     $35 = (($$0455780) + 1)|0;
     $36 = (($8) + ($$0455780<<2)|0);
     HEAP32[$36>>2] = $28;
     $37 = (_pntz($7)|0);
     _shr($7,$37);
     $38 = (($37) + ($$0465681))|0;
     $39 = HEAP32[$7>>2]|0;
     $40 = ($39|0)!=(1);
     $41 = HEAP32[$12>>2]|0;
     $42 = ($41|0)!=(0);
     $43 = $40 | $42;
     if (!($43)) {
      $$04551 = $35;$$04653 = $38;$$049 = $28;
      label = 10;
      break L1;
     }
     $$pre = HEAP32[$8>>2]|0;
     $44 = (($6) + ($38<<2)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (0 - ($45))|0;
     $47 = (($28) + ($46)|0);
     $48 = (FUNCTION_TABLE_iii[$2 & 255]($47,$$pre)|0);
     $49 = ($48|0)<(1);
     if ($49) {
      $$0$lcssa = $28;$$045$lcssa = $35;$$046$lcssa = $38;$$047$lcssa = 0;
      label = 9;
      break;
     } else {
      $$05879$phi = $28;$$0455780 = $35;$$0465681 = $38;$$0475582 = 1;$28 = $47;$$05879 = $$05879$phi;
     }
    }
   }
  } else {
   $$0$lcssa = $0;$$045$lcssa = 1;$$046$lcssa = $4;$$047$lcssa = $5;
   label = 9;
  }
 } while(0);
 if ((label|0) == 9) {
  $50 = ($$047$lcssa|0)==(0);
  if ($50) {
   $$04551 = $$045$lcssa;$$04653 = $$046$lcssa;$$049 = $$0$lcssa;
   label = 10;
  }
 }
 if ((label|0) == 10) {
  _cycle($1,$8,$$04551);
  _sift($$049,$1,$2,$$04653,$6);
 }
 STACKTOP = sp;return;
}
function _shl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(31);
 $3 = ((($0)) + 4|0);
 if ($2) {
  $4 = (($1) + -32)|0;
  $5 = HEAP32[$0>>2]|0;
  HEAP32[$3>>2] = $5;
  HEAP32[$0>>2] = 0;
  $$0 = $4;$10 = 0;$7 = $5;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $$pre11 = HEAP32[$0>>2]|0;
  $$0 = $1;$10 = $$pre11;$7 = $$pre;
 }
 $6 = $7 << $$0;
 $8 = (32 - ($$0))|0;
 $9 = $10 >>> $8;
 $11 = $9 | $6;
 HEAP32[$3>>2] = $11;
 $12 = $10 << $$0;
 HEAP32[$0>>2] = $12;
 return;
}
function _pntz($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -1)|0;
 $3 = (_a_ctz_l_868($2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = ((($0)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (_a_ctz_l_868($6)|0);
  $8 = (($7) + 32)|0;
  $9 = ($7|0)==(0);
  $$ = $9 ? 0 : $8;
  return ($$|0);
 } else {
  return ($3|0);
 }
 return (0)|0;
}
function _a_ctz_l_868($0) {
 $0 = $0|0;
 var $$068 = 0, $$07 = 0, $$09 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0);
 if ($1) {
  $$07 = 32;
 } else {
  $2 = $0 & 1;
  $3 = ($2|0)==(0);
  if ($3) {
   $$068 = $0;$$09 = 0;
   while(1) {
    $4 = (($$09) + 1)|0;
    $5 = $$068 >>> 1;
    $6 = $5 & 1;
    $7 = ($6|0)==(0);
    if ($7) {
     $$068 = $5;$$09 = $4;
    } else {
     $$07 = $4;
     break;
    }
   }
  } else {
   $$07 = 0;
  }
 }
 return ($$07|0);
}
function _cycle($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$02527 = 0, $$026 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $3 = sp;
 $4 = ($2|0)<(2);
 L1: do {
  if (!($4)) {
   $5 = (($1) + ($2<<2)|0);
   HEAP32[$5>>2] = $3;
   $6 = ($0|0)==(0);
   if (!($6)) {
    $$02527 = $0;$10 = $3;
    while(1) {
     $7 = ($$02527>>>0)<(256);
     $8 = $7 ? $$02527 : 256;
     $9 = HEAP32[$1>>2]|0;
     (_memcpy(($10|0),($9|0),($8|0))|0);
     $$026 = 0;
     while(1) {
      $11 = (($1) + ($$026<<2)|0);
      $12 = HEAP32[$11>>2]|0;
      $13 = (($$026) + 1)|0;
      $14 = (($1) + ($13<<2)|0);
      $15 = HEAP32[$14>>2]|0;
      (_memcpy(($12|0),($15|0),($8|0))|0);
      $16 = HEAP32[$11>>2]|0;
      $17 = (($16) + ($8)|0);
      HEAP32[$11>>2] = $17;
      $exitcond = ($13|0)==($2|0);
      if ($exitcond) {
       break;
      } else {
       $$026 = $13;
      }
     }
     $18 = (($$02527) - ($8))|0;
     $19 = ($18|0)==(0);
     if ($19) {
      break L1;
     }
     $$pre = HEAP32[$5>>2]|0;
     $$02527 = $18;$10 = $$pre;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _strcat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (($0) + ($2)|0);
 (_strcpy($3,$1)|0);
 return ($0|0);
}
function _copysign($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = $3 & 2147483647;
 $7 = $5 & -2147483648;
 $8 = $7 | $6;
 HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $8;$9 = +HEAPF64[tempDoublePtr>>3];
 return (+$9);
}
function _strcasecmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$01718 = 0, $$019 = 0, $$pre$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = ($2<<24>>24)==(0);
 L1: do {
  if ($3) {
   $$0$lcssa = $1;$21 = 0;
  } else {
   $4 = $2&255;
   $$01718 = $0;$$019 = $1;$7 = $2;$9 = $4;
   while(1) {
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($5<<24>>24)==(0);
    if ($6) {
     $$0$lcssa = $$019;$21 = $7;
     break L1;
    }
    $8 = ($7<<24>>24)==($5<<24>>24);
    if (!($8)) {
     $10 = (_tolower($9)|0);
     $11 = HEAP8[$$019>>0]|0;
     $12 = $11&255;
     $13 = (_tolower($12)|0);
     $14 = ($10|0)==($13|0);
     if (!($14)) {
      break;
     }
    }
    $15 = ((($$01718)) + 1|0);
    $16 = ((($$019)) + 1|0);
    $17 = HEAP8[$15>>0]|0;
    $18 = $17&255;
    $19 = ($17<<24>>24)==(0);
    if ($19) {
     $$0$lcssa = $16;$21 = 0;
     break L1;
    } else {
     $$01718 = $15;$$019 = $16;$7 = $17;$9 = $18;
    }
   }
   $$pre$pre = HEAP8[$$01718>>0]|0;
   $$0$lcssa = $$019;$21 = $$pre$pre;
  }
 } while(0);
 $20 = $21&255;
 $22 = (_tolower($20)|0);
 $23 = HEAP8[$$0$lcssa>>0]|0;
 $24 = $23&255;
 $25 = (_tolower($24)|0);
 $26 = (($22) - ($25))|0;
 return ($26|0);
}
function _tolower($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isupper($0)|0);
 $2 = ($1|0)==(0);
 $3 = $0 | 32;
 $$0 = $2 ? $0 : $3;
 return ($$0|0);
}
function _isupper($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -65)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function _srand($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -1)|0;
 $2 = 15416;
 $3 = $2;
 HEAP32[$3>>2] = $1;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 return;
}
function _rand() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = 15416;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($0) + 4)|0;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (___muldi3(($2|0),($5|0),1284865837,1481765933)|0);
 $7 = tempRet0;
 $8 = (_i64Add(($6|0),($7|0),1,0)|0);
 $9 = tempRet0;
 $10 = 15416;
 $11 = $10;
 HEAP32[$11>>2] = $8;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = (_bitshift64Lshr(($8|0),($9|0),33)|0);
 $15 = tempRet0;
 return ($14|0);
}
function ___ofl_add($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___ofl_lock()|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 56|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = ((($4)) + 52|0);
  HEAP32[$6>>2] = $0;
 }
 HEAP32[$1>>2] = $0;
 ___ofl_unlock();
 return ($0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((16200|0));
 return (16208|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((16200|0));
 return;
}
function ___overflow($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = $1&255;
 HEAP8[$2>>0] = $3;
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___towrite($0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$4>>2]|0;
   $12 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $12 = $5;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $9 = ((($0)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10>>>0)<($12>>>0);
   if ($11) {
    $13 = $1 & 255;
    $14 = ((($0)) + 75|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15 << 24 >> 24;
    $17 = ($13|0)==($16|0);
    if (!($17)) {
     $18 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $18;
     HEAP8[$10>>0] = $3;
     $$0 = $13;
     break;
    }
   }
   $19 = ((($0)) + 36|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (FUNCTION_TABLE_iiii[$20 & 255]($0,$2,1)|0);
   $22 = ($21|0)==(1);
   if ($22) {
    $23 = HEAP8[$2>>0]|0;
    $24 = $23&255;
    $$0 = $24;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___fdopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 56|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = $3 << 24 >> 24;
 $5 = (_strchr(15410,$4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___errno_location()|0);
  HEAP32[$7>>2] = 22;
  $$0 = 0;
 } else {
  $8 = (_malloc(1156)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = 0;
  } else {
   (_memset(($8|0),0,124)|0);
   $10 = (_strchr($1,43)|0);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = HEAP8[$1>>0]|0;
    $13 = ($12<<24>>24)==(114);
    $14 = $13 ? 8 : 4;
    HEAP32[$8>>2] = $14;
   }
   $15 = (_strchr($1,101)|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    HEAP32[$vararg_buffer>>2] = $0;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 2;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1;
    (___syscall221(221,($vararg_buffer|0))|0);
   }
   $17 = HEAP8[$1>>0]|0;
   $18 = ($17<<24>>24)==(97);
   if ($18) {
    HEAP32[$vararg_buffer3>>2] = $0;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 3;
    $19 = (___syscall221(221,($vararg_buffer3|0))|0);
    $20 = $19 & 1024;
    $21 = ($20|0)==(0);
    if ($21) {
     $22 = $19 | 1024;
     HEAP32[$vararg_buffer7>>2] = $0;
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     HEAP32[$vararg_ptr10>>2] = 4;
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     HEAP32[$vararg_ptr11>>2] = $22;
     (___syscall221(221,($vararg_buffer7|0))|0);
    }
    $23 = HEAP32[$8>>2]|0;
    $24 = $23 | 128;
    HEAP32[$8>>2] = $24;
    $31 = $24;
   } else {
    $$pre = HEAP32[$8>>2]|0;
    $31 = $$pre;
   }
   $25 = ((($8)) + 60|0);
   HEAP32[$25>>2] = $0;
   $26 = ((($8)) + 132|0);
   $27 = ((($8)) + 44|0);
   HEAP32[$27>>2] = $26;
   $28 = ((($8)) + 48|0);
   HEAP32[$28>>2] = 1024;
   $29 = ((($8)) + 75|0);
   HEAP8[$29>>0] = -1;
   $30 = $31 & 8;
   $32 = ($30|0)==(0);
   if ($32) {
    $33 = $2;
    HEAP32[$vararg_buffer12>>2] = $0;
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    HEAP32[$vararg_ptr15>>2] = 21523;
    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
    HEAP32[$vararg_ptr16>>2] = $33;
    $34 = (___syscall54(54,($vararg_buffer12|0))|0);
    $35 = ($34|0)==(0);
    if ($35) {
     HEAP8[$29>>0] = 10;
    }
   }
   $36 = ((($8)) + 32|0);
   HEAP32[$36>>2] = 102;
   $37 = ((($8)) + 36|0);
   HEAP32[$37>>2] = 103;
   $38 = ((($8)) + 40|0);
   HEAP32[$38>>2] = 101;
   $39 = ((($8)) + 12|0);
   HEAP32[$39>>2] = 99;
   $40 = HEAP32[(16140)>>2]|0;
   $41 = ($40|0)==(0);
   if ($41) {
    $42 = ((($8)) + 76|0);
    HEAP32[$42>>2] = -1;
   }
   $43 = (___ofl_add($8)|0);
   $$0 = $8;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___floatscan($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0105$ph = 0, $$0106$ph = 0, $$0107$lcssa = 0, $$0107127 = 0, $$0113 = 0, $$0114 = 0.0, $$1$lcssa = 0, $$1108 = 0, $$1128 = 0, $$2 = 0, $$2109125 = 0, $$3110 = 0, $$3126 = 0, $$4 = 0, $$4111 = 0, $$5 = 0, $$6 = 0, $$in = 0, $$old8 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0.0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 0:  {
  $$0105$ph = -149;$$0106$ph = 24;
  label = 4;
  break;
 }
 case 1:  {
  $$0105$ph = -1074;$$0106$ph = 53;
  label = 4;
  break;
 }
 case 2:  {
  $$0105$ph = -1074;$$0106$ph = 53;
  label = 4;
  break;
 }
 default: {
  $$0114 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $3 = ((($0)) + 4|0);
   $4 = ((($0)) + 100|0);
   while(1) {
    $5 = HEAP32[$3>>2]|0;
    $6 = HEAP32[$4>>2]|0;
    $7 = ($5>>>0)<($6>>>0);
    if ($7) {
     $8 = ((($5)) + 1|0);
     HEAP32[$3>>2] = $8;
     $9 = HEAP8[$5>>0]|0;
     $10 = $9&255;
     $12 = $10;
    } else {
     $11 = (___shgetc($0)|0);
     $12 = $11;
    }
    $13 = (_isspace($12)|0);
    $14 = ($13|0)==(0);
    if ($14) {
     break;
    }
   }
   L13: do {
    switch ($12|0) {
    case 43: case 45:  {
     $15 = ($12|0)==(45);
     $16 = $15&1;
     $17 = $16 << 1;
     $18 = (1 - ($17))|0;
     $19 = HEAP32[$3>>2]|0;
     $20 = HEAP32[$4>>2]|0;
     $21 = ($19>>>0)<($20>>>0);
     if ($21) {
      $22 = ((($19)) + 1|0);
      HEAP32[$3>>2] = $22;
      $23 = HEAP8[$19>>0]|0;
      $24 = $23&255;
      $$0 = $24;$$0113 = $18;
      break L13;
     } else {
      $25 = (___shgetc($0)|0);
      $$0 = $25;$$0113 = $18;
      break L13;
     }
     break;
    }
    default: {
     $$0 = $12;$$0113 = 1;
    }
    }
   } while(0);
   $$0107127 = 0;$$1128 = $$0;
   while(1) {
    $26 = $$1128 | 32;
    $27 = (15397 + ($$0107127)|0);
    $28 = HEAP8[$27>>0]|0;
    $29 = $28 << 24 >> 24;
    $30 = ($26|0)==($29|0);
    if (!($30)) {
     $$0107$lcssa = $$0107127;$$1$lcssa = $$1128;
     break;
    }
    $31 = ($$0107127>>>0)<(7);
    do {
     if ($31) {
      $32 = HEAP32[$3>>2]|0;
      $33 = HEAP32[$4>>2]|0;
      $34 = ($32>>>0)<($33>>>0);
      if ($34) {
       $35 = ((($32)) + 1|0);
       HEAP32[$3>>2] = $35;
       $36 = HEAP8[$32>>0]|0;
       $37 = $36&255;
       $$2 = $37;
       break;
      } else {
       $38 = (___shgetc($0)|0);
       $$2 = $38;
       break;
      }
     } else {
      $$2 = $$1128;
     }
    } while(0);
    $39 = (($$0107127) + 1)|0;
    $40 = ($39>>>0)<(8);
    if ($40) {
     $$0107127 = $39;$$1128 = $$2;
    } else {
     $$0107$lcssa = $39;$$1$lcssa = $$2;
     break;
    }
   }
   L29: do {
    switch ($$0107$lcssa|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $41 = ($$0107$lcssa>>>0)>(3);
     $42 = ($2|0)!=(0);
     $or$cond5 = $42 & $41;
     if ($or$cond5) {
      $43 = ($$0107$lcssa|0)==(8);
      if ($43) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $56 = ($$0107$lcssa|0)==(0);
     L34: do {
      if ($56) {
       $$2109125 = 0;$$3126 = $$1$lcssa;
       while(1) {
        $57 = $$3126 | 32;
        $58 = (15406 + ($$2109125)|0);
        $59 = HEAP8[$58>>0]|0;
        $60 = $59 << 24 >> 24;
        $61 = ($57|0)==($60|0);
        if (!($61)) {
         $$3110 = $$2109125;$$5 = $$3126;
         break L34;
        }
        $62 = ($$2109125>>>0)<(2);
        do {
         if ($62) {
          $63 = HEAP32[$3>>2]|0;
          $64 = HEAP32[$4>>2]|0;
          $65 = ($63>>>0)<($64>>>0);
          if ($65) {
           $66 = ((($63)) + 1|0);
           HEAP32[$3>>2] = $66;
           $67 = HEAP8[$63>>0]|0;
           $68 = $67&255;
           $$4 = $68;
           break;
          } else {
           $69 = (___shgetc($0)|0);
           $$4 = $69;
           break;
          }
         } else {
          $$4 = $$3126;
         }
        } while(0);
        $70 = (($$2109125) + 1)|0;
        $71 = ($70>>>0)<(3);
        if ($71) {
         $$2109125 = $70;$$3126 = $$4;
        } else {
         $$3110 = $70;$$5 = $$4;
         break;
        }
       }
      } else {
       $$3110 = $$0107$lcssa;$$5 = $$1$lcssa;
      }
     } while(0);
     switch ($$3110|0) {
     case 3:  {
      $72 = HEAP32[$3>>2]|0;
      $73 = HEAP32[$4>>2]|0;
      $74 = ($72>>>0)<($73>>>0);
      if ($74) {
       $75 = ((($72)) + 1|0);
       HEAP32[$3>>2] = $75;
       $76 = HEAP8[$72>>0]|0;
       $77 = $76&255;
       $79 = $77;
      } else {
       $78 = (___shgetc($0)|0);
       $79 = $78;
      }
      $80 = ($79|0)==(40);
      if ($80) {
       $$4111 = 1;
      } else {
       $81 = HEAP32[$4>>2]|0;
       $82 = ($81|0)==(0|0);
       if ($82) {
        $$0114 = nan;
        break L4;
       }
       $83 = HEAP32[$3>>2]|0;
       $84 = ((($83)) + -1|0);
       HEAP32[$3>>2] = $84;
       $$0114 = nan;
       break L4;
      }
      while(1) {
       $85 = HEAP32[$3>>2]|0;
       $86 = HEAP32[$4>>2]|0;
       $87 = ($85>>>0)<($86>>>0);
       if ($87) {
        $88 = ((($85)) + 1|0);
        HEAP32[$3>>2] = $88;
        $89 = HEAP8[$85>>0]|0;
        $90 = $89&255;
        $93 = $90;
       } else {
        $91 = (___shgetc($0)|0);
        $93 = $91;
       }
       $92 = (($93) + -48)|0;
       $94 = ($92>>>0)<(10);
       $95 = (($93) + -65)|0;
       $96 = ($95>>>0)<(26);
       $or$cond = $94 | $96;
       if (!($or$cond)) {
        $97 = (($93) + -97)|0;
        $98 = ($97>>>0)<(26);
        $99 = ($93|0)==(95);
        $or$cond7 = $99 | $98;
        if (!($or$cond7)) {
         break;
        }
       }
       $111 = (($$4111) + 1)|0;
       $$4111 = $111;
      }
      $100 = ($93|0)==(41);
      if ($100) {
       $$0114 = nan;
       break L4;
      }
      $101 = HEAP32[$4>>2]|0;
      $102 = ($101|0)==(0|0);
      if (!($102)) {
       $103 = HEAP32[$3>>2]|0;
       $104 = ((($103)) + -1|0);
       HEAP32[$3>>2] = $104;
      }
      if (!($42)) {
       $106 = (___errno_location()|0);
       HEAP32[$106>>2] = 22;
       ___shlim($0,0);
       $$0114 = 0.0;
       break L4;
      }
      $105 = ($$4111|0)==(0);
      if ($105) {
       $$0114 = nan;
       break L4;
      } else {
       $$in = $$4111;
      }
      while(1) {
       $107 = (($$in) + -1)|0;
       if (!($102)) {
        $108 = HEAP32[$3>>2]|0;
        $109 = ((($108)) + -1|0);
        HEAP32[$3>>2] = $109;
       }
       $110 = ($107|0)==(0);
       if ($110) {
        $$0114 = nan;
        break L4;
       } else {
        $$in = $107;
       }
      }
      break;
     }
     case 0:  {
      $117 = ($$5|0)==(48);
      if ($117) {
       $118 = HEAP32[$3>>2]|0;
       $119 = HEAP32[$4>>2]|0;
       $120 = ($118>>>0)<($119>>>0);
       if ($120) {
        $121 = ((($118)) + 1|0);
        HEAP32[$3>>2] = $121;
        $122 = HEAP8[$118>>0]|0;
        $123 = $122&255;
        $126 = $123;
       } else {
        $124 = (___shgetc($0)|0);
        $126 = $124;
       }
       $125 = $126 | 32;
       $127 = ($125|0)==(120);
       if ($127) {
        $128 = (+_hexfloat($0,$$0106$ph,$$0105$ph,$$0113,$2));
        $$0114 = $128;
        break L4;
       }
       $129 = HEAP32[$4>>2]|0;
       $130 = ($129|0)==(0|0);
       if ($130) {
        $$6 = 48;
       } else {
        $131 = HEAP32[$3>>2]|0;
        $132 = ((($131)) + -1|0);
        HEAP32[$3>>2] = $132;
        $$6 = 48;
       }
      } else {
       $$6 = $$5;
      }
      $133 = (+_decfloat($0,$$6,$$0106$ph,$$0105$ph,$$0113,$2));
      $$0114 = $133;
      break L4;
      break;
     }
     default: {
      $112 = HEAP32[$4>>2]|0;
      $113 = ($112|0)==(0|0);
      if (!($113)) {
       $114 = HEAP32[$3>>2]|0;
       $115 = ((($114)) + -1|0);
       HEAP32[$3>>2] = $115;
      }
      $116 = (___errno_location()|0);
      HEAP32[$116>>2] = 22;
      ___shlim($0,0);
      $$0114 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $44 = HEAP32[$4>>2]|0;
    $45 = ($44|0)==(0|0);
    if (!($45)) {
     $46 = HEAP32[$3>>2]|0;
     $47 = ((($46)) + -1|0);
     HEAP32[$3>>2] = $47;
    }
    $48 = ($2|0)!=(0);
    $49 = ($$0107$lcssa>>>0)>(3);
    $or$cond9 = $48 & $49;
    if ($or$cond9) {
     $$1108 = $$0107$lcssa;
     while(1) {
      if (!($45)) {
       $50 = HEAP32[$3>>2]|0;
       $51 = ((($50)) + -1|0);
       HEAP32[$3>>2] = $51;
      }
      $52 = (($$1108) + -1)|0;
      $$old8 = ($52>>>0)>(3);
      if ($$old8) {
       $$1108 = $52;
      } else {
       break;
      }
     }
    }
   }
   $53 = (+($$0113|0));
   $54 = $53 * inf;
   $55 = $54;
   $$0114 = $55;
  }
 } while(0);
 return (+$$0114);
}
function _hexfloat($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0133 = 0, $$0142 = 0, $$0146 = 0, $$0148 = 0, $$0148$ = 0, $$0151 = 0.0, $$0152 = 0.0, $$0155 = 0.0, $$0155$ = 0.0, $$0159 = 0, $$0165 = 0.0, $$0166 = 0, $$0166169 = 0, $$0166170 = 0, $$1$ph = 0, $$1147 = 0, $$1149 = 0, $$1153 = 0.0, $$1156 = 0.0;
 var $$1160 = 0, $$2 = 0, $$2$lcssa = 0, $$2144 = 0, $$2150 = 0, $$2154 = 0.0, $$2157 = 0.0, $$2161 = 0, $$3145 = 0, $$3158$lcssa = 0.0, $$3158179 = 0.0, $$3162$lcssa = 0, $$3162183 = 0, $$4 = 0.0, $$4163$lcssa = 0, $$4163178 = 0, $$5 = 0.0, $$5164 = 0, $$6 = 0, $$pn = 0.0;
 var $$pre = 0, $$pre$phi201Z2D = 0.0, $$pre200 = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0;
 var $151 = 0.0, $152 = 0.0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0.0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0;
 var $206 = 0.0, $207 = 0.0, $208 = 0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $not$ = 0, $or$cond = 0, $or$cond168 = 0, $or$cond4 = 0, $or$cond6 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)<($8>>>0);
 if ($9) {
  $10 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $10;
  $11 = HEAP8[$6>>0]|0;
  $12 = $11&255;
  $$0 = $12;$$0142 = 0;
 } else {
  $13 = (___shgetc($0)|0);
  $$0 = $13;$$0142 = 0;
 }
 L4: while(1) {
  switch ($$0|0) {
  case 46:  {
   label = 8;
   break L4;
   break;
  }
  case 48:  {
   break;
  }
  default: {
   $$0146 = 0;$$0148 = 0;$$0152 = 1.0;$$0155 = 0.0;$$0159 = 0;$$2 = $$0;$$2144 = $$0142;$50 = 0;$52 = 0;$95 = 0;$97 = 0;
   break L4;
  }
  }
  $14 = HEAP32[$5>>2]|0;
  $15 = HEAP32[$7>>2]|0;
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   HEAP32[$5>>2] = $17;
   $18 = HEAP8[$14>>0]|0;
   $19 = $18&255;
   $$0 = $19;$$0142 = 1;
   continue;
  } else {
   $20 = (___shgetc($0)|0);
   $$0 = $20;$$0142 = 1;
   continue;
  }
 }
 if ((label|0) == 8) {
  $21 = HEAP32[$5>>2]|0;
  $22 = HEAP32[$7>>2]|0;
  $23 = ($21>>>0)<($22>>>0);
  if ($23) {
   $24 = ((($21)) + 1|0);
   HEAP32[$5>>2] = $24;
   $25 = HEAP8[$21>>0]|0;
   $26 = $25&255;
   $$1$ph = $26;
  } else {
   $27 = (___shgetc($0)|0);
   $$1$ph = $27;
  }
  $28 = ($$1$ph|0)==(48);
  if ($28) {
   $36 = 0;$37 = 0;
   while(1) {
    $29 = HEAP32[$5>>2]|0;
    $30 = HEAP32[$7>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$5>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $40 = $34;
    } else {
     $35 = (___shgetc($0)|0);
     $40 = $35;
    }
    $38 = (_i64Add(($36|0),($37|0),-1,-1)|0);
    $39 = tempRet0;
    $41 = ($40|0)==(48);
    if ($41) {
     $36 = $38;$37 = $39;
    } else {
     $$0146 = 1;$$0148 = 0;$$0152 = 1.0;$$0155 = 0.0;$$0159 = 0;$$2 = $40;$$2144 = 1;$50 = 0;$52 = 0;$95 = $38;$97 = $39;
     break;
    }
   }
  } else {
   $$0146 = 1;$$0148 = 0;$$0152 = 1.0;$$0155 = 0.0;$$0159 = 0;$$2 = $$1$ph;$$2144 = $$0142;$50 = 0;$52 = 0;$95 = 0;$97 = 0;
  }
 }
 while(1) {
  $42 = (($$2) + -48)|0;
  $43 = ($42>>>0)<(10);
  $$pre = $$2 | 32;
  if ($43) {
   label = 20;
  } else {
   $44 = (($$pre) + -97)|0;
   $45 = ($44>>>0)<(6);
   $46 = ($$2|0)==(46);
   $or$cond6 = $46 | $45;
   if (!($or$cond6)) {
    $$2$lcssa = $$2;
    break;
   }
   if ($46) {
    $47 = ($$0146|0)==(0);
    if ($47) {
     $$1147 = 1;$$2150 = $$0148;$$2154 = $$0152;$$2157 = $$0155;$$2161 = $$0159;$$3145 = $$2144;$211 = $52;$212 = $50;$213 = $52;$214 = $50;
    } else {
     $$2$lcssa = 46;
     break;
    }
   } else {
    label = 20;
   }
  }
  if ((label|0) == 20) {
   label = 0;
   $48 = ($$2|0)>(57);
   $49 = (($$pre) + -87)|0;
   $$0133 = $48 ? $49 : $42;
   $51 = ($50|0)<(0);
   $53 = ($52>>>0)<(8);
   $54 = ($50|0)==(0);
   $55 = $54 & $53;
   $56 = $51 | $55;
   do {
    if ($56) {
     $57 = $$0159 << 4;
     $58 = (($$0133) + ($57))|0;
     $$1149 = $$0148;$$1153 = $$0152;$$1156 = $$0155;$$1160 = $58;
    } else {
     $59 = ($50|0)<(0);
     $60 = ($52>>>0)<(14);
     $61 = ($50|0)==(0);
     $62 = $61 & $60;
     $63 = $59 | $62;
     if ($63) {
      $64 = (+($$0133|0));
      $65 = $$0152 * 0.0625;
      $66 = $65 * $64;
      $67 = $$0155 + $66;
      $$1149 = $$0148;$$1153 = $65;$$1156 = $67;$$1160 = $$0159;
      break;
     } else {
      $68 = ($$0133|0)==(0);
      $69 = ($$0148|0)!=(0);
      $or$cond = $69 | $68;
      $70 = $$0152 * 0.5;
      $71 = $$0155 + $70;
      $$0155$ = $or$cond ? $$0155 : $71;
      $$0148$ = $or$cond ? $$0148 : 1;
      $$1149 = $$0148$;$$1153 = $$0152;$$1156 = $$0155$;$$1160 = $$0159;
      break;
     }
    }
   } while(0);
   $72 = (_i64Add(($52|0),($50|0),1,0)|0);
   $73 = tempRet0;
   $$1147 = $$0146;$$2150 = $$1149;$$2154 = $$1153;$$2157 = $$1156;$$2161 = $$1160;$$3145 = 1;$211 = $95;$212 = $97;$213 = $72;$214 = $73;
  }
  $74 = HEAP32[$5>>2]|0;
  $75 = HEAP32[$7>>2]|0;
  $76 = ($74>>>0)<($75>>>0);
  if ($76) {
   $77 = ((($74)) + 1|0);
   HEAP32[$5>>2] = $77;
   $78 = HEAP8[$74>>0]|0;
   $79 = $78&255;
   $$0146 = $$1147;$$0148 = $$2150;$$0152 = $$2154;$$0155 = $$2157;$$0159 = $$2161;$$2 = $79;$$2144 = $$3145;$50 = $214;$52 = $213;$95 = $211;$97 = $212;
   continue;
  } else {
   $80 = (___shgetc($0)|0);
   $$0146 = $$1147;$$0148 = $$2150;$$0152 = $$2154;$$0155 = $$2157;$$0159 = $$2161;$$2 = $80;$$2144 = $$3145;$50 = $214;$52 = $213;$95 = $211;$97 = $212;
   continue;
  }
 }
 $81 = ($$2144|0)==(0);
 do {
  if ($81) {
   $82 = HEAP32[$7>>2]|0;
   $83 = ($82|0)==(0|0);
   if (!($83)) {
    $84 = HEAP32[$5>>2]|0;
    $85 = ((($84)) + -1|0);
    HEAP32[$5>>2] = $85;
   }
   $86 = ($4|0)==(0);
   if ($86) {
    ___shlim($0,0);
   } else {
    if (!($83)) {
     $87 = HEAP32[$5>>2]|0;
     $88 = ((($87)) + -1|0);
     HEAP32[$5>>2] = $88;
    }
    $89 = ($$0146|0)==(0);
    $brmerge = $89 | $83;
    if (!($brmerge)) {
     $90 = HEAP32[$5>>2]|0;
     $91 = ((($90)) + -1|0);
     HEAP32[$5>>2] = $91;
    }
   }
   $92 = (+($3|0));
   $93 = $92 * 0.0;
   $$0165 = $93;
  } else {
   $94 = ($$0146|0)==(0);
   $96 = $94 ? $52 : $95;
   $98 = $94 ? $50 : $97;
   $99 = ($50|0)<(0);
   $100 = ($52>>>0)<(8);
   $101 = ($50|0)==(0);
   $102 = $101 & $100;
   $103 = $99 | $102;
   if ($103) {
    $$3162183 = $$0159;$105 = $52;$106 = $50;
    while(1) {
     $104 = $$3162183 << 4;
     $107 = (_i64Add(($105|0),($106|0),1,0)|0);
     $108 = tempRet0;
     $109 = ($106|0)<(0);
     $110 = ($105>>>0)<(7);
     $111 = ($106|0)==(0);
     $112 = $111 & $110;
     $113 = $109 | $112;
     if ($113) {
      $$3162183 = $104;$105 = $107;$106 = $108;
     } else {
      $$3162$lcssa = $104;
      break;
     }
    }
   } else {
    $$3162$lcssa = $$0159;
   }
   $114 = $$2$lcssa | 32;
   $115 = ($114|0)==(112);
   if ($115) {
    $116 = (_scanexp($0,$4)|0);
    $117 = tempRet0;
    $118 = ($116|0)==(0);
    $119 = ($117|0)==(-2147483648);
    $120 = $118 & $119;
    if ($120) {
     $121 = ($4|0)==(0);
     if ($121) {
      ___shlim($0,0);
      $$0165 = 0.0;
      break;
     }
     $122 = HEAP32[$7>>2]|0;
     $123 = ($122|0)==(0|0);
     if ($123) {
      $134 = 0;$135 = 0;
     } else {
      $124 = HEAP32[$5>>2]|0;
      $125 = ((($124)) + -1|0);
      HEAP32[$5>>2] = $125;
      $134 = 0;$135 = 0;
     }
    } else {
     $134 = $116;$135 = $117;
    }
   } else {
    $126 = HEAP32[$7>>2]|0;
    $127 = ($126|0)==(0|0);
    if ($127) {
     $134 = 0;$135 = 0;
    } else {
     $128 = HEAP32[$5>>2]|0;
     $129 = ((($128)) + -1|0);
     HEAP32[$5>>2] = $129;
     $134 = 0;$135 = 0;
    }
   }
   $130 = (_bitshift64Shl(($96|0),($98|0),2)|0);
   $131 = tempRet0;
   $132 = (_i64Add(($130|0),($131|0),-32,-1)|0);
   $133 = tempRet0;
   $136 = (_i64Add(($132|0),($133|0),($134|0),($135|0))|0);
   $137 = tempRet0;
   $138 = ($$3162$lcssa|0)==(0);
   if ($138) {
    $139 = (+($3|0));
    $140 = $139 * 0.0;
    $$0165 = $140;
    break;
   }
   $141 = (0 - ($2))|0;
   $142 = ($141|0)<(0);
   $143 = $142 << 31 >> 31;
   $144 = ($137|0)>($143|0);
   $145 = ($136>>>0)>($141>>>0);
   $146 = ($137|0)==($143|0);
   $147 = $146 & $145;
   $148 = $144 | $147;
   if ($148) {
    $149 = (___errno_location()|0);
    HEAP32[$149>>2] = 34;
    $150 = (+($3|0));
    $151 = $150 * 1.7976931348623157E+308;
    $152 = $151 * 1.7976931348623157E+308;
    $$0165 = $152;
    break;
   }
   $153 = (($2) + -106)|0;
   $154 = ($153|0)<(0);
   $155 = $154 << 31 >> 31;
   $156 = ($137|0)<($155|0);
   $157 = ($136>>>0)<($153>>>0);
   $158 = ($137|0)==($155|0);
   $159 = $158 & $157;
   $160 = $156 | $159;
   if ($160) {
    $162 = (___errno_location()|0);
    HEAP32[$162>>2] = 34;
    $163 = (+($3|0));
    $164 = $163 * 2.2250738585072014E-308;
    $165 = $164 * 2.2250738585072014E-308;
    $$0165 = $165;
    break;
   }
   $161 = ($$3162$lcssa|0)>(-1);
   if ($161) {
    $$3158179 = $$0155;$$4163178 = $$3162$lcssa;$170 = $136;$171 = $137;
    while(1) {
     $166 = !($$3158179 >= 0.5);
     $167 = $$4163178 << 1;
     $168 = $$3158179 + -1.0;
     $not$ = $166 ^ 1;
     $169 = $not$&1;
     $$5164 = $167 | $169;
     $$pn = $166 ? $$3158179 : $168;
     $$4 = $$3158179 + $$pn;
     $172 = (_i64Add(($170|0),($171|0),-1,-1)|0);
     $173 = tempRet0;
     $174 = ($$5164|0)>(-1);
     if ($174) {
      $$3158179 = $$4;$$4163178 = $$5164;$170 = $172;$171 = $173;
     } else {
      $$3158$lcssa = $$4;$$4163$lcssa = $$5164;$181 = $172;$182 = $173;
      break;
     }
    }
   } else {
    $$3158$lcssa = $$0155;$$4163$lcssa = $$3162$lcssa;$181 = $136;$182 = $137;
   }
   $175 = ($1|0)<(0);
   $176 = $175 << 31 >> 31;
   $177 = ($2|0)<(0);
   $178 = $177 << 31 >> 31;
   $179 = (_i64Subtract(32,0,($2|0),($178|0))|0);
   $180 = tempRet0;
   $183 = (_i64Add(($179|0),($180|0),($181|0),($182|0))|0);
   $184 = tempRet0;
   $185 = ($184|0)<($176|0);
   $186 = ($183>>>0)<($1>>>0);
   $187 = ($184|0)==($176|0);
   $188 = $187 & $186;
   $189 = $185 | $188;
   if ($189) {
    $190 = ($183|0)>(0);
    if ($190) {
     $$0166 = $183;
     label = 59;
    } else {
     $$0166170 = 0;$194 = 84;
     label = 61;
    }
   } else {
    $$0166 = $1;
    label = 59;
   }
   if ((label|0) == 59) {
    $191 = ($$0166|0)<(53);
    $192 = (84 - ($$0166))|0;
    if ($191) {
     $$0166170 = $$0166;$194 = $192;
     label = 61;
    } else {
     $$pre200 = (+($3|0));
     $$0151 = 0.0;$$0166169 = $$0166;$$pre$phi201Z2D = $$pre200;
    }
   }
   if ((label|0) == 61) {
    $193 = (+($3|0));
    $195 = (+_scalbn(1.0,$194));
    $196 = (+_copysignl($195,$193));
    $$0151 = $196;$$0166169 = $$0166170;$$pre$phi201Z2D = $193;
   }
   $197 = ($$0166169|0)<(32);
   $198 = $$3158$lcssa != 0.0;
   $or$cond4 = $198 & $197;
   $199 = $$4163$lcssa & 1;
   $200 = ($199|0)==(0);
   $or$cond168 = $200 & $or$cond4;
   $201 = $or$cond168&1;
   $$6 = (($$4163$lcssa) + ($201))|0;
   $$5 = $or$cond168 ? 0.0 : $$3158$lcssa;
   $202 = (+($$6>>>0));
   $203 = $$pre$phi201Z2D * $202;
   $204 = $$0151 + $203;
   $205 = $$5 * $$pre$phi201Z2D;
   $206 = $205 + $204;
   $207 = $206 - $$0151;
   $208 = $207 != 0.0;
   if (!($208)) {
    $209 = (___errno_location()|0);
    HEAP32[$209>>2] = 34;
   }
   $210 = (+_scalbnl($207,$181));
   $$0165 = $210;
  }
 } while(0);
 return (+$$0165);
}
function _decfloat($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$0345 = 0, $$$0350 = 0, $$$0385 = 0, $$$0401 = 0, $$$5355 = 0, $$$5390 = 0, $$0329 = 0, $$0332488 = 0, $$0333 = 0, $$0334 = 0, $$0336484 = 0, $$0340494 = 0, $$0341$lcssa = 0, $$0341461 = 0, $$0341462 = 0, $$0341463 = 0, $$0341511 = 0, $$0345$lcssa = 0, $$0345465 = 0;
 var $$0345466 = 0, $$0345467 = 0, $$0345510 = 0, $$0350$lcssa553 = 0, $$0350492 = 0, $$0360 = 0.0, $$0361 = 0.0, $$0365482 = 0.0, $$0372 = 0, $$0380 = 0, $$0380$ph = 0, $$0385$lcssa552 = 0, $$0385491 = 0, $$0393 = 0, $$0396 = 0, $$0401$lcssa = 0, $$0401471 = 0, $$0401472 = 0, $$0401473 = 0, $$0401507 = 0;
 var $$1 = 0.0, $$10 = 0, $$1330$be = 0, $$1330$ph = 0, $$1335 = 0, $$1337 = 0, $$1362 = 0.0, $$1366 = 0.0, $$1373 = 0, $$1373$ph446 = 0, $$1381 = 0, $$1381$ph = 0, $$1381$ph557 = 0, $$1394$lcssa = 0, $$1394509 = 0, $$2 = 0, $$2343 = 0, $$2347 = 0, $$2352$ph447 = 0, $$2367 = 0.0;
 var $$2371$v = 0, $$2374 = 0, $$2387$ph445 = 0, $$2395 = 0, $$2398 = 0, $$2403 = 0, $$3$be = 0, $$3$lcssa = 0, $$3344501 = 0, $$3348 = 0, $$3364 = 0.0, $$3368 = 0.0, $$3375 = 0, $$3383 = 0, $$3399$lcssa = 0, $$3399508 = 0, $$3512 = 0, $$413 = 0, $$423 = 0, $$4349493 = 0;
 var $$4354 = 0, $$4354$ph = 0, $$4354$ph558 = 0, $$4376 = 0, $$4384 = 0, $$4389$ph = 0, $$4389$ph443 = 0, $$4400 = 0, $$4483 = 0, $$5 = 0, $$5$in = 0, $$5355486 = 0, $$5390485 = 0, $$6378$ph = 0, $$6487 = 0, $$9481 = 0, $$neg440 = 0, $$neg441 = 0, $$pre = 0, $$pre551 = 0;
 var $$promoted = 0, $$sink = 0, $$sink419$off0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0.0;
 var $133 = 0.0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0.0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0.0, $309 = 0.0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0, $322 = 0.0, $323 = 0.0, $324 = 0.0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0, $339 = 0.0, $34 = 0, $340 = 0.0, $341 = 0, $342 = 0, $343 = 0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0, $349 = 0, $35 = 0, $350 = 0.0;
 var $351 = 0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0, $356 = 0, $357 = 0, $358 = 0.0, $359 = 0, $36 = 0, $360 = 0.0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0.0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $exitcond = 0, $narrow = 0, $not$ = 0, $or$cond = 0, $or$cond11 = 0, $or$cond14 = 0, $or$cond415 = 0, $or$cond417 = 0, $or$cond418 = 0, $or$cond420 = 0, $or$cond420$not = 0, $or$cond421 = 0, $or$cond424 = 0, $or$cond5 = 0;
 var $or$cond579 = 0, $sum = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $6 = sp;
 $sum = (($3) + ($2))|0;
 $7 = (0 - ($sum))|0;
 $8 = ((($0)) + 4|0);
 $9 = ((($0)) + 100|0);
 $$0329 = $1;$$0396 = 0;
 L1: while(1) {
  switch ($$0329|0) {
  case 46:  {
   label = 6;
   break L1;
   break;
  }
  case 48:  {
   break;
  }
  default: {
   $$0393 = 0;$$2 = $$0329;$$2398 = $$0396;$368 = 0;$369 = 0;
   break L1;
  }
  }
  $10 = HEAP32[$8>>2]|0;
  $11 = HEAP32[$9>>2]|0;
  $12 = ($10>>>0)<($11>>>0);
  if ($12) {
   $13 = ((($10)) + 1|0);
   HEAP32[$8>>2] = $13;
   $14 = HEAP8[$10>>0]|0;
   $15 = $14&255;
   $$0329 = $15;$$0396 = 1;
   continue;
  } else {
   $16 = (___shgetc($0)|0);
   $$0329 = $16;$$0396 = 1;
   continue;
  }
 }
 if ((label|0) == 6) {
  $17 = HEAP32[$8>>2]|0;
  $18 = HEAP32[$9>>2]|0;
  $19 = ($17>>>0)<($18>>>0);
  if ($19) {
   $20 = ((($17)) + 1|0);
   HEAP32[$8>>2] = $20;
   $21 = HEAP8[$17>>0]|0;
   $22 = $21&255;
   $$1330$ph = $22;
  } else {
   $23 = (___shgetc($0)|0);
   $$1330$ph = $23;
  }
  $24 = ($$1330$ph|0)==(48);
  if ($24) {
   $25 = 0;$26 = 0;
   while(1) {
    $27 = (_i64Add(($25|0),($26|0),-1,-1)|0);
    $28 = tempRet0;
    $29 = HEAP32[$8>>2]|0;
    $30 = HEAP32[$9>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = ((($29)) + 1|0);
     HEAP32[$8>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $$1330$be = $34;
    } else {
     $35 = (___shgetc($0)|0);
     $$1330$be = $35;
    }
    $36 = ($$1330$be|0)==(48);
    if ($36) {
     $25 = $27;$26 = $28;
    } else {
     $$0393 = 1;$$2 = $$1330$be;$$2398 = 1;$368 = $27;$369 = $28;
     break;
    }
   }
  } else {
   $$0393 = 1;$$2 = $$1330$ph;$$2398 = $$0396;$368 = 0;$369 = 0;
  }
 }
 HEAP32[$6>>2] = 0;
 $37 = (($$2) + -48)|0;
 $38 = ($37>>>0)<(10);
 $39 = ($$2|0)==(46);
 $40 = $39 | $38;
 L20: do {
  if ($40) {
   $41 = ((($6)) + 496|0);
   $$0341511 = 0;$$0345510 = 0;$$0401507 = 0;$$1394509 = $$0393;$$3399508 = $$2398;$$3512 = $$2;$370 = $39;$371 = $37;$372 = $368;$373 = $369;$44 = 0;$45 = 0;
   L22: while(1) {
    do {
     if ($370) {
      $cond = ($$1394509|0)==(0);
      if ($cond) {
       $$2343 = $$0341511;$$2347 = $$0345510;$$2395 = 1;$$2403 = $$0401507;$$4400 = $$3399508;$374 = $44;$375 = $45;$376 = $44;$377 = $45;
      } else {
       break L22;
      }
     } else {
      $43 = ($$0345510|0)<(125);
      $46 = (_i64Add(($44|0),($45|0),1,0)|0);
      $47 = tempRet0;
      $48 = ($$3512|0)!=(48);
      if (!($43)) {
       if (!($48)) {
        $$2343 = $$0341511;$$2347 = $$0345510;$$2395 = $$1394509;$$2403 = $$0401507;$$4400 = $$3399508;$374 = $372;$375 = $373;$376 = $46;$377 = $47;
        break;
       }
       $57 = HEAP32[$41>>2]|0;
       $58 = $57 | 1;
       HEAP32[$41>>2] = $58;
       $$2343 = $$0341511;$$2347 = $$0345510;$$2395 = $$1394509;$$2403 = $$0401507;$$4400 = $$3399508;$374 = $372;$375 = $373;$376 = $46;$377 = $47;
       break;
      }
      $$$0401 = $48 ? $46 : $$0401507;
      $49 = ($$0341511|0)==(0);
      $$pre551 = (($6) + ($$0345510<<2)|0);
      if ($49) {
       $$sink = $371;
      } else {
       $50 = HEAP32[$$pre551>>2]|0;
       $51 = ($50*10)|0;
       $52 = (($$3512) + -48)|0;
       $53 = (($52) + ($51))|0;
       $$sink = $53;
      }
      HEAP32[$$pre551>>2] = $$sink;
      $54 = (($$0341511) + 1)|0;
      $55 = ($54|0)==(9);
      $56 = $55&1;
      $$$0345 = (($$0345510) + ($56))|0;
      $$413 = $55 ? 0 : $54;
      $$2343 = $$413;$$2347 = $$$0345;$$2395 = $$1394509;$$2403 = $$$0401;$$4400 = 1;$374 = $372;$375 = $373;$376 = $46;$377 = $47;
     }
    } while(0);
    $59 = HEAP32[$8>>2]|0;
    $60 = HEAP32[$9>>2]|0;
    $61 = ($59>>>0)<($60>>>0);
    if ($61) {
     $62 = ((($59)) + 1|0);
     HEAP32[$8>>2] = $62;
     $63 = HEAP8[$59>>0]|0;
     $64 = $63&255;
     $$3$be = $64;
    } else {
     $65 = (___shgetc($0)|0);
     $$3$be = $65;
    }
    $66 = (($$3$be) + -48)|0;
    $67 = ($66>>>0)<(10);
    $68 = ($$3$be|0)==(46);
    $69 = $68 | $67;
    if ($69) {
     $$0341511 = $$2343;$$0345510 = $$2347;$$0401507 = $$2403;$$1394509 = $$2395;$$3399508 = $$4400;$$3512 = $$3$be;$370 = $68;$371 = $66;$372 = $374;$373 = $375;$44 = $376;$45 = $377;
    } else {
     $$0341$lcssa = $$2343;$$0345$lcssa = $$2347;$$0401$lcssa = $$2403;$$1394$lcssa = $$2395;$$3$lcssa = $$3$be;$$3399$lcssa = $$4400;$71 = $374;$72 = $376;$74 = $375;$75 = $377;
     label = 29;
     break L20;
    }
   }
   $42 = ($$3399508|0)!=(0);
   $$0341463 = $$0341511;$$0345467 = $$0345510;$$0401473 = $$0401507;$378 = $44;$379 = $45;$380 = $372;$381 = $373;$382 = $42;
   label = 37;
  } else {
   $$0341$lcssa = 0;$$0345$lcssa = 0;$$0401$lcssa = 0;$$1394$lcssa = $$0393;$$3$lcssa = $$2;$$3399$lcssa = $$2398;$71 = $368;$72 = 0;$74 = $369;$75 = 0;
   label = 29;
  }
 } while(0);
 do {
  if ((label|0) == 29) {
   $70 = ($$1394$lcssa|0)==(0);
   $73 = $70 ? $72 : $71;
   $76 = $70 ? $75 : $74;
   $77 = ($$3399$lcssa|0)!=(0);
   $78 = $$3$lcssa | 32;
   $79 = ($78|0)==(101);
   $or$cond415 = $77 & $79;
   if (!($or$cond415)) {
    $94 = ($$3$lcssa|0)>(-1);
    if ($94) {
     $$0341463 = $$0341$lcssa;$$0345467 = $$0345$lcssa;$$0401473 = $$0401$lcssa;$378 = $72;$379 = $75;$380 = $73;$381 = $76;$382 = $77;
     label = 37;
     break;
    } else {
     $$0341462 = $$0341$lcssa;$$0345466 = $$0345$lcssa;$$0401472 = $$0401$lcssa;$383 = $72;$384 = $75;$385 = $77;$386 = $73;$387 = $76;
     label = 39;
     break;
    }
   }
   $80 = (_scanexp($0,$5)|0);
   $81 = tempRet0;
   $82 = ($80|0)==(0);
   $83 = ($81|0)==(-2147483648);
   $84 = $82 & $83;
   if ($84) {
    $85 = ($5|0)==(0);
    if ($85) {
     ___shlim($0,0);
     $$1 = 0.0;
     break;
    }
    $86 = HEAP32[$9>>2]|0;
    $87 = ($86|0)==(0|0);
    if ($87) {
     $90 = 0;$91 = 0;
    } else {
     $88 = HEAP32[$8>>2]|0;
     $89 = ((($88)) + -1|0);
     HEAP32[$8>>2] = $89;
     $90 = 0;$91 = 0;
    }
   } else {
    $90 = $80;$91 = $81;
   }
   $92 = (_i64Add(($90|0),($91|0),($73|0),($76|0))|0);
   $93 = tempRet0;
   $$0341461 = $$0341$lcssa;$$0345465 = $$0345$lcssa;$$0401471 = $$0401$lcssa;$104 = $92;$106 = $72;$107 = $93;$109 = $75;
   label = 41;
  }
 } while(0);
 if ((label|0) == 37) {
  $95 = HEAP32[$9>>2]|0;
  $96 = ($95|0)==(0|0);
  if ($96) {
   $$0341462 = $$0341463;$$0345466 = $$0345467;$$0401472 = $$0401473;$383 = $378;$384 = $379;$385 = $382;$386 = $380;$387 = $381;
   label = 39;
  } else {
   $97 = HEAP32[$8>>2]|0;
   $98 = ((($97)) + -1|0);
   HEAP32[$8>>2] = $98;
   if ($382) {
    $$0341461 = $$0341463;$$0345465 = $$0345467;$$0401471 = $$0401473;$104 = $380;$106 = $378;$107 = $381;$109 = $379;
    label = 41;
   } else {
    label = 40;
   }
  }
 }
 if ((label|0) == 39) {
  if ($385) {
   $$0341461 = $$0341462;$$0345465 = $$0345466;$$0401471 = $$0401472;$104 = $386;$106 = $383;$107 = $387;$109 = $384;
   label = 41;
  } else {
   label = 40;
  }
 }
 do {
  if ((label|0) == 40) {
   $99 = (___errno_location()|0);
   HEAP32[$99>>2] = 22;
   ___shlim($0,0);
   $$1 = 0.0;
  }
  else if ((label|0) == 41) {
   $100 = HEAP32[$6>>2]|0;
   $101 = ($100|0)==(0);
   if ($101) {
    $102 = (+($4|0));
    $103 = $102 * 0.0;
    $$1 = $103;
    break;
   }
   $105 = ($104|0)==($106|0);
   $108 = ($107|0)==($109|0);
   $110 = $105 & $108;
   $111 = ($109|0)<(0);
   $112 = ($106>>>0)<(10);
   $113 = ($109|0)==(0);
   $114 = $113 & $112;
   $115 = $111 | $114;
   $or$cond = $115 & $110;
   if ($or$cond) {
    $116 = ($2|0)>(30);
    $117 = $100 >>> $2;
    $118 = ($117|0)==(0);
    $or$cond417 = $116 | $118;
    if ($or$cond417) {
     $119 = (+($4|0));
     $120 = (+($100>>>0));
     $121 = $119 * $120;
     $$1 = $121;
     break;
    }
   }
   $122 = (($3|0) / -2)&-1;
   $123 = ($122|0)<(0);
   $124 = $123 << 31 >> 31;
   $125 = ($107|0)>($124|0);
   $126 = ($104>>>0)>($122>>>0);
   $127 = ($107|0)==($124|0);
   $128 = $127 & $126;
   $129 = $125 | $128;
   if ($129) {
    $130 = (___errno_location()|0);
    HEAP32[$130>>2] = 34;
    $131 = (+($4|0));
    $132 = $131 * 1.7976931348623157E+308;
    $133 = $132 * 1.7976931348623157E+308;
    $$1 = $133;
    break;
   }
   $134 = (($3) + -106)|0;
   $135 = ($134|0)<(0);
   $136 = $135 << 31 >> 31;
   $137 = ($107|0)<($136|0);
   $138 = ($104>>>0)<($134>>>0);
   $139 = ($107|0)==($136|0);
   $140 = $139 & $138;
   $141 = $137 | $140;
   if ($141) {
    $142 = (___errno_location()|0);
    HEAP32[$142>>2] = 34;
    $143 = (+($4|0));
    $144 = $143 * 2.2250738585072014E-308;
    $145 = $144 * 2.2250738585072014E-308;
    $$1 = $145;
    break;
   }
   $146 = ($$0341461|0)==(0);
   if ($146) {
    $$3348 = $$0345465;
   } else {
    $147 = ($$0341461|0)<(9);
    if ($147) {
     $148 = (($6) + ($$0345465<<2)|0);
     $$promoted = HEAP32[$148>>2]|0;
     $$3344501 = $$0341461;$150 = $$promoted;
     while(1) {
      $149 = ($150*10)|0;
      $151 = (($$3344501) + 1)|0;
      $152 = ($$3344501|0)<(8);
      if ($152) {
       $$3344501 = $151;$150 = $149;
      } else {
       break;
      }
     }
     HEAP32[$148>>2] = $149;
    }
    $153 = (($$0345465) + 1)|0;
    $$3348 = $153;
   }
   $154 = ($$0401471|0)<(9);
   if ($154) {
    $155 = ($$0401471|0)<=($104|0);
    $156 = ($104|0)<(18);
    $or$cond5 = $155 & $156;
    if ($or$cond5) {
     $157 = ($104|0)==(9);
     if ($157) {
      $158 = (+($4|0));
      $159 = HEAP32[$6>>2]|0;
      $160 = (+($159>>>0));
      $161 = $158 * $160;
      $$1 = $161;
      break;
     }
     $162 = ($104|0)<(9);
     if ($162) {
      $163 = (+($4|0));
      $164 = HEAP32[$6>>2]|0;
      $165 = (+($164>>>0));
      $166 = $163 * $165;
      $167 = (8 - ($104))|0;
      $168 = (1184 + ($167<<2)|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = (+($169|0));
      $171 = $166 / $170;
      $$1 = $171;
      break;
     }
     $$neg440 = Math_imul($104, -3)|0;
     $$neg441 = (($2) + 27)|0;
     $172 = (($$neg441) + ($$neg440))|0;
     $173 = ($172|0)>(30);
     $$pre = HEAP32[$6>>2]|0;
     $174 = $$pre >>> $172;
     $175 = ($174|0)==(0);
     $or$cond579 = $173 | $175;
     if ($or$cond579) {
      $176 = (+($4|0));
      $177 = (+($$pre>>>0));
      $178 = $176 * $177;
      $179 = (($104) + -10)|0;
      $180 = (1184 + ($179<<2)|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = (+($181|0));
      $183 = $178 * $182;
      $$1 = $183;
      break;
     }
    }
   }
   $184 = (($104|0) % 9)&-1;
   $185 = ($184|0)==(0);
   if ($185) {
    $$0380$ph = 0;$$1373$ph446 = $$3348;$$2352$ph447 = 0;$$2387$ph445 = $104;
   } else {
    $186 = ($104|0)>(-1);
    $187 = (($184) + 9)|0;
    $188 = $186 ? $184 : $187;
    $189 = (8 - ($188))|0;
    $190 = (1184 + ($189<<2)|0);
    $191 = HEAP32[$190>>2]|0;
    $192 = ($$3348|0)==(0);
    if ($192) {
     $$0350$lcssa553 = 0;$$0372 = 0;$$0385$lcssa552 = $104;
    } else {
     $193 = (1000000000 / ($191|0))&-1;
     $$0340494 = 0;$$0350492 = 0;$$0385491 = $104;$$4349493 = 0;
     while(1) {
      $194 = (($6) + ($$4349493<<2)|0);
      $195 = HEAP32[$194>>2]|0;
      $196 = (($195>>>0) % ($191>>>0))&-1;
      $197 = (($195>>>0) / ($191>>>0))&-1;
      $198 = (($197) + ($$0340494))|0;
      HEAP32[$194>>2] = $198;
      $199 = Math_imul($193, $196)|0;
      $200 = ($$4349493|0)==($$0350492|0);
      $201 = ($198|0)==(0);
      $or$cond418 = $200 & $201;
      $202 = (($$0350492) + 1)|0;
      $203 = $202 & 127;
      $204 = (($$0385491) + -9)|0;
      $$$0385 = $or$cond418 ? $204 : $$0385491;
      $$$0350 = $or$cond418 ? $203 : $$0350492;
      $205 = (($$4349493) + 1)|0;
      $206 = ($205|0)==($$3348|0);
      if ($206) {
       break;
      } else {
       $$0340494 = $199;$$0350492 = $$$0350;$$0385491 = $$$0385;$$4349493 = $205;
      }
     }
     $207 = ($199|0)==(0);
     if ($207) {
      $$0350$lcssa553 = $$$0350;$$0372 = $$3348;$$0385$lcssa552 = $$$0385;
     } else {
      $208 = (($6) + ($$3348<<2)|0);
      $209 = (($$3348) + 1)|0;
      HEAP32[$208>>2] = $199;
      $$0350$lcssa553 = $$$0350;$$0372 = $209;$$0385$lcssa552 = $$$0385;
     }
    }
    $210 = (9 - ($188))|0;
    $211 = (($210) + ($$0385$lcssa552))|0;
    $$0380$ph = 0;$$1373$ph446 = $$0372;$$2352$ph447 = $$0350$lcssa553;$$2387$ph445 = $211;
   }
   L101: while(1) {
    $212 = ($$2387$ph445|0)<(18);
    $213 = ($$2387$ph445|0)==(18);
    $214 = (($6) + ($$2352$ph447<<2)|0);
    $$0380 = $$0380$ph;$$1373 = $$1373$ph446;
    while(1) {
     if (!($212)) {
      if (!($213)) {
       $$1381$ph = $$0380;$$4354$ph = $$2352$ph447;$$4389$ph443 = $$2387$ph445;$$6378$ph = $$1373;
       break L101;
      }
      $215 = HEAP32[$214>>2]|0;
      $216 = ($215>>>0)<(9007199);
      if (!($216)) {
       $$1381$ph = $$0380;$$4354$ph = $$2352$ph447;$$4389$ph443 = 18;$$6378$ph = $$1373;
       break L101;
      }
     }
     $217 = (($$1373) + 127)|0;
     $$0334 = 0;$$2374 = $$1373;$$5$in = $217;
     while(1) {
      $$5 = $$5$in & 127;
      $218 = (($6) + ($$5<<2)|0);
      $219 = HEAP32[$218>>2]|0;
      $220 = (_bitshift64Shl(($219|0),0,29)|0);
      $221 = tempRet0;
      $222 = (_i64Add(($220|0),($221|0),($$0334|0),0)|0);
      $223 = tempRet0;
      $224 = ($223>>>0)>(0);
      $225 = ($222>>>0)>(1000000000);
      $226 = ($223|0)==(0);
      $227 = $226 & $225;
      $228 = $224 | $227;
      if ($228) {
       $229 = (___udivdi3(($222|0),($223|0),1000000000,0)|0);
       $230 = tempRet0;
       $231 = (___uremdi3(($222|0),($223|0),1000000000,0)|0);
       $232 = tempRet0;
       $$1335 = $229;$$sink419$off0 = $231;
      } else {
       $$1335 = 0;$$sink419$off0 = $222;
      }
      HEAP32[$218>>2] = $$sink419$off0;
      $233 = (($$2374) + 127)|0;
      $234 = $233 & 127;
      $235 = ($$5|0)!=($234|0);
      $236 = ($$5|0)==($$2352$ph447|0);
      $or$cond420 = $235 | $236;
      $or$cond420$not = $or$cond420 ^ 1;
      $237 = ($$sink419$off0|0)==(0);
      $or$cond421 = $237 & $or$cond420$not;
      $$3375 = $or$cond421 ? $$5 : $$2374;
      $238 = (($$5) + -1)|0;
      if ($236) {
       break;
      } else {
       $$0334 = $$1335;$$2374 = $$3375;$$5$in = $238;
      }
     }
     $239 = (($$0380) + -29)|0;
     $240 = ($$1335|0)==(0);
     if ($240) {
      $$0380 = $239;$$1373 = $$3375;
     } else {
      break;
     }
    }
    $241 = (($$2387$ph445) + 9)|0;
    $242 = (($$2352$ph447) + 127)|0;
    $243 = $242 & 127;
    $244 = ($243|0)==($$3375|0);
    $245 = (($$3375) + 127)|0;
    $246 = $245 & 127;
    $247 = (($$3375) + 126)|0;
    $248 = $247 & 127;
    $249 = (($6) + ($248<<2)|0);
    if ($244) {
     $250 = (($6) + ($246<<2)|0);
     $251 = HEAP32[$250>>2]|0;
     $252 = HEAP32[$249>>2]|0;
     $253 = $252 | $251;
     HEAP32[$249>>2] = $253;
     $$4376 = $246;
    } else {
     $$4376 = $$3375;
    }
    $254 = (($6) + ($243<<2)|0);
    HEAP32[$254>>2] = $$1335;
    $$0380$ph = $239;$$1373$ph446 = $$4376;$$2352$ph447 = $243;$$2387$ph445 = $241;
   }
   L119: while(1) {
    $291 = (($$6378$ph) + 1)|0;
    $288 = $291 & 127;
    $292 = (($$6378$ph) + 127)|0;
    $293 = $292 & 127;
    $294 = (($6) + ($293<<2)|0);
    $$1381$ph557 = $$1381$ph;$$4354$ph558 = $$4354$ph;$$4389$ph = $$4389$ph443;
    while(1) {
     $267 = ($$4389$ph|0)==(18);
     $295 = ($$4389$ph|0)>(27);
     $$423 = $295 ? 9 : 1;
     $$1381 = $$1381$ph557;$$4354 = $$4354$ph558;
     while(1) {
      $$0336484 = 0;
      while(1) {
       $255 = (($$0336484) + ($$4354))|0;
       $256 = $255 & 127;
       $257 = ($256|0)==($$6378$ph|0);
       if ($257) {
        $$1337 = 2;
        label = 88;
        break;
       }
       $258 = (($6) + ($256<<2)|0);
       $259 = HEAP32[$258>>2]|0;
       $260 = (1216 + ($$0336484<<2)|0);
       $261 = HEAP32[$260>>2]|0;
       $262 = ($259>>>0)<($261>>>0);
       if ($262) {
        $$1337 = 2;
        label = 88;
        break;
       }
       $263 = ($259>>>0)>($261>>>0);
       if ($263) {
        break;
       }
       $264 = (($$0336484) + 1)|0;
       $265 = ($$0336484|0)<(1);
       if ($265) {
        $$0336484 = $264;
       } else {
        $$1337 = $264;
        label = 88;
        break;
       }
      }
      if ((label|0) == 88) {
       label = 0;
       $266 = ($$1337|0)==(2);
       $or$cond11 = $267 & $266;
       if ($or$cond11) {
        $$0365482 = 0.0;$$4483 = 0;$$9481 = $$6378$ph;
        break L119;
       }
      }
      $268 = (($$423) + ($$1381))|0;
      $269 = ($$4354|0)==($$6378$ph|0);
      if ($269) {
       $$1381 = $268;$$4354 = $$6378$ph;
      } else {
       break;
      }
     }
     $270 = 1 << $$423;
     $271 = (($270) + -1)|0;
     $272 = 1000000000 >>> $$423;
     $$0332488 = 0;$$5355486 = $$4354;$$5390485 = $$4389$ph;$$6487 = $$4354;
     while(1) {
      $273 = (($6) + ($$6487<<2)|0);
      $274 = HEAP32[$273>>2]|0;
      $275 = $274 & $271;
      $276 = $274 >>> $$423;
      $277 = (($276) + ($$0332488))|0;
      HEAP32[$273>>2] = $277;
      $278 = Math_imul($275, $272)|0;
      $279 = ($$6487|0)==($$5355486|0);
      $280 = ($277|0)==(0);
      $or$cond424 = $279 & $280;
      $281 = (($$5355486) + 1)|0;
      $282 = $281 & 127;
      $283 = (($$5390485) + -9)|0;
      $$$5390 = $or$cond424 ? $283 : $$5390485;
      $$$5355 = $or$cond424 ? $282 : $$5355486;
      $284 = (($$6487) + 1)|0;
      $285 = $284 & 127;
      $286 = ($285|0)==($$6378$ph|0);
      if ($286) {
       break;
      } else {
       $$0332488 = $278;$$5355486 = $$$5355;$$5390485 = $$$5390;$$6487 = $285;
      }
     }
     $287 = ($278|0)==(0);
     if ($287) {
      $$1381$ph557 = $268;$$4354$ph558 = $$$5355;$$4389$ph = $$$5390;
      continue;
     }
     $289 = ($288|0)==($$$5355|0);
     if (!($289)) {
      break;
     }
     $296 = HEAP32[$294>>2]|0;
     $297 = $296 | 1;
     HEAP32[$294>>2] = $297;
     $$1381$ph557 = $268;$$4354$ph558 = $$$5355;$$4389$ph = $$$5390;
    }
    $290 = (($6) + ($$6378$ph<<2)|0);
    HEAP32[$290>>2] = $278;
    $$1381$ph = $268;$$4354$ph = $$$5355;$$4389$ph443 = $$$5390;$$6378$ph = $288;
   }
   while(1) {
    $298 = (($$4483) + ($$4354))|0;
    $299 = $298 & 127;
    $300 = ($299|0)==($$9481|0);
    $301 = (($$9481) + 1)|0;
    $302 = $301 & 127;
    if ($300) {
     $303 = (($302) + -1)|0;
     $304 = (($6) + ($303<<2)|0);
     HEAP32[$304>>2] = 0;
     $$10 = $302;
    } else {
     $$10 = $$9481;
    }
    $305 = $$0365482 * 1.0E+9;
    $306 = (($6) + ($299<<2)|0);
    $307 = HEAP32[$306>>2]|0;
    $308 = (+($307>>>0));
    $309 = $305 + $308;
    $310 = (($$4483) + 1)|0;
    $exitcond = ($310|0)==(2);
    if ($exitcond) {
     break;
    } else {
     $$0365482 = $309;$$4483 = $310;$$9481 = $$10;
    }
   }
   $311 = (+($4|0));
   $312 = $309 * $311;
   $313 = (($$1381) + 53)|0;
   $314 = (($313) - ($3))|0;
   $315 = ($314|0)<($2|0);
   $316 = ($314|0)>(0);
   $$ = $316 ? $314 : 0;
   $$0333 = $315 ? $$ : $2;
   $317 = ($$0333|0)<(53);
   if ($317) {
    $318 = (105 - ($$0333))|0;
    $319 = (+_scalbn(1.0,$318));
    $320 = (+_copysignl($319,$312));
    $321 = (53 - ($$0333))|0;
    $322 = (+_scalbn(1.0,$321));
    $323 = (+_fmodl($312,$322));
    $324 = $312 - $323;
    $325 = $320 + $324;
    $$0360 = $320;$$0361 = $323;$$1366 = $325;
   } else {
    $$0360 = 0.0;$$0361 = 0.0;$$1366 = $312;
   }
   $326 = (($$4354) + 2)|0;
   $327 = $326 & 127;
   $328 = ($327|0)==($$10|0);
   if ($328) {
    $$3364 = $$0361;
   } else {
    $329 = (($6) + ($327<<2)|0);
    $330 = HEAP32[$329>>2]|0;
    $331 = ($330>>>0)<(500000000);
    do {
     if ($331) {
      $332 = ($330|0)==(0);
      if ($332) {
       $333 = (($$4354) + 3)|0;
       $334 = $333 & 127;
       $335 = ($334|0)==($$10|0);
       if ($335) {
        $$1362 = $$0361;
        break;
       }
      }
      $336 = $311 * 0.25;
      $337 = $336 + $$0361;
      $$1362 = $337;
     } else {
      $338 = ($330|0)==(500000000);
      if (!($338)) {
       $339 = $311 * 0.75;
       $340 = $339 + $$0361;
       $$1362 = $340;
       break;
      }
      $341 = (($$4354) + 3)|0;
      $342 = $341 & 127;
      $343 = ($342|0)==($$10|0);
      if ($343) {
       $344 = $311 * 0.5;
       $345 = $344 + $$0361;
       $$1362 = $345;
       break;
      } else {
       $346 = $311 * 0.75;
       $347 = $346 + $$0361;
       $$1362 = $347;
       break;
      }
     }
    } while(0);
    $348 = (53 - ($$0333))|0;
    $349 = ($348|0)>(1);
    if ($349) {
     $350 = (+_fmodl($$1362,1.0));
     $351 = $350 != 0.0;
     if ($351) {
      $$3364 = $$1362;
     } else {
      $352 = $$1362 + 1.0;
      $$3364 = $352;
     }
    } else {
     $$3364 = $$1362;
    }
   }
   $353 = $$1366 + $$3364;
   $354 = $353 - $$0360;
   $355 = $313 & 2147483647;
   $356 = (-2 - ($sum))|0;
   $357 = ($355|0)>($356|0);
   do {
    if ($357) {
     $358 = (+Math_abs((+$354)));
     $359 = !($358 >= 9007199254740992.0);
     $360 = $354 * 0.5;
     $not$ = $359 ^ 1;
     $361 = $not$&1;
     $$3383 = (($$1381) + ($361))|0;
     $$2367 = $359 ? $354 : $360;
     $362 = (($$3383) + 50)|0;
     $363 = ($362|0)>($7|0);
     if (!($363)) {
      $364 = ($$0333|0)!=($314|0);
      $narrow = $364 | $359;
      $$2371$v = $315 & $narrow;
      $365 = $$3364 != 0.0;
      $or$cond14 = $365 & $$2371$v;
      if (!($or$cond14)) {
       $$3368 = $$2367;$$4384 = $$3383;
       break;
      }
     }
     $366 = (___errno_location()|0);
     HEAP32[$366>>2] = 34;
     $$3368 = $$2367;$$4384 = $$3383;
    } else {
     $$3368 = $354;$$4384 = $$1381;
    }
   } while(0);
   $367 = (+_scalbnl($$3368,$$4384));
   $$1 = $367;
  }
 } while(0);
 STACKTOP = sp;return (+$$1);
}
function _scanexp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04860 = 0, $$049 = 0, $$1$be = 0, $$159 = 0, $$2$be = 0, $$2$lcssa = 0, $$254 = 0, $$3$be = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 100|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = ((($3)) + 1|0);
  HEAP32[$2>>2] = $7;
  $8 = HEAP8[$3>>0]|0;
  $9 = $8&255;
  $11 = $9;
 } else {
  $10 = (___shgetc($0)|0);
  $11 = $10;
 }
 switch ($11|0) {
 case 43: case 45:  {
  $12 = ($11|0)==(45);
  $13 = $12&1;
  $14 = HEAP32[$2>>2]|0;
  $15 = HEAP32[$4>>2]|0;
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   HEAP32[$2>>2] = $17;
   $18 = HEAP8[$14>>0]|0;
   $19 = $18&255;
   $22 = $19;
  } else {
   $20 = (___shgetc($0)|0);
   $22 = $20;
  }
  $21 = (($22) + -48)|0;
  $23 = ($21>>>0)>(9);
  $24 = ($1|0)!=(0);
  $or$cond3 = $24 & $23;
  if ($or$cond3) {
   $25 = HEAP32[$4>>2]|0;
   $26 = ($25|0)==(0|0);
   if ($26) {
    $$0 = $13;$$049 = $22;
   } else {
    $27 = HEAP32[$2>>2]|0;
    $28 = ((($27)) + -1|0);
    HEAP32[$2>>2] = $28;
    $$0 = $13;$$049 = $22;
   }
  } else {
   $$0 = $13;$$049 = $22;
  }
  break;
 }
 default: {
  $$0 = 0;$$049 = $11;
 }
 }
 $29 = (($$049) + -48)|0;
 $30 = ($29>>>0)>(9);
 if ($30) {
  $31 = HEAP32[$4>>2]|0;
  $32 = ($31|0)==(0|0);
  if ($32) {
   $100 = -2147483648;$101 = 0;
  } else {
   $33 = HEAP32[$2>>2]|0;
   $34 = ((($33)) + -1|0);
   HEAP32[$2>>2] = $34;
   $100 = -2147483648;$101 = 0;
  }
 } else {
  $$04860 = 0;$$159 = $$049;
  while(1) {
   $35 = ($$04860*10)|0;
   $36 = (($$159) + -48)|0;
   $37 = (($36) + ($35))|0;
   $38 = HEAP32[$2>>2]|0;
   $39 = HEAP32[$4>>2]|0;
   $40 = ($38>>>0)<($39>>>0);
   if ($40) {
    $41 = ((($38)) + 1|0);
    HEAP32[$2>>2] = $41;
    $42 = HEAP8[$38>>0]|0;
    $43 = $42&255;
    $$1$be = $43;
   } else {
    $44 = (___shgetc($0)|0);
    $$1$be = $44;
   }
   $45 = (($$1$be) + -48)|0;
   $46 = ($45>>>0)<(10);
   $47 = ($37|0)<(214748364);
   $48 = $46 & $47;
   if ($48) {
    $$04860 = $37;$$159 = $$1$be;
   } else {
    break;
   }
  }
  $49 = ($37|0)<(0);
  $50 = $49 << 31 >> 31;
  $51 = (($$1$be) + -48)|0;
  $52 = ($51>>>0)<(10);
  if ($52) {
   $$254 = $$1$be;$55 = $37;$56 = $50;
   while(1) {
    $57 = (___muldi3(($55|0),($56|0),10,0)|0);
    $58 = tempRet0;
    $59 = ($$254|0)<(0);
    $60 = $59 << 31 >> 31;
    $61 = (_i64Add(($$254|0),($60|0),-48,-1)|0);
    $62 = tempRet0;
    $63 = (_i64Add(($61|0),($62|0),($57|0),($58|0))|0);
    $64 = tempRet0;
    $65 = HEAP32[$2>>2]|0;
    $66 = HEAP32[$4>>2]|0;
    $67 = ($65>>>0)<($66>>>0);
    if ($67) {
     $68 = ((($65)) + 1|0);
     HEAP32[$2>>2] = $68;
     $69 = HEAP8[$65>>0]|0;
     $70 = $69&255;
     $$2$be = $70;
    } else {
     $71 = (___shgetc($0)|0);
     $$2$be = $71;
    }
    $72 = (($$2$be) + -48)|0;
    $73 = ($72>>>0)<(10);
    $74 = ($64|0)<(21474836);
    $75 = ($63>>>0)<(2061584302);
    $76 = ($64|0)==(21474836);
    $77 = $76 & $75;
    $78 = $74 | $77;
    $79 = $73 & $78;
    if ($79) {
     $$254 = $$2$be;$55 = $63;$56 = $64;
    } else {
     $$2$lcssa = $$2$be;$94 = $63;$95 = $64;
     break;
    }
   }
  } else {
   $$2$lcssa = $$1$be;$94 = $37;$95 = $50;
  }
  $53 = (($$2$lcssa) + -48)|0;
  $54 = ($53>>>0)<(10);
  if ($54) {
   while(1) {
    $80 = HEAP32[$2>>2]|0;
    $81 = HEAP32[$4>>2]|0;
    $82 = ($80>>>0)<($81>>>0);
    if ($82) {
     $83 = ((($80)) + 1|0);
     HEAP32[$2>>2] = $83;
     $84 = HEAP8[$80>>0]|0;
     $85 = $84&255;
     $$3$be = $85;
    } else {
     $86 = (___shgetc($0)|0);
     $$3$be = $86;
    }
    $87 = (($$3$be) + -48)|0;
    $88 = ($87>>>0)<(10);
    if (!($88)) {
     break;
    }
   }
  }
  $89 = HEAP32[$4>>2]|0;
  $90 = ($89|0)==(0|0);
  if (!($90)) {
   $91 = HEAP32[$2>>2]|0;
   $92 = ((($91)) + -1|0);
   HEAP32[$2>>2] = $92;
  }
  $93 = ($$0|0)!=(0);
  $96 = (_i64Subtract(0,0,($94|0),($95|0))|0);
  $97 = tempRet0;
  $98 = $93 ? $96 : $94;
  $99 = $93 ? $97 : $95;
  $100 = $99;$101 = $98;
 }
 tempRet0 = ($100);
 return ($101|0);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$ = 0, $$$ = 0, $$0 = 0.0, $$020 = 0, $$1 = 0, $$1$ = 0, $$21 = 0.0, $$22 = 0.0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0;
 var $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($1|0)>(2046);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $$ = $8 ? $7 : 1023;
  $$$ = $5 ? $$ : $4;
  $$21 = $5 ? $6 : $3;
  $$0 = $$21;$$020 = $$$;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($1|0)<(-2044);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $$1 = $15 ? $14 : -1022;
   $$1$ = $12 ? $$1 : $11;
   $$22 = $12 ? $13 : $10;
   $$0 = $$22;$$020 = $$1$;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _copysignl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_copysign($0,$1));
 return (+$2);
}
function _fmodl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_fmod($0,$1));
 return (+$2);
}
function _scalbnl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function _fmod($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$ = 0.0, $$070 = 0.0, $$071$lcssa = 0, $$07194 = 0, $$073$lcssa = 0, $$073100 = 0, $$172$ph = 0, $$174 = 0, $$275$lcssa = 0, $$27586 = 0, $$376$lcssa = 0, $$37683 = 0, $$lcssa = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $7 = tempRet0;
 $8 = $6 & 2047;
 $9 = (_bitshift64Lshr(($4|0),($5|0),52)|0);
 $10 = tempRet0;
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = (_bitshift64Shl(($4|0),($5|0),1)|0);
 $14 = tempRet0;
 $15 = ($13|0)==(0);
 $16 = ($14|0)==(0);
 $17 = $15 & $16;
 L1: do {
  if ($17) {
   label = 3;
  } else {
   $18 = (___DOUBLE_BITS_560($1)|0);
   $19 = tempRet0;
   $20 = $19 & 2147483647;
   $21 = ($20>>>0)>(2146435072);
   $22 = ($18>>>0)>(0);
   $23 = ($20|0)==(2146435072);
   $24 = $23 & $22;
   $25 = $21 | $24;
   $26 = ($8|0)==(2047);
   $or$cond = $26 | $25;
   if ($or$cond) {
    label = 3;
   } else {
    $29 = (_bitshift64Shl(($2|0),($3|0),1)|0);
    $30 = tempRet0;
    $31 = ($30>>>0)>($14>>>0);
    $32 = ($29>>>0)>($13>>>0);
    $33 = ($30|0)==($14|0);
    $34 = $33 & $32;
    $35 = $31 | $34;
    if (!($35)) {
     $36 = ($29|0)==($13|0);
     $37 = ($30|0)==($14|0);
     $38 = $36 & $37;
     $39 = $0 * 0.0;
     $$ = $38 ? $39 : $0;
     return (+$$);
    }
    $40 = ($8|0)==(0);
    if ($40) {
     $41 = (_bitshift64Shl(($2|0),($3|0),12)|0);
     $42 = tempRet0;
     $43 = ($42|0)>(-1);
     $44 = ($41>>>0)>(4294967295);
     $45 = ($42|0)==(-1);
     $46 = $45 & $44;
     $47 = $43 | $46;
     if ($47) {
      $$073100 = 0;$49 = $41;$50 = $42;
      while(1) {
       $48 = (($$073100) + -1)|0;
       $51 = (_bitshift64Shl(($49|0),($50|0),1)|0);
       $52 = tempRet0;
       $53 = ($52|0)>(-1);
       $54 = ($51>>>0)>(4294967295);
       $55 = ($52|0)==(-1);
       $56 = $55 & $54;
       $57 = $53 | $56;
       if ($57) {
        $$073100 = $48;$49 = $51;$50 = $52;
       } else {
        $$073$lcssa = $48;
        break;
       }
      }
     } else {
      $$073$lcssa = 0;
     }
     $58 = (1 - ($$073$lcssa))|0;
     $59 = (_bitshift64Shl(($2|0),($3|0),($58|0))|0);
     $60 = tempRet0;
     $$174 = $$073$lcssa;$87 = $59;$88 = $60;
    } else {
     $61 = $3 & 1048575;
     $62 = $61 | 1048576;
     $$174 = $8;$87 = $2;$88 = $62;
    }
    $63 = ($11|0)==(0);
    if ($63) {
     $64 = (_bitshift64Shl(($4|0),($5|0),12)|0);
     $65 = tempRet0;
     $66 = ($65|0)>(-1);
     $67 = ($64>>>0)>(4294967295);
     $68 = ($65|0)==(-1);
     $69 = $68 & $67;
     $70 = $66 | $69;
     if ($70) {
      $$07194 = 0;$72 = $64;$73 = $65;
      while(1) {
       $71 = (($$07194) + -1)|0;
       $74 = (_bitshift64Shl(($72|0),($73|0),1)|0);
       $75 = tempRet0;
       $76 = ($75|0)>(-1);
       $77 = ($74>>>0)>(4294967295);
       $78 = ($75|0)==(-1);
       $79 = $78 & $77;
       $80 = $76 | $79;
       if ($80) {
        $$07194 = $71;$72 = $74;$73 = $75;
       } else {
        $$071$lcssa = $71;
        break;
       }
      }
     } else {
      $$071$lcssa = 0;
     }
     $81 = (1 - ($$071$lcssa))|0;
     $82 = (_bitshift64Shl(($4|0),($5|0),($81|0))|0);
     $83 = tempRet0;
     $$172$ph = $$071$lcssa;$89 = $82;$90 = $83;
    } else {
     $84 = $5 & 1048575;
     $85 = $84 | 1048576;
     $$172$ph = $11;$89 = $4;$90 = $85;
    }
    $86 = ($$174|0)>($$172$ph|0);
    $91 = (_i64Subtract(($87|0),($88|0),($89|0),($90|0))|0);
    $92 = tempRet0;
    $93 = ($92|0)>(-1);
    $94 = ($91>>>0)>(4294967295);
    $95 = ($92|0)==(-1);
    $96 = $95 & $94;
    $97 = $93 | $96;
    L23: do {
     if ($86) {
      $$27586 = $$174;$100 = $92;$156 = $97;$157 = $87;$158 = $88;$98 = $91;
      while(1) {
       if ($156) {
        $99 = ($98|0)==(0);
        $101 = ($100|0)==(0);
        $102 = $99 & $101;
        if ($102) {
         break;
        } else {
         $104 = $98;$105 = $100;
        }
       } else {
        $104 = $157;$105 = $158;
       }
       $106 = (_bitshift64Shl(($104|0),($105|0),1)|0);
       $107 = tempRet0;
       $108 = (($$27586) + -1)|0;
       $109 = ($108|0)>($$172$ph|0);
       $110 = (_i64Subtract(($106|0),($107|0),($89|0),($90|0))|0);
       $111 = tempRet0;
       $112 = ($111|0)>(-1);
       $113 = ($110>>>0)>(4294967295);
       $114 = ($111|0)==(-1);
       $115 = $114 & $113;
       $116 = $112 | $115;
       if ($109) {
        $$27586 = $108;$100 = $111;$156 = $116;$157 = $106;$158 = $107;$98 = $110;
       } else {
        $$275$lcssa = $108;$$lcssa = $116;$117 = $110;$119 = $111;$159 = $106;$160 = $107;
        break L23;
       }
      }
      $103 = $0 * 0.0;
      $$070 = $103;
      break L1;
     } else {
      $$275$lcssa = $$174;$$lcssa = $97;$117 = $91;$119 = $92;$159 = $87;$160 = $88;
     }
    } while(0);
    if ($$lcssa) {
     $118 = ($117|0)==(0);
     $120 = ($119|0)==(0);
     $121 = $118 & $120;
     if ($121) {
      $129 = $0 * 0.0;
      $$070 = $129;
      break;
     } else {
      $122 = $119;$124 = $117;
     }
    } else {
     $122 = $160;$124 = $159;
    }
    $123 = ($122>>>0)<(1048576);
    $125 = ($124>>>0)<(0);
    $126 = ($122|0)==(1048576);
    $127 = $126 & $125;
    $128 = $123 | $127;
    if ($128) {
     $$37683 = $$275$lcssa;$130 = $124;$131 = $122;
     while(1) {
      $132 = (_bitshift64Shl(($130|0),($131|0),1)|0);
      $133 = tempRet0;
      $134 = (($$37683) + -1)|0;
      $135 = ($133>>>0)<(1048576);
      $136 = ($132>>>0)<(0);
      $137 = ($133|0)==(1048576);
      $138 = $137 & $136;
      $139 = $135 | $138;
      if ($139) {
       $$37683 = $134;$130 = $132;$131 = $133;
      } else {
       $$376$lcssa = $134;$141 = $132;$142 = $133;
       break;
      }
     }
    } else {
     $$376$lcssa = $$275$lcssa;$141 = $124;$142 = $122;
    }
    $140 = ($$376$lcssa|0)>(0);
    if ($140) {
     $143 = (_i64Add(($141|0),($142|0),0,-1048576)|0);
     $144 = tempRet0;
     $145 = (_bitshift64Shl(($$376$lcssa|0),0,52)|0);
     $146 = tempRet0;
     $147 = $143 | $145;
     $148 = $144 | $146;
     $153 = $148;$155 = $147;
    } else {
     $149 = (1 - ($$376$lcssa))|0;
     $150 = (_bitshift64Lshr(($141|0),($142|0),($149|0))|0);
     $151 = tempRet0;
     $153 = $151;$155 = $150;
    }
    $152 = $153 | $12;
    HEAP32[tempDoublePtr>>2] = $155;HEAP32[tempDoublePtr+4>>2] = $152;$154 = +HEAPF64[tempDoublePtr>>3];
    $$070 = $154;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $27 = $0 * $1;
  $28 = $27 / $27;
  $$070 = $28;
 }
 return (+$$070);
}
function ___DOUBLE_BITS_560($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function ___pthread_self_380() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _fclose($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($0)|0);
  $29 = $4;
 } else {
  $29 = 0;
 }
 ___unlist_locked_file($0);
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 1;
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $8 = (___ofl_lock()|0);
  $9 = ((($0)) + 52|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  $12 = $10;
  $$pre = ((($0)) + 56|0);
  if (!($11)) {
   $13 = HEAP32[$$pre>>2]|0;
   $14 = ((($10)) + 56|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = HEAP32[$$pre>>2]|0;
  $16 = ($15|0)==(0|0);
  $17 = $15;
  if (!($16)) {
   $18 = ((($15)) + 52|0);
   HEAP32[$18>>2] = $12;
  }
  $19 = HEAP32[$8>>2]|0;
  $20 = ($19|0)==($0|0);
  if ($20) {
   HEAP32[$8>>2] = $17;
  }
  ___ofl_unlock();
 }
 $21 = (_fflush($0)|0);
 $22 = ((($0)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (FUNCTION_TABLE_ii[$23 & 127]($0)|0);
 $25 = $24 | $21;
 $26 = ((($0)) + 92|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)==(0|0);
 if (!($28)) {
  _free($27);
 }
 if ($7) {
  $30 = ($29|0)==(0);
  if (!($30)) {
   ___unlockfile($0);
  }
 } else {
  _free($0);
 }
 return ($25|0);
}
function ___unlist_locked_file($0) {
 $0 = $0|0;
 var $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 116|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0|0);
  $7 = $5;
  $$pre = ((($0)) + 112|0);
  if (!($6)) {
   $8 = HEAP32[$$pre>>2]|0;
   $9 = ((($5)) + 112|0);
   HEAP32[$9>>2] = $8;
  }
  $10 = HEAP32[$$pre>>2]|0;
  $11 = ($10|0)==(0|0);
  if ($11) {
   $13 = (___pthread_self_380()|0);
   $14 = ((($13)) + 232|0);
   $$sink = $14;
  } else {
   $12 = ((($10)) + 116|0);
   $$sink = $12;
  }
  HEAP32[$$sink>>2] = $7;
 }
 return;
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[139]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[139]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $25 = $17;
     } else {
      $25 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $26 = ($25|0)==(0);
     if (!($26)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (FUNCTION_TABLE_iiii[$7 & 255]($0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (FUNCTION_TABLE_iiii[$19 & 255]($0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _fwrite($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $$ = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $10 = (___lockfile($3)|0);
  $phitmp = ($10|0)==(0);
  $11 = (___fwritex($0,$4,$3)|0);
  if ($phitmp) {
   $12 = $11;
  } else {
   ___unlockfile($3);
   $12 = $11;
  }
 } else {
  $9 = (___fwritex($0,$4,$3)|0);
  $12 = $9;
 }
 $13 = ($12|0)==($4|0);
 if ($13) {
  $15 = $$;
 } else {
  $14 = (($12>>>0) / ($1>>>0))&-1;
  $15 = $14;
 }
 return ($15|0);
}
function _printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[107]|0;
 $3 = (_vfprintf($2,$0,$1)|0);
 STACKTOP = sp;return ($3|0);
}
function ___fseeko_unlocked($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(1);
 if ($3) {
  $4 = ((($0)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($0)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (($1) - ($5))|0;
  $9 = (($8) + ($7))|0;
  $$019 = $9;
 } else {
  $$019 = $1;
 }
 $10 = ((($0)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 28|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($11>>>0)>($13>>>0);
 if ($14) {
  $15 = ((($0)) + 36|0);
  $16 = HEAP32[$15>>2]|0;
  (FUNCTION_TABLE_iiii[$16 & 255]($0,0,0)|0);
  $17 = HEAP32[$10>>2]|0;
  $18 = ($17|0)==(0|0);
  if ($18) {
   $$0 = -1;
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $19 = ((($0)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $20 = ((($0)) + 40|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (FUNCTION_TABLE_iiii[$21 & 255]($0,$$019,$2)|0);
  $23 = ($22|0)<(0);
  if ($23) {
   $$0 = -1;
  } else {
   $24 = ((($0)) + 8|0);
   HEAP32[$24>>2] = 0;
   $25 = ((($0)) + 4|0);
   HEAP32[$25>>2] = 0;
   $26 = HEAP32[$0>>2]|0;
   $27 = $26 & -17;
   HEAP32[$0>>2] = $27;
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function ___fseeko($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(-1);
 if ($5) {
  $7 = (___lockfile($0)|0);
  $phitmp = ($7|0)==(0);
  $8 = (___fseeko_unlocked($0,$1,$2)|0);
  if ($phitmp) {
   $9 = $8;
  } else {
   ___unlockfile($0);
   $9 = $8;
  }
 } else {
  $6 = (___fseeko_unlocked($0,$1,$2)|0);
  $9 = $6;
 }
 return ($9|0);
}
function _fseek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___fseeko($0,$1,$2)|0);
 return ($3|0);
}
function _fputc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(0);
 if ($4) {
  label = 3;
 } else {
  $5 = (___lockfile($1)|0);
  $6 = ($5|0)==(0);
  if ($6) {
   label = 3;
  } else {
   $20 = $0&255;
   $21 = $0 & 255;
   $22 = ((($1)) + 75|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23 << 24 >> 24;
   $25 = ($21|0)==($24|0);
   if ($25) {
    label = 10;
   } else {
    $26 = ((($1)) + 20|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($1)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27>>>0)<($29>>>0);
    if ($30) {
     $31 = ((($27)) + 1|0);
     HEAP32[$26>>2] = $31;
     HEAP8[$27>>0] = $20;
     $33 = $21;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $32 = (___overflow($1,$0)|0);
    $33 = $32;
   }
   ___unlockfile($1);
   $$0 = $33;
  }
 }
 do {
  if ((label|0) == 3) {
   $7 = $0&255;
   $8 = $0 & 255;
   $9 = ((($1)) + 75|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 << 24 >> 24;
   $12 = ($8|0)==($11|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ((($1)) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14>>>0)<($16>>>0);
    if ($17) {
     $18 = ((($14)) + 1|0);
     HEAP32[$13>>2] = $18;
     HEAP8[$14>>0] = $7;
     $$0 = $8;
     break;
    }
   }
   $19 = (___overflow($1,$0)|0);
   $$0 = $19;
  }
 } while(0);
 return ($$0|0);
}
function _fread($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$054$ph = 0, $$05460 = 0, $$056$ph = 0, $$05659 = 0, $$57 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $$ = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $9 = (___lockfile($3)|0);
  $36 = $9;
 } else {
  $36 = 0;
 }
 $10 = ((($3)) + 74|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 << 24 >> 24;
 $13 = (($12) + 255)|0;
 $14 = $13 | $12;
 $15 = $14&255;
 HEAP8[$10>>0] = $15;
 $16 = ((($3)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($3)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($17) - ($19))|0;
 $21 = ($20|0)>(0);
 if ($21) {
  $22 = $19;
  $23 = ($20>>>0)<($4>>>0);
  $$57 = $23 ? $20 : $4;
  (_memcpy(($0|0),($22|0),($$57|0))|0);
  $24 = HEAP32[$18>>2]|0;
  $25 = (($24) + ($$57)|0);
  HEAP32[$18>>2] = $25;
  $26 = (($0) + ($$57)|0);
  $27 = (($4) - ($$57))|0;
  $$054$ph = $27;$$056$ph = $26;
 } else {
  $$054$ph = $4;$$056$ph = $0;
 }
 $28 = ($$054$ph|0)==(0);
 L7: do {
  if ($28) {
   label = 13;
  } else {
   $29 = ((($3)) + 32|0);
   $$05460 = $$054$ph;$$05659 = $$056$ph;
   while(1) {
    $30 = (___toread($3)|0);
    $31 = ($30|0)==(0);
    if (!($31)) {
     break;
    }
    $32 = HEAP32[$29>>2]|0;
    $33 = (FUNCTION_TABLE_iiii[$32 & 255]($3,$$05659,$$05460)|0);
    $34 = (($33) + 1)|0;
    $35 = ($34>>>0)<(2);
    if ($35) {
     break;
    }
    $40 = (($$05460) - ($33))|0;
    $41 = (($$05659) + ($33)|0);
    $42 = ($40|0)==(0);
    if ($42) {
     label = 13;
     break L7;
    } else {
     $$05460 = $40;$$05659 = $41;
    }
   }
   $37 = ($36|0)==(0);
   if (!($37)) {
    ___unlockfile($3);
   }
   $38 = (($4) - ($$05460))|0;
   $39 = (($38>>>0) / ($1>>>0))&-1;
   $$0 = $39;
  }
 } while(0);
 if ((label|0) == 13) {
  $43 = ($36|0)==(0);
  if ($43) {
   $$0 = $$;
  } else {
   ___unlockfile($3);
   $$0 = $$;
  }
 }
 return ($$0|0);
}
function ___fmodeflags($0) {
 $0 = $0|0;
 var $$ = 0, $$$4 = 0, $$0 = 0, $$0$ = 0, $$2 = 0, $$2$ = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strchr($0,43)|0);
 $2 = ($1|0)==(0|0);
 $3 = HEAP8[$0>>0]|0;
 $4 = ($3<<24>>24)!=(114);
 $$ = $4&1;
 $$0 = $2 ? $$ : 2;
 $5 = (_strchr($0,120)|0);
 $6 = ($5|0)==(0|0);
 $7 = $$0 | 128;
 $$0$ = $6 ? $$0 : $7;
 $8 = (_strchr($0,101)|0);
 $9 = ($8|0)==(0|0);
 $10 = $$0$ | 524288;
 $$2 = $9 ? $$0$ : $10;
 $11 = ($3<<24>>24)==(114);
 $12 = $$2 | 64;
 $$2$ = $11 ? $$2 : $12;
 $13 = ($3<<24>>24)==(119);
 $14 = $$2$ | 512;
 $$4 = $13 ? $14 : $$2$;
 $15 = ($3<<24>>24)==(97);
 $16 = $$4 | 1024;
 $$$4 = $15 ? $16 : $$4;
 return ($$$4|0);
}
function _fopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_strchr(15410,$3)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = (___errno_location()|0);
  HEAP32[$6>>2] = 22;
  $$0 = 0;
 } else {
  $7 = (___fmodeflags($1)|0);
  $8 = $0;
  $9 = $7 | 32768;
  HEAP32[$vararg_buffer>>2] = $8;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $9;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 438;
  $10 = (___syscall5(5,($vararg_buffer|0))|0);
  $11 = (___syscall_ret($10)|0);
  $12 = ($11|0)<(0);
  if ($12) {
   $$0 = 0;
  } else {
   $13 = $7 & 524288;
   $14 = ($13|0)==(0);
   if (!($14)) {
    HEAP32[$vararg_buffer3>>2] = $11;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 2;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = 1;
    (___syscall221(221,($vararg_buffer3|0))|0);
   }
   $15 = (___fdopen($11,$1)|0);
   $16 = ($15|0)==(0|0);
   if ($16) {
    HEAP32[$vararg_buffer8>>2] = $11;
    (___syscall6(6,($vararg_buffer8|0))|0);
    $$0 = 0;
   } else {
    $$0 = $15;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fputs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (_fwrite($0,1,$2,$1)|0);
 $4 = ($3|0)!=($2|0);
 $5 = $4 << 31 >> 31;
 return ($5|0);
}
function _puts($0) {
 $0 = $0|0;
 var $$lobit = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[107]|0;
 $2 = ((($1)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(-1);
 if ($4) {
  $5 = (___lockfile($1)|0);
  $18 = $5;
 } else {
  $18 = 0;
 }
 $6 = (_fputs($0,$1)|0);
 $7 = ($6|0)<(0);
 do {
  if ($7) {
   $20 = -1;
  } else {
   $8 = ((($1)) + 75|0);
   $9 = HEAP8[$8>>0]|0;
   $10 = ($9<<24>>24)==(10);
   if (!($10)) {
    $11 = ((($1)) + 20|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($1)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12>>>0)<($14>>>0);
    if ($15) {
     $16 = ((($12)) + 1|0);
     HEAP32[$11>>2] = $16;
     HEAP8[$12>>0] = 10;
     $20 = 0;
     break;
    }
   }
   $17 = (___overflow($1,10)|0);
   $$lobit = $17 >> 31;
   $20 = $$lobit;
  }
 } while(0);
 $19 = ($18|0)==(0);
 if (!($19)) {
  ___unlockfile($1);
 }
 return ($20|0);
}
function _putchar($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[107]|0;
 $2 = (_fputc($0,$1)|0);
 return ($2|0);
}
function ___ftello_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 40|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 128;
 $5 = ($4|0)==(0);
 if ($5) {
  $11 = 1;
 } else {
  $6 = ((($0)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ((($0)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($7>>>0)>($9>>>0);
  $phitmp = $10 ? 2 : 1;
  $11 = $phitmp;
 }
 $12 = (FUNCTION_TABLE_iiii[$2 & 255]($0,0,$11)|0);
 $13 = ($12|0)<(0);
 if ($13) {
  $$0 = $12;
 } else {
  $14 = ((($0)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($0)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($0)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($0)) + 28|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($12) - ($15))|0;
  $23 = (($22) + ($17))|0;
  $24 = (($23) + ($19))|0;
  $25 = (($24) - ($21))|0;
  $$0 = $25;
 }
 return ($$0|0);
}
function ___ftello($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $5 = (___lockfile($0)|0);
  $phitmp = ($5|0)==(0);
  $6 = (___ftello_unlocked($0)|0);
  if ($phitmp) {
   $7 = $6;
  } else {
   $7 = $6;
  }
 } else {
  $4 = (___ftello_unlocked($0)|0);
  $7 = $4;
 }
 return ($7|0);
}
function _ftell($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___ftello($0)|0);
 return ($1|0);
}
function _strtol($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strtox($0,$1,$2,-2147483648,0)|0);
 $4 = tempRet0;
 return ($3|0);
}
function _strrchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (($2) + 1)|0;
 $4 = (___memrchr($0,$1,$3)|0);
 return ($4|0);
}
function ___memrchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$09 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1&255;
 $$09 = $2;
 while(1) {
  $4 = (($$09) + -1)|0;
  $5 = ($$09|0)==(0);
  if ($5) {
   $$0 = 0;
   break;
  }
  $6 = (($0) + ($4)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = ($7<<24>>24)==($3<<24>>24);
  if ($8) {
   $$0 = $6;
   break;
  } else {
   $$09 = $4;
  }
 }
 return ($$0|0);
}
function _strtox_861($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $3 = sp;
 dest=$3; stop=dest+124|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $0;
 $5 = ((($3)) + 8|0);
 HEAP32[$5>>2] = (-1);
 $6 = ((($3)) + 44|0);
 HEAP32[$6>>2] = $0;
 $7 = ((($3)) + 76|0);
 HEAP32[$7>>2] = -1;
 ___shlim($3,0);
 $8 = (+___floatscan($3,$2,1));
 $9 = ((($3)) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$4>>2]|0;
 $12 = HEAP32[$5>>2]|0;
 $13 = (($11) - ($12))|0;
 $14 = (($13) + ($10))|0;
 $15 = ($1|0)==(0|0);
 if (!($15)) {
  $16 = ($14|0)!=(0);
  $17 = (($0) + ($14)|0);
  $18 = $16 ? $17 : $0;
  HEAP32[$1>>2] = $18;
 }
 STACKTOP = sp;return (+$8);
}
function _strtod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_strtox_861($0,$1,1));
 return (+$2);
}
function runPostSets() {
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _saveSetjmp(env, label, table, size) {
    // Not particularly fast: slow table lookup of setjmpId to label. But setjmp
    // prevents relooping anyhow, so slowness is to be expected. And typical case
    // is 1 setjmp per invocation, or less.
    env = env|0;
    label = label|0;
    table = table|0;
    size = size|0;
    var i = 0;
    setjmpId = (setjmpId+1)|0;
    HEAP32[((env)>>2)]=setjmpId;
    while ((i|0) < (size|0)) {
      if (((HEAP32[(((table)+((i<<3)))>>2)])|0) == 0) {
        HEAP32[(((table)+((i<<3)))>>2)]=setjmpId;
        HEAP32[(((table)+((i<<3)+4))>>2)]=label;
        // prepare next slot
        HEAP32[(((table)+((i<<3)+8))>>2)]=0;
        tempRet0 = size;
        return table | 0;
      }
      i = i+1|0;
    }
    // grow the table
    size = (size*2)|0;
    table = _realloc(table|0, 8*(size+1|0)|0) | 0;
    table = _saveSetjmp(env|0, label|0, table|0, size|0) | 0;
    tempRet0 = size;
    return table | 0;
}
function _testSetjmp(id, table, size) {
    id = id|0;
    table = table|0;
    size = size|0;
    var i = 0, curr = 0;
    while ((i|0) < (size|0)) {
      curr = ((HEAP32[(((table)+((i<<3)))>>2)])|0);
      if ((curr|0) == 0) break;
      if ((curr|0) == (id|0)) {
        return ((HEAP32[(((table)+((i<<3)+4))>>2)])|0);
      }
      i = i+1|0;
    }
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}

  
function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&127](a1|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&255](a1|0,a2|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&255](a1|0,a2|0,a3|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&0](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&0](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&127](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&255](a1|0,a2|0);
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&255](a1|0,a2|0,a3|0);
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&0](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  FUNCTION_TABLE_viiiiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
}

function b0(p0) {
 p0 = p0|0; nullFunc_ii(0);return 0;
}
function b1(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(1);return 0;
}
function b2(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(2);return 0;
}
function b3(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(3);return 0;
}
function b4(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(4);return 0;
}
function b5(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(5);return 0;
}
function b6(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(6);return 0;
}
function b7(p0) {
 p0 = p0|0; nullFunc_vi(7);
}
function b8(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(8);
}
function b9(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(9);
}
function b10(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(10);
}
function b11(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_viiiiiiii(11);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_ii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,___stdio_close,b0,b0,b0,b0,b0,b0,__pop_mem,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_iii = [b1,__coll_list,__coll_dict,__coll_push,__coll_pop,__coll_back,__coll_insert,__coll_sort,__coll_exists,__coll_index_of,__coll_remove,__coll_clear,__coll_clone,__coll_to_array,__coll_iterator,__coll_move_next,__core_add,__core_min,__core_mul,__core_div,__core_mod,__core_pow,__core_open_bracket,__core_close_bracket,__core_dummy_assign,__core_greater,__core_less,__core_greater_equal,__core_less_equal
,__core_equal,__core_not_equal,__core_and,__core_or,__core_not,__core_neg,__core_is,__std_abs,__std_sgn,__std_sqr,__std_floor,__std_ceil,__std_fix,__std_round,__std_srnd,__std_rnd,__std_sin,__std_cos,__std_tan,__std_asin,__std_acos,__std_atan,__std_exp,__std_log,__std_asc,__std_chr,__std_left,__std_mid,__std_right,__std_str
,__std_val,__std_len,__std_get,__std_set,__std_print,__std_input,__core_let,__core_dim,__core_if,__core_then,__core_elseif,__core_else,__core_endif,__core_for,__core_in,__core_to,__core_step,__core_next,__core_while,__core_wend,__core_do,__core_until,__core_exit,__core_goto,__core_gosub,__core_return,__core_call,__core_def,__core_enddef,__core_args
,__core_class,__core_endclass,__core_new,__core_var,__core_reflect,__core_lambda,__core_mem,__core_type,__core_import,__core_end,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__on_import,_now,_os,_sys,_trace,_raise,_gc,_beep,__cmp_size_t
,__ht_cmp_string,__ht_hash_string,__ls_free_extra,__ht_destroy_module_func_list,__ht_cmp_ref,__ht_hash_ref,__do_nothing_on_object,__ht_cmp_intptr,__ht_hash_intptr,__ls_destroy_module_func,__destroy_memory,__ls_cmp_module_func,b1,b1,b1,__ls_cmp_extra,__destroy_object,b1,b1,b1,b1,b1,b1,__ht_cmp_object,__ht_hash_object,__destroy_object_with_extra,b1,b1,__ls_cmp_extra_object,b1
,b1,b1,b1,b1,__remove_source_object,__ls_cmp_data,__destroy_object_not_compile_time,b1,_printf,b1,b1,__ls_cmp_extra_string,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_iiii = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,___stdout_write,___stdio_seek,___stdio_read,___stdio_write,_sn_write,_on_input,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__gc_add_reachable,__add_class_meta_reachable,b2,__clone_clsss_field,__clone_class_meta_link,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,__is_a_class,b2,b2,b2,_mb_gets,b2,__reflect_class_field,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_iiiii = [b3];
var FUNCTION_TABLE_iiiiii = [b4];
var FUNCTION_TABLE_iiiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__on_stepped,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__has_routine_lex_arg,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__has_routine_fun_arg
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__pop_routine_lex_arg,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,__pop_routine_fun_arg,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_vi = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__push_mem,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_vii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__unref_outer_scope,b8,b8,__unref_list,b8,b8,b8,__unref_dict,__unref_class,b8,b8
,b8,__unref_array,__unref_usertype_ref,b8,b8,b8,b8,b8,b8,b8,__unref_routine,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__gc_alive_marker,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiii = [b10];
var FUNCTION_TABLE_viiiiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__on_error,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11];

  return { ___errno_location: ___errno_location, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, ___uremdi3: ___uremdi3, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _eval: _eval, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _saveSetjmp: _saveSetjmp, _sbrk: _sbrk, _testSetjmp: _testSetjmp, dynCall_ii: dynCall_ii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiiiiii: dynCall_viiiiiiii, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____errno_location.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____muldi3.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____udivdi3.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____uremdi3.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Shl.apply(null, arguments);
};

var real__eval = asm["_eval"]; asm["_eval"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__eval.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__fflush.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__free.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Add.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Subtract.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__llvm_bswap_i32.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__malloc.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__memmove.apply(null, arguments);
};

var real__saveSetjmp = asm["_saveSetjmp"]; asm["_saveSetjmp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__saveSetjmp.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__sbrk.apply(null, arguments);
};

var real__testSetjmp = asm["_testSetjmp"]; asm["_testSetjmp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__testSetjmp.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_establishStackSpace.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_getTempRet0.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setTempRet0.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setThrew.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackAlloc.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackRestore.apply(null, arguments);
};

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackSave.apply(null, arguments);
};
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _eval = Module["_eval"] = asm["_eval"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _free = Module["_free"] = asm["_free"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
;



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;

if (!Module["intArrayFromString"]) Module["intArrayFromString"] = function() { abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["intArrayToString"]) Module["intArrayToString"] = function() { abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;
if (!Module["setValue"]) Module["setValue"] = function() { abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getValue"]) Module["getValue"] = function() { abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["allocate"]) Module["allocate"] = function() { abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getMemory"]) Module["getMemory"] = function() { abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["Pointer_stringify"]) Module["Pointer_stringify"] = function() { abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["AsciiToString"]) Module["AsciiToString"] = function() { abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToAscii"]) Module["stringToAscii"] = function() { abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF8ArrayToString"]) Module["UTF8ArrayToString"] = function() { abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF8ToString"]) Module["UTF8ToString"] = function() { abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF8Array"]) Module["stringToUTF8Array"] = function() { abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF8"]) Module["stringToUTF8"] = function() { abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF8"]) Module["lengthBytesUTF8"] = function() { abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF16ToString"]) Module["UTF16ToString"] = function() { abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF16"]) Module["stringToUTF16"] = function() { abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF16"]) Module["lengthBytesUTF16"] = function() { abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF32ToString"]) Module["UTF32ToString"] = function() { abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF32"]) Module["stringToUTF32"] = function() { abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF32"]) Module["lengthBytesUTF32"] = function() { abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["allocateUTF8"]) Module["allocateUTF8"] = function() { abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackTrace"]) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPreRun"]) Module["addOnPreRun"] = function() { abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnInit"]) Module["addOnInit"] = function() { abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPreMain"]) Module["addOnPreMain"] = function() { abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnExit"]) Module["addOnExit"] = function() { abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPostRun"]) Module["addOnPostRun"] = function() { abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeStringToMemory"]) Module["writeStringToMemory"] = function() { abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeArrayToMemory"]) Module["writeArrayToMemory"] = function() { abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeAsciiToMemory"]) Module["writeAsciiToMemory"] = function() { abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addRunDependency"]) Module["addRunDependency"] = function() { abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["removeRunDependency"]) Module["removeRunDependency"] = function() { abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS"]) Module["FS"] = function() { abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["FS_createFolder"]) Module["FS_createFolder"] = function() { abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createPath"]) Module["FS_createPath"] = function() { abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createDataFile"]) Module["FS_createDataFile"] = function() { abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createPreloadedFile"]) Module["FS_createPreloadedFile"] = function() { abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createLazyFile"]) Module["FS_createLazyFile"] = function() { abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createLink"]) Module["FS_createLink"] = function() { abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createDevice"]) Module["FS_createDevice"] = function() { abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_unlink"]) Module["FS_unlink"] = function() { abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["GL"]) Module["GL"] = function() { abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["staticAlloc"]) Module["staticAlloc"] = function() { abort("'staticAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["dynamicAlloc"]) Module["dynamicAlloc"] = function() { abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["warnOnce"]) Module["warnOnce"] = function() { abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["loadDynamicLibrary"]) Module["loadDynamicLibrary"] = function() { abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["loadWebAssemblyModule"]) Module["loadWebAssemblyModule"] = function() { abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getLEB"]) Module["getLEB"] = function() { abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getFunctionTables"]) Module["getFunctionTables"] = function() { abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["alignFunctionTables"]) Module["alignFunctionTables"] = function() { abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["registerFunctions"]) Module["registerFunctions"] = function() { abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addFunction"]) Module["addFunction"] = function() { abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["removeFunction"]) Module["removeFunction"] = function() { abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getFuncWrapper"]) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["prettyPrint"]) Module["prettyPrint"] = function() { abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["makeBigInt"]) Module["makeBigInt"] = function() { abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["dynCall"]) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getCompilerSetting"]) Module["getCompilerSetting"] = function() { abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackSave"]) Module["stackSave"] = function() { abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackRestore"]) Module["stackRestore"] = function() { abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackAlloc"]) Module["stackAlloc"] = function() { abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["intArrayFromBase64"]) Module["intArrayFromBase64"] = function() { abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["tryParseAsDataURI"]) Module["tryParseAsDataURI"] = function() { abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };if (!Module["ALLOC_NORMAL"]) Object.defineProperty(Module, "ALLOC_NORMAL", { get: function() { abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_STACK"]) Object.defineProperty(Module, "ALLOC_STACK", { get: function() { abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_STATIC"]) Object.defineProperty(Module, "ALLOC_STATIC", { get: function() { abort("'ALLOC_STATIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_DYNAMIC"]) Object.defineProperty(Module, "ALLOC_DYNAMIC", { get: function() { abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_NONE"]) Object.defineProperty(Module, "ALLOC_NONE", { get: function() { abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });

if (memoryInitializer) {
  if (!isDataURI(memoryInitializer)) {
    if (typeof Module['locateFile'] === 'function') {
      memoryInitializer = Module['locateFile'](memoryInitializer);
    } else if (Module['memoryInitializerPrefixURL']) {
      memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
    }
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[GLOBAL_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
    if (memoryInitializerBytes) {
      applyMemoryInitializer(memoryInitializerBytes.buffer);
    } else
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        var response = request.response;
        if (request.status !== 200 && request.status !== 0) {
          var data = tryParseAsDataURI(Module['memoryInitializerRequestURL']);
          if (data) {
            response = data.buffer;
          } else {
            // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
            // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
            // Look in your browser's devtools network console to see what's going on.
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
            doBrowserLoad();
            return;
          }
        }
        applyMemoryInitializer(response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}



/**
 * @constructor
 * @extends {Error}
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}





/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = run;

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in NO_FILESYSTEM
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var print = Module['print'];
  var printErr = Module['printErr'];
  var has = false;
  Module['print'] = Module['printErr'] = function(x) {
    has = true;
  }
  try { // it doesn't matter if it fails
    var flush = Module['_fflush'];
    if (flush) flush(0);
    // also flush in the JS FS layer
    var hasFS = true;
    if (hasFS) {
      ['stdout', 'stderr'].forEach(function(name) {
        var info = FS.analyzePath('/dev/' + name);
        if (!info) return;
        var stream = info.object;
        var rdev = stream.rdev;
        var tty = TTY.ttys[rdev];
        if (tty && tty.output && tty.output.length) {
          has = true;
        }
      });
    }
  } catch(e) {}
  Module['print'] = print;
  Module['printErr'] = printErr;
  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set NO_EXIT_RUNTIME to 0 (see the FAQ), or make sure to emit a newline when you printf etc.');
  }
}

function exit(status, implicit) {
  checkUnflushedContent();

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && Module['noExitRuntime'] && status === 0) {
    return;
  }

  if (Module['noExitRuntime']) {
    // if exit() was called, we may warn the user if the runtime isn't actually being shut down
    if (!implicit) {
      Module.printErr('exit(' + status + ') called, but NO_EXIT_RUNTIME is set, so halting execution but not exiting the runtime or preventing further async execution (build with NO_EXIT_RUNTIME=0, if you want a true shutdown)');
    }
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = exit;

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';
  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}


Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



